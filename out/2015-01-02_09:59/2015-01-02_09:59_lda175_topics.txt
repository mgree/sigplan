topic 000
   existing
   developed
   within
   well
   behavior
   available
   easily
   need
   already
   practical
   report
   hard
   three
   required
   motivate


topic 001
   complexity
   solutions
   lazy
   equations
   evaluation
   strictness
   set
   space
   solution
   useful
   strict
   projection
   call
   setting
   context


topic 002
   representation
   produce
   description
   target
   given
   representations
   behavior
   many
   even
   original
   thus
   generated
   represented
   required
   construction


topic 003
   conditions
   dataflow
   condition
   inter
   procedural
   pre
   aliasing
   post
   invariant
   interprocedural
   sufficient
   hold
   suitable
   null
   well


topic 004
   input
   fixed
   point
   output
   inputs
   arithmetic
   number
   floating
   precision
   bit
   numbers
   format
   bits
   approximation
   functions


topic 005
   concurrent
   concurrency
   synchronization
   sequential
   specification
   thread
   threads
   concurrently
   fine
   execution
   grained
   primitives
   cml
   passing
   interference


topic 006
   performance
   memory
   hardware
   applications
   core
   cpu
   multi
   cores
   high
   heterogeneous
   gpu
   processor
   platforms
   benchmark
   achieve


topic 007
   checking
   check
   checks
   checked
   checker
   modular
   extensible
   invariants
   write
   protocol
   set
   whether
   invariant
   ideas
   novel


topic 008
   effects
   effect
   side
   refinement
   ocaml
   soundness
   value
   call
   liquid
   logical
   expression
   expressions
   extended
   operators
   invariants


topic 009
   search
   networks
   network
   number
   sensor
   fair
   implemented
   executions
   switches
   devices
   space
   packet
   networking
   services
   kahn


topic 010
   heap
   memory
   overhead
   safety
   low
   runtime
   errors
   provides
   fault
   pointers
   simple
   execution
   applications
   unsafe
   faults


topic 011
   programmer
   part
   parts
   choices
   modern
   assumptions
   dependencies
   different
   place
   automatic
   way
   thus
   making
   intended
   make


topic 012
   race
   races
   detection
   memory
   execution
   bugs
   executions
   static
   find
   threaded
   replay
   false
   detect
   errors
   shared


topic 013
   memory
   cache
   performance
   locality
   hardware
   layout
   fields
   reference
   size
   large
   applications
   average
   allocation
   access
   misses


topic 014
   compilation
   source
   bytecode
   compiled
   jit
   just
   linking
   java
   compiling
   binary
   execution
   verifier
   jvm
   standard
   virtual


topic 015
   semantics
   formal
   operational
   semantic
   denotational
   prove
   definition
   well
   define
   step
   standard
   develop
   interpretation
   syntax
   explain


topic 016
   optimization
   energy
   performance
   optimizer
   multiple
   feedback
   savings
   best
   parameters
   different
   usage
   dvs
   optimizers
   global
   opportunities


topic 017
   information
   flow
   analyses
   inlining
   function
   cost
   accuracy
   call
   overhead
   reduced
   performance
   optimizations
   identify
   compile
   calls


topic 018
   typed
   probabilistic
   privacy
   typing
   statically
   dependently
   probability
   guarantee
   soundness
   well
   differential
   untyped
   distributions
   strongly
   guarantees


topic 019
   properties
   abstraction
   verification
   abstractions
   safety
   property
   induction
   termination
   refinement
   predicate
   verify
   invariants
   automatically
   automatic
   predicates


topic 020
   distributed
   configuration
   erlang
   applications
   distribution
   multiparty
   oriented
   interaction
   environment
   several
   collaborative
   servers
   operation
   team
   deployment


topic 021
   possible
   practice
   interesting
   makes
   others
   scope
   areas
   important
   well
   ways
   requirements
   believe
   made
   success
   scenarios


topic 022
   notion
   multi
   stage
   setting
   stages
   threaded
   safety
   environment
   staging
   formalize
   fairness
   transitions
   performers
   csp
   preserving


topic 023
   machine
   virtual
   machines
   instruction
   instructions
   set
   architecture
   size
   compression
   target
   interpreter
   generator
   toolkit
   independent
   intermediate


topic 024
   specifications
   specification
   synthesis
   formal
   describe
   automatically
   synthesize
   correct
   well
   must
   partial
   given
   methodology
   sketch
   text


topic 025
   context
   procedure
   sensitive
   analyses
   call
   calling
   interprocedural
   procedures
   contexts
   precision
   calls
   sensitivity
   insensitive
   scalability
   efficient


topic 026
   general
   purpose
   form
   restricted
   set
   operator
   without
   special
   several
   additional
   define
   range
   practical
   forms
   although


topic 027
   reuse
   years
   past
   will
   last
   look
   great
   components
   future
   stories
   success
   technical
   practical
   focus
   principles


topic 028
   assertions
   results
   approximate
   method
   termination
   boolean
   assertion
   analyses
   space
   correctness
   least
   approximation
   parameters
   set
   values


topic 029
   work
   visual
   earlier
   recent
   basic
   takes
   share
   people
   ways
   making
   integrate
   perspective
   hand
   many
   need


topic 030
   real
   world
   embedded
   experience
   several
   report
   attempts
   host
   discuss
   developers
   critical
   encountered
   advantages
   difficulties
   benefits


topic 031
   features
   designed
   feature
   mechanisms
   implement
   illustrate
   build
   important
   include
   extensible
   novel
   various
   supporting
   supports
   specified


topic 032
   cost
   runtime
   efficiency
   overheads
   making
   portable
   many
   size
   often
   performance
   reduce
   protocol
   range
   exclusion
   deadlock


topic 033
   parsing
   parser
   lr
   grammars
   parsers
   algorithm
   grammar
   reductions
   syntax
   productions
   left
   ll
   single
   context
   state


topic 034
   including
   full
   several
   many
   includes
   variety
   supports
   novel
   without
   wide
   various
   main
   still
   limited
   unions


topic 035
   key
   approaches
   common
   examines
   need
   far
   either
   therefore
   basis
   applying
   ensure
   require
   intermediate
   arguments
   traditional


topic 036
   objects
   reference
   oriented
   counting
   escape
   adaptive
   describes
   lifetime
   message
   storage
   operations
   allocation
   large
   allocated
   efficient


topic 037
   finite
   automata
   infinite
   names
   size
   algebra
   nominal
   result
   known
   name
   decidable
   classical
   interpretations
   notion
   equivalence


topic 038
   bounded
   reactive
   rewriting
   views
   frp
   applications
   functional
   behaviors
   simplify
   domains
   discrete
   instantiation
   metaprogramming
   notions
   certain


topic 039
   checking
   check
   checks
   checked
   checker
   modular
   extensible
   invariants
   write
   protocol
   set
   whether
   invariant
   ideas
   novel


topic 040
   optimizations
   performance
   optimized
   optimization
   debugging
   execution
   vm
   runtime
   trace
   impact
   online
   instrumentation
   profiling
   applications
   opportunities


topic 041
   abstract
   interpretation
   domain
   domains
   operations
   generic
   concrete
   precision
   analyses
   functions
   interpretations
   check
   obtain
   manipulation
   underlying


topic 042
   patterns
   pattern
   mechanism
   virtual
   matching
   beta
   common
   developed
   abstraction
   extended
   oriented
   concept
   specification
   implemented
   large


topic 043
   path
   paths
   nodes
   conditional
   graph
   node
   edges
   along
   branches
   branch
   graphs
   dominator
   number
   reducible
   compaction


topic 044
   development
   software
   product
   driven
   engineering
   within
   quality
   evolution
   challenges
   agile
   line
   practices
   workshop
   community
   integration


topic 045
   book
   life
   people
   natural
   methodology
   will
   human
   hass
   environment
   sentences
   sentence
   education
   community
   role
   learning


topic 046
   called
   provides
   cases
   ability
   case
   described
   gives
   implement
   demonstrate
   capabilities
   valuable
   various
   captured
   construct
   template


topic 047
   linear
   assignment
   storage
   synchronous
   stream
   multiple
   address
   integer
   addressing
   filters
   processing
   linearity
   size
   dsp
   input


topic 048
   application
   applications
   processing
   platform
   building
   environment
   developing
   end
   components
   many
   area
   built
   difficult
   build
   develop


topic 049
   compiler
   compilers
   compilation
   optimizations
   optimizing
   intermediate
   end
   performance
   generated
   target
   generate
   efficient
   back
   automatically
   presents


topic 050
   user
   interface
   interfaces
   events
   graphical
   event
   users
   interactive
   help
   end
   manipulation
   example
   defined
   understanding
   tt


topic 051
   speculative
   prediction
   performance
   parallelization
   execution
   branch
   applications
   parallelism
   speculation
   thread
   grain
   sequential
   improve
   runtime
   predict


topic 052
   refactoring
   workshop
   tools
   oopsla
   eclipse
   development
   oriented
   refactorings
   ide
   examples
   ides
   workshops
   killer
   event
   patterns


topic 053
   component
   updates
   update
   change
   changes
   applications
   frameworks
   evolution
   tools
   updating
   components
   versions
   updated
   development
   safe


topic 054
   inference
   types
   polymorphic
   polymorphism
   ml
   typing
   record
   typed
   subtyping
   principal
   parametric
   milner
   records
   simple
   parameters


topic 055
   security
   information
   policies
   policy
   access
   flow
   protocols
   control
   secure
   properties
   cryptographic
   checks
   fine
   enforcement
   noninterference


topic 056
   software
   enterprise
   business
   project
   large
   projects
   complexity
   scale
   experience
   talk
   good
   engineers
   team
   task
   elephant


topic 057
   smalltalk
   information
   classes
   work
   bytecodes
   described
   late
   oriented
   novice
   declarations
   performance
   procedure
   without
   version
   programmers


topic 058
   proof
   proofs
   verification
   correctness
   coq
   reasoning
   verified
   theorem
   formal
   assistant
   prove
   proving
   prover
   verify
   verifying


topic 059
   goal
   field
   unique
   experiments
   permissions
   metrics
   local
   set
   esp
   aspectj
   high
   simultaneously
   range
   four
   collection


topic 060
   atomic
   transactional
   lock
   memory
   atomicity
   locking
   transactions
   shared
   performance
   write
   read
   synchronization
   isolation
   locks
   sections


topic 061
   implemented
   uses
   implementing
   prototype
   top
   original
   permits
   achieved
   demonstrates
   access
   variety
   bring
   date
   merge
   readily


topic 062
   rules
   needed
   rewrite
   reachability
   simple
   set
   strategy
   implemented
   rule
   table
   extended
   strategies
   terms
   define
   driven


topic 063
   process
   development
   project
   oo
   processes
   applications
   requirements
   environment
   case
   agile
   panel
   team
   bull
   management
   business


topic 064
   static
   references
   lisp
   variable
   well
   staged
   quasi
   version
   presents
   value
   practice
   scope
   like
   analyze
   scoping


topic 065
   describe
   well
   supports
   build
   dominant
   extend
   practical
   robust
   suited
   measurements
   capability
   friendly
   mixture
   insights
   essentially


topic 066
   technique
   reduction
   applicable
   obtained
   novel
   demonstrate
   analyzing
   perform
   additional
   applied
   set
   finally
   feasibility
   concrete
   call


topic 067
   memory
   power
   relaxed
   behaviour
   concurrent
   store
   performance
   consistency
   compilation
   sc
   consistent
   multiprocessors
   concurrency
   hardware
   write


topic 068
   constraints
   constraint
   mobile
   prolog
   partitioning
   different
   execution
   clp
   clause
   solving
   files
   declarative
   platform
   indexing
   unification


topic 069
   haskell
   computational
   monad
   monads
   monadic
   computations
   backtracking
   effects
   exceptions
   operations
   semantic
   style
   form
   associated
   implementations


topic 070
   theory
   composition
   meta
   equational
   reflection
   processes
   reflective
   examples
   theories
   illustrate
   full
   foundation
   hoas
   facilities
   definition


topic 071
   test
   testing
   tests
   dsl
   coverage
   automated
   specific
   dsls
   generation
   cases
   suite
   tested
   random
   often
   regression


topic 072
   relational
   parametric
   parametricity
   variance
   reynolds
   theorem
   free
   games
   polymorphism
   theorems
   indexed
   invariance
   instances
   game
   units


topic 073
   provide
   non
   like
   trivial
   enables
   deterministic
   determinism
   factors
   benefits
   however
   paradigm
   decompose
   integrating
   discuss
   means


topic 074
   propose
   large
   scale
   identify
   well
   scalable
   able
   need
   capture
   focus
   enterprise
   remains
   ones
   infer
   suggest


topic 075
   describe
   well
   supports
   build
   dominant
   extend
   practical
   robust
   suited
   measurements
   capability
   friendly
   mixture
   insights
   essentially


topic 076
   control
   flow
   graph
   graphs
   statements
   structure
   via
   inductive
   form
   hierarchy
   dependencies
   goto
   example
   dependence
   iterative


topic 077
   deal
   presentation
   fold
   unification
   traversal
   transformation
   unfold
   optimisation
   orders
   efficient
   incomplete
   improvement
   constraining
   terms
   magnitude


topic 078
   problem
   solution
   solve
   known
   result
   well
   given
   hard
   consider
   solving
   certain
   solved
   undecidable
   presence
   determining


topic 079
   first
   second
   study
   simpler
   made
   shows
   demonstrated
   fast
   obtain
   little
   introduce
   cooperative
   derive
   traditional
   oaklisp


topic 080
   evaluation
   partial
   source
   open
   interpreter
   efficient
   version
   back
   related
   evaluator
   specialization
   deforestation
   applicative
   offline
   described


topic 081
   run
   compile
   speed
   efficient
   values
   without
   safe
   checks
   however
   allow
   benefits
   due
   demonstrate
   whose
   less


topic 082
   oriented
   knowledge
   concepts
   database
   describes
   tutorial
   abstract
   choices
   graphics
   experience
   paradigm
   memory
   management
   describing
   several


topic 083
   resource
   individual
   composed
   combine
   resources
   interactions
   independently
   developed
   bounds
   super
   analyses
   case
   consumption
   automatically
   least


topic 084
   software
   engineering
   requirements
   developers
   multi
   dimensional
   effort
   metric
   strategies
   presents
   even
   hardware
   development
   vector
   lifetime


topic 085
   multiple
   inheritance
   dispatch
   oriented
   single
   without
   methods
   subtyping
   eiffel
   actor
   hierarchy
   requirement
   oo
   virtual
   supporting


topic 086
   computer
   students
   teaching
   oriented
   science
   course
   learning
   student
   courses
   describe
   teach
   cs
   principles
   curriculum
   developed


topic 087
   much
   better
   similar
   introduced
   understanding
   sometimes
   however
   limitations
   shows
   without
   offer
   recently
   many
   recent
   enables


topic 088
   give
   kernel
   standard
   proposals
   prove
   either
   exponential
   well
   powerful
   subtype
   study
   version
   define
   case
   equivalent


topic 089
   sets
   binary
   hand
   compare
   inclusion
   set
   solver
   coded
   relations
   analyses
   diagrams
   points
   range
   operations
   subset


topic 090
   algorithm
   efficient
   optimal
   size
   best
   analyzed
   line
   obtain
   factor
   always
   computes
   graph
   works
   log
   known


topic 091
   asynchronous
   easier
   support
   composable
   put
   paradigms
   cells
   without
   actions
   computer
   synchronous
   managing
   physical
   mechanisms
   descriptions


topic 092
   elimination
   results
   partial
   redundancy
   optimization
   motion
   ssa
   form
   dead
   memory
   sparse
   representation
   global
   redundant
   assignment


topic 093
   presented
   dynamically
   necessary
   discussed
   extended
   presents
   capable
   storage
   finally
   proposed
   construct
   shown
   addition
   determining
   allocated


topic 094
   bugs
   bug
   monitoring
   eclipse
   defects
   finding
   often
   applications
   detection
   developers
   version
   findbugs
   patches
   plugin
   fixing


topic 095
   annotations
   ownership
   encapsulation
   static
   oriented
   transfer
   annotated
   protection
   runtime
   different
   extraction
   hierarchical
   structure
   sound
   expressive


topic 096
   safety
   safe
   assembly
   threads
   thread
   guarantee
   simple
   certifying
   supports
   rely
   verification
   formal
   fully
   kernel
   device


topic 097
   techniques
   handling
   exception
   exceptions
   mechanisms
   efficient
   handle
   however
   analyze
   typical
   single
   potentially
   many
   declarations
   commonly


topic 098
   calculus
   lambda
   terms
   call
   reduction
   lgr
   calculi
   value
   simple
   term
   optimal
   name
   interaction
   normal
   dual


topic 099
   programmers
   plug
   qualifiers
   green
   eclipse
   write
   compile
   templates
   relationships
   errors
   allows
   enables
   qos
   needs
   immutability


topic 100
   space
   subtyping
   et
   al
   case
   worst
   debugger
   structural
   breakpoints
   result
   structure
   breakpoint
   tests
   implemented
   prefix


topic 101
   logic
   separation
   proof
   reasoning
   compositional
   rules
   hoare
   heap
   theory
   bi
   sound
   logics
   manipulating
   style
   completeness


topic 102
   combination
   power
   family
   expressive
   combining
   choice
   interpreters
   lattice
   useful
   set
   value
   ability
   style
   equivalent
   takes


topic 103
   variables
   register
   variable
   allocation
   global
   registers
   schemes
   scheme
   single
   link
   windows
   window
   encoding
   memory
   number


topic 104
   information
   precise
   enough
   set
   precision
   location
   client
   relevant
   conservative
   different
   number
   lead
   example
   theoretic
   arbitrary


topic 105
   functional
   purely
   functions
   lazy
   equational
   pearl
   reasoning
   well
   like
   ml
   ideas
   way
   good
   talk
   pure


topic 106
   level
   high
   low
   levels
   details
   written
   operations
   hand
   allow
   powerful
   among
   demonstrate
   improved
   python
   prior


topic 107
   one
   result
   another
   final
   way
   many
   single
   particular
   considered
   several
   sense
   creation
   relationship
   perform
   criterion


topic 108
   example
   various
   examples
   several
   automatically
   applied
   practical
   lack
   apply
   table
   layout
   methodology
   presents
   derivation
   progfromex


topic 109
   points
   role
   play
   join
   selection
   point
   relationships
   oriented
   selected
   models
   requirements
   pointcuts
   behavior
   roles
   means


topic 110
   array
   loop
   bounds
   arrays
   bound
   symbolic
   variables
   codes
   elements
   fortran
   accesses
   access
   scalar
   loops
   memory


topic 111
   generation
   optimal
   generating
   validation
   pipelining
   loops
   scheduling
   register
   quantitative
   parameterized
   compilers
   production
   efficient
   schedule
   developed


topic 112
   garbage
   collection
   collector
   memory
   objects
   heap
   region
   collectors
   space
   copying
   generational
   performance
   allocation
   management
   regions


topic 113
   two
   different
   distinct
   discusses
   trace
   contain
   main
   independent
   ideas
   made
   modification
   call
   concrete
   formally
   attempt


topic 114
   definitions
   binding
   syntax
   macro
   macros
   names
   binders
   scp
   definition
   scope
   involving
   however
   name
   freshml
   conventional


topic 115
   support
   api
   method
   component
   multiple
   var
   provides
   design
   variable
   document
   apis
   will
   class
   property
   may


topic 116
   relations
   equivalence
   relation
   logical
   abstract
   subtype
   form
   decidable
   proof
   like
   reasoning
   step
   equivalent
   terms
   proving


topic 117
   constructs
   translation
   core
   abstractions
   binding
   preserves
   well
   syntactic
   defined
   interference
   terms
   identifiers
   translate
   clean
   extends


topic 118
   framework
   frameworks
   unified
   presents
   explores
   introduces
   interaction
   reason
   mapping
   applied
   combines
   strength
   modular
   driven
   analyzer


topic 119
   design
   oriented
   tutorial
   abstract
   methods
   shows
   describes
   high
   simulation
   designs
   clos
   libraries
   tools
   modeling
   quality


topic 120
   communication
   distributed
   processes
   process
   channels
   remote
   quantum
   communicating
   parallel
   global
   shared
   message
   protocol
   multiple
   network


topic 121
   java
   extensions
   virtual
   interface
   libraries
   classes
   jvm
   compatible
   native
   syntax
   generic
   interfaces
   extend
   lightweight
   constraints


topic 122
   parallel
   parallelism
   processors
   sequential
   execution
   computations
   performance
   computation
   operations
   deterministic
   large
   parallelization
   divide
   conquer
   well


topic 123
   problems
   number
   many
   difficult
   task
   addressed
   need
   often
   important
   cause
   therefore
   performed
   due
   solves
   include


topic 124
   pointer
   queries
   query
   alias
   pointers
   demand
   points
   driven
   persistence
   may
   databases
   memory
   graph
   access
   result


topic 125
   modules
   module
   ml
   separate
   support
   modular
   standard
   recursive
   components
   compilation
   style
   extended
   core
   large
   interface


topic 126
   issues
   achieve
   address
   building
   performance
   addresses
   wide
   discuss
   fact
   degree
   arise
   customized
   variety
   major
   highly


topic 127
   dynamic
   static
   contracts
   contract
   dispatching
   ruby
   typing
   via
   scheme
   blame
   tagging
   even
   racket
   perl
   predicate


topic 128
   statically
   imperative
   usage
   version
   via
   describe
   operations
   correctness
   dependency
   dcc
   thus
   soundness
   demonstrate
   novel
   combines


topic 129
   types
   dependent
   recursive
   constructors
   theory
   typed
   polymorphic
   defined
   notion
   sets
   arguments
   useful
   algebraic
   functions
   generic


topic 130
   logic
   temporal
   procedure
   linear
   decision
   properties
   formulas
   satisfiability
   formula
   solvers
   branching
   logics
   reasoning
   smt
   given


topic 131
   support
   research
   lack
   different
   however
   poster
   widely
   developers
   performance
   way
   yet
   developing
   overview
   area
   impact


topic 132
   structures
   recursive
   structure
   lists
   trees
   list
   recursion
   linked
   tree
   shape
   predicate
   well
   examples
   internal
   predicates


topic 133
   free
   semantic
   phase
   context
   tree
   syntactic
   commutativity
   grammars
   evaluation
   next
   relation
   syntax
   structural
   parsing
   efficient


topic 134
   scheme
   point
   floating
   integer
   subsystem
   subsystems
   performance
   timing
   hardware
   plt
   result
   acl
   idle
   addition
   results


topic 135
   natural
   related
   straightforward
   mathematical
   literature
   notation
   closely
   question
   examples
   express
   algebra
   study
   mathematics
   ways
   illustrated


topic 136
   architecture
   service
   services
   applications
   middleware
   performance
   visualization
   building
   requirements
   lessons
   management
   developed
   acquisition
   learned
   agent


topic 137
   computation
   incremental
   self
   changes
   propagation
   computations
   adjusting
   change
   result
   given
   input
   describe
   practice
   conventional
   efficient


topic 138
   tool
   tools
   lines
   large
   potential
   experience
   statements
   built
   suite
   find
   industrial
   takes
   create
   executable
   assist


topic 139
   algorithm
   efficient
   optimal
   size
   best
   analyzed
   line
   obtain
   factor
   always
   computes
   graph
   works
   log
   known


topic 140
   sharing
   objects
   group
   groups
   false
   delegation
   mechanisms
   parts
   changes
   composite
   mechanism
   structure
   sharc
   behavior
   law


topic 141
   method
   methods
   ad
   hoc
   may
   interfaces
   case
   requires
   devices
   direct
   parameters
   host
   access
   invocations
   different


topic 142
   loop
   loops
   parallelization
   iteration
   parallelism
   hybrid
   iterations
   performance
   applications
   compilers
   simd
   iterative
   nested
   automatic
   dependences


topic 143
   continuations
   continuation
   cps
   style
   stack
   passing
   call
   conversion
   transformation
   closure
   evaluation
   intermediate
   delimited
   return
   effect


topic 144
   allows
   extension
   us
   construct
   resulting
   rather
   isomorphism
   primitives
   base
   generic
   number
   several
   third
   study
   thus


topic 145
   expressions
   regular
   xml
   expression
   operations
   simple
   datatypes
   algebraic
   structure
   syntax
   recursion
   functions
   generic
   datatype
   processing


topic 146
   will
   panel
   effective
   help
   practices
   well
   server
   agile
   environment
   dsls
   explore
   practice
   panelists
   different
   technology


topic 147
   function
   functions
   work
   results
   common
   calls
   values
   section
   applications
   large
   operation
   set
   usual
   argument
   within


topic 148
   value
   statements
   dependence
   slicing
   statement
   values
   execution
   slice
   slices
   dependences
   apl
   expression
   numeric
   evaluation
   size


topic 149
   abstract
   interpretation
   domain
   domains
   operations
   generic
   concrete
   precision
   analyses
   functions
   interpretations
   check
   obtain
   manipulation
   underlying


topic 150
   model
   models
   tools
   mda
   modeling
   driven
   standard
   fully
   feature
   artifacts
   research
   proposed
   needed
   presents
   independent


topic 151
   scheduling
   profiling
   instruction
   load
   instructions
   execution
   scheduler
   performance
   overhead
   memory
   parallelism
   decisions
   traditional
   routines
   processor


topic 152
   complete
   sound
   procedures
   proof
   completeness
   provides
   relative
   simple
   structure
   like
   partial
   algol
   relatively
   respect
   shown


topic 153
   error
   errors
   traces
   recovery
   trace
   prone
   debugging
   messages
   cause
   detection
   execution
   user
   users
   correct
   set


topic 154
   structure
   view
   lenses
   sequences
   bidirectional
   edit
   distance
   update
   views
   plan
   structures
   queues
   operations
   lens
   simple


topic 155
   attribute
   grammar
   grammars
   tree
   attributes
   incremental
   storage
   structure
   evaluation
   graph
   dependencies
   vlsi
   structured
   efficient
   extended


topic 156
   web
   applications
   javascript
   security
   large
   static
   attacks
   sql
   vulnerabilities
   modern
   engine
   tools
   runtime
   server
   injection


topic 157
   make
   providing
   computing
   base
   extensions
   current
   extended
   frame
   significant
   allow
   yet
   detail
   evaluate
   adaptation
   understand


topic 158
   domain
   specific
   modeling
   concepts
   architecture
   models
   uml
   platform
   generators
   metamodel
   requirements
   driven
   solution
   focus
   users


topic 159
   found
   effective
   specify
   easy
   many
   specifying
   find
   easily
   quickly
   fail
   users
   described
   specialized
   component
   constructing


topic 160
   small
   simple
   easy
   directly
   contrast
   relatively
   intermediate
   direct
   simplicity
   typically
   com
   available
   modular
   implement
   makes


topic 161
   may
   must
   within
   behavior
   number
   values
   prove
   errors
   either
   regions
   bound
   acceptability
   bugs
   set
   less


topic 162
   state
   execution
   symbolic
   art
   copy
   space
   large
   states
   process
   copies
   operations
   applications
   point
   due
   finding


topic 163
   class
   classes
   oriented
   methods
   inheritance
   specialization
   hierarchy
   defined
   instance
   compatibility
   instances
   hierarchies
   metaclasses
   particular
   polymorphism


topic 164
   environment
   operating
   provided
   environments
   facilities
   execution
   services
   management
   hardware
   file
   computing
   primitives
   still
   written
   semantic


topic 165
   order
   higher
   functions
   powerful
   strict
   termination
   recursion
   illustrate
   several
   unification
   interpretations
   construction
   term
   arguments
   simply


topic 166
   implementations
   explicit
   useful
   implement
   implicit
   quite
   many
   even
   usually
   example
   independent
   inspired
   arise
   return
   unlike


topic 167
   algorithms
   automatic
   methods
   efficient
   selection
   handle
   known
   algorithmic
   current
   convert
   practical
   need
   expressed
   introduce
   even


topic 168
   aspect
   oriented
   aspects
   concerns
   separation
   advice
   aop
   crosscutting
   reuse
   aspectj
   structure
   different
   components
   modularization
   development


topic 169
   transformations
   transformation
   source
   work
   correct
   correctness
   implemented
   preserving
   specification
   improve
   automatically
   related
   algorithmic
   applied
   set


topic 170
   results
   previous
   experimental
   significantly
   three
   efficiently
   indicate
   benchmarks
   unlike
   variety
   explore
   preliminary
   almost
   whether
   ii


topic 171
   complex
   since
   become
   large
   interactive
   however
   less
   difficult
   behavior
   traditional
   especially
   visualizations
   introduce
   exploration
   understanding


topic 172
   example
   various
   examples
   several
   automatically
   applied
   practical
   lack
   apply
   table
   layout
   methodology
   presents
   derivation
   progfromex


topic 173
   register
   graph
   live
   allocation
   coloring
   range
   allocator
   coalescing
   splitting
   spilling
   spill
   ranges
   heuristic
   global
   reduce


topic 174
   library
   generic
   tasks
   libraries
   net
   generics
   declarative
   task
   feature
   visitor
   linq
   without
   microsoft
   combinators
   set


