topic 000
   race
   data
   detection
   races
   conditions
   threaded
   replay
   multi
   number
   threads
   thread
   real
   precise
   multithreaded
   executions


topic 001
   properties
   set
   precisely
   specific
   combining
   individual
   automatically
   restricting
   ensure
   interact
   guaranteed
   simplify
   actions
   specified
   unaffected


topic 002
   critical
   must
   effort
   resources
   fairness
   effectively
   guarantee
   acceptability
   rely
   acceptable
   errors
   regions
   region
   criteria
   used


topic 003
   path
   paths
   trace
   traces
   along
   program
   symbolic
   tracing
   hot
   control
   large
   location
   small
   numbering
   pins


topic 004
   view
   uml
   needs
   flexible
   modeling
   specific
   tool
   users
   green
   plug
   views
   eclipse
   environment
   designing
   requirements


topic 005
   large
   scale
   copy
   small
   metrics
   collection
   runtime
   copies
   bloat
   ruby
   used
   results
   aspectj
   temporary
   containers


topic 006
   management
   solutions
   may
   filters
   inconsistency
   fluid
   conditional
   create
   forms
   integer
   integrate
   volume
   chemical
   filter
   used


topic 007
   distributed
   communication
   shared
   remote
   message
   communicating
   primitives
   network
   multiple
   global
   local
   multiparty
   access
   interactions
   asynchronous


topic 008
   space
   cases
   tool
   rewriting
   gives
   sites
   building
   set
   boxing
   actual
   used
   results
   reduction
   unboxing
   allocated


topic 009
   fully
   incremental
   end
   certified
   towards
   guarded
   front
   assembly
   guarantee
   value
   building
   preservation
   flexible
   involving
   used


topic 010
   problem
   solution
   solve
   known
   solved
   certain
   determining
   undecidable
   np
   instance
   might
   difficulty
   investigate
   result
   finding


topic 011
   recursive
   constructs
   include
   recursion
   access
   control
   power
   construct
   term
   pi
   keeping
   results
   open
   capabilities
   known


topic 012
   concurrent
   abstractions
   concurrency
   synchronization
   threads
   sequential
   thread
   events
   interference
   primitives
   shared
   concurrently
   passing
   rely
   conditions


topic 013
   compiler
   compilers
   optimization
   optimizing
   compiled
   optimized
   compiling
   generated
   generate
   automatically
   realistic
   written
   produces
   produce
   native


topic 014
   fine
   grained
   locking
   grain
   sections
   coarse
   files
   file
   contention
   access
   invariants
   nesc
   forest
   automatic
   parallelism


topic 015
   attribute
   grammar
   grammars
   automata
   tree
   free
   parsing
   context
   attributes
   syntax
   evaluation
   semantic
   finite
   values
   set


topic 016
   space
   cases
   tool
   rewriting
   gives
   sites
   building
   set
   boxing
   actual
   used
   results
   reduction
   unboxing
   allocated


topic 017
   efficient
   efficiently
   efficiency
   magnitude
   known
   available
   significantly
   expensive
   results
   comparable
   loss
   compact
   orders
   studied
   generating


topic 018
   branch
   profiling
   prediction
   branches
   conditional
   instructions
   control
   load
   number
   performance
   decisions
   instruction
   esp
   prefetching
   predict


topic 019
   programmers
   allow
   write
   used
   allows
   explain
   specify
   create
   understand
   express
   examples
   reason
   terms
   require
   ease


topic 020
   programming
   philosophy
   illustrate
   indeterminacy
   thoughts
   absence
   used
   results
   consistent
   advantage
   fifth
   focusing
   planned
   examples
   project


topic 021
   general
   construction
   integrating
   central
   although
   constructing
   applicable
   syntactic
   uniform
   motivation
   diverse
   law
   originally
   manipulation
   smoothly


topic 022
   theorem
   proof
   prover
   closure
   proofs
   conversion
   coq
   syntactic
   meta
   assistants
   semantic
   procedures
   facilitate
   knowledge
   used


topic 023
   web
   javascript
   applications
   security
   user
   attacks
   engine
   taint
   injection
   modern
   research
   html
   sites
   world
   box


topic 024
   constraints
   constraint
   solving
   solver
   solvers
   prolog
   smt
   declarative
   symbolic
   clp
   decision
   clause
   conditions
   solve
   boolean


topic 025
   programs
   results
   written
   used
   involve
   contain
   automatically
   execute
   relative
   although
   running
   characterize
   additional
   transforming
   sequences


topic 026
   calculus
   lambda
   call
   value
   al
   lgr
   control
   translation
   name
   extend
   et
   extension
   operators
   delimited
   calculi


topic 027
   data
   structures
   lenses
   trees
   lists
   linked
   bidirectional
   list
   complex
   heap
   tree
   finite
   set
   transducers
   lens


topic 028
   semantics
   semantic
   operational
   denotational
   definition
   definitions
   mathematical
   meaning
   natural
   behaviour
   expressed
   develop
   allows
   sequences
   rigorous


topic 029
   simple
   expressions
   expression
   sense
   complex
   terms
   situations
   practice
   known
   part
   moreover
   investigate
   degree
   used
   wide


topic 030
   works
   legacy
   better
   months
   move
   team
   change
   size
   innovative
   effects
   effort
   office
   culture
   measure
   small


topic 031
   dynamic
   overhead
   performance
   monitoring
   dynamically
   instrumentation
   production
   profiler
   low
   sampling
   profilers
   monitor
   number
   hardware
   pin


topic 032
   operations
   operation
   represented
   performed
   set
   arithmetic
   real
   free
   trees
   usual
   executed
   separate
   commutativity
   sequences
   allows


topic 033
   point
   fixed
   ad
   hoc
   floating
   number
   format
   precision
   input
   numbers
   arithmetic
   accuracy
   integer
   produce
   approximation


topic 034
   bugs
   errors
   tool
   bug
   real
   false
   applications
   finding
   detect
   defects
   detection
   reports
   previously
   precise
   results


topic 035
   tool
   role
   goal
   user
   models
   natural
   statements
   views
   automatic
   precise
   unique
   description
   roles
   used
   production


topic 036
   loop
   loops
   iteration
   performance
   iterations
   codes
   transformation
   optimization
   pipelining
   symbolic
   spaces
   dimensional
   irregular
   parallelism
   nests


topic 037
   verification
   proof
   proofs
   reasoning
   verified
   coq
   verify
   verifying
   assistant
   conditions
   carrying
   assembly
   hoare
   checked
   reason


topic 038
   composition
   protocol
   protocols
   phase
   quantum
   cml
   security
   may
   computation
   classical
   fault
   faults
   linearizability
   cryptographic
   transient


topic 039
   subtyping
   reduction
   types
   regular
   decidable
   coercion
   coercions
   empty
   equivalence
   expression
   undecidable
   intersection
   proof
   interpretation
   identity


topic 040
   optimization
   references
   data
   reduce
   vector
   sets
   number
   simd
   performance
   results
   instructions
   opportunities
   across
   improvement
   set


topic 041
   among
   extensible
   relationships
   interfaces
   express
   refactoring
   independently
   extension
   strong
   preconditions
   extensions
   renaming
   adding
   names
   tool


topic 042
   nested
   data
   kind
   haskell
   computation
   syntactic
   algebra
   gadts
   functors
   technical
   behaviour
   indexing
   initial
   strength
   extensions


topic 043
   programmer
   improve
   place
   add
   optimizer
   intended
   assumptions
   must
   automatic
   better
   assumption
   realistic
   iopt
   compared
   significantly


topic 044
   non
   may
   trivial
   part
   results
   determinism
   used
   applicable
   purposes
   allows
   true
   possibly
   lead
   ensure
   interest


topic 045
   information
   security
   policies
   policy
   flow
   control
   access
   checks
   noninterference
   secure
   interference
   set
   data
   enforcement
   inference


topic 046
   also
   proposed
   definition
   workflow
   viewpoint
   uncertainty
   formalization
   viewpoints
   stated
   involved
   degree
   conceptual
   existence
   results
   surprisingly


topic 047
   parallel
   tasks
   parallelism
   performance
   sequential
   data
   partitioning
   processors
   implementations
   available
   large
   decomposition
   range
   experimental
   speedup


topic 048
   source
   debugging
   optimized
   debugger
   user
   must
   effects
   debug
   variable
   versions
   performed
   modification
   open
   debuggers
   back


topic 049
   application
   applications
   server
   servers
   technology
   client
   bull
   multi
   tier
   set
   used
   commercial
   business
   separate
   managing


topic 050
   run
   facilities
   facility
   breakpoints
   methods
   modula
   fast
   environment
   exceptions
   must
   life
   scope
   breakpoint
   write
   cedar


topic 051
   uses
   designed
   simulation
   little
   contrast
   built
   used
   pre
   available
   simulations
   relative
   adaptive
   want
   changed
   post


topic 052
   target
   every
   introduced
   back
   identify
   relies
   equivalent
   translated
   translate
   terms
   preserves
   term
   apply
   set
   choice


topic 053
   representation
   abstract
   syntax
   names
   representations
   datatypes
   name
   recursion
   macro
   structural
   macros
   nominal
   internal
   definitions
   binders


topic 054
   method
   methods
   dispatch
   predicates
   multiple
   predicate
   oo
   dispatching
   inheritance
   lookup
   world
   flexible
   results
   available
   practice


topic 055
   functional
   purely
   lazy
   style
   pattern
   functions
   compositional
   pearl
   small
   end
   elegant
   closures
   written
   strict
   reasoning


topic 056
   flow
   control
   graph
   data
   graphs
   global
   symbolic
   nodes
   representation
   tree
   edges
   computes
   interprocedural
   local
   compute


topic 057
   runtime
   mechanisms
   introduces
   physical
   evaluations
   advanced
   security
   composed
   monitor
   heap
   rewriting
   threading
   protection
   resource
   overflow


topic 058
   patterns
   pattern
   matching
   regular
   string
   real
   speed
   complex
   evolution
   flexible
   idea
   recognition
   allows
   whose
   processing


topic 059
   program
   abstract
   partial
   data
   approximate
   programs
   section
   set
   method
   number
   function
   must
   assertions
   whose
   theorem


topic 060
   annotations
   ownership
   encapsulation
   object
   aliasing
   hierarchical
   type
   annotated
   cyclic
   immutability
   references
   specify
   refactoring
   sound
   domain


topic 061
   library
   implementations
   libraries
   parts
   capture
   api
   client
   complex
   declarative
   behaviour
   control
   specific
   used
   combinator
   built


topic 062
   linear
   invariants
   bounds
   bound
   quantitative
   input
   numerical
   invariant
   reachability
   lower
   parameters
   functions
   interpretation
   upper
   worst


topic 063
   type
   inference
   types
   ml
   polymorphic
   polymorphism
   typing
   principal
   milner
   var
   rank
   unification
   variable
   intersection
   hindley


topic 064
   correctness
   prove
   correct
   proving
   proof
   respect
   condition
   variant
   establish
   proved
   part
   formally
   soundness
   develop
   specify


topic 065
   size
   rewrite
   expression
   compression
   evaluation
   sequence
   apl
   storage
   example
   addressing
   address
   tree
   assignment
   word
   operators


topic 066
   elimination
   partial
   optimizations
   optimization
   constant
   redundancy
   propagation
   motion
   redundant
   program
   dead
   global
   actually
   pre
   used


topic 067
   approach
   perl
   prototype
   vs
   adding
   self
   assesses
   particularly
   talk
   parrot
   multi
   known
   typechecking
   available
   moreover


topic 068
   services
   service
   dsls
   technical
   soa
   computing
   panelists
   researchers
   really
   domain
   industry
   practices
   silver
   best
   extreme


topic 069
   specification
   specifications
   verification
   specifying
   tool
   play
   traces
   specify
   correct
   requirements
   automatically
   mining
   executable
   specified
   equivalent


topic 070
   optimizations
   input
   inputs
   output
   runs
   production
   outputs
   automatically
   dynamo
   instrumentation
   ruby
   set
   highly
   dynamically
   behaviors


topic 071
   properties
   set
   precisely
   specific
   combining
   individual
   automatically
   restricting
   ensure
   interact
   guaranteed
   simplify
   actions
   specified
   unaffected


topic 072
   compilation
   changes
   change
   separate
   compiled
   propagation
   versions
   binary
   recompilation
   compiling
   re
   units
   linking
   set
   proposed


topic 073
   algorithm
   points
   join
   point
   advice
   selection
   set
   variable
   relationships
   compute
   representation
   log
   harmless
   selected
   takes


topic 074
   two
   pass
   validation
   discusses
   formally
   develop
   validator
   validators
   detect
   validating
   lcm
   distinct
   posteriori
   reactis
   pearl


topic 075
   environments
   binding
   lisp
   environment
   timing
   scoping
   variable
   definition
   bindings
   multiple
   lexical
   whose
   scope
   quasi
   used


topic 076
   developers
   knowledge
   objective
   unified
   tool
   developer
   attention
   project
   artifacts
   intelligent
   addressing
   evolution
   monitors
   architecture
   maintain


topic 077
   technique
   applicable
   concrete
   analyzing
   experiments
   bounding
   known
   identifying
   generate
   analyzed
   errors
   improvements
   besides
   guide
   learn


topic 078
   context
   sensitive
   calling
   points
   contexts
   insensitive
   call
   sensitivity
   privacy
   cfa
   alias
   differential
   precision
   scalability
   space


topic 079
   certain
   determine
   benefit
   demonstrates
   sets
   re
   selection
   used
   exploits
   identify
   overall
   alter
   calls
   potentially
   extend


topic 080
   students
   teaching
   course
   student
   learning
   computer
   science
   courses
   api
   cs
   introductory
   curriculum
   concepts
   teach
   project


topic 081
   inheritance
   field
   fields
   record
   multiple
   object
   records
   layout
   subtyping
   allows
   encoding
   coallocation
   hierarchies
   layouts
   concatenation


topic 082
   show
   results
   used
   experimental
   experiments
   wide
   replication
   embedded
   latter
   fundamental
   maximal
   although
   trade
   sizes
   maintaining


topic 083
   allocation
   register
   allocator
   memory
   registers
   size
   scheduling
   global
   number
   free
   schemes
   performance
   allocators
   windows
   progressive


topic 084
   aspect
   aspects
   product
   oriented
   concerns
   separation
   aop
   crosscutting
   qos
   aspectj
   line
   middleware
   modularity
   quality
   technologies


topic 085
   workshop
   refactoring
   eclipse
   oopsla
   ide
   examples
   refactorings
   workshops
   ides
   killer
   plug
   ins
   event
   participants
   learning


topic 086
   attribute
   grammar
   grammars
   automata
   tree
   free
   parsing
   context
   attributes
   syntax
   evaluation
   semantic
   finite
   values
   set


topic 087
   region
   memory
   regions
   thread
   threads
   heap
   multithreaded
   model
   safety
   assembly
   applications
   asynchronous
   io
   control
   deadlocks


topic 088
   abstract
   interpretation
   domain
   infinite
   operator
   domains
   interpretations
   lattice
   interpreters
   finite
   computations
   conditions
   derivations
   concrete
   lattices


topic 089
   language
   specific
   written
   host
   core
   writing
   used
   summer
   domain
   consists
   reason
   analyze
   embedded
   allows
   develop


topic 090
   type
   typed
   typing
   dynamically
   soundness
   expressions
   setting
   strong
   safe
   step
   translation
   proposed
   simply
   security
   guarantees


topic 091
   types
   data
   may
   type
   must
   functions
   expressions
   sets
   definition
   objects
   elements
   polymorphic
   algebraic
   set
   discipline


topic 092
   abstraction
   abstractions
   predicate
   refinement
   verification
   reasoning
   interleavings
   symbolic
   automated
   automatically
   automatic
   guided
   transition
   inference
   sufficiently


topic 093
   operating
   process
   number
   may
   real
   integration
   issues
   engineering
   multiple
   layer
   abstractions
   property
   applications
   methods
   subsystem


topic 094
   functional
   purely
   lazy
   style
   pattern
   functions
   compositional
   pearl
   small
   end
   elegant
   closures
   written
   strict
   reasoning


topic 095
   complexity
   equations
   may
   demand
   computation
   driven
   strictness
   call
   terms
   projection
   much
   evaluation
   lazy
   exhaustive
   used


topic 096
   tool
   role
   goal
   user
   models
   natural
   statements
   views
   automatic
   precise
   unique
   description
   roles
   used
   production


topic 097
   variables
   bytecode
   variable
   distribution
   induction
   set
   verifier
   assignment
   local
   configuration
   store
   initialization
   osgi
   assigned
   demonstration


topic 098
   termination
   properties
   assertions
   analyses
   shape
   safety
   invariants
   inductive
   variance
   liveness
   induction
   invariant
   verification
   precise
   fair


topic 099
   reactive
   frp
   agda
   functional
   continuous
   arguments
   behaviors
   hass
   discrete
   events
   streams
   raising
   encourages
   assurance
   environmental


topic 100
   process
   processes
   networks
   kahn
   merge
   steps
   whose
   computable
   global
   preserves
   fixed
   principle
   definitions
   output
   csp


topic 101
   lock
   write
   read
   transactional
   synchronization
   synchronous
   locks
   data
   conflict
   high
   conflicts
   freedom
   progress
   shared
   detection


topic 102
   result
   number
   computation
   practice
   require
   consistent
   drive
   automatically
   comprehensive
   sorting
   principle
   prefix
   turns
   knuth
   develops


topic 103
   optimal
   storage
   table
   mapping
   computation
   schedule
   tables
   vertex
   space
   generation
   mappings
   global
   schedules
   dominators
   used


topic 104
   execution
   executing
   point
   multiple
   executed
   amount
   proposed
   executes
   executions
   used
   issue
   becomes
   indexing
   across
   formally


topic 105
   theory
   type
   relations
   equational
   relational
   relation
   equivalence
   proof
   logical
   reynolds
   parametricity
   terms
   free
   theorems
   decidable


topic 106
   analysis
   analyses
   results
   set
   precise
   interprocedural
   precision
   analyze
   experimental
   practice
   reachability
   analyzer
   accuracy
   analyzed
   per


topic 107
   ml
   modules
   module
   haskell
   style
   dependencies
   core
   sml
   mixin
   units
   definition
   extension
   signatures
   expressive
   linking


topic 108
   level
   high
   low
   meta
   reflection
   written
   reflective
   levels
   advanced
   facilities
   defining
   ez
   abcl
   examples
   architectures


topic 109
   synthesis
   fragments
   easier
   specification
   automatically
   synthesize
   candidate
   sketch
   input
   desired
   partial
   must
   output
   examples
   sketching


topic 110
   previous
   modular
   main
   used
   open
   additional
   compared
   extend
   modularity
   wide
   retaining
   factor
   proposals
   substantial
   commonly


topic 111
   complete
   sound
   respect
   set
   precise
   soundness
   subset
   completely
   results
   reasoning
   moreover
   develop
   orders
   guaranteed
   power


topic 112
   structure
   underlying
   constructed
   reasons
   along
   limited
   particularly
   data
   named
   bounded
   maintain
   generating
   contains
   consequently
   conventional


topic 113
   type
   inference
   types
   ml
   polymorphic
   polymorphism
   typing
   principal
   milner
   var
   rank
   unification
   variable
   intersection
   hindley


topic 114
   logic
   separation
   temporal
   properties
   reasoning
   verification
   logics
   proof
   formulas
   linear
   expressive
   branching
   heap
   hoare
   complete


topic 115
   algorithms
   data
   self
   adjusting
   algorithmic
   choices
   automatically
   automatic
   conventional
   respond
   translating
   practice
   choice
   theoretical
   develop


topic 116
   requires
   explicit
   set
   systematic
   gives
   require
   explicitly
   local
   allows
   part
   reconstruction
   substitutions
   specified
   manage
   never


topic 117
   program
   determines
   spends
   reach
   hangup
   linearly
   grows
   frequencies
   hangups
   conditon
   premature
   chart
   whereby
   identify
   formalize


topic 118
   software
   engineering
   agile
   practices
   projects
   methods
   practice
   community
   project
   team
   technology
   initial
   world
   xp
   teams


topic 119
   networks
   network
   hardware
   energy
   power
   mobile
   channels
   devices
   communication
   sensor
   data
   embedded
   consumption
   small
   channel


topic 120
   resource
   reduced
   faster
   descriptions
   times
   allows
   description
   extensible
   exploit
   number
   units
   factor
   available
   formulation
   fly


topic 121
   implementation
   prototype
   simplifies
   efforts
   incorporated
   convenient
   briefly
   supported
   maps
   entirely
   theoretic
   outperforms
   cycles
   smallest
   collapsing


topic 122
   components
   component
   model
   state
   text
   may
   multiple
   document
   object
   data
   persistence
   api
   apis
   process
   environment


topic 123
   parser
   parsing
   lr
   parsers
   grammars
   reductions
   grammar
   productions
   ll
   left
   construction
   syntax
   free
   context
   strict


topic 124
   scheduling
   structural
   processor
   derived
   scheduler
   achieved
   instruction
   music
   manual
   control
   processors
   kernel
   complex
   incorporate
   audio


topic 125
   functions
   function
   xml
   dataflow
   list
   lists
   tree
   trees
   automatically
   divide
   calls
   schemas
   conquer
   useful
   bidirectional


topic 126
   types
   type
   dependent
   inference
   refinement
   qualifiers
   ocaml
   existential
   allows
   liquid
   check
   null
   polymorphic
   adding
   plug


topic 127
   program
   determines
   spends
   reach
   hangup
   linearly
   grows
   frequencies
   hangups
   conditon
   premature
   chart
   whereby
   identify
   formalize


topic 128
   pointer
   pointers
   alias
   locations
   list
   structures
   aliases
   points
   precision
   assignments
   allocated
   used
   section
   written
   inclusion


topic 129
   search
   strategy
   iterative
   number
   unnecessary
   sequences
   produce
   depth
   phases
   pruning
   small
   ordering
   searches
   results
   sequence


topic 130
   checking
   statically
   check
   checks
   values
   checked
   quantified
   expressive
   equivalent
   practice
   rich
   performed
   power
   parameterized
   variable


topic 131
   safety
   safe
   type
   checker
   unsafe
   certifying
   verify
   assembly
   mobile
   certification
   errors
   security
   statically
   device
   ccured


topic 132
   visual
   visualization
   interactive
   tool
   data
   diagrams
   visualizations
   research
   exploration
   methods
   users
   poster
   humans
   movements
   complex


topic 133
   continuation
   continuations
   stack
   step
   cps
   passing
   transformation
   control
   style
   call
   power
   results
   direct
   return
   agent


topic 134
   graph
   register
   live
   coloring
   ssa
   range
   allocation
   coalescing
   node
   spill
   ranges
   spilling
   assignment
   splitting
   dataflow


topic 135
   effect
   effects
   side
   pure
   call
   computational
   expression
   value
   reasoning
   algebraic
   ones
   soundness
   extension
   monadic
   simplicity


topic 136
   transformations
   transformation
   source
   integer
   bit
   used
   optimization
   link
   representation
   reduction
   simplified
   dataflow
   improve
   division
   procedures


topic 137
   problems
   issues
   introduces
   challenging
   configuration
   decisions
   collaborative
   product
   coordination
   family
   embedded
   addresses
   refactorings
   proper
   complex


topic 138
   type
   generic
   classes
   haskell
   parameters
   implicit
   definitions
   useful
   generics
   constructors
   instantiation
   family
   parameterized
   scala
   style


topic 139
   example
   combines
   idea
   examples
   takes
   automatic
   four
   popular
   proposed
   progfromex
   implements
   far
   larger
   tableprog
   practicality


topic 140
   parallelism
   parallelization
   speculative
   data
   computation
   sequential
   speculation
   performance
   hybrid
   automatic
   dependences
   exploiting
   applications
   dependence
   runtime


topic 141
   scheme
   subtype
   erlang
   hierarchy
   plt
   racket
   untyped
   occurrence
   used
   wildcards
   proper
   kernel
   hold
   fun
   tail


topic 142
   class
   classes
   inheritance
   hierarchy
   methods
   compatibility
   hierarchies
   used
   instance
   instances
   dictionary
   addition
   attributes
   metaclasses
   subclasses


topic 143
   model
   computation
   asynchronous
   game
   games
   hardware
   interaction
   circuits
   terms
   geometry
   circuit
   description
   affine
   illustrate
   linear


topic 144
   system
   extension
   allows
   commands
   approximately
   vary
   gained
   helped
   union
   encountered
   efficacy
   reimplemented
   drove
   microcoding
   reimplementing


topic 145
   translation
   query
   database
   queries
   data
   relational
   databases
   sql
   persistent
   querying
   linq
   semantic
   answer
   persistence
   primitives


topic 146
   modern
   direct
   small
   generally
   creating
   clear
   scripting
   introducing
   deliver
   lightweight
   managing
   interactive
   aggregate
   scripts
   interlanguage


topic 147
   new
   research
   express
   writing
   naturalistic
   cocons
   fail
   effectively
   pegasus
   empirical
   capabilities
   artefact
   focuses
   impact
   abc


topic 148
   order
   higher
   functions
   strict
   schemes
   unification
   extends
   polymorphic
   open
   makes
   simply
   illustrate
   elegant
   studied
   encoded


topic 149
   practical
   paradigm
   restrictions
   theoretical
   designing
   past
   construct
   step
   entity
   towards
   automatically
   em
   philosophy
   etc
   focuses


topic 150
   machine
   instruction
   instructions
   machines
   set
   architecture
   virtual
   lambda
   assembly
   retargetable
   toolkit
   sparc
   fast
   bytecodes
   sigma


topic 151
   update
   updates
   updating
   updated
   performance
   type
   patches
   safe
   tt
   vm
   automatically
   running
   overhead
   bugs
   fix


topic 152
   reference
   contracts
   counting
   unique
   contract
   streams
   permissions
   may
   object
   access
   permission
   soundness
   count
   references
   useful


topic 153
   cost
   sharing
   sequential
   performance
   false
   early
   sharc
   distance
   allows
   sheriff
   duplication
   reply
   mode
   shared
   protect


topic 154
   garbage
   collection
   collector
   heap
   objects
   memory
   collectors
   copying
   generational
   space
   gc
   overhead
   performance
   times
   mark


topic 155
   systems
   complex
   today
   embedded
   develop
   much
   physical
   conventional
   compare
   serve
   evolve
   amount
   sufficient
   interactions
   begin


topic 156
   error
   handling
   errors
   prone
   recovery
   messages
   number
   user
   detection
   cause
   users
   correct
   large
   improve
   reports


topic 157
   code
   generation
   generated
   generating
   generate
   available
   quality
   generates
   reduce
   generator
   generators
   relatively
   tcc
   implements
   address


topic 158
   object
   oriented
   tutorial
   abstract
   concepts
   clos
   university
   understand
   technology
   criteria
   projects
   teaching
   choices
   teaches
   demeter


topic 159
   time
   running
   line
   known
   constructed
   atr
   polynomial
   space
   unification
   restricted
   relative
   computable
   cause
   feasible
   equalities


topic 160
   java
   virtual
   machine
   heap
   vm
   used
   machines
   file
   jalapeño
   reduce
   jvm
   written
   string
   subset
   core


topic 161
   intermediate
   preserving
   compilers
   optimizing
   directed
   optimizations
   strongly
   preserve
   used
   empirical
   global
   evidence
   achieving
   series
   forms


topic 162
   procedure
   smalltalk
   procedures
   abstract
   classes
   call
   calls
   designed
   environment
   unification
   declarations
   late
   point
   arguments
   effectively


topic 163
   evaluation
   partial
   interpreter
   specialization
   stages
   lazy
   online
   multi
   results
   evaluated
   stage
   evaluator
   impact
   offline
   narrowing


topic 164
   development
   quality
   requirements
   environment
   driven
   frameworks
   costs
   building
   evolving
   industrial
   custom
   goals
   early
   evolution
   technologies


topic 165
   information
   inlining
   overhead
   optimizations
   call
   inter
   performance
   escape
   function
   procedural
   adaptive
   compile
   calls
   stack
   splitting


topic 166
   implemented
   real
   world
   prototype
   top
   used
   sufficiently
   stage
   advantages
   fragment
   fly
   commercial
   promising
   correspond
   unix


topic 167
   tools
   enables
   useful
   building
   tool
   available
   complex
   combination
   editing
   understand
   aware
   executable
   demonstration
   accessible
   illustrate


topic 168
   data
   cache
   memory
   locality
   performance
   layout
   reference
   improve
   misses
   average
   improving
   conscious
   hardware
   benchmarks
   prefetching


topic 169
   polymorphism
   parametric
   relation
   properties
   subtype
   polymorphic
   answer
   parametricity
   closed
   net
   categories
   question
   correspondence
   universal
   multiple


topic 170
   computational
   monad
   computations
   monads
   monadic
   haskell
   whose
   effects
   fusion
   used
   combinators
   examples
   views
   arrows
   cut


topic 171
   lines
   exception
   poster
   session
   machines
   exceptions
   native
   portable
   jvm
   example
   must
   instrumentation
   jni
   lifetime
   ffi


topic 172
   languages
   self
   domain
   generation
   assembly
   fortran
   compiled
   evolution
   gls
   centric
   mathematics
   stabilizing
   promising
   utility
   things


topic 173
   test
   testing
   tests
   tool
   generation
   automated
   coverage
   cases
   suite
   tested
   random
   dsl
   specific
   scp
   input


topic 174
   array
   arrays
   data
   loop
   bounds
   elements
   range
   checks
   fusion
   optimizations
   bound
   cells
   automatic
   dependence
   fold


topic 175
   deterministic
   extensions
   expressiveness
   extension
   setting
   expressive
   primitive
   construct
   sequential
   intensional
   behave
   host
   pcf
   analyzing
   natural


topic 176
   object
   objects
   oriented
   instances
   mechanisms
   sharing
   group
   inheritance
   delegation
   environment
   instance
   prototype
   used
   message
   composite


topic 177
   atomic
   blocks
   atomicity
   strong
   isolation
   transactions
   block
   transactional
   failures
   shared
   data
   accesses
   building
   barriers
   overhead


topic 178
   architecture
   business
   project
   enterprise
   management
   architectural
   agile
   domain
   real
   requirements
   core
   research
   lessons
   learned
   manager


topic 179
   techniques
   used
   previously
   applicable
   range
   aim
   discussed
   apply
   applicability
   deriving
   results
   published
   potentially
   degree
   known


topic 180
   values
   value
   statements
   dependence
   slicing
   may
   control
   data
   statement
   dependences
   slice
   slices
   thin
   produce
   used


topic 181
   model
   models
   domain
   specific
   modeling
   driven
   platform
   architecture
   concepts
   mda
   develop
   generators
   metamodel
   automatically
   netbeans


topic 182
   focus
   future
   reusable
   forward
   take
   differences
   better
   led
   addition
   fit
   advantage
   discussion
   backward
   specific
   versus


topic 183
   interface
   user
   interfaces
   environment
   graphical
   interactive
   window
   users
   event
   building
   management
   editor
   toolkit
   used
   smalltalk


topic 184
   computing
   integrated
   implementing
   data
   deal
   next
   pervasive
   involved
   platform
   area
   past
   versioning
   driven
   intended
   increasing


topic 185
   framework
   frameworks
   proposed
   open
   allows
   interaction
   applying
   advantage
   explicitly
   sparse
   explores
   specific
   interactions
   recipes
   complex


topic 186
   design
   designs
   modeling
   designers
   requirements
   designing
   exploration
   much
   collaboration
   designer
   apply
   describing
   specific
   groups
   built


topic 187
   features
   provided
   supporting
   whose
   specified
   ease
   illustrates
   advantage
   understand
   oop
   modify
   extends
   proposes
   rich
   ibm


topic 188
   compile
   imperative
   template
   typical
   templates
   express
   multiple
   idl
   metaprogramming
   far
   separate
   automatic
   lightweight
   optimisations
   slot


topic 189
   processing
   performance
   heterogeneous
   data
   gpu
   input
   cpu
   high
   computation
   matlab
   processors
   applications
   packet
   graphics
   traffic


topic 190
   state
   style
   art
   mutable
   states
   references
   local
   finite
   structuring
   independence
   range
   modified
   wide
   adts
   interaction


topic 191
   computer
   past
   paradigms
   science
   talk
   engineers
   innovation
   industry
   suggest
   writing
   products
   community
   commercial
   usability
   professionals


topic 192
   memory
   model
   models
   relaxed
   concurrent
   performance
   hardware
   shared
   store
   multiprocessors
   sc
   ordering
   concurrency
   processor
   subtle


topic 193
   architecture
   business
   project
   enterprise
   management
   architectural
   agile
   domain
   real
   requirements
   core
   research
   lessons
   learned
   manager


topic 194
   performance
   benchmarks
   jit
   benchmark
   core
   processor
   running
   cores
   multi
   speed
   selection
   gains
   better
   frequently
   results


topic 195
   static
   property
   necessary
   successfully
   impact
   coupling
   equivalent
   makes
   scalability
   calls
   decrease
   inexpensive
   plus
   accurately
   scales


topic 196
   rules
   transformation
   transform
   set
   used
   end
   rule
   whose
   users
   transforms
   transformed
   sequential
   eliminates
   bugassist
   assignment


topic 197
   programming
   languages
   constructs
   language
   natural
   control
   virtual
   beta
   description
   syntax
   used
   completeness
   gives
   aspects
   part


topic 198
   calculus
   equivalence
   probabilistic
   bisimulation
   abstract
   terms
   reduction
   lambda
   example
   relations
   reasoning
   distributions
   logical
   probability
   congruence


topic 199
   formal
   mechanism
   mechanisms
   user
   protection
   talk
   computations
   might
   fortress
   unifying
   security
   syntactic
   correctly
   effectively
   ribbons


