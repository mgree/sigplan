topic 000
   race
   data
   races
   conditions
   detection
   threaded
   replay
   execution
   multi
   thread
   threads
   precise
   detector
   detectors
   potentially


topic 001
   properties
   property
   set
   precisely
   deal
   useful
   schemes
   studied
   guaranteed
   instance
   sufficient
   finite
   allow
   hold
   additional


topic 002
   critical
   effort
   resources
   must
   developers
   fairness
   acceptability
   new
   produce
   acceptable
   data
   criteria
   effectively
   input
   approximate


topic 003
   path
   paths
   program
   slicing
   statements
   value
   slice
   tracing
   execution
   executed
   hot
   size
   statement
   traces
   trace


topic 004
   paradigm
   interaction
   uml
   modeling
   focus
   computing
   components
   entities
   environment
   aspects
   interactions
   architecture
   agent
   platform
   building


topic 005
   large
   scale
   performance
   trace
   used
   copy
   small
   copies
   metrics
   bloat
   runtime
   ruby
   collection
   benchmarks
   results


topic 006
   management
   solutions
   may
   complete
   fluid
   filters
   inconsistency
   practical
   operating
   conditional
   new
   filter
   computer
   integer
   integrate


topic 007
   memory
   shared
   performance
   relaxed
   data
   multiprocessors
   hardware
   sc
   communication
   overhead
   address
   accesses
   space
   architectures
   access


topic 008
   tool
   cases
   rewriting
   boxing
   sites
   also
   results
   used
   actual
   unique
   allocated
   unboxing
   source
   set
   amount


topic 009
   fully
   makes
   end
   certified
   foundation
   guarded
   preservation
   useful
   used
   building
   guarantee
   proven
   front
   example
   trees


topic 010
   problem
   problems
   solution
   solve
   solving
   known
   certain
   solved
   solves
   derived
   undecidable
   determining
   construction
   goal
   computationally


topic 011
   constructs
   include
   main
   control
   ordinary
   construct
   capabilities
   examples
   pi
   assertion
   primitive
   term
   range
   specifying
   among


topic 012
   concurrent
   threads
   concurrency
   thread
   synchronization
   sequential
   abstractions
   shared
   may
   interference
   new
   guarantee
   number
   concurrently
   primitives


topic 013
   processing
   produces
   generated
   automatically
   generate
   stream
   transform
   real
   generating
   used
   generates
   streams
   optimized
   transforms
   signal


topic 014
   atomic
   fine
   blocks
   grained
   locking
   atomicity
   grain
   sections
   performance
   access
   coarse
   building
   contention
   execution
   synchronization


topic 015
   attribute
   grammar
   grammars
   automata
   tree
   parsing
   free
   context
   attributes
   efficient
   syntax
   evaluation
   semantic
   new
   size


topic 016
   tool
   cases
   rewriting
   boxing
   sites
   also
   results
   used
   actual
   unique
   allocated
   unboxing
   source
   set
   amount


topic 017
   simple
   efficient
   known
   efficiency
   efficiently
   quite
   forms
   complex
   loss
   expensive
   promise
   comparable
   useful
   number
   used


topic 018
   branch
   prediction
   scheduling
   branches
   profiling
   instructions
   instruction
   conditional
   control
   load
   prefetching
   execution
   results
   cache
   performance


topic 019
   programming
   concepts
   natural
   new
   used
   naturally
   corba
   surrounding
   displayed
   frustrated
   accustomed
   showcases
   allow
   merits
   special


topic 020
   features
   designed
   mechanisms
   wide
   specified
   expressive
   provided
   power
   necessary
   end
   new
   ease
   set
   used
   computing


topic 021
   general
   formal
   rules
   set
   rule
   practical
   correctly
   informal
   semi
   extend
   step
   although
   explain
   new
   applicability


topic 022
   user
   unification
   prover
   theorem
   interactive
   knowledge
   coq
   users
   construction
   tactics
   equations
   assistants
   used
   semantic
   ml


topic 023
   web
   javascript
   applications
   services
   service
   application
   security
   attacks
   user
   taint
   modern
   new
   runtime
   side
   injection


topic 024
   constraints
   constraint
   logic
   solver
   solvers
   smt
   prolog
   solving
   symbolic
   declarative
   clp
   clause
   sat
   inference
   sets


topic 025
   programs
   written
   results
   relative
   contaminated
   harbors
   call
   explicit
   efficiently
   used
   execute
   contain
   matched
   return
   applying


topic 026
   calculus
   call
   lambda
   control
   al
   et
   name
   operators
   value
   translation
   delimited
   continuations
   calculi
   evaluation
   shift


topic 027
   data
   structures
   lenses
   lists
   linked
   trees
   bidirectional
   new
   view
   recursive
   list
   set
   complex
   general
   transducers


topic 028
   semantics
   operational
   semantic
   denotational
   definition
   mathematical
   definitions
   precise
   proofs
   new
   behaviour
   used
   natural
   rigorous
   primitives


topic 029
   languages
   expressions
   style
   get
   practice
   fortran
   situations
   allow
   degree
   necessity
   behind
   flexible
   lead
   relevant
   breaks


topic 030
   architecture
   software
   project
   process
   agile
   projects
   management
   team
   legacy
   business
   months
   managers
   used
   new
   change


topic 031
   dynamic
   overhead
   runtime
   performance
   execution
   monitoring
   dynamically
   instrumentation
   low
   average
   monitor
   sampling
   production
   profiler
   profile


topic 032
   operations
   operation
   represented
   computation
   expressions
   arithmetic
   set
   complete
   implementations
   real
   performed
   executed
   new
   require
   free


topic 033
   xml
   ad
   hoc
   data
   floating
   point
   format
   precision
   number
   input
   numbers
   formats
   output
   documents
   document


topic 034
   bugs
   errors
   real
   tool
   bug
   detection
   false
   finding
   applications
   detect
   previously
   executions
   automatically
   results
   scalable


topic 035
   object
   oriented
   objects
   role
   business
   methods
   used
   new
   prototype
   message
   views
   user
   concepts
   corba
   natural


topic 036
   loop
   loops
   iteration
   performance
   computation
   iterations
   processors
   codes
   data
   symbolic
   pipelining
   optimization
   computations
   execution
   compiler


topic 037
   proof
   verification
   proofs
   reasoning
   logic
   correctness
   coq
   verified
   assistant
   verifying
   verify
   hoare
   carrying
   soundness
   separation


topic 038
   composition
   protocol
   protocols
   events
   quantum
   cml
   may
   fault
   faults
   linearizability
   classical
   message
   transient
   algebra
   bisimulation


topic 039
   subtyping
   complete
   show
   types
   sound
   expression
   expressions
   recursive
   calculus
   practical
   proof
   regular
   set
   axiomatization
   coercion


topic 040
   optimization
   data
   reduce
   references
   performance
   execution
   sets
   results
   instructions
   simd
   applications
   set
   improvements
   access
   speed


topic 041
   ml
   modules
   module
   recursive
   type
   components
   separate
   style
   may
   mixin
   interfaces
   functors
   core
   interface
   definitions


topic 042
   nested
   supported
   data
   induction
   syntactic
   gadts
   initial
   strength
   may
   presentation
   indexing
   seen
   algebraic
   algebra
   equality


topic 043
   programmers
   programmer
   write
   must
   place
   add
   practical
   optimizer
   performance
   intended
   expressions
   create
   specify
   assumptions
   understand


topic 044
   non
   may
   part
   trivial
   used
   determinism
   results
   property
   applicable
   sequence
   action
   possibly
   purposes
   allows
   necessary


topic 045
   information
   security
   policies
   flow
   policy
   control
   data
   access
   multiple
   secure
   noninterference
   checks
   enforcement
   interference
   fine


topic 046
   also
   proposed
   definition
   workflow
   viewpoint
   new
   express
   examples
   stated
   viewpoints
   active
   integration
   involved
   gives
   conceptual


topic 047
   parallel
   deterministic
   tasks
   parallelism
   sequential
   processors
   data
   partitioning
   execution
   performance
   scheduling
   available
   range
   decomposition
   implementations


topic 048
   source
   level
   debugging
   program
   optimized
   must
   user
   debugger
   may
   new
   tool
   variable
   effects
   back
   debug


topic 049
   application
   applications
   server
   technology
   servers
   client
   bull
   tier
   multi
   performance
   experiences
   managing
   oo
   deployment
   users


topic 050
   run
   may
   must
   facilities
   facility
   methods
   fast
   breakpoints
   modula
   environment
   correctness
   exceptions
   scope
   life
   breakpoint


topic 051
   uses
   previous
   much
   new
   results
   experimental
   used
   practice
   contrast
   separate
   theoretical
   wide
   efficiently
   proposals
   little


topic 052
   target
   translation
   every
   back
   introduced
   may
   compilation
   contains
   translate
   practical
   preserves
   translated
   relies
   equivalent
   identify


topic 053
   representation
   syntax
   abstract
   names
   recursion
   name
   representations
   new
   structural
   datatypes
   macro
   binding
   definitions
   binders
   macros


topic 054
   method
   methods
   dispatch
   multiple
   oriented
   oo
   predicate
   dispatching
   practical
   general
   inheritance
   supporting
   calls
   lookup
   table


topic 055
   functional
   imperative
   purely
   pattern
   pearl
   lazy
   equational
   style
   reasoning
   talk
   small
   construction
   written
   pearls
   monadic


topic 056
   flow
   control
   data
   graph
   graphs
   global
   symbolic
   statements
   nodes
   construction
   example
   iterative
   goto
   call
   program


topic 057
   mechanisms
   platform
   jit
   runtime
   user
   platforms
   software
   core
   architectures
   designed
   threading
   security
   architecture
   new
   identify


topic 058
   patterns
   pattern
   matching
   regular
   string
   tree
   real
   pmrs
   discovery
   complex
   allows
   consists
   recognition
   concerning
   outline


topic 059
   program
   correctness
   section
   abstract
   programs
   approximate
   set
   partial
   data
   assertions
   least
   method
   lattice
   complete
   predicate


topic 060
   annotations
   object
   ownership
   encapsulation
   hierarchical
   annotated
   objects
   type
   immutability
   runtime
   refactoring
   aliasing
   cyclic
   errors
   references


topic 061
   library
   libraries
   parts
   capture
   api
   implementations
   may
   control
   primitives
   computation
   combinator
   behaviour
   client
   visitor
   complex


topic 062
   linear
   bounds
   complexity
   bound
   reachability
   quantitative
   space
   numerical
   input
   exponential
   finite
   interpretation
   polynomial
   upper
   invariants


topic 063
   type
   inference
   types
   polymorphic
   ml
   polymorphism
   typing
   principal
   milner
   var
   variable
   rank
   typed
   mlf
   intersection


topic 064
   prove
   correctness
   correct
   proving
   respect
   proved
   proof
   equivalent
   theorem
   establish
   makes
   used
   develop
   part
   soundness


topic 065
   size
   rewrite
   class
   compression
   evaluation
   storage
   apl
   expression
   plan
   assignment
   sequence
   average
   address
   variables
   addressing


topic 066
   partial
   elimination
   program
   propagation
   constant
   redundancy
   global
   optimization
   dead
   motion
   value
   optimizations
   redundant
   new
   expressions


topic 067
   approach
   proposed
   perl
   prototype
   vs
   adding
   moreover
   available
   flexible
   structural
   multi
   known
   started
   talk
   parrot


topic 068
   technical
   dsls
   community
   dsl
   software
   really
   focus
   panelists
   researchers
   may
   talk
   silver
   right
   industry
   world


topic 069
   specification
   specifications
   tool
   verification
   specifying
   specify
   play
   traces
   mining
   precise
   sequence
   correct
   automatically
   executable
   complex


topic 070
   input
   inputs
   output
   optimizations
   optimized
   runs
   performance
   trace
   optimization
   adaptive
   automatically
   production
   outputs
   profiling
   optimize


topic 071
   properties
   property
   set
   precisely
   deal
   useful
   schemes
   studied
   guaranteed
   instance
   sufficient
   finite
   allow
   hold
   additional


topic 072
   changes
   compilation
   change
   versions
   file
   execution
   executed
   reduce
   separate
   selection
   recompilation
   reducing
   changed
   linking
   history


topic 073
   algorithm
   points
   point
   fixed
   join
   advice
   new
   set
   variable
   compute
   selected
   takes
   assignments
   always
   valid


topic 074
   two
   validation
   pass
   view
   provided
   discusses
   parameterized
   equivalence
   detect
   check
   logical
   validator
   validators
   infrastructure
   formally


topic 075
   environments
   binding
   lisp
   variable
   timing
   extensible
   scoping
   control
   definition
   matlab
   practical
   quasi
   lexical
   relations
   new


topic 076
   knowledge
   developers
   objective
   facilitate
   attention
   evolution
   artifacts
   problems
   tool
   project
   intelligent
   paradigms
   innovation
   adaptive
   addressing


topic 077
   technique
   example
   examples
   text
   small
   reduce
   symbolic
   applicable
   editing
   automatic
   editor
   concrete
   idea
   number
   results


topic 078
   context
   sensitive
   calling
   points
   contexts
   insensitive
   call
   sensitivity
   privacy
   alias
   analyses
   point
   cfa
   precision
   graph


topic 079
   program
   dependence
   data
   representation
   dependencies
   graph
   dependences
   statements
   graphs
   execution
   slicing
   slices
   rewriting
   conservative
   used


topic 080
   students
   teaching
   computer
   course
   science
   learning
   student
   courses
   api
   concepts
   introductory
   curriculum
   novice
   cs
   examples


topic 081
   inheritance
   field
   fields
   record
   multiple
   object
   layout
   records
   objects
   subtyping
   extension
   used
   methods
   encoding
   space


topic 082
   requirements
   respect
   security
   issues
   set
   address
   attempt
   apply
   public
   evolving
   building
   concepts
   creating
   data
   corresponding


topic 083
   allocation
   register
   allocator
   registers
   scheduling
   size
   global
   free
   windows
   schemes
   loops
   pipelining
   allocators
   optimal
   number


topic 084
   software
   aspect
   aspects
   product
   oriented
   concerns
   separation
   aop
   engineering
   crosscutting
   qos
   aspectj
   line
   modularity
   middleware


topic 085
   refactoring
   workshop
   eclipse
   oopsla
   oriented
   plug
   ide
   examples
   process
   ides
   event
   workshops
   killer
   ins
   refactorings


topic 086
   attribute
   grammar
   grammars
   automata
   tree
   parsing
   free
   context
   attributes
   efficient
   syntax
   evaluation
   semantic
   new
   size


topic 087
   region
   regions
   memory
   objects
   delegation
   management
   assembly
   applications
   io
   control
   deadlocks
   runtime
   annotations
   data
   allocated


topic 088
   abstract
   interpretation
   operator
   interpreters
   domains
   lattice
   general
   concrete
   used
   precision
   combined
   lattices
   product
   interpretations
   expressions


topic 089
   language
   natural
   expressiveness
   written
   develop
   used
   allows
   core
   new
   relatively
   definition
   formalize
   host
   extension
   analyze


topic 090
   type
   typed
   types
   statically
   typing
   safety
   dynamically
   soundness
   safe
   explicit
   explicitly
   new
   checks
   preserving
   intermediate


topic 091
   types
   data
   type
   may
   sets
   objects
   theory
   must
   functions
   definition
   domain
   treatment
   specifications
   object
   discipline


topic 092
   abstraction
   abstractions
   data
   predicate
   verification
   refinement
   predicates
   automatically
   heap
   allows
   interleavings
   guided
   reasoning
   symbolic
   inference


topic 093
   level
   operating
   software
   process
   engineering
   requirements
   real
   layer
   architectural
   subsystem
   may
   semantic
   subsystems
   response
   integration


topic 094
   functional
   imperative
   purely
   pattern
   pearl
   lazy
   equational
   style
   reasoning
   talk
   small
   construction
   written
   pearls
   monadic


topic 095
   complexity
   incremental
   demand
   equations
   efficient
   strictness
   may
   driven
   lazy
   algorithms
   solution
   exhaustive
   evaluation
   call
   solutions


topic 096
   object
   oriented
   objects
   role
   business
   methods
   used
   new
   prototype
   message
   views
   user
   concepts
   corba
   natural


topic 097
   distributed
   variables
   bytecode
   distribution
   local
   multiparty
   variable
   shared
   configuration
   demonstration
   initialization
   data
   performers
   osgi
   much


topic 098
   termination
   properties
   invariants
   assertions
   procedure
   analyses
   safety
   verification
   invariant
   variance
   inductive
   shape
   liveness
   precise
   summaries


topic 099
   reactive
   frp
   agda
   acquisition
   functional
   behaviors
   environmental
   hass
   book
   discrete
   raising
   assurance
   end
   bounded
   encourages


topic 100
   process
   processes
   transition
   networks
   communicating
   synchronous
   deterministic
   kahn
   asynchronous
   events
   semantic
   sequential
   principle
   steps
   preserves


topic 101
   transactional
   lock
   memory
   transactions
   read
   write
   locks
   strong
   synchronization
   conflict
   isolation
   data
   shared
   synchronous
   atomicity


topic 102
   result
   computation
   self
   adjusting
   data
   small
   previous
   step
   automatically
   number
   computations
   style
   efficiently
   practice
   point


topic 103
   optimal
   storage
   table
   block
   scheduling
   mapping
   mappings
   schedule
   vertex
   tables
   used
   replication
   generation
   dominators
   data


topic 104
   model
   models
   driven
   modeling
   store
   underlying
   artifacts
   address
   execution
   allowed
   step
   proposed
   intensive
   namely
   consistent


topic 105
   theory
   equivalence
   relations
   abstract
   relation
   logical
   proof
   parametricity
   relational
   decidable
   reasoning
   terms
   type
   syntactic
   bisimulation


topic 106
   analysis
   analyses
   interprocedural
   set
   results
   precise
   dataflow
   analyze
   global
   new
   precision
   used
   reachability
   practice
   accuracy


topic 107
   haskell
   functional
   advantages
   graphical
   advantage
   take
   combinators
   open
   editing
   lazy
   toolkit
   ghc
   simplicity
   implementations
   encapsulation


topic 108
   level
   high
   low
   meta
   reflection
   allow
   reflective
   facilities
   metaprogramming
   written
   primitives
   adaptive
   express
   levels
   defining


topic 109
   synthesis
   program
   specification
   fragments
   specifications
   automatically
   easier
   synthesize
   input
   implementations
   sketch
   gap
   candidate
   partial
   output


topic 110
   modular
   extensions
   extensible
   new
   extension
   syntax
   extend
   modularity
   host
   composition
   extensibility
   enables
   open
   writing
   additional


topic 111
   static
   sound
   precise
   hybrid
   symbolic
   necessary
   successfully
   precision
   checks
   bound
   add
   improved
   impact
   results
   coupling


topic 112
   structure
   data
   whose
   underlying
   new
   gives
   constructed
   tree
   along
   available
   life
   compare
   limited
   selection
   intended


topic 113
   type
   inference
   types
   polymorphic
   ml
   polymorphism
   typing
   principal
   milner
   var
   variable
   rank
   typed
   mlf
   intersection


topic 114
   logic
   temporal
   separation
   properties
   logics
   reasoning
   linear
   formulas
   verification
   decision
   branching
   hoare
   completeness
   formula
   complete


topic 115
   algorithms
   probabilistic
   algorithmic
   data
   new
   choices
   probability
   distributions
   implementations
   power
   efficiently
   performance
   known
   correctness
   aggregate


topic 116
   terms
   reduction
   calculus
   strategy
   lgr
   lambda
   term
   optimal
   computation
   number
   implementations
   extension
   minimal
   dynamics
   rewriting


topic 117
   program
   execution
   reach
   hangup
   frequencies
   hangups
   conditon
   premature
   chart
   set
   identify
   grows
   takes
   number
   performed


topic 118
   software
   engineering
   practices
   agile
   engineers
   practice
   community
   methods
   enterprise
   world
   technology
   projects
   initial
   organizations
   xp


topic 119
   communication
   network
   networks
   energy
   mobile
   channels
   power
   devices
   data
   remote
   consumption
   sensor
   performance
   hardware
   new


topic 120
   state
   art
   resource
   states
   description
   execution
   applications
   reduced
   space
   allows
   units
   unit
   number
   generative
   physical


topic 121
   implementation
   implementations
   implementing
   prototype
   simplifies
   independently
   convenient
   consists
   incorporates
   conjunction
   reports
   caml
   entirely
   efforts
   outperforms


topic 122
   components
   component
   software
   multiple
   user
   interface
   java
   state
   object
   data
   interfaces
   persistence
   environment
   api
   process


topic 123
   parser
   parsing
   lr
   parsers
   grammars
   left
   reductions
   productions
   grammar
   context
   free
   ll
   default
   algorithm
   construction


topic 124
   structural
   hardware
   designs
   kernel
   prone
   manual
   incorporate
   manually
   scheduler
   complex
   processor
   scheduling
   idl
   high
   audio


topic 125
   functions
   function
   recursive
   calls
   list
   lists
   automatically
   trees
   tree
   divide
   conquer
   results
   examples
   dataflow
   theorem


topic 126
   types
   type
   dependent
   inference
   refinement
   qualifiers
   ocaml
   check
   allows
   liquid
   automatically
   polymorphic
   invariants
   plug
   recursive


topic 127
   program
   execution
   reach
   hangup
   frequencies
   hangups
   conditon
   premature
   chart
   set
   identify
   grows
   takes
   number
   performed


topic 128
   pointer
   pointers
   algorithm
   program
   locations
   alias
   structures
   algorithms
   heap
   precision
   data
   list
   points
   aliases
   aliasing


topic 129
   search
   produce
   iterative
   goal
   phase
   space
   embedded
   aim
   results
   phases
   number
   automatically
   learning
   best
   size


topic 130
   checking
   values
   value
   checked
   check
   statically
   rich
   variable
   part
   allow
   core
   quantified
   provided
   expression
   safely


topic 131
   safety
   safe
   type
   checker
   unsafe
   mobile
   verification
   property
   runtime
   verify
   access
   errors
   certifying
   device
   security


topic 132
   software
   visualization
   visual
   interactive
   tool
   real
   graphics
   visualizations
   data
   exploration
   developers
   debugger
   netbeans
   increasing
   used


topic 133
   continuation
   continuations
   cps
   passing
   style
   transformation
   step
   control
   closure
   power
   green
   conversion
   results
   tail
   call


topic 134
   graph
   register
   algorithm
   live
   coloring
   ssa
   allocation
   range
   splitting
   variables
   coalescing
   spill
   assignment
   node
   ranges


topic 135
   effect
   effects
   side
   equational
   power
   theory
   computational
   pure
   call
   reasoning
   expression
   optimisations
   algebraic
   soundness
   extension


topic 136
   transformations
   transformation
   program
   source
   integer
   used
   applications
   optimization
   bit
   link
   reduction
   performance
   representation
   reordering
   optimizers


topic 137
   framework
   frameworks
   new
   product
   open
   unified
   refactorings
   introduces
   coordination
   proposed
   family
   configuration
   collaborative
   abstractions
   enabling


topic 138
   mechanism
   generic
   type
   classes
   parameters
   generics
   implicit
   definitions
   instantiation
   scala
   site
   parameterized
   new
   families
   useful


topic 139
   techniques
   new
   combines
   used
   popular
   proposed
   applicable
   set
   potentially
   applying
   four
   enable
   discussed
   example
   applicability


topic 140
   parallelism
   parallelization
   speculative
   data
   parallel
   performance
   execution
   speculation
   sequential
   loops
   applications
   automatic
   runtime
   speedup
   parallelized


topic 141
   scheme
   erlang
   subtype
   type
   hierarchy
   plt
   untyped
   complete
   occurrence
   new
   racket
   used
   part
   wildcards
   embedded


topic 142
   class
   classes
   object
   oriented
   inheritance
   objects
   methods
   hierarchy
   beta
   instance
   used
   compatibility
   hierarchies
   instances
   diagram


topic 143
   asynchronous
   game
   games
   infinite
   finite
   affine
   circuits
   algol
   hardware
   circuit
   geometry
   control
   state
   interaction
   concurrency


topic 144
   system
   extension
   allows
   extends
   used
   illustrate
   commands
   running
   examples
   encountered
   efficacy
   built
   approximately
   consists
   writing


topic 145
   query
   queries
   database
   relational
   data
   databases
   translation
   performance
   persistent
   sql
   semantic
   linq
   querying
   whose
   results


topic 146
   modern
   direct
   generally
   small
   scripting
   creating
   lightweight
   performance
   used
   solution
   users
   clear
   intermediate
   ranging
   example


topic 147
   research
   future
   new
   computer
   impact
   areas
   talk
   science
   writing
   human
   quality
   products
   developers
   developer
   issues


topic 148
   order
   higher
   functions
   contracts
   contract
   strict
   open
   polymorphic
   recursion
   setting
   derivatives
   simply
   predicates
   determining
   extends


topic 149
   design
   practical
   past
   issues
   designers
   designing
   collaboration
   requires
   combination
   designer
   examples
   em
   five
   theoretical
   careful


topic 150
   machine
   instruction
   machines
   instructions
   set
   architecture
   lambda
   intermediate
   generator
   fast
   virtual
   retargetable
   sparc
   sigma
   assembly


topic 151
   updates
   update
   updating
   updated
   performance
   safe
   automatically
   patches
   tt
   vm
   features
   used
   bugs
   running
   type


topic 152
   reference
   access
   unique
   references
   counting
   state
   object
   permissions
   streams
   may
   storage
   permission
   parameters
   tracing
   count


topic 153
   cost
   sharing
   sequential
   data
   distance
   performance
   false
   objects
   early
   sharc
   group
   allows
   sheriff
   reply
   reduced


topic 154
   garbage
   collection
   collector
   objects
   heap
   space
   memory
   collectors
   copying
   generational
   performance
   gc
   object
   overhead
   allocation


topic 155
   systems
   today
   complex
   develop
   goal
   number
   increasingly
   allow
   serve
   dependency
   consequences
   choice
   evolve
   toward
   sufficient


topic 156
   error
   handling
   errors
   recovery
   messages
   cause
   prone
   programmers
   user
   templates
   debugging
   detection
   trace
   formula
   set


topic 157
   code
   generation
   generated
   generating
   available
   generate
   quality
   generates
   used
   executable
   implements
   improve
   generator
   tcc
   generators


topic 158
   object
   oriented
   tutorial
   abstract
   user
   clos
   objects
   concepts
   university
   interfaces
   environment
   window
   issues
   inheritance
   graphical


topic 159
   time
   compile
   space
   allows
   automatic
   running
   line
   bound
   expressions
   number
   known
   atr
   polynomial
   implicit
   restricted


topic 160
   java
   virtual
   machine
   performance
   heap
   vm
   jvm
   benchmark
   machines
   core
   used
   jalapeño
   allows
   string
   benchmarks


topic 161
   compiler
   optimizations
   compilers
   compilation
   optimizing
   intermediate
   performance
   compiled
   compiling
   preserving
   generate
   used
   production
   performed
   assembly


topic 162
   smalltalk
   procedure
   procedures
   abstract
   classes
   call
   calls
   declarations
   variables
   environment
   objects
   effects
   computation
   conventions
   arguments


topic 163
   evaluation
   partial
   specialization
   interpreter
   online
   lazy
   stages
   evaluated
   results
   offline
   evaluator
   staging
   narrowing
   staged
   total


topic 164
   development
   integrated
   environment
   frameworks
   quality
   driven
   developers
   project
   industrial
   developer
   integration
   early
   applying
   projects
   technologies


topic 165
   stack
   object
   objects
   inlining
   information
   inter
   call
   overhead
   escape
   procedural
   allocation
   sites
   performance
   heap
   inline


topic 166
   implemented
   real
   world
   prototype
   top
   practice
   stage
   fragment
   create
   extremely
   containing
   comparison
   line
   detect
   sufficiently


topic 167
   show
   tools
   enables
   useful
   building
   available
   requires
   aid
   complex
   conservatively
   slowly
   demonstration
   edit
   numerous
   used


topic 168
   performance
   cache
   locality
   data
   memory
   cores
   improve
   applications
   processor
   misses
   hardware
   execution
   high
   layout
   core


topic 169
   polymorphism
   parametric
   relation
   compositional
   properties
   instances
   multiple
   correspondence
   parameters
   closed
   subtype
   categories
   universal
   subtyping
   net


topic 170
   computational
   computations
   monad
   monads
   monadic
   effects
   haskell
   fusion
   general
   interpreter
   used
   arrows
   law
   examples
   new


topic 171
   interface
   exception
   lines
   exceptions
   native
   must
   environment
   jvm
   execution
   java
   lifetime
   transitions
   building
   programmable
   ffi


topic 172
   domain
   specific
   modeling
   driven
   models
   concepts
   mda
   generators
   self
   evolution
   enterprise
   platform
   generation
   metamodel
   dsm


topic 173
   test
   testing
   tests
   tool
   generation
   coverage
   automated
   suite
   tested
   cases
   new
   random
   scp
   dsl
   regression


topic 174
   array
   arrays
   loop
   data
   checks
   optimizations
   range
   bounds
   elements
   fusion
   variables
   cells
   fold
   accesses
   bound


