topic 000
   testing
   test
   race
   data
   races
   detection
   programs
   program
   java
   tests
   technique
   analysis
   execution
   dynamic
   bugs


topic 001
   model
   domain
   framework
   specific
   driven
   software
   modeling
   development
   language
   models
   level
   frameworks
   checking
   systems
   code


topic 002
   systems
   software
   system
   aspect
   oriented
   development
   aspects
   programming
   concerns
   operating
   components
   design
   framework
   engineering
   object


topic 003
   path
   paths
   program
   trace
   slicing
   programs
   traces
   branches
   execution
   control
   statements
   conditional
   queries
   code
   along


topic 004
   object
   oriented
   programming
   students
   tutorial
   design
   teaching
   software
   computer
   course
   development
   systems
   science
   approach
   concepts


topic 005
   java
   virtual
   performance
   machine
   bytecode
   application
   applications
   vm
   jvm
   code
   copy
   used
   large
   object
   runtime


topic 006
   problem
   solution
   solutions
   complexity
   channels
   solve
   solving
   systems
   communication
   channel
   power
   show
   also
   chip
   set


topic 007
   memory
   shared
   model
   performance
   data
   transactional
   models
   relaxed
   parallel
   write
   read
   lock
   programs
   concurrent
   isolation


topic 008
   time
   run
   compile
   space
   code
   programs
   compiler
   dynamic
   performance
   cost
   allocation
   dynamically
   languages
   objects
   checks


topic 009
   garbage
   collection
   collector
   memory
   heap
   objects
   time
   collectors
   space
   generational
   copying
   allocation
   performance
   region
   reference


topic 010
   classes
   class
   object
   inheritance
   oriented
   smalltalk
   languages
   programming
   multiple
   virtual
   mechanism
   language
   hierarchy
   objects
   used


topic 011
   language
   programming
   languages
   constructs
   features
   control
   level
   distributed
   new
   typed
   systems
   natural
   core
   programs
   examples


topic 012
   concurrent
   concurrency
   threads
   abstractions
   thread
   synchronization
   programs
   sequential
   program
   asynchronous
   state
   approach
   specification
   abstraction
   verification


topic 013
   compiler
   networks
   network
   language
   programming
   processing
   programs
   devices
   performance
   level
   new
   model
   code
   high
   sensor


topic 014
   atomic
   updates
   fine
   grained
   locking
   blocks
   dynamic
   lock
   programs
   software
   synchronization
   atomicity
   sections
   performance
   grain


topic 015
   grammars
   grammar
   attribute
   parsing
   parser
   context
   free
   tree
   automata
   lr
   syntax
   parsers
   algorithm
   languages
   language


topic 016
   time
   run
   compile
   space
   code
   programs
   compiler
   dynamic
   performance
   cost
   allocation
   dynamically
   languages
   objects
   checks


topic 017
   implementation
   design
   efficient
   implementations
   mechanism
   system
   techniques
   evaluation
   language
   ml
   performance
   implementing
   interpreter
   library
   results


topic 018
   cache
   data
   memory
   performance
   program
   locality
   programs
   prediction
   techniques
   layout
   branch
   profiling
   reference
   profile
   time


topic 019
   meta
   programming
   parametric
   session
   poster
   language
   reflection
   polymorphism
   reflective
   object
   research
   generic
   new
   templates
   code


topic 020
   design
   programming
   power
   concepts
   process
   software
   control
   energy
   designers
   programmers
   language
   program
   designing
   time
   dvs


topic 021
   order
   higher
   partial
   functions
   lisp
   programs
   evaluation
   class
   call
   binding
   function
   new
   closure
   schemes
   equational


topic 022
   haskell
   type
   generic
   programming
   functional
   functions
   types
   classes
   language
   recursive
   function
   agda
   system
   typed
   theory


topic 023
   web
   applications
   javascript
   services
   application
   development
   code
   service
   platform
   enterprise
   framework
   programming
   runtime
   large
   system


topic 024
   constraints
   constraint
   logic
   function
   programs
   programming
   functions
   problem
   recursive
   prolog
   solving
   partial
   values
   solvers
   program


topic 025
   context
   procedure
   analysis
   call
   sensitive
   programs
   procedures
   pointer
   algorithm
   calls
   interprocedural
   flow
   pointers
   calling
   results


topic 026
   calculus
   lambda
   call
   control
   continuations
   terms
   continuation
   reduction
   cps
   lgr
   evaluation
   passing
   name
   abstract
   machine


topic 027
   data
   structures
   structure
   algorithms
   trees
   lists
   operations
   tree
   lenses
   new
   programs
   pointer
   list
   regular
   show


topic 028
   semantics
   language
   operational
   semantic
   formal
   programming
   specification
   denotational
   languages
   abstract
   programs
   prove
   definition
   specifications
   definitions


topic 029
   effects
   effect
   side
   monadic
   monad
   monads
   language
   computational
   expressions
   state
   system
   expression
   programming
   show
   haskell


topic 030
   software
   development
   project
   agile
   product
   architecture
   system
   team
   practices
   projects
   engineering
   design
   large
   systems
   process


topic 031
   overhead
   dynamic
   runtime
   monitoring
   program
   performance
   information
   instrumentation
   analysis
   checks
   overheads
   techniques
   execution
   programs
   show


topic 032
   operations
   operation
   computation
   data
   model
   arithmetic
   values
   functions
   expressions
   schemes
   two
   probabilistic
   value
   backtracking
   also


topic 033
   data
   query
   xml
   ad
   hoc
   queries
   tools
   system
   program
   database
   language
   text
   document
   structure
   processing


topic 034
   errors
   error
   bugs
   programs
   program
   sharing
   false
   tool
   software
   analysis
   bug
   code
   memory
   cause
   user


topic 035
   object
   objects
   oriented
   distributed
   system
   model
   systems
   smalltalk
   language
   dynamic
   environment
   framework
   user
   new
   business


topic 036
   loop
   array
   loops
   data
   performance
   compiler
   algorithm
   programs
   transformations
   software
   memory
   framework
   parallel
   optimization
   arrays


topic 037
   logic
   proof
   verification
   reasoning
   proofs
   programs
   separation
   system
   coq
   program
   correctness
   properties
   verified
   theorem
   code


topic 038
   composition
   protocols
   protocol
   systems
   property
   quantum
   system
   classical
   probabilistic
   properties
   quantitative
   may
   process
   correctness
   allows


topic 039
   subtyping
   types
   problem
   show
   type
   complete
   complexity
   system
   decidable
   subtype
   proof
   finite
   rules
   algorithm
   sound


topic 040
   compiler
   optimization
   performance
   data
   code
   optimizing
   compilation
   optimizations
   techniques
   memory
   algorithm
   time
   scheme
   compilers
   instructions


topic 041
   modules
   module
   interface
   interfaces
   system
   ml
   type
   recursive
   components
   modular
   languages
   language
   mixin
   user
   programming


topic 042
   types
   type
   data
   dependent
   polymorphic
   theory
   parametricity
   system
   algebraic
   relational
   polymorphism
   reynolds
   calculus
   terms
   recursive


topic 043
   programmer
   programs
   program
   code
   programmers
   write
   language
   handling
   exception
   parts
   compiler
   exceptions
   assumptions
   must
   makes


topic 044
   non
   deterministic
   new
   trivial
   join
   advice
   oriented
   points
   may
   aspect
   language
   models
   program
   system
   determinism


topic 045
   security
   information
   policies
   flow
   system
   policy
   secure
   programs
   model
   privacy
   type
   access
   program
   control
   hardware


topic 046
   models
   processes
   process
   model
   development
   distributed
   communication
   communicating
   two
   tool
   system
   modeling
   tools
   design
   fairness


topic 047
   parallel
   parallelism
   programs
   sequential
   parallelization
   execution
   performance
   program
   data
   speculative
   compiler
   system
   programming
   processors
   cores


topic 048
   debugging
   code
   program
   source
   debugger
   dsl
   optimized
   compiler
   user
   system
   level
   environment
   programs
   execution
   breakpoints


topic 049
   application
   system
   applications
   user
   object
   server
   interface
   environment
   management
   development
   design
   servers
   configuration
   oriented
   users


topic 050
   component
   api
   java
   apis
   approach
   code
   components
   persistence
   object
   software
   client
   interface
   method
   methods
   persistent


topic 051
   problems
   techniques
   code
   systems
   library
   new
   class
   used
   complex
   practical
   large
   tool
   simple
   capture
   example


topic 052
   transformations
   transformation
   source
   compiler
   translation
   language
   program
   preserving
   intermediate
   target
   compilers
   correctness
   compilation
   code
   framework


topic 053
   representation
   names
   abstract
   syntax
   language
   representations
   abstraction
   languages
   new
   programming
   name
   data
   macro
   operations
   binders


topic 054
   language
   languages
   dispatch
   contracts
   java
   extensions
   libraries
   object
   fields
   predicate
   oriented
   multiple
   programming
   oo
   code


topic 055
   functional
   programming
   languages
   lazy
   haskell
   purely
   functions
   language
   imperative
   reactive
   systems
   used
   time
   programs
   function


topic 056
   flow
   control
   data
   analysis
   program
   graph
   graphs
   information
   programs
   global
   time
   set
   algorithm
   statements
   problems


topic 057
   code
   language
   safety
   safe
   machine
   compiler
   native
   system
   mechanisms
   memory
   resource
   hardware
   compilation
   runtime
   jit


topic 058
   patterns
   pattern
   workshop
   design
   software
   knowledge
   oopsla
   architecture
   examples
   matching
   engineering
   oriented
   developers
   problems
   systems


topic 059
   program
   programs
   temporal
   assertions
   logic
   section
   time
   correctness
   properties
   two
   results
   branching
   approximate
   system
   linear


topic 060
   object
   system
   code
   type
   annotations
   java
   ownership
   programmers
   static
   objects
   language
   qualifiers
   compile
   programs
   checking


topic 061
   method
   methods
   induction
   reductions
   elimination
   partial
   new
   techniques
   productions
   algorithm
   default
   parsers
   parser
   inductive
   lr


topic 062
   abstract
   program
   linear
   invariants
   programs
   interpretation
   functions
   properties
   bounds
   automatically
   symbolic
   checking
   abstraction
   predicates
   verification


topic 063
   type
   types
   system
   inference
   typed
   ml
   polymorphic
   algorithm
   polymorphism
   language
   typing
   checking
   safety
   languages
   systems


topic 064
   level
   high
   low
   self
   language
   languages
   programs
   assembly
   adjusting
   computation
   data
   relations
   primitives
   model
   compiler


topic 065
   code
   register
   allocation
   machine
   instruction
   registers
   size
   generation
   optimal
   time
   instructions
   compiler
   apl
   global
   technique


topic 066
   analysis
   static
   analyses
   framework
   program
   programs
   results
   precise
   information
   precision
   two
   set
   show
   analyze
   used


topic 067
   approach
   incremental
   stage
   runtime
   data
   specialization
   sequential
   computation
   proposed
   evaluation
   changes
   cost
   new
   exploit
   idea


topic 068
   talk
   software
   community
   computer
   program
   development
   search
   life
   new
   developer
   also
   innovation
   programming
   book
   research


topic 069
   specification
   tool
   refactoring
   specifications
   eclipse
   tools
   synthesis
   code
   software
   development
   refactorings
   diagrams
   java
   plug
   source


topic 070
   dynamic
   program
   input
   execution
   static
   dependence
   output
   optimizations
   inputs
   statements
   dependences
   run
   programs
   value
   code


topic 071
   model
   domain
   framework
   specific
   driven
   software
   modeling
   development
   language
   models
   level
   frameworks
   checking
   systems
   code


topic 072
   change
   compilation
   code
   inlining
   program
   changes
   java
   file
   may
   files
   information
   must
   class
   propagation
   cost


topic 073
   algorithm
   graph
   algorithms
   variables
   time
   program
   points
   point
   variable
   problem
   range
   graphs
   live
   new
   register


topic 074
   scheduling
   validation
   two
   compiler
   optimizations
   time
   scheduler
   program
   programs
   optimization
   technique
   translation
   parameterized
   code
   production


