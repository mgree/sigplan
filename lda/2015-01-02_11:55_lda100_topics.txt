topic 000
   testing
   test
   race
   data
   races
   detection
   programs
   analysis
   dynamic
   bugs
   technique
   execution
   java
   replay
   tool


topic 001
   framework
   model
   frameworks
   software
   driven
   checking
   development
   proposed
   lines
   modeling
   specific
   properties
   automatically
   introduced
   unified


topic 002
   systems
   system
   operating
   software
   code
   critical
   developers
   environment
   development
   effort
   multiple
   must
   programming
   new
   embedded


topic 003
   path
   paths
   program
   trace
   slicing
   approach
   traces
   statements
   algorithm
   programs
   control
   compilation
   tracing
   along
   queries


topic 004
   object
   oriented
   objects
   programming
   design
   tutorial
   smalltalk
   systems
   abstract
   model
   system
   database
   environment
   concepts
   software


topic 005
   java
   performance
   virtual
   machine
   applications
   application
   vm
   copy
   jvm
   runtime
   benchmarks
   large
   benchmark
   machines
   used


topic 006
   communication
   channels
   systems
   management
   energy
   remote
   analysis
   problem
   chip
   data
   networks
   consistency
   channel
   hardware
   decisions


topic 007
   memory
   model
   transactional
   shared
   performance
   programs
   relaxed
   models
   concurrent
   transactions
   data
   strong
   isolation
   write
   multi


topic 008
   time
   run
   code
   compile
   space
   information
   tool
   generation
   link
   cost
   also
   checks
   cases
   allows
   allocation


topic 009
   garbage
   collection
   collector
   heap
   objects
   memory
   time
   collectors
   generational
   space
   performance
   object
   allocation
   copying
   gc


topic 010
   languages
   programming
   systems
   general
   style
   problems
   problem
   typed
   features
   advantages
   techniques
   syntax
   makes
   much
   advantage


topic 011
   constructs
   core
   programming
   level
   calculus
   systems
   control
   typed
   extension
   primitives
   main
   communication
   construct
   pi
   fail


topic 012
   concurrent
   threads
   concurrency
   thread
   synchronization
   sequential
   abstractions
   programs
   primitives
   interference
   shared
   concurrently
   number
   control
   communication


topic 013
   compiler
   code
   optimizations
   compilers
   compilation
   programs
   performance
   optimizing
   optimization
   level
   techniques
   network
   new
   compiled
   generated


topic 014
   atomic
   fine
   updates
   lock
   grained
   locking
   synchronization
   data
   locks
   performance
   concurrent
   atomicity
   transactional
   update
   sections


topic 015
   grammars
   grammar
   attribute
   parsing
   free
   context
   automata
   tree
   syntax
   attributes
   parser
   parsers
   ll
   lr
   incremental


topic 016
   time
   run
   code
   compile
   space
   information
   tool
   generation
   link
   cost
   also
   checks
   cases
   allows
   allocation


topic 017
   implementation
   design
   implementations
   efficient
   evaluation
   performance
   issues
   system
   techniques
   implementing
   practical
   also
   results
   space
   mechanism


topic 018
   cache
   data
   performance
   memory
   locality
   prediction
   techniques
   branch
   instruction
   profiling
   time
   reference
   execution
   processor
   prefetching


topic 019
   meta
   parametric
   polymorphism
   session
   programming
   monad
   reflection
   new
   reflective
   modular
   templates
   semantic
   level
   generic
   instances


topic 020
   programmer
   power
   expressive
   programmers
   level
   control
   performance
   energy
   model
   time
   assumptions
   data
   aggregate
   consumption
   system


topic 021
   order
   higher
   functional
   functions
   new
   unification
   equational
   calculus
   technique
   strict
   formal
   result
   setting
   syntactic
   simple


topic 022
   haskell
   generic
   contracts
   type
   functions
   contract
   functional
   function
   programming
   may
   classes
   checking
   parameters
   system
   also


topic 023
   web
   applications
   javascript
   services
   application
   code
   development
   system
   service
   large
   platform
   user
   runtime
   used
   attacks


topic 024
   constraints
   constraint
   logic
   programs
   symbolic
   programming
   prolog
   solving
   solver
   smt
   solvers
   function
   problem
   variables
   clp


topic 025
   programs
   call
   function
   procedure
   calls
   stack
   functions
   recursive
   value
   return
   recursion
   results
   closure
   eliminate
   class


topic 026
   calculus
   lambda
   control
   terms
   reduction
   continuations
   call
   lgr
   continuation
   cps
   evaluation
   name
   passing
   operators
   theory


topic 027
   data
   structures
   structure
   lists
   trees
   list
   lenses
   tree
   pointer
   complex
   new
   recursive
   show
   view
   linked


topic 028
   semantics
   operational
   language
   semantic
   formal
   denotational
   model
   prove
   programming
   abstract
   definition
   correctness
   respect
   definitions
   mathematical


topic 029
   effects
   effect
   side
   monads
   monadic
   computational
   expressions
   monad
   system
   state
   show
   continuations
   style
   expression
   theory


topic 030
   software
   development
   project
   product
   engineering
   architecture
   agile
   quality
   design
   team
   large
   requirements
   process
   projects
   business


topic 031
   overhead
   dynamic
   runtime
   monitoring
   instrumentation
   checks
   performance
   overheads
   analysis
   techniques
   information
   execution
   average
   programs
   show


topic 032
   operations
   operation
   arithmetic
   computation
   expressions
   represented
   two
   data
   value
   units
   schemes
   functions
   set
   values
   also


topic 033
   data
   query
   xml
   ad
   hoc
   tools
   queries
   language
   database
   system
   document
   documents
   semantic
   source
   schemas


topic 034
   errors
   error
   bugs
   sharing
   programs
   analysis
   false
   code
   bug
   tool
   static
   software
   detection
   source
   user


topic 035
   objects
   object
   oriented
   tool
   used
   business
   prototype
   sharing
   system
   dynamic
   systems
   user
   delegation
   smalltalk
   time


topic 036
   loop
   array
   loops
   data
   performance
   compiler
   arrays
   algorithm
   memory
   framework
   transformations
   level
   techniques
   iterations
   algorithms


topic 037
   logic
   proof
   verification
   reasoning
   proofs
   separation
   programs
   system
   correctness
   coq
   hoare
   verified
   properties
   code
   theorem


topic 038
   composition
   protocol
   protocols
   asynchronous
   quantum
   cml
   speculative
   process
   phase
   state
   classical
   faults
   may
   bisimulation
   events


topic 039
   subtyping
   problem
   complete
   decidable
   show
   complexity
   subtype
   equivalence
   finite
   types
   theory
   relation
   undecidable
   proof
   sound


topic 040
   data
   optimization
   code
   performance
   references
   memory
   instructions
   integer
   compiler
   set
   algorithm
   sets
   results
   architectures
   vector


topic 041
   modules
   module
   interface
   ml
   interfaces
   system
   type
   user
   recursive
   modular
   separate
   compilation
   linking
   components
   units


topic 042
   types
   type
   recursive
   data
   dependent
   theory
   algebraic
   inductive
   datatypes
   constructors
   induction
   recursion
   reasoning
   relations
   ocaml


topic 043
   techniques
   rules
   used
   technique
   strategy
   set
   specialization
   generation
   rewrite
   applications
   time
   blocks
   code
   evaluation
   stage


topic 044
   non
   may
   deterministic
   trivial
   must
   parts
   new
   results
   also
   dynamically
   lead
   set
   determinism
   problems
   addition


topic 045
   information
   policies
   flow
   security
   policy
   system
   privacy
   hardware
   type
   control
   model
   differential
   secure
   access
   systems


topic 046
   models
   processes
   model
   process
   systems
   networks
   system
   synchronous
   abstract
   properties
   aspect
   fairness
   new
   communicating
   fully


topic 047
   parallel
   parallelism
   performance
   sequential
   execution
   programs
   programming
   processors
   data
   system
   parallelization
   core
   cores
   speedup
   computation


topic 048
   source
   debugging
   code
   program
   debugger
   level
   tools
   optimized
   programs
   user
   tool
   debug
   effects
   environment
   written


topic 049
   application
   applications
   server
   web
   user
   servers
   tool
   system
   bull
   end
   tier
   management
   class
   platform
   development


topic 050
   java
   handling
   object
   exception
   methods
   code
   exceptions
   virtual
   time
   objects
   class
   access
   machine
   system
   facilities


topic 051
   library
   libraries
   code
   api
   changes
   complex
   interface
   programmers
   techniques
   new
   applications
   write
   declarative
   class
   apis


topic 052
   translation
   source
   intermediate
   preserving
   transformations
   target
   correctness
   compilation
   programs
   calculus
   code
   semantic
   combinators
   back
   functional


topic 053
   representation
   syntax
   names
   abstract
   languages
   name
   new
   binding
   representations
   macros
   programming
   macro
   binders
   functional
   internal


topic 054
   dispatch
   languages
   extensions
   java
   object
   oriented
   multiple
   method
   inheritance
   extensible
   oo
   mechanism
   class
   dispatching
   predicate


topic 055
   functional
   programming
   purely
   lazy
   functions
   haskell
   imperative
   equational
   used
   evaluation
   function
   part
   fusion
   search
   examples


topic 056
   flow
   control
   data
   graph
   analysis
   program
   graphs
   information
   global
   time
   method
   structure
   representation
   optimization
   programs


topic 057
   code
   safety
   safe
   mechanisms
   dynamic
   jit
   machine
   native
   resource
   performance
   time
   software
   compilation
   implemented
   security


topic 058
   patterns
   pattern
   model
   matching
   design
   evolution
   software
   models
   driven
   mda
   systems
   system
   development
   architecture
   transformations


topic 059
   temporal
   section
   logic
   programs
   time
   program
   branching
   linear
   approximate
   set
   paths
   assertions
   ctl
   two
   approach


topic 060
   object
   annotations
   ownership
   java
   type
   code
   system
   objects
   programmers
   static
   programs
   qualifiers
   encapsulation
   checking
   errors


topic 061
   method
   methods
   parser
   lr
   reductions
   left
   parsers
   recovery
   construction
   productions
   parsing
   error
   default
   techniques
   fusion


topic 062
   linear
   bounds
   time
   functions
   problem
   complexity
   bound
   quantitative
   resource
   function
   size
   boolean
   also
   invariants
   values


topic 063
   classes
   class
   smalltalk
   type
   virtual
   object
   oriented
   method
   mechanism
   beta
   var
   variable
   may
   inheritance
   instance


topic 064
   level
   high
   low
   levels
   functional
   state
   references
   code
   systems
   designed
   indexing
   step
   access
   correctness
   mutable


topic 065
   code
   machine
   size
   instruction
   instructions
   generation
   apl
   intermediate
   time
   address
   generator
   compiled
   compression
   set
   storage


topic 066
   transformation
   transformations
   partial
   elimination
   relational
   code
   redundancy
   motion
   optimization
   new
   constant
   data
   propagation
   relations
   value


topic 067
   approach
   runtime
   sequential
   proposed
   exploiting
   previous
   general
   hence
   applications
   overhead
   used
   idea
   conventional
   cost
   model


topic 068
   talk
   software
   past
   book
   acquisition
   development
   community
   developer
   hass
   environmental
   new
   world
   sun
   scientific
   computer


topic 069
   specification
   specifications
   synthesis
   tool
   code
   tools
   automatically
   formal
   specifying
   diagrams
   verification
   development
   traces
   play
   manually


topic 070
   dynamic
   static
   execution
   input
   optimizations
   analysis
   value
   code
   statically
   dynamically
   run
   statements
   techniques
   time
   slice


topic 071
   framework
   model
   frameworks
   software
   driven
   checking
   development
   proposed
   lines
   modeling
   specific
   properties
   automatically
   introduced
   unified


topic 072
   compilation
   inlining
   file
   change
   code
   information
   method
   java
   files
   analysis
   performance
   class
   inline
   system
   used


topic 073
   algorithm
   point
   points
   algorithms
   fixed
   variables
   problem
   number
   join
   new
   floating
   time
   also
   efficient
   precision


topic 074
   two
   validation
   scheduling
   optimization
   may
   time
   parameterized
   phase
   pass
   main
   optimizations
   run
   improvement
   translation
   infrastructure


topic 075
   scheme
   binding
   lisp
   al
   et
   environments
   variables
   system
   control
   variable
   environment
   new
   plt
   quasi
   used


topic 076
   knowledge
   software
   practices
   developers
   code
   artifacts
   development
   objective
   agile
   features
   design
   developer
   project
   tools
   tool


topic 077
   program
   programs
   execution
   example
   technique
   input
   analysis
   examples
   correctness
   output
   text
   data
   executions
   automatic
   takes


topic 078
   analysis
   analyses
   context
   sensitive
   pointer
   programs
   results
   static
   framework
   interprocedural
   flow
   precision
   information
   precise
   points


topic 079
   dependence
   self
   programs
   program
   dependences
   data
   adjusting
   dependencies
   parallelization
   computation
   techniques
   statements
   programmer
   changes
   change


topic 080
   design
   students
   programming
   teaching
   computer
   course
   science
   student
   learning
   courses
   process
   code
   concepts
   level
   software


topic 081
   inheritance
   hierarchy
   field
   object
   fields
   multiple
   layout
   record
   objects
   hierarchies
   oriented
   records
   memory
   used
   model


topic 082
   security
   tests
   model
   cryptographic
   verification
   properties
   system
   missing
   implementations
   checks
   protocols
   secure
   new
   policy
   data


topic 083
   register
   allocation
   code
   graph
   registers
   coloring
   live
   algorithm
   scheduling
   optimal
   time
   allocator
   range
   global
   technique


topic 084
   components
   component
   software
   approach
   systems
   uml
   java
   concerns
   model
   design
   application
   development
   separation
   embedded
   class


topic 085
   workshop
   refactoring
   eclipse
   software
   development
   oriented
   oopsla
   programming
   tools
   aspects
   aspect
   examples
   dsls
   aop
   new


topic 086
   grammars
   grammar
   attribute
   parsing
   free
   context
   automata
   tree
   syntax
   attributes
   parser
   parsers
   ll
   lr
   incremental


topic 087
   regions
   region
   memory
   assembly
   data
   applications
   management
   safety
   system
   freedom
   access
   irregular
   code
   io
   model


topic 088
   abstract
   interpretation
   analysis
   interpreters
   framework
   programs
   domain
   domains
   lattice
   interpretations
   concrete
   logical
   static
   operator
   properties


topic 089
   language
   programming
   features
   design
   new
   extension
   writing
   programmers
   mechanisms
   natural
   designed
   provided
   simple
   level
   rich


topic 090
   type
   types
   system
   inference
   typed
   polymorphic
   ml
   typing
   polymorphism
   checking
   systems
   allows
   statically
   safety
   also


topic 091
   domain
   specific
   language
   modeling
   data
   types
   programming
   objects
   level
   specifications
   concepts
   abstract
   abstraction
   sets
   domains


topic 092
   abstraction
   verification
   refinement
   checking
   programs
   abstractions
   model
   predicate
   properties
   predicates
   invariants
   data
   heap
   abstract
   state


topic 093
   system
   systems
   software
   development
   design
   operating
   architecture
   engineering
   process
   architectural
   requirements
   large
   management
   time
   real


topic 094
   functional
   programming
   purely
   lazy
   functions
   haskell
   imperative
   equational
   used
   evaluation
   function
   part
   fusion
   search
   examples


topic 095
   algorithms
   analysis
   incremental
   complexity
   time
   problem
   problems
   demand
   solution
   equations
   strictness
   solutions
   driven
   may
   space


topic 096
   objects
   object
   oriented
   tool
   used
   business
   prototype
   sharing
   system
   dynamic
   systems
   user
   delegation
   smalltalk
   time


topic 097
   distributed
   model
   system
   bytecode
   applications
   communication
   erlang
   configuration
   message
   distribution
   systems
   network
   mechanism
   process
   variables


topic 098
   procedure
   procedures
   assertions
   termination
   properties
   programs
   checking
   verification
   proving
   property
   state
   conditions
   assertion
   decision
   proof


topic 099
   programming
   reactive
   language
   type
   functional
   streams
   frp
   typed
   programs
   time
   agda
   proofs
   haskell
   types
   dependently


