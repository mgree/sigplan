install.packages("lda")
source('~/tmpl/www-copy/web/playground/topics-ksf.R')
source('~/tmpl/www-copy/web/playground/topics-ksf.R')
source('~/tmpl/www-copy/web/playground/topics-ksf.R')
# Load/install necessary packages
library(devtools)
library(LDAvis)
setwd("~/tmpl/www-copy/backend/test/")
phi <- as.matrix(read.table("final.beta"))
theta <- as.matrix(read.table("final.gamma"))
doc_length <- unlist(read.table("lengths.dat"), use.names = FALSE)
vocab <- unlist(read.table("vocab.dat"), use.names = FALSE)
token.frequency <- unlist(read.table("count.dat"), use.names = FALSE)
json <- createJSON(phi, theta, doc_length, vocab, token.frequency)
vocab <- unlist(read.table("vocab.dat"), use.names = FALSE)
typeof(vocab)
vocab <- read.table("vocab.dat")
typeof(vocab)
View(vocab)
doc_length <- unlist(read.table("lengths.dat"), use.names = FALSE)
typeof(doc_length)
vocab <- read.table("vocab.dat")
typeof(vocab)
doc_length <- unlist(read.table("lengths.dat"), use.names = FALSE)
vocab <- read.table("vocab.dat")
typeof(vocab)
token.frequency <- unlist(read.table("count.dat"), use.names = FALSE)
json <- createJSON(phi, theta, doc_length, vocab, token.frequency)
View(vocab)
View(vocab)
View(phi)
View(phi)
doc_length <- unlist(read.table("lengths.dat"), use.names = FALSE)
vocab <- as.character(read.table("vocab.dat"))
typeof(vocab)
token.frequency <- unlist(read.table("count.dat"), use.names = FALSE)
json <- createJSON(phi, theta, doc_length, vocab, token.frequency)
View(phi)
View(phi)
View(theta)
phi <- as.matrix(t(read.table("final.beta")))
theta <- as.matrix(read.table("final.gamma"))
doc_length <- unlist(read.table("lengths.dat"), use.names = FALSE)
vocab <- as.character(read.table("vocab.dat"))
View(phi)
typeof(vocab)
token.frequency <- unlist(read.table("count.dat"), use.names = FALSE)
json <- createJSON(phi, theta, doc_length, vocab, token.frequency)
View(theta)
View(phi)
phi <- as.matrix(read.table("final.beta"))
theta <- as.matrix(read.table("final.gamma"))
doc_length <- unlist(read.table("lengths.dat"), use.names = FALSE)
vocab <- as.character(read.table("vocab.dat"))
typeof(vocab)
token.frequency <- unlist(read.table("count.dat"), use.names = FALSE)
json <- createJSON(phi, theta, doc_length, vocab, token.frequency)
View(phi)
View(phi)
ncols(phi)
cols(phi)
ncol(phi)
nrow(vocab)
vocab
v <- read.lines("vocab.dat")
v <- read.table("vocab.dat")
ncol(v)
nrow(v)
v[1]
vocab[,1]
vocab[1,]
dim(vocab)
help(read.table)
v[1]
v[,1]
v[0,1]
v <- read.table("vocab.dat", as.is = TRUE)
v[0]
v[1]
v[0,1]
v[1,]
v[2,]
v[3,]
vocab <- read.table("vocab.dat", as.is = TRUE)
token.frequency <- unlist(read.table("count.dat"), use.names = FALSE)
json <- createJSON(phi, theta, doc_length, vocab, token.frequency)
nrow(vocab)
ncol(phi)
nrow(token.frequency)
ncol(token.frequency)
token.frequency
tf <- read.table("count.dat")
tf[0,1]
tf[0]
tf[1,]
token.frequency <- read.table("count.dat")
json <- createJSON(phi, theta, doc_length, vocab, token.frequency)
read.table("lengths.dat")[1,]
read.table("lengths.dat")[2,]
read.table("lengths.dat")[3,]
