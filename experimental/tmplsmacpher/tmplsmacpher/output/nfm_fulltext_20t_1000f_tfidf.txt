---------- Topic 0 ----------
*** Top words ***
program
function
programs
value
data
time
input
language
programming
execution

*** Top papers ***
Automated feedback generation for introductory programming assignments
Test-driven synthesis
Sketching stencils
A program development tool
DART: directed automated random testing
Smooth interpretation
Generalized algorithmic debugging and testing
Theoretical and empirical studies on using program mutation to test the functional correctness of programs
Editing by example
Stochastic optimization of floating-point programs with tunable precision

---------- Topic 1 ----------
*** Top words ***
type
types
typing
int
typed
inference
polymorphic
subtyping
ml
type inference

*** Top papers ***
Structural subtyping and the notion of power type
Soft typing
Colored local type inference
Putting type annotations to work
Polymorphic functions with set-theoretic types: part 1: syntax, semantics, and evaluation
Polymorphic type inference
Generative type abstraction and type-level computation
A type system for Smalltalk
Polymorphic Functions with Set-Theoretic Types: Part 2: Local Type Inference and Type Reconstruction
Principal Type Schemes for Gradual Programs

---------- Topic 2 ----------
*** Top words ***
code
instruction
compiler
instructions
machine
optimization
stack
branch
generation
performance

*** Top papers ***
Efficient and language-independent mobile programs
Run-time code generation and modal-ML
VCODE: a retargetable, extensible, very fast dynamic code generation system
Verified just-in-time compiler on x86
Language-independent sandboxing of just-in-time compilation and self-modifying code
Fast code generation using automatically-generated decision trees
Optimizing indirect branch prediction accuracy in virtual machine interpreters
Certified self-modifying code
Optimizing direct threaded code by selective inlining
Finite-state code generation

---------- Topic 3 ----------
*** Top words ***
thread
threads
lock
race
memory
concurrent
locks
atomic
read
shared

*** Top papers ***
Atomizer: a dynamic atomicity checker for multithreaded programs
A customizable substrate for concurrent languages
Race detection for Android applications
Understanding POWER multiprocessors
Enforcing isolation and ordering in STM
A randomized dynamic program analysis technique for detecting real deadlocks
Mitosis compiler: an infrastructure for speculative threading based on pre-computation slices
Min-cut program decomposition for thread-level speculation
Dynamically checking ownership policies in concurrent c/c++ programs
Checking race freedom via linear programming

---------- Topic 4 ----------
*** Top words ***
analysis
flow
alias
pointer
points
analyses
program
abstract
sensitive
query

*** Top papers ***
Selective context-sensitivity guided by impact pre-analysis
Semi-sparse flow-sensitive pointer analysis
Design and implementation of sparse global analyses for C-like languages
Points-to analysis with efficient strong updates
Using static single assignment form to improve flow-insensitive pointer analysis
Finding optimum abstractions in parametric dataflow analysis
FlowDroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps
Introspective analysis: context-sensitivity, across the board
Refinement-based context-sensitive points-to analysis for Java
Hybrid top-down and bottom-up interprocedural analysis

---------- Topic 5 ----------
*** Top words ***
loop
dependence
loops
array
iteration
vector
parallel
iterations
parallelism
schedule

*** Top papers ***
Improving register allocation for subscripted variables
New tiling techniques to improve cache temporal locality
A general framework for iteration-reordering loop transformations
A hierarchical basis for reordering transformations
A data locality optimizing algorithm
Program improvement by source to source transformation
The LRPD test: speculative run-time parallelization of loops with privatization and reduction parallelization
Automatic decomposition of scientific programs for parallel execution
Dependence graphs and compiler optimizations
Beyond induction variables

---------- Topic 6 ----------
*** Top words ***
node
graph
nodes
edge
edges
flow
algorithm
path
tree
graphs

*** Top papers ***
Node listings applied to data flow analysis
Analysis of a simple algorithm for global data flow problems
A fast and usually linear algorithm for global flow analysis
A linear time algorithm for placing &phgr;-nodes
Automatic construction of sparse data flow evaluation graphs
Semantics-preserving procedure extraction
An efficient method of computing static single assignment form
Efficient building and placing of gating functions
A new framework for exhaustive and incremental data flow analysis using DJ graphs
Symbolic program analysis in almost linear time

---------- Topic 7 ----------
*** Top words ***
cache
data
memory
performance
array
size
access
figure
accesses
overhead

*** Top papers ***
Improving cache performance in dynamic applications through data and computation reorganization at run time
Cache-conscious structure layout
Efficient representations and abstractions for quantifying and exploiting data reference locality
Exact analysis of the cache behavior of nested loops
Software data spreading: leveraging distributed caches to improve single thread performance
Cache and I/O efficent functional algorithms
An efficient profile-analysis framework for data-layout optimizations
Improving the cache locality of memory allocation
Memory subsystem performance of programs using copying garbage collection
The hardness of cache conscious data placement

---------- Topic 8 ----------
*** Top words ***
register
registers
allocation
live
instruction
interference
load
graph
instructions
memory

*** Top papers ***
Preference-directed graph coloring
Probabilistic register allocation
Minimizing register usage penalty at procedure calls
Differential register allocation
Minimum cost interprocedural register allocation
Call-cost directed register allocation
Graph coloring register allocation for processors with multi-register operands
Register windows vs. register allocation
Register allocation using lazy saves, eager restores, and greedy shuffling
A generalized algorithm for graph-coloring register allocation

---------- Topic 9 ----------
*** Top words ***
calculus
let
term
semantics
terms
proof
definition
reduction
theorem
lambda

*** Top papers ***
A call-by-need lambda calculus
A complete, co-inductive syntactic theory of sequential control and state
Improvement in a lazy context: an operational theory for call-by-need
A natural semantics for lazy evaluation
An approach to call-by-name delimited continuations
A staging calculus and its application to the verification of translators (preliminary report)
On laziness and optimality in lambda interpreters: tools for specification and analysis
A nonstandard standardization theorem
A functional theory of local names
The Lambda Lambda-Bar calculus: a dual calculus for unconstrained strategies

---------- Topic 10 ----------
*** Top words ***
attribute
attributes
grammar
tree
production
semantic
symbol
evaluation
incremental
trees

*** Top papers ***
A meta-language and system for nonlocal incremental attribute evaluation in language-based editors
Optimal-time incremental semantic analysis for syntax-directed editors
Higher order attribute grammars
Incremental evaluation for attribute grammars with application to syntax-directed editors
Experience with an attribute grammar-based compiler
Incremental evaluation for a general class of circular attribute grammars
Verification of attribute grammar
Global storage allocation in attribute evaluation
Remote attribute updating for language-based editors
Dynamically bypassing copy rule chains in attribute grammars

---------- Topic 11 ----------
*** Top words ***
logic
formula
proof
formulas
verification
program
predicate
assertions
predicates
true

*** Top papers ***
Natural proofs for structure, data, and separation
Classical BI: a logic for reasoning about dualising resources
Logical and mathematical reasoning about imperative programs: preliminary report
"Sometime" is sometimes "not never": on the temporal logic of programs
Decidable logics combining heap structures and data
On the temporal analysis of fairness
Natural proofs for data structure manipulation in C using separation logic
Process logic: preliminary report
Anytime, anywhere: modal logics for mobile ambients
An integrated proof language for imperative programs

---------- Topic 12 ----------
*** Top words ***
e1
e2
e1 e2
security
v1
t1
v2
t2
s1
l1

*** Top papers ***
A relational modal logic for higher-order stateful ADTs
Space-Efficient Manifest Contracts
The marriage of bisimulations and Kripke logical relations
Modular, higher-order cardinality analysis in theory and practice
Harmless advice
Parsing expression grammars: a recognition-based syntactic foundation
Combining abstract interpreters
The power of parameterization in coinductive proof
Environment classifiers
Consolidation of queries with user-defined functions

---------- Topic 13 ----------
*** Top words ***
object
class
method
objects
field
java
fields
methods
classes
object oriented

*** Top papers ***
Ownership types for object encapsulation
Environmental acquisition revisited
Protecting representation with effect encapsulation
Classes and mixins
Automatic inline allocation of objects
A virtual class calculus
The design of a class mechanism for Moby
Inheritance in smalltalk-80: a denotational definition
Masked types for sound object initialization
A language with distributed scope

---------- Topic 14 ----------
*** Top words ***
collector
garbage
heap
objects
collection
garbage collection
memory
object
pointer
stack

*** Top papers ***
Mostly parallel garbage collection
Space efficient conservative garbage collection
A mark-and-sweep collector C++
Combining generational and conservative garbage collection: framework and implementations
A concurrent, generational garbage collector for a multithreaded implementation of ML
Real-time replication garbage collection
Garbage collection without paging
Generational garbage collection and the radioactive decay model
Garbage collection using a dynamic threatening boundary
A general framework for certifying garbage collectors and their mutators

---------- Topic 15 ----------
*** Top words ***
processes
process
channel
message
communication
parallel
concurrent
network
pi
action

*** Top papers ***
Unbounded speed variability in distributed communication systems
Coordinating first-order multiparty interactions
The design and implementation of HoME
CHOCOLATE: Calculi of Higher Order COmmunication and LAmbda TErms (preliminary report)
Secure implementations of typed channel abstractions
Authentication primitives and their compilation
Linearity and the pi-calculus
Temporal verification of carrier-sense local area network protocols
Towards programming with knowledge expressions
Higher-order concurrent programs with finite communication topology (extended abstract)

---------- Topic 16 ----------
*** Top words ***
state
transition
states
automaton
set
automata
transitions
finite
grammar
let

*** Top papers ***
Specification and verification of concurrent programs by A∀automata
Battery transition systems
On directly constructing LR(k) parsers without chain reductions
Concurrent transition system semantics of process networks
Dynamic partial-order reduction for model checking software
Minimization of symbolic automata
Modeling concurrency with geometry
Advanced automata minimization
Parallel program correctness through refinement
Fresh-register automata

---------- Topic 17 ----------
*** Top words ***
trace
traces
event
events
execution
branch
network
path
program
t1

*** Top papers ***
Optimal tracing and incremental reexecution for debugging long-running programs
Generalized just-in-time trace compilation using a parallel task farm in a dynamic binary translator
Semantics-aware trace analysis
The essence of compiling with traces
Succinct Representation of Concurrent Trace Sets
Dynamo: a transparent dynamic optimization system
Completeness and incompleteness of trace-based network proof systems
Maximal sound predictive race detection with control flow abstraction
Abstractions from proofs
A cost semantics for self-adjusting computation

---------- Topic 18 ----------
*** Top words ***
constraint
constraints
variables
set
solution
inference
schedule
solutions
symbolic
linear

*** Top papers ***
A methodology for managing hard constraints in CLP systems
Componential set-based analysis
The 3 R's of optimizing constraint logic programs: refinement, removal and reordering
Analytic constraint solving and interval arithmetic
CLP and constraint abstraction
An abstract machine for CLP(R)
Constraints as control
Regularly annotated set constraints
Projection merging: reducing redundancies in inclusion constraint graphs
Concurrent constraint programming

---------- Topic 19 ----------
*** Top words ***
region
regions
memory
r1
effect
r2
management
allocated
runtime
effects

*** Top papers ***
Language support for regions
From region inference to von Neumann machines via region representation inference
Better static memory management: improving region-based analysis of higher-order languages
Memory management with explicit regions
Region-based memory management in cyclone
Ownership types for safe region-based memory management in real-time Java
Region inference for an object-oriented language
Typed memory management in a calculus of capabilities
Combining region inference and garbage collection
Conditional correlation analysis for safe region-based memory management


