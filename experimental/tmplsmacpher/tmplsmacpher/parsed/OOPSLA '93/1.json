{"article_publication_date": "04-01-1993", "fulltext": "\n Addendum to the Proceedings OOPSLA Washington, DC-26 September-l October, 7993 Educators Demonstration \nLearning Object-Oriented Concepts with Multimedia Technology A. Amandi(*), M.C. Leonardi, M.J. Lopez, \nMPrieto and G.Rossi(*). LIFIA.. Demo. de Informatica, Facultad de Ciencias Exactas, UNLP. (*) also CdNICET \nAbstract We present in this paper the outstanding features of a multimedia environment for learning object \ntechnology. This system presents certain novel aspects such as the extensive use of object animation \nand hypermedia patterns to describe object-oriented design concepts, in particular object frameworks. \nThis environment complements other teaching and learning activities, and provides a good way of overcoming \nsome of the difficulties that arise on the learning process of the object paradigm, such as the hard \nphilosophical change that it implies and the assimilation of new technical concepts. Introduction Teaching \nthe object-oriented paradigm is a big challenge; since for many years the central focus in programming \nand software development has been functional decomposition, there are attitudes, vices and problem-solving \napproaches which are deeply fixed in the software development community. To overcome these difficulties \nwe need a fundamental shift in our approach to teaching computer based problem-solving. Thus, learning \nthe object-oriented paradigm requires not only the understanding of new constructs and concepts, such \nas abstraction, information hiding, inheritance, etc., but also, and fundamentally, a new way of reasoning \nabout the world. The transition to object-oriented technology represents a major philosophical change \nand for it to be successful it is essential that we find new ways to transmit the new concepts. The anthro- \npomorphic nature of the paradigm, in which objects can be thought of as living entities responding to \nexternal events, together with the advances in multimedia technology, let us think of new pedagogical \napproaches. III this paper we describe a multimedia learning environment for teaching object-oriented \nconcepts. We show how to take advantage of hypermedia technology and of the intrinsic essence of the \nobject paradigm as a way of complementing the teacher s job. Multimedia and Object technology Interactive \nmultimedia technology proves to be particularly attractive to describe applications built with objects. \nFor example, using animations in which different objects of an application are iconically represented \nand respond to a message either showing its effect or answering with sounds, allows a better understanding \nof an application s architecture. Besides, navigating through the different layers of an application, \nrepresented with some graphic convention, and consulting aspects such as behavior, interaction patterns, \netc. proves to be very useful to transmit not only basic concepts, but also advanced ones. Having these \nideas in mind, we ve built a learning environment with the following features: Hypermedia based concepts \nrepresentation and navigation. Use of animation not only for transmission of the very first concepts \nbut also to discuss alternative ways of an application design. Description of complex designs by means \nof patterns of interacting objects, in particular, hypermedia patterns to describe object-oriented frameworks. \n Our learning environment We are not aiming at substituting the role of teachers, but rather, our environment \nshould be a complement, essential in aspects such as the learning of frameworks and object oriented analysis \nand design. The use of our environment is supposed to be prior to the interaction among teachers and \nstudents. The teacher s role is to solve students doubts that may appear during the tutorial; he/she \nwill also define learning activities (for example, which topic to work with in a session), and of course \nits usual role (proposing exercises, etc.). We are working in the definition of a me&#38;facility, to \nlet professors define new learning modules. Addendum to the Proceedings OOPSLA 93 There are some pre-requisites \nfor using the different modules of the learning environment: The adequate audience for the basic concepts \nmodule are those students that have a previous knowledge of programming. On the other hand, for using \nthe advanced concepts module students must have been exposed to a course on object oriented programming \n(for instance, our course). In particular (and obviously), for working with the hypermedia patterns documenting \nthe MVC framework students must have some skill on Smalltalk. As we have previously mentioned, the learning \nenvironment covers basic and advanced concepts (Finding the Objects and Frameworks). In the following \nsections we will focus on each one of them. Basic concepts This sub-environment describes the basic \nnotions of the object paradigm, such as objects, messages, classes, hierarchies and inheritance, polymorphism \nand dynamic binding. These concepts are implementation- independent so it is not necessary to use any \nparticular language to teach them. The freedom given to the student to navigate through the basic concepts \nis strongly conditioned by the subject to be taught. For instance, it is not the same teaching how to \nuse a framework, where one can access to any of its functions in any order, than teaching the basic concepts \nof the object paradigm because they present a natural order among them (we must learn about classes first \nto be able to learn about inheritance). Thus, the environment presents a guide to the navigation, and \ndue to this guide the student doesn t have a complete freedom to go through the knowledge network. The \nenvironment provides two different learning styles and in each one of them the students have a different \nway to explore the hypermedia network: 1) Guided Learning: A tour guides the student through a sequence \nof subjects, but within that sequence the student can determine the depth level in which he or she wants \nto study the subject, and of course the student is allowed to navigate freely through subjects already \nexplored in another or the same learning session. Since the student must be aware of his or her learning \nprogress to be able to decide whether to advance with the tour or revise a particular subject, we have \nincluded summary nodes where every taught concept is briefly defined and integrated in an example, and \nan exercise is proposed in a way that it is necessary to have all the concepts understood to be able \nto solve it. This exercise is then evaluated (in some cases with the aid of a teacher) and the environment \nsuggests a sequence of steps to be followed by the student. 2) Exploratory Learning: This option shows \nexamples which integrate all the concepts to be learned and from which the student can determine which \nsubjects he or she wants to access and Washington, in which level of detail, exploring certain aspects \nof the example. The environment allows the student to mark a subject as known letting in this way access \nto other new topics (This aspect may be rather controversial in the educational community. We will not \ndiscuss it further).  Advanced concepts Finding the Objects This module of the environment presents \nto the student, by means of graphical examples, the different finding the objects approaches allowing \nto dynamically compare them. This part of the hypermedia is being developed now, taking into account \nthe incorporation of simple and complex examples, so that the student can have enough elements to learn \nhow to find the objects in a particular domain. The approaches we are using are based on the following \nalternatives: To look for the nouns in a requirements specification document, as in [Wirfs-Brock 901, \n[Rumbaugh 91], etc. To build scripts (with emphasis in system behavior), as in mubin 92]. To observe \nreality through animated models. This module contains examples which show these alternatives in a graphical \nway and the students can connect them in order to compare different ways of finding the objets. Frameworks \nWe have divided the teaching of frameworks in two modules: one is dedicated to the general theory of \nframeworks where a student can learn about the definition and types of frameworks and guidelines to design \nthem. Examples of existing frameworks are provided. The other module describes the MVC framework by means \nof hypermedia patterns. In both cases navigation is free. The student can choose the subject and the \nlevel of detail in which he or she wants to learn it. Since the student is supposed to know the object \nparadigm he can determine which topics to access or to deepen depending on his needs. In the case of \nthe MVC topic, this freedom of navigation is more strongly justified because it is essential to allow \nthe student to access directly to that part of the lesson which describes what to do to obtain the functionality \nneeded from the framework. Once within a particular function the environment lets the user follow a pre- \nestablished sequence in order to obtain that functionality or to go deeper accessing to different levels \nof detail according to his own purposes. Using hypermedia patterns to teach about frameworks In a recent \npaper, Johnson proposed the use of patterns to describe frameworks [Johnson 92]. A similar idea, used \nto describe more generic object interactions, had been proposed by Coad in [Coad 921 . In his paper, \nJohnson has already mentioned the potential connection D.C. September 26-October 1,1993 between patterns \nand the knowledge representation formalism given by hypermedia. It is obvious that patterns not only \nconstitute a good formalism to describe frameworks, but they are also useful to learn about them. In \nthis section we describe how to use the pattern idea to teach about design, and particularly,about framework \ndesign. In our learning environment we use, basically, three types of patterns to describe frameworks: \npatterns to describe purposes * patterns to describe use 0 patterns to describe design and implementation. \n One of the outstanding features of patterns is the inter- relation among them. Such relationships may \nbe modeled using hypermedia links, and traversing those links allows the students to understand the pattern. \nOn the other hand, in our environment, the three types of patterns represent different depth levels in \nthe learning process. Users can access to those levels by navigating the hypermedia network . At the \nsame time, it is possible to have a richer representation than the one described by Johnson [Johnson \n92]. This is due to the fact that, in our learning environment, interactions among framework components, \nare shown not only using static representations but also by means of animated graphic schemes. It is \nimportant to note that the environment maintains the learning history of each student. In this way we \nprovide personalized tutorials where each student has special marks on all the subjects he has already \nexplored in the current section or in previous ones.  Tools Every hypermedia environment, especially \nan educational one, must provide a set of additional tools. In our environment we have included the following: \nDictionary: we keep here all the words relative to the object paradigm. For each word the student can \naccess to its definition and to a set of related topics. In this way he can have a more complete view \nof the concept. Doubts: this is a notepad where the student can write down his own annotations, doubts, \nimpressions, comments, etc. Each student can have access to his personal notepad or to a general one \nwhere he can share his doubts with the rest of the users. Both notepads are organized by subjects. Help: \nthis tool shows the user how to interact with the hypermedia. Map: the map shows the organization of \nthe tutorial s subjects indicating those which have been already accessed by the current user. Each tutorial \nsection has its own maps. The maps have two purposes: tell the student where he is within the context \n(avoiding in this way the hypermedia disorientation problem), and function as a browser from which the \nstudent can access each particular subject. The map available for Basic Concepts restricts the access \ndue to the correlativity among subjects. All these tools are always available no matter where the student \nis. Experiences We have made two different kinds of experiences in order to analyze the effectiveness \nand quality of the environment. 1. With experts in object technology. We have evaluated the quality of \nthe tutorial, in topics like contents presentation, selection of examples, etc. They found the material \nquite right, easy to use, and useful as a tool for teaching Object-Oriented Technology. 2. With randomly \nselected students. We analyzed their behavior working by themselves and working in a group. After working \nwith the environment, the students were evaluated by a teacher. We ve found the results more than satisfactory. \nThe students learned the concepts, and were very motivated by the environment and its navigational style. \n Comparing with traditional teaching approaches, some concepts were learned faster and more easily and \nfriendly. For example, we can mention the learning of the class concept. This topic is presented in the \nenvironment through an animated scheme: there are some objects with common behavior; this behavior is \nhighlighted, extracted from the objects and included in a class (created at that moment with the purpose \nof containing that methods). Objects attributes are treated similarly. Implementation The previously \ndescribed environment has been implemented in Multimedia Toolbook* , on top of Windows** . For supporting \nthe learning of aspects associated with object oriented environments( e.g. browsers, debuggers, or particular \nframeworks) we have used SmalltalkN Windows*** . The environment controls the interaction between Toolbook \nand Smalltalk, where a minimal interaction support has been implemented.  Concluding remarks We have \nbriefly described the main features of an interactive multimedia environment for learning object technology. \nThe environment is open, and from the conclusions taken from its use, we are extending it. We are now \nbeginning to develop modules for learning about design methodologies, and modules for showing the finding \nthe objects problem. Both modules are based on the interactive presentation of discussions (i.e. taking \npoints of view of several methodologies). These discussions can be explored with different levels of \ndetail. We think that this kind of systems will soon prove to be very useful to solve the problem given \nby the scarcity of experts. Besides, it will allow the representation of aspects such as the dynamics \nof interaction among objects, and diverse approaches for object-oriented * Trademark of Asymetrix ** \nTrademark of Microsoft *** Trademark of Digitalk Addendum to the Proceedings OOPSLA 93 problem solving \nin a pleasant-to-use way, and with a great impact on the student s learning process. In the near future \nwe will be building authoring modules in order to solve a critical aspect of our environment (and in \ngeneral of hypermedia-based learning environments): adding new modules and examples is done in a hand- \ncrafted way. These authoring facilities will help us make the environment grow aided by object technology \nexperts. Bibliography [Coad 92] Peter Coad, Object-Oriented Patterns, Communications of the ACM,. September \n1992. Volume 35, Number 9. [Jonassen 89] Edited by David Jonassen and Heinz Mandl, Designing Hypermedia \nfor learning. Springer-Verlag, 1989. [Johnson 921 Ralph E. Johnson, Documenting Frameworks using Patterns, \nOOPSLA 92 Conference Procedings. [Johnson&#38;Foote 881 Ralph E. Johnson and Brian Foote, Designing reusable \nclasses, Journal of Object- Oriented Programming, Volume 1, Number 2, 1988. [Joyce 921 Michael Joyce. \nSiren shapes: Exploratory and Constructive Hypertext, ECHT 92 (Fourth ACM Conference on Hypertext and \nHypermedia), December 1992, Italy. [Rubin Kenneth Rubin and Adele Goldberg, Object Behavior Analysis, \nCornrmnications of the ACM, Volume 35, Number 9, September 1992. [Rumbaugh 91] James Rumbaugh, Michael \nBlaha, William Premerlani, Frederick Eddy and William Lorensen, Object-Oriented Modeling and Design. \nPrentice Hall, 199 1. [Trigg S8] R. H. Trigg. Guided Tours and Tabletops: Tools for Communicating in \na Hypertext Environment, ACM Transactions on Ofice Information Systems, Volume 6, Number 4, October 1988. \n Contact information: A. Amandi(*), M.C. Leonardi, M.J. Lopez, M.Prieto and G.Rossi(*). LIFIA., Depto. \nde Informhtica, Facultad de Ciencias Exactas, UNLP. Calle 50 y 115, Primer Piso. (1900) La Plats, Buenos \nAires, Argentina. TE: 54 2142738 Fax: 54 2125 6607 E-mail: grossi@unlp.edu.ar (*) also CONICET 16 Washington, \nD.C. September 264ktober 1,1993  \n\t\t\t", "proc_id": "260303", "abstract": "", "authors": [{"name": "A. Amandi", "author_profile_id": "81100543424", "affiliation": "LIFIA., Depto. de Inform&#225;tica, Facultad de Ciencias Exactas, UNLP., Calle 50 y 115, Primer Piso. (1900) La Plata, Buenos Aires, Argentina and CONICET", "person_id": "P1703", "email_address": "", "orcid_id": ""}, {"name": "M. C. Leonardi", "author_profile_id": "81545709556", "affiliation": "LIFIA., Depto. de Inform&#225;tica, Facultad de Ciencias Exactas, UNLP., Calle 50 y 115, Primer Piso. (1900) La Plata, Buenos Aires, Argentina", "person_id": "P181036", "email_address": "", "orcid_id": ""}, {"name": "M. J. Lopez", "author_profile_id": "81100621363", "affiliation": "LIFIA., Depto. de Inform&#225;tica, Facultad de Ciencias Exactas, UNLP., Calle 50 y 115, Primer Piso. (1900) La Plata, Buenos Aires, Argentina", "person_id": "PP14214276", "email_address": "", "orcid_id": ""}, {"name": "M. Prieto", "author_profile_id": "81100109156", "affiliation": "LIFIA., Depto. de Inform&#225;tica, Facultad de Ciencias Exactas, UNLP., Calle 50 y 115, Primer Piso. (1900) La Plata, Buenos Aires, Argentina", "person_id": "PP14048316", "email_address": "", "orcid_id": ""}, {"name": "G. Rossi", "author_profile_id": "81100497792", "affiliation": "LIFIA., Depto. de Inform&#225;tica, Facultad de Ciencias Exactas, UNLP., Calle 50 y 115, Primer Piso. (1900) La Plata, Buenos Aires, Argentina and CONICET", "person_id": "PP14173890", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/260303.260306", "year": "1993", "article_id": "260306", "conference": "OOPSLA", "title": "Learning object-oriented concepts with multimedia technology", "url": "http://dl.acm.org/citation.cfm?id=260306"}