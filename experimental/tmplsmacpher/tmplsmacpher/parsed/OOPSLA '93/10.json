{"article_publication_date": "04-01-1993", "fulltext": "\n Washington, DC-26Sepfeember-7 October, 7993 Experience Report Comparison of OOA and Real-Time SA-From \nthe Experiment of Analyzing an image Filing System Reported by: Akihiro Yamashiro Authors: Akihiro Y \namashiro Hiroko Nakano Kazuki Yoshida Etsuo Saito Toshiba Corporation Project Scope: Since October 1991, \nwe have been looking for a software development methodology which could simplify the maintenance and \nmodification of large-scale software. Object-Oriented paradigm is intended to provide a stable architecture \nand a modifiable software system, and with this in mind, we chose this paradigm as a base of our development \nmethod. In the first stage of our project, one year was spent for analysis, design, and implementation \nof a prototype of an existing image filing system using Coad s OOA &#38; OOD and C++. This experiment \nconvinced us that the Object-Oriented approach was applicable for developing large scale software. The \nsecond stage of our project involved the evaluation of its usefulness. Our approach was to apply both \nthe Structured Analysis and the Object-Oriented Analysis methods to the same subsystem of the image filing \nsystem and to evaluate their analysis processes and the corresponding results. Here, we applied Rumbaugh \ns Object Modeling Technique (a.k.a. OMT) as an analysis method, not because Coad s OOA is insufficient \nbut because OMT suggests more rigid processes, models, and notations for applying the method. This experience \npaper describes the overview of the second stage of our project. Target Application: The existing image \nfiling system, which is up to several MLOC, consists of two layers. The upper layer of the system consists \nof three subsystems: Image Definition, Image Entry, and Image Retrieval. A characteristic of this system \nis that as a convenience for users, a document managing method which simulates a normal office work environment \nis used. A disk loading unit is called a Cabinet, and each Cabinet contains several Binders. Each Binder \nthen consists of several Documents, which consist of several Pages and Images. Sixteen retrieval methods, \nsuch as the logical retrieval method, are provided. The lower layer consists of a User Interface subsystem \nand a Database subsystem. The target of our project is the analysis of the Image Retrieval subsystem \nwhich depends on the User Interface subsystem and the Database subsystem.  Analysis Methods: We applied \nboth Hatley s Real-Time Structured Analysis (RSA) and Rumbaugh s Object Modeling Technique (OMT). We \nchose these methods for two reasons. The first reason is that the methods represent a typical procedure-oriented \nStructured paradigm and Object-Oriented paradigm, respectively. The second reason is that both consist \nof three different models, namely data (object) model (representing data and object structure respectively), \nfunctional model (representing data transformation), and dynamic model (representing behavior). Figure \n1 and Figure 2 show the correspondence among the models of each method. Addendum to the Proceedings \nOOPSLA Y3 41 Data Model Dvnamic Model Object Model Dynamic Model r state event1 state event /operationdt \nent2Joperation~ . stat ,H . P .. Functional Model Figure 1: The correspondence among the models of RSA \nOne major difference between the two methods is that RSA puts emphasis on the process hierarchy of the \nfunctional model while OMT puts emphasis on the object relation of the object model. The other difference \nis in the scope of representation of the three models. In OMT, the whole system is specified by one object \nmodel, and each object is specified by one functional model and one dynamic model if necessary. In RSA, \non the other hand, the whole system is specified by hierarchical functional models, and at most one dynamic \nmodel corresponds to each functional model. Data store of the functional model may be specified using \na data model. I Cabinet lglagsification 1 0 pose I A 1 P Binder Functional Model Figure 2: The correspondence \namong models of OMT  Results: The target was analyzed using OOA and RSA by four people in 5 months. \nUsing OMT, 62 pages of document were produced. OMT s object model consists of 27 objects, grouped in \n7 modules. See the example of the object model for the Document object shown in Fig.3. On the other hand, \n39 pages of document were produced by RSA. RSA s functional model consists of 29 processes, grouped in \n5 layers of hierarchy. See the example of the level 0 functional model and its corre - sponding dynamic \nmodel shown in Fig. 4 and Fig. 5. I retrieved=J , Lff.l L I 1 1 Document1 1 Title far Figure 3: Object \nmodel by OMT Washington, D.C. September 26-October 1,1993 Binder Information Figure 4: Level 0 functional \nmodel by RSA command = FlLlN I process fihg /display command menu Figure 5: Level 0 dynamic model by \nRSA  Evaluation Aspects: We examined three aspects of the analysis to evaluate our experiment. The \nfirst aspect is the separation of role between analysis and design. The role of analysis is to capture \nthe problem. Design decisions should be eliminated from the analysis model as much as possible. Concerning \nboth process activation order and user- interface outlook, we regard these as design decisions and think \nthat it will be preferable if these decisions could be deferred until the design phase or at least the \nlater part of the analysis phase. The second aspect is the ease of proceeding analysis process. Analysis \nis not only the process of producing documents but also the process of understanding the problem. The \nmethod should provide analysts the way to limit the scope of the analysis by allowing them to concentrate \non certain parts or certain aspects of the system at once, while guaranteeing consistency of the system \nas a whole without much effort. The third aspect is the ease of understanding the result of analysis. \nAnalysts should be able to use the results of the analysis when communicating with customers and designers. \nThe system level traceability enhances this communication. Addendum to the Proceedings OOPSLA 93  Conclusions: \nThe first conviction is that analysts applying RSA tend to introduce more design decisions earlier to \nthe analysis than when using the OMT. Analysts have to assume a particular processing order of the functions \nin order to be able to extract functional processes from the problem, which results in an inflexible \nspecification of functional processes that depends on this design decision. We cannot attribute this \nfault to the analysts, because the method should lead the analysts in the right direction. The second \nconviction is that the analysis process of RSA is less straight forward and more time-consuming than \nthat of OMT. In RSA, a small modification may have extensive effects, because of the hierarchical structure \nof functional models and tight coupling between the functional model and the dynamic model. Furthermore, \nnames must be unique for different elements of the system and the process of finding appropriate names \nsometimes diverts analysts attention from the problem being analyzed. In OMT, each object encapsulates \nthe details of its dynamic model and its functional model. Modification to a dynamic model or functional \nmodel does not affect the object model as far as it does not affect messages to and from the object. \nIn addition, message passing between objects does not require the unique naming of messages provided \nthat its destination objects are different. The third conviction is that the analysis results of RSA \nare easier to understand than those of OMT. The hierarchical structure of the functional models enables \nus to trace any level of detail of the functional models. It makes it easier for us to capture the system-level \nbehavior as well as detailed functional process-level behavior. On the other hand, OMT puts emphasis \non the object-level specification and does not provide sufficient support in specifying system-level \nbehavior. An Event Trace Diagram could be used for that purpose, but it only captures one specific scenario. \nParadoxically, RSA s emphasis on functional processes (which is the dynamic aspect of the problem) results \nin easier understanding of the analysis results (which is the static aspect of the analysis), while OMT \ns emphasis on object (which is the static aspect of the problem) results in easier enforcement of the \nanalysis process (which is the dynamic aspect of the analysis). In conclusion, we feel that RSA is useful \nfor analysts whose purpose is to specify the analysis results for customers and designers, while OMT \nis useful for analysts whose purpose is to analyze an unfamiliar problem for their own sake.  Unsolved \nProblems: The comparison of the results of applying RSA and OMT shows that the Object-Oriented approach \nwas effective for the analysis of the Image Filing system in that it led us to a stable system framework \nbased on the objects and relations among objects. However, it also became clear that understanding system-level \nbehavior and functionality is difficult as is guaranteeing consistency when we apply the Object-Oriented \napproach. Understanding each component of the system does not entail the understanding the system as \na whole. Although we did not mention CASE in this paper, we feel that improving the ease of understanding \nand enforcing the consistency of system-level specification with aid of CASE seems more important for \nthe Object-Oriented approach than for traditional approaches.  References: 1, D.J.Hatley, I.A.Pirbhai., \nStrategies for Real-Time System Specification, Dorset House Publishing, 1987 2. J.Rumbaugh, M.Blaha, \net al., Object Oriented Modeling and Design, Prentice Hall, 1991 Contact information: Akihiro Y amashiro \nHiroko Nakano Kazuki Yoshida Etsuo Saito Research &#38; Development Center Systems &#38; Software Engineering \nLaboratory Toshiba Corporation, Japan Washington, D.C. September 26-Octobet 1,1993 \n\t\t\t", "proc_id": "260303", "abstract": "", "authors": [{"name": "Akihiro Yamashiro", "author_profile_id": "81100135803", "affiliation": "Research & Development Center, Systems & Software Engineering Laboratory, Toshiba Corporation, Japan", "person_id": "P11711", "email_address": "", "orcid_id": ""}, {"name": "Hiroko Nakano", "author_profile_id": "81100633326", "affiliation": "Research & Development Center, Systems & Software Engineering Laboratory, Toshiba Corporation, Japan", "person_id": "P110801", "email_address": "", "orcid_id": ""}, {"name": "Kazuki Yoshida", "author_profile_id": "81538243256", "affiliation": "Research & Development Center, Systems & Software Engineering Laboratory, Toshiba Corporation, Japan", "person_id": "PP14217330", "email_address": "", "orcid_id": ""}, {"name": "Etsuo Saito", "author_profile_id": "81100652334", "affiliation": "Research & Development Center, Systems & Software Engineering Laboratory, Toshiba Corporation, Japan", "person_id": "P79448", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/260303.260315", "year": "1993", "article_id": "260315", "conference": "OOPSLA", "title": "Comparison of OOA and real-time SA&#8212;from the experiment of analyzing an image filing system", "url": "http://dl.acm.org/citation.cfm?id=260315"}