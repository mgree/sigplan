{"article_publication_date": "04-01-1993", "fulltext": "\n Addendum to the Proceedings OOPSLA Washington,DC-26September-l October, 1993 Workshop Object-Oriented \nReal-Time System Analysis and Design issues Workshop Co-Chairs: Mohamed Fayad Object Technologies, Inc. \nMilton L. Fulghum FlightSafety International Wei-Tek Tsai University of Minnesota Workshop Purpose and \nGoals The organizers were successful in enlisting participants from a number of organizations around \nthe world. Participants were selected based on a position paper related to the issues listed in the OOPSLA \n93 Advance Program. Those submitting papers which were not selected for discussion during the workshop \nwere invited to be observers during the workshop. There were nine participants, which made presentations \nrelated to their position papers, and 18 observers present at the workshop. Activities The agenda for \nthis workshop was designed to allow position presentations to be followed by a discussion period related \nto the presentation. A transcript of the workshop is being developed and should be available in the not-too-distant \nfuture. Object-Oriented Real-Time Perspectives The first two papers were presented by John Gilbert and \nBob Wilhelm of Objective Software. John Gilbert s presentation discussed many of the historical aspects \nof real-time systems. He also discussed the various types of real-time systems: hard real-time, continuous \nstream, distributed real-time, and deadline driven real-time. There was a challenge from another participant \nover a comment in his paper stating that, All but truly hard real-time systems benefit from the object-oriented \napproach. He indicated that objects can play a significant role in the organization and structuring of \nreal-time systems. Objects do not liberate machine cycles. On the contrary, they consume them. Bob Wilhelm \ndiscussed the structural and architectural implications of object-oriented systems. Much of his presentation \ndealt with concurrent objects with multiple threads of execution and various models for synchronizing \nmessage passing. He indicated the need for concurrency arises in 00 systems in order to effectively model \nthe real world. Inter-object concurrency represents the natural ability of real-world entities to act \nindependently and concurrently with each other. Intra-object concurrency represents the natural ability \nof real-world entities to exhibit multiple behaviors simultaneously.  Development Notions The next three \npapers were presented by Paul Ward of Software Development Concepts, Bo Sanden from George Mason University, \nand Francois Terrier of the French Atomic Energy Commission. They presented three development notions. \nPaul Ward made a brief comment about the need for effective handling of the complexity of real-time systems \nand led a discussion for the remainder of his time. He suggested that developers should not worry about \nactive or passive objects and discussed a virtual device object which interacts with other objects via \na highly abstracted, standardized interface. Such an object encapsulates two component objects: the first \nis an interface to the actual physical device, the second is a translator which intercepts the messages \nfrom the interface and from the users of the device, and modifies them as necessary to implement the \nvirtual device interface. Bo Sanden discussed various optimizations that can be used to implement object-oriented \nreal-time systems. He introduced entity-life modeling, ELM, as a subject-object computational model for \nreactive systems. This model distinguishes between active objects or subjects that concurrently drive \nthe software. Francois Terrier discussed an object-oriented approach to real-time scheduling design being \nused on the Intelligent Real-Time Control Project in Europe. Some real-time constraints can be attached \nto the active Addendum to the Proceedings OOPSLA 93 object. Keeping them inside the object allows them \nonly to make reactive management of the application, while giving an external access to them for an active \nobject dedicated to the global control of the application allows them to perform more predictive and, \nthus, efficient management of real-time applications.  Object-Oriented Support for Real-Time Applications \nDevelopment The next four papers dealt with the state of object- oriented method support for real-time \napplications development. Bran Selic of ObjecTime Limited in Canada discussed their ROOM method and the \naddition of a currency level to its system model to address real- time issues. He reported that they \nhave had some success in implementing real-time systems in Smalltalk. The conceptual base of ROOM is \ndescribed by a three- level structure which classifies modeling concepts based on their scope: System \nLevel Concurrency Level Detail Level Maher Awad of Nokia Research Center in Finland presented some interesting \nextensions to Rumbaugh s OMT method to create OMT/RT for handling real-time systems. Details are available \nin his excellent paper. Basically, the method handles concurrency by dividing the object model into object \ngroups. It also examines the state behavior of the objects, particularly the ones involved in the handling \nof many events. Carlos Pereira of the University of Stuttgart described some results from an ongoing \nresearch project aimed at applying object-oriented concepts throughout all phases of industrial automation \nand process control systems development. The focus of his talk was the specification of timing requirements \nusing object-oriented concepts. Ed Colbert of Absolute Software Co. of Los Angeles discussed the use \nof his OOSD method on real-time systems. His method drew a lot of criticism because of the number diagrams \nit advocates developing. It was thought that these diagrams would be expensive both to generate and to \nmaintain. In OOSD requirements analysis, four activities are applied to the system object to create the \nmodel of the application. Graphic and textual representations produced by these activities are used to \nvalidate the model. The four activities are: 1) Object-Interaction Specification 2) Object-Class Specification \n3) Behavior Specification 4) Property Specification These activities can be performed in almost any \norder once a initial Object-Interaction Specification has been drafted. Development Experiences The \nlast two papers reported the experiences of developers of object-oriented real-time systems. These papers \nwere of particular interest to this writer because they dealt with the development of object-oriented \nflight simulators. Larry Howard of the Software Engineering Institute discussed the real-time coordination \nof object- based flight simulators. He discussed various methods they have used to implement real-time \nair vehicle simulations using object-oriented techniques. The organizational pattern of components and \nassemblies of the air vehicle provides a context for making design decisions consistently for all instances. \nPeriodic processing is used to process crew control usage. Aperiodic events are used to achieve simulator-specific \nfunctionality. This functionality is assigned to objects with the above organizing structure. This approach \nprovides for consistency of structure of the solutions to the problems. This, in turn, helps with system \nintegration and performance analysis. David Weller of CAE-Link in Houston, Texas, described their experiences \nin developing the software for the Integrated Training Facility simulator for NASA. He noted that the \nobject diagram matched the diagram of the system of the system being simulated. They found that four \nto five levels of objects were the limit for their real-time system due to the overhead of each level. \nStandard 00 approaches fall short of addressing advanced issues like distribution and real-time performance. \nData consistency throughout the simulation further complicates the solution. Only through a combination \nof proven concepts (Rate Monotonic Scheduling, Interface Definitions, Flexible communications paths, \nand OOD) can we begin to tackle complex distributed, real-time systems systems. Results The result of \nthis workshop was a full day of sharing experiences, ideas, methods, and problems by quite a large group \nof methodologists, researchers, and real- time systems developers. The final activity of the workshop \nwas to discuss what should be done next. The consensus was that another workshop on the same, or a similar, \ntopic should be planned for OOPSLA 94 in Portland. It was suggested that efforts be made to bring a sh \narper focus on a set of issues by drafting a position statement for the response of candidate participants. \nMohamed Fayad and Milton Fulghum volunteered to take the lead in this activity. Contact information: \nMohamed Fayad Object Technologies, Inc. Saint Louis, MO mfayad@otiline.com Milton L. Fulghum FlightSafety \nInternational, Visual Simulation Systems Saint Charles, MO fulghum@vss.fsi.com Wei-Tek Tsai University \nof Minnesota Minneapolis, Minnesota tsai@cs.umn.edu Washington, D.C. September 26-October 1,1993  \n\t\t\t", "proc_id": "260303", "abstract": "", "authors": [{"name": "Mohamed Fayad", "author_profile_id": "81339498936", "affiliation": "Object Technologies, Inc.", "person_id": "PP43122401", "email_address": "", "orcid_id": ""}, {"name": "Milton L. Fulghum", "author_profile_id": "81100528270", "affiliation": "FlightSafety International", "person_id": "P201077", "email_address": "", "orcid_id": ""}, {"name": "Wei-Tek Tsai", "author_profile_id": "81452595244", "affiliation": "University of Minnesota", "person_id": "PP43119222", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/260303.260329", "year": "1993", "article_id": "260329", "conference": "OOPSLA", "title": "Object-oriented real-time system analysis and design issues", "url": "http://dl.acm.org/citation.cfm?id=260329"}