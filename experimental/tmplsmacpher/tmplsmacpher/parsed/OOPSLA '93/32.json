{"article_publication_date": "04-01-1993", "fulltext": "\n Addendum to the Proceedings Washington, DC-26 September-l Visual Object-Oriented Report by: Margaret \nM. Burnett Oregon State University Attendance at the Workshop: Organizers: Margaret Burnett Adele Goldberg \nTed Lewis Attendees: Marjan Bate Ed Baroth Bay-Wei Chang S.-K. Chang Wayne Citrin Phil cox John Hosking \nT. Dan Kimura Dan LaLiberte Chris Laffra David Leibs Stephen MacKay John Maloney David McIntyre Toshimi \nMinoura Francesmary Modugno Wolfgang Pree Albert Schappert Stefan Schiffer Randy Smith Michael Travers \nDavid Ungar Russel Winder Aim of the Workshop More and more researchers and developers are number of \nchallenges, including scalability, debugging, recognizing the potential of visual programming to make \nreusability, and some interesting questions regarding OOP easier and less error-prone. Yet, in spite \nof much appropriate representations. The notion of recent activity in the area of visual programming, \nthere appropriateness generated a lot of discussion are still a number of unsolved problems. The purposes \nof throughout the workshop. Phil Cox s presentation this workshop were both to determine and to advance \nraised eight common objections to the concept of visual the state of the art for visual OOP by: programming \nand pointed out the fallacies of these 1. Presenting and discussing recent and emerging objections. Finally, \nDavid Leibs discussed the benefits work in the area of visual object-oriented of visual techniques versus \nthe benefits of text, and programming talked about how these benefits can be integrated to 2. Discussing \nunsolved problems and directions for work together. His presentation was done using a live possible solutions \n October, 7993 Workshop  Programming 3. Generating new ideas via an active exchange among researchers \nand developers in the area Format of the Workshop The workshop consisted of three sessions, followed \nby a wrap-up and an informal demonstration period. The first session focused on the general ideas behind \nvisual object-oriented programming, and especially the challenges and opportunities. The second was about \nthe use of visual techniques to achieve both power and simplicity in object-oriented programming. The \nthird was centered on open issues and unsolved problems. In each session, there were three or four topics \ncovered in some depth, each led by a presenter or discussion leader. The presentations were short and \nusually highly interactive, with the attendees contributing comments and discussion throughout the presentation. \nSome of the presenters also had live systems or videos to demonstrate their work. Session 1: Visual Object-Oriented \nProgramming: What s the Point? One of the main outcomes of the workshop was an increased awareness of \nwhat visual object-oriented programming is really trying to accomplish, or perhaps even more importantly, \nthe things that it should be trying to accomplish. Adele Goldberg began the first session with an introduction \nand subsequent discussion into this question. She made the points that we should think more about what \nit is about visual techniques that could (1) help us express ourselves to the computer, and (2) help \nourselves and others to understand the program once it has been written. She also pointed out a system \nto illustrate his points with examples from VisualWorks. During this session, a number of observations \nwere made during discussion. Among them were: Visual does not always mean non-textual. Several examples \nwere given of visual arrangements of text. Careful attention as to the intended audience is needed, both \nwhen discussing the advantages and disadvantages of some particular approach and when designing a visual \nobject-oriented programming system. It was not felt that there is necessarily any one particular audience \nfor visual programming in general, but that there usually is for some particular visual system. Rightly \nor wrongly, syntax is often viewed as relatively unimportant for textual languages. However, this is \nunacceptable in visual languages. One issue that is important for visual OOP systems is harmony between \nthe language and the environment. Session 2: Power and Simplicity This session was about using visual \ntechniques to achieve power, but to do so more simply than has been done textually. Bay-Wei Chang presented \nwork he is doing jointly with David Ungar, Randy Smith, and John Maloney on a visual programming environment \nfor the prototype-based object-oriented language Self. The goal of this work is to focus exclusively \non objects in a very concrete way, so that the user will regard the image of the object on the screen \nis the actual object. They have incorporated several techniques originally inspired by cartoonists use \nof animation to reduce cognitive load in helping the user avoid figuring out what is changing and how. \nThe discussion centered on whether multiple views would be appropriate for such a concrete approach, \nand how abstractions might be employed for scalability without giving up the concreteness. David McIntyre \npresented a visual programming system called VAMPIRE for creating visual programming languages. The system \nis rule-based, featuring before and after images for specification of these languages. Dan Kimura demonstrated \nhis pen-based computing system, which is being integrated with a visual object- oriented system called \nHyperflow. The system is still being developed. One of his goals is to further explore the relationship \nbetween visual languages and user interfaces. His term for the research is visual software engineering. \nSession 3: Probing the Future: Issues and Unsolved Problems Margaret Burnett started the third session \nby pointing out a number of issues in visual object-oriented programming, and the ensuing discussion \nadded to this list. Some of these issues were: So far, visual environments for textual OOP languages \nhave had more success overall than visual OOP languages. One way to look at the difference is by describing \nit as an issue of granularity. Is there a granularity at which visual representations lose their effectiveness \nby nature, or is it simply a matter of time before appropriate representations for low-level programming \ndetails become further developed and accepted? Visual OOP is relatively new, and little attention has \nbeen paid so far to software engineering in this approach. What are the software engineering challenges \nand opportunities for visual OOP? Is visual OOP usable by real programmers trying to get complex, sophisticated \nprograms written and debugged? There are a number of programming-language issues that are critical to \nvisual OOP languages. Among them are the need for suitable approaches to polymorphism, to inheritance \nor delegation, and to the issue of sequence and state modification in a visual world. Visual OOP system \ndesigners need to be more cognizant of what the strengths of visual programming actually are, and to \nbuild upon those strengths. Some of these issues were expanded upon by the ensuing presenters. S.-K. \nChang s presentation was about the issue of dealing with complexity. He presented a visual specification \nsystem for modeling and prototyping real-time distributed systems. The idea is to integrate software \nengineering methods with Petri Nets as a way to achieve formal support in a visual approach. Stefan Schiffer \nled a discussion on the issues of software engineering for visual programming. He made the point that \nvisual programming researchers need to pay more attention to software engineering issues, and that OOP \nwith its many software engineering advantages may be just the ingredient needed to allow this to happen. \nWolfgang Pree contributed the idea of visual techniques to support software engineering from a structural \npoint of view. Russel Winder continued the software engineering theme in leading his discussion of the \nimpact of the granularity issue on software engineering concerns. Finally, Ed Baroth concluded the session \nback in the real world by a factual presentation of the use of visual programming at NASA JPL for real, \nproduction- programming tasks. His experience has shown a reduction in software development time by a \nfactor of 4 to 10. He also reports higher user satisfaction with the resulting programs. He described \nthe approach to program development in his organization, and the ensuing discussion included much speculation \nas to exactly which aspects of the visual programming effort were leading to the most improvement. Wrap-Up \nSession Ted Lewis wrapped up the workshop by distilling how the issues that were being raised in the \ndiscussions and presentations fit into a bigger picture. He pointed out several categories of issues \nthat had been raised. There were: The question of the goals of visual OOP: Is it for end-user programming, \nprofessional programmer productivity, or something else? More attention to the appropriateness of various \nvisual techniques that are used in visual OOP: He made an analogy to different kinds of books, and pointed \nout that for some kinds of books an almost purely textual form is most appropriate (e.g., a dictionary), \nand that for other kinds of books an almost purely pictorial form is most appropriate (e.g., a photo \nalbum). * There are several difficult issues specific to the OOP part of visual OOP that have hardly \nbeen explored at all. The question of sequencing in a visual programming environment is difficult and \nneeds more attention. The issues of data, data mappings, and representations of data are still relatively \nunstudied in visual OOP systems. The problem of scalability is perhaps the most pressing of all, and \nincludes many of the issues that were raised during the workshop.  Outcomes There was a general agreement \nthat the workshop had achieved the goals set forth in the Call for Participation, which are restated \nin the first section of this report. Many of the participants felt they were taking away at least one \nnew idea that they could use in some way in their work. A more concrete outcome of the workshop is to \nbe a book on Visual Object-Oriented Programming, containing full versions of many of the abstracts prepared \nfor this workshop by the participants. This will allow the workshop participants to share with a wider \naudience what the workshop collectively found to be the current state of visual OOP, as well as descriptions \nof recent and emerging work in the area. \n\t\t\t", "proc_id": "260303", "abstract": "", "authors": [{"name": "Margaret M. Burnett", "author_profile_id": "81100337865", "affiliation": "Oregon State University", "person_id": "PP42051259", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/260303.261240", "year": "1993", "article_id": "261240", "conference": "OOPSLA", "title": "Visual object-oriented programming", "url": "http://dl.acm.org/citation.cfm?id=261240"}