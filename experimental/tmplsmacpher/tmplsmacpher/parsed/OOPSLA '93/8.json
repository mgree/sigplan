{"article_publication_date": "04-01-1993", "fulltext": "\n Addendum to the Proceedings Washingfon, DC-26 September-7 October, 1993 Experience Report Reengineering \nLegacy Systems using GUI and Client/Server Technology Reported by: Owen Walcher American Management Systems, \nInc.  Introduction American Management Systems, Inc. (AMS) is a leader in helping clients strengthen \nperformance through the creative application of information technology. AMS has been developing and implementing \ndistributed and client/server applications for nearly a decade. We combine our industry-specific expertise, \ntechnical insights and proven methods and tools to help our clients achieve the highest levels of productivity, \nquality, and service from their information technology investments. Recently, AMS established the AMS \nCenter for Advanced Technologies as an applied research laboratory to review and make use of the rapidly \nchanging technology for developing large-scale business systems. Overview of Current Project AMS began \na project to re-engineer our mainframe- based legacy system, Mobile20008, using a Graphical User Interface \n(GUI) and client/server technology. Mobile2000 is a Customer Account Management and Billing System which \nsupports the cellular telephony industry. Mobile2000 consists of 200 on-line and 600 batch/report programs, \nconstituting approximately 2.2 million lines of COBOL code. Our goal is to develop a production-ready \nversion of Mobile2000 on-line processes using GUI and Object Oriented technologies. Design Tools and \nDeliverables The Mobile2000 GUI is based on a client/server architecture, with distributed data and cooperative \nprocessing. The client is an Intel-based PC running OS/2. The development language is Smalltalk/V, with \nENVY as the configuration manager and WindowBuilderPro as the user interface design tool. No licenses \nother than the operating system and communications software is required for runtime. Local data is stored \nas persistent objects (within the image), and in SQL tables. Using Communications Manager for OS/2, the \nworkstation communicates in a peer to peer fashion with the server. The server can be an OS/2- based \nserver or an IBM mainframe. The mainframe runs CICS, DB2, and the legacy COBOL programs developed as \npart of the original 3270-based Mobile2000 application. Scope and designs were determined based upon \nrecommendations from a variety of authors regarding Object Oriented Analysis and Design. The design documents \ndeveloped included the following: User Scenarios/Use Cases CRC Cards Event Diagrams Functional Edits \nand Rules Smalltalk designs including: a synopsis, data requirements, edits, and window layouts. Using \nthese design documents, we were able to provide sufficient information for Smalltalk programmers to implement \nthe desired functionality.  Implementation Approach Successful re-engineering requires a clear vision \nof the future for your legacy system. You must objectively analyze your existing application, itemizing \nboth its strengths and weaknesses, and identify specific goals for implementing your system using object \ntechnology. We, for example, understood that object-oriented analysis and design could broaden our legacy \nsystem s functionality and improve its ease of use. It was towards these goals that we directed our efforts. \nOur experience has shown that design tradeoffs change as you become more conversant in object technology. \nOur original goal was too narrow to achieve our initial objectives. We believed that implementing only \na GUI would achieve the results we were expecting. Rather, combining the GUI with object technology, \nclient/server architecture, and distributed data and processing brought us closer to our initial goal \nof increased functionality and improved ease of use. A preliminary step in re-engineering a legacy system \nis to develop a methodology merging what has been successful in the past and embellishing it with those \nprocesses and procedures unique to object technology. Secondly, developers need to be trained in the \nobject Addendum to the Proceedings OOPSLA 93 paradigm using the new technologies that are required to \nre-engineer your existing legacy system. Specifically, Authors of Conference Presentation: an object \nmodel needs to be defined identifying the relationships between the classes, thus providing you Brian \nA. Schultz with a tool to work from as you enhance the functionality Owen Walcher within your legacy \nsystem. Also, a robust technical American Management Systems, Inc. architecture needs to be developed \nwhich will allow you to extend your application across multiple platforms. Finally, you need to constantly \niterate to extend and improve the functionality within your application.  Summary A client/server architecture \nhas been put into place to begin mass rollout of the Mobile2000 GUI. Our future plans are to continue \nto enhance our technical implementation, concentrating on both integration and performance. In terms \nof implementing additional functionality, several projects have been identified, which will follow the \napproach of initiating a transaction, or a set of transactions, on the client and executing current Mobile2000 \nsoftware on the server. At the same time, we will continue to update our Methodology with the unique \ncharacteristics required when using object technology. Washington, D.C. September 26-October 1,1993 \n\t\t\t", "proc_id": "260303", "abstract": "", "authors": [{"name": "Owen Walcher", "author_profile_id": "81100367495", "affiliation": "American Management Systems, Inc.", "person_id": "P212642", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/260303.260313", "year": "1993", "article_id": "260313", "conference": "OOPSLA", "title": "Reengineering legacy systems using GUI and client/server technology", "url": "http://dl.acm.org/citation.cfm?id=260313"}