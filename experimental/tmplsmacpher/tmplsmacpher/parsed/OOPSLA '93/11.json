{"article_publication_date": "04-01-1993", "fulltext": "\n Addendum to the Proceedings OOPSLA Washington, DC-26 September-l October, 1993 Experience Report Creating \na Practical Object-Oriented Methodology Reported by: Judith N. Cohen American Management Systems 1. \nIntroduction American Management Systems (AMS) created a system development life-cycle methodology for \ndeveloping object-oriented systems. The methodology integrates accepted industry techniques and object \ndevelopment approaches with AMS s 23 years of systems development experience to produce a repeatable \nprocess across the full system life-cycle. This report shares AMS s experiences in developing and using \nthe methodology. The Life-cycle Productivity System (LPS) Methodology: Object Technology is based on \nreal project experiences and is currently being used to guide object development efforts at AMS.  2. \nDeveloping the Methodology The development of the methodology has been an iterative process, much like \nthe development of the object-oriented systems it addresses. This section describes AMS s need for an \nobject methodology and early steps in the development process. 2.1 The Need for an Object Methodology \nOver the last three years, AMS has spent a significant amount of time and resources researching and exploring \nthe use of object technology to develop business systems. AMS is committed to the use of object technology \nas a way to deliver effective and flexible systems to our clients. To encourage the use of object technology, \nwe developed a methodology to provide guidance to our project managers. As we began to develop the methodology, \nwe were faced with a chicken and egg problem. On one hand, we wanted a practical methodology based on \nour actual experiences with object technology. Our current system development methodology, the LPS Methodology, \nis based on AMS s extensive experience developing business systems. On the other hand, several projects \nwere starting up, and there was little time to acquire that experience.  2.2 First Steps The initial \nchallenge of the methodology development team was to understand object technology, focusing on how it \nwas different from the old paradigms. Books that influenced our early thinking include David Taylor s \nbooks, Object-Oriented Technology: A Manager s Guide and Object-Oriented Information Systems: Planning \nand Implementation, Rebecca Wirfs-Brock et. al. s Designing Object-Oriented Software, and Ivar Jacobson \ns Object-Oriented Software Engineering: A Use Case Driven Approach. We also read many periodicals and \nnewsletters such as Object Magazine and the Smalltalk Report. And we attended OOPSLA 92, which for several \nof us, represented our first immersion into objects. Our second step was to seek out the experts. We \nspent many days with outside consultants discussing the differences between more traditional, structured \napproaches and object-based approaches, and what is unique about the object life-cycle. The use of outside \nconsultants helped us make the initial leap into object technology. Object projects began throughout \nthe company, as they each charged ahead without the benefit of a well established methodology. We maintained \na close working relationship with these pioneering projects. We participated in design meetings, project \ntraining classes, and quality reviews. These projects were testing many of the techniques they were reading \nin the books, and were starting to understand what worked and what didn t in our environment. As we worked \nwith these projects, we passed on what we learned from one project to another. In effect, the methodology \neffort became a clearing house for object development at AMS. Meanwhile, as a stopgap measure, we distributed \na Quick Start Kit to project managers interested in object technology. The kit, which included an annotated \nbibliography, articles, and some early lessons learned, provided project managers and developers with \nthe benefit of our knowledge and experiences to date. Addendum to the Proceedings OOPSLA 93 2.3 Build \nvs. Buy Decision From the beginning, we knew that we wanted a methodology that fulfilled our practical \nneeds. Based on our initial research, it became obvious that no single methodology or method was going \nto satisfactorily address object technology system development at AMS. From our experience with building \nlarge business systems, we know that systems development goes beyond analysis, design and coding: it \nalso includes critical activities such as analyzing business objectives and determining requirements, \nassessing organization impact, installation, etc. While AMS s LPS Methodology addresses all aspects of \nsystem development and incorporates many individual methods and techniques to accomplish these activities, \nthe methodologies we encountered through our reading and research were really techniques and methods. \nWe concluded that to develop a methodology, we would have to combine AMS system development experience, \nas embodied in the LPS Methodology, with object techniques and methods to provide a methodology that \nuniquely addresses the use of object technology. 2.4 Evolution of the Methodology As a result of continuing \nto research what was available in the industry and working closely with projects, the methodology began \nto evolve. We learned from projects, incorporated what we learned into the growing methodology, and then \nvalidated that experience on other projects. Once we defined the macro process and filled in some of \nthe micro process, we prepared and distributed our first release. The methodology will continue to evolve \nbased on further industry work, research and on our continuing experience with development projects. \n 3. LPS Methodology: Object technology The methodology helps project managers and team members make \nthe shift to object technology. It provides guidance in the use of object-oriented techniques, the development \nof models, reuse and object-oriented development approaches. As a complete methodology addressing all \naspects of object technology, LPS Methodology: Object Technology helps project managers plan and execute \nprojects. 3.1 Techniques The object methodology incorporates two techniques widely used across the industry: \nuse cases and responsibility-driven design. We combined the techniques because we found them to be complementary \nfor defining and relating objects. In the methodology, we specify several levels of use cases. At the \nhighest level, use cases define the interaction of the system with its users and with external systems. \nAt a more detailed level, it defines the major scenarios for the system. Use cases enable communication \namong system developers and users alike. We expect to add new techniques to the methodology as we become \nexperienced with them and see their value in our project work. 3.2 Use of models The methodology specifies \nthe development of several models. The system use model defines global use cases, and in essence, defines \nthe system boundary. The high-level system model consists of the initial object model and system use \ncases, which define the basic scenarios for the system. For example, in a loan origination system, the \nuse case would describe how an applicant applies for a loan. The analysis model is a logical implementation- \nindependent view of the system objects. The analysis model translates into a design model that reflects \nthe physical characteristics of the system, such as the technical environment, performance requirements, \ndatabase, etc. Both the analysis and design models contain the business model and application model. \nThe business model, also called the domain model, addresses objects with business functionality. For \nexample, in a loan origination system, business objects would include loans, customers, banks, and credit \nlimits. The application model includes objects for the user interface. Examples include windows, menus, \nand dialog boxes. The database model addresses the mapping between the object model and the database. \nMost of our systems are database-intensive and currently use relational databases. 3.3 Reuse The methodology \nfocuses on reuse within projects as well as reuse between projects and throughout the company. A new \nproject role has emerged to address reuse within a project, the object manager or librarian. AMS is accomplishing \nreuse across the company through Object CORE, our reusable infrastructure class library. Many organizations \ntalk about reuse being counter to their corporate culture. At AMS, we have developed and used common \nmiddleware in our software development efforts for the past 15 years. The concept of reuse is thoroughly \ningrained in our corporate culture. 3.4 Development approach Object technology development is both incremental \nand iterative, By incremental development, we mean building the system in pieces. By iterative, we mean \nthe predicted rework of a system in a controlled manner l The challenge in iterative development is to \nknow when to stop iterating. Iterative and incremental development is accomplished through versioning \nbased on system use cases. The project team selects a subset of system use cases and builds the lirst \nversion based on that subset. They then select a second subset and build the second version upon the \nfirst. Successive versions are then built upon previous ones until a completed piece of business t A. \nCockbum, The Impact of Object-Orientation on Application Development, IBM Systems Journal, Vol. 32, No. \n3, (1993), pp. 420444. Washington, D.C. September 26-October 1,1993 functionality is implemented and \ndeployed in our client s organization. There is iteration within each of the versions. For each subset \nof system use cases, the project team performs analysis modeling and design modeling, and develops the \nversion. These activities are performed iteratively, with feedback into the system use cases. The process \nresembles a mini waterfall process for each version. But unlike the waterfall process, in which each \nactivity (e.g. analysis, design, coding) is performed in its entirety, there is a high degree of iteration \namong these activities. Actuality, few organization used the waterfall without some degree of iteration. \n 3.5 Process for Planning and Executing Projects The methodology provides a mechanism for planning and \nexecuting projects through a four phase development approach: Management Objectives and Business System \nConcept is the first phase of all AMS projects. In this envisioning phase, the project team defines the \nbusiness objects and develops a system model that address all aspects of the system, including functional \nand technical considerations. Users then validate the model and define a plan for the remainder of the \nproject. The User Modeling and General System Design phase focuses on defining a set of system use cases \nthat describes how users interact with the system, and provides a broad understanding of system functionality \nand scope. During System Construction, the analysis model is refined into a design model and the system \nis developed based on the model. In System Implementation, acceptance testing is performed and the system \nis deployed. These phases are similar to the phases specified in the LPS Methodology for traditional \nsystem development with one major exception. The Detailed Design and System Development phases, present \nin the previous methodology, have been combined into a System Construction phase. Within each phase there \nare activities, tasks and deliverables. There is one deliverable for each task, so that project managers \ncan effectively control the project and track progress. At the end of each phase, a major deliverable \nis produced. 3.6 Complete methodology addressing system development The object methodology is part of \nthe overall LPS Methodology that addresses different types of development. LPS Methodology: Object Technology \nfocuses on the impact of object technology and how it is different from more traditional approaches. \n 3.7 Effect of New Technology Paradigm Projects that use object technology typically employ client/server \narchitectures and include graphical user interfaces (GUI). It is difficult to isolate the effect of object \ntechnology on projects and project teams, since project teams often ramp up with these new technologies \nsimultaneously. From our experience, many of the issues identified as resulting from object technology \nare more a result of the client/server environment. The LPS Methodology has separate components for client/server \ndesign and for GUI design. The Object Technology volume is meant to be used in conjunction with these \nother volumes. Project managers combine task lists from these LPS Methodology components to create a \ncustomized task plan for the project.  4. Using the Methodology The first release of the LPS Methodology: \nObject Technology was issued in July 1993. A second release is plarmed for first quarter of 1994. As \nof October 1993, over 100 copies are in distribution. The potential audience includes AMS s professional \nstaff of 2500 combined with an almost an equal number of personnel from client organizations with whom \nwe work in partnership. Over the next several years, we believe that the object methodology will become \nthe dominant methodology used at AMS. The methodology is being rolled out as part of a three- part strategy, \nthat also includes training and mentoring. A new project team attends training, reads and understands \nthe methodology, and works with a consultant and/or mentor to gain a better understanding for how the \ntechniques and concepts work. 5. Conclusion AMS has created a practical methodology that defines a repeatable \nprocess for developing object-oriented systems. The LPS Methodology: Object Technology provides a full \nlife-cycle solution encompassing tasks, techniques, and deliverables, enabling project managers to plan \nand execute projects. AMS believes that the LPS Methodology: Object Technology will help our clients \nrealize the promise of object technology.  Contact Information: Judith N. Cohen American Management \nSystems 4050 Legato Road Fairfax, VA 22033 703-267-2280 judy-Cohen @tt~ail,atnsinc.cotn Addendum to \nthe Proceedings OOPSLA 93  \n\t\t\t", "proc_id": "260303", "abstract": "", "authors": [{"name": "Judith N. Cohen", "author_profile_id": "81100146836", "affiliation": "American Management Systems, 4050 Legato Road, Fairfax, VA", "person_id": "PP31029378", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/260303.260316", "year": "1993", "article_id": "260316", "conference": "OOPSLA", "title": "Creating a practical object-oriented methodology", "url": "http://dl.acm.org/citation.cfm?id=260316"}