{"article_publication_date": "10-16-2005", "fulltext": "\n\t\t\t", "proc_id": "1094855", "abstract": "Aspect-Oriented Programming (AOP) has been proposed as a complementary modularization technique to the existing object-oriented techniques. AOP encourages the modular development of complex software by providing support for cleanly separating the basic system functionality from its crosscutting concerns. Since, AOP aims to improve the maintainability and reusability of OO software systems, it is necessary to develop case studies that enable us to evaluate: (i) how it can be used in conjunction with existing OO techniques; and (ii) how it can be used to modularize specific software features better than OO techniques. In this work, we present the refactoring of the JUnit object-oriented framework using the AspectJ programming language. The modularization of specific features of the JUnit framework using AspectJ has brought benefits to the understanding and maintainability of the framework, as well as to implement more flexible extensions.", "authors": [{"name": "Uir&#225; Kulesza", "author_profile_id": "81100186619", "affiliation": "PUC-Rio, Brazil", "person_id": "P698178", "email_address": "", "orcid_id": ""}, {"name": "Cl&#225;udio Sant'Anna", "author_profile_id": "81319501009", "affiliation": "PUC-Rio, Brazil", "person_id": "PP14115991", "email_address": "", "orcid_id": ""}, {"name": "Carlos Lucena", "author_profile_id": "81100332255", "affiliation": "PUC-Rio, Brazil", "person_id": "PP15029367", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/1094855.1094901", "year": "2005", "article_id": "1094901", "conference": "OOPSLA", "title": "Refactoring the JUnit framework using aspect-oriented programming", "url": "http://dl.acm.org/citation.cfm?id=1094901"}