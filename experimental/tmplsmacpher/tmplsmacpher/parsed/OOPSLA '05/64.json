{"article_publication_date": "10-16-2005", "fulltext": "\n\t\t\t", "proc_id": "1094855", "abstract": "We have proposed and implemented, and will demonstrate, the language CoJava, which offers both the advantages of simulation-like process modeling, and the capabilities of true decision optimization.By design, the syntax of CoJava is identical to the programming language Java, extended with special constructs to (1) make a non-deterministic choice of a numeric value, (2) assert a constraint, and (3) designate a program variable as the objective to be optmized.A CoJava program thus defines a set of nondeterministic execution paths, each being a program run with specific selection of values in the choice statements. The semantics of CoJava interprets a program as an optimal nondeterministic execution path, namely, a path that (1) satisfies the range conditions in the <i>choice</i> statements, (2) satisfies the assert-constraint statements, and (3) produces the optimal value in a designated program variable, among all execution paths that satisfy (1) and (2). Thus, to run a CoJava program amounts to first finding an optimal execution path, and then procedurally executing it.To find an optimal non-deterministic execution path, we have developed a reduction to a standard constraint optimization formulation. Constraint variables represent values in program variables that can be created at any state of a non-deterministic execution. Constraints encode transitions, triggered by CoJava statements, from one program state to the next.Based on the reduction, we have developed a CoJava constraint compiler. The compiler operates by first translating the Java program into a similar Java program in which the primitive numeric operators and data types are replaced by symbolic constraint operators and data types. This intermediate java program functions as a constraint generator. This program is compiled and executed to produce a symbolic decision problem. The decision problem is then submitted to an external optimization solver.", "authors": [{"name": "Alex Brodsky", "author_profile_id": "81100524794", "affiliation": "George Mason University, Fairfax, VA", "person_id": "PP40028205", "email_address": "", "orcid_id": ""}, {"name": "Hadon Nash", "author_profile_id": "81100276734", "affiliation": "Google Inc., Mountain View, CA", "person_id": "PP14103759", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/1094855.1094931", "year": "2005", "article_id": "1094931", "conference": "OOPSLA", "title": "CoJava: a unified language for simulation and optimization", "url": "http://dl.acm.org/citation.cfm?id=1094931"}