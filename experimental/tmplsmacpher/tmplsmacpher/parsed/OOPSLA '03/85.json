{"article_publication_date": "10-26-2003", "fulltext": "\n Experience in Developing the UrbanSim System: Tools and Processes [Extended Abstract] Bjorn Freeman-Benson \nand Alan Borning Dept. of Computer Science &#38; Engineering University of Washington Box 352350 Seattle, \nWashington 98195-2350 {bnfb,borning}@cs.washington.edu Categories and Subject Descriptors D.2.2 [Software \nEngineering]: Design Tools and Tech\u00adniques; D.2.5 [Software Engineering]: Testing and De-bugging Testing \ntools; D.2.6 [Software Engineering]: Programming Environments Programmer workbench; I.6.3 [Simulation \nand Modeling]: Applications  General Terms Design, Human Factors Keywords UrbanSim, urban simulation, \nland use, transportation, envi\u00adronmental impacts, Java, Eclipse, MySQL, CVS, Ant, Fire\u00adman, JUnit, FIT, \nWiki, Taskzilla 1. PROJECT CONTEXT UrbanSim is a sophisticated simulation system for model\u00ading urban \nland use, transportation, and environmental im\u00adpacts, over a period of 20 or more years, under alternate \npossible scenarios [5, 6, 7]. Our purpose is to support demo\u00adcratic decision-making on such issues as \nbuilding new transit systems or freeways, or changing zoning or economic incen\u00adtives, as well as on broader \nissues such as sustainable, livable cities, economic vitality, social equity, and environmental preservation. \nThe domain is politically charged, with di.er\u00adent stakeholders bringing strongly held values to the table. \nOur goal is not to favor any particular stakeholder values, but rather to let the stakeholders evaluate \nthe results them\u00adselves. This need for neutrality has several implications for the development process, \namong other things resulting in our choice of an open source/open process model. Urban-Sim is also an \nNSF-funded infrastructure project with a mix of research and development goals. Unlike most academic \nCopyright is held by the author/owner. OOPSLA 03, October 26 30, 2003, Anaheim, California, USA. ACM \n1-58113-751-6/03/0010. projects, this one has real customers (municipal planning organizations) with \nreal needs. Thus the UrbanSim project has a number of simultaneous goals, which are in some tension: \nproducing credible, reli\u00adable code; utilizing a .exible process that adapts to new re\u00adsearch discoveries; \nmaintaining a coherent architecture and continuous development progress; and using part-time and inexperienced \nstudent sta. in addition to experienced full\u00adtime sta.. (This is in contrast to the usual model in XP \nand other agile development processes, in which all devel\u00adopers are considered more-or-less equally experienced \nand skilled.) 2. TOOLS AND PROCESSES In the presentation at OOPSLA, we will discuss the tools we have \nchosen, modi.ed, or developed in-house; and the reasons why we believe that these tools are good choices \nfor this mixed research/product development environment. We summarize these considerations brie.y in \nthis ex\u00adtended abstract. Java UrbanSim is a .ne-grained simulation, with much more spatial detail than \nother land use models. This makes signi.cant demands on our software, both for execution speed and memory \nusage. Despite these de\u00admands, we have been satis.ed with our decision to develop in Java rather than \nC or C++, because of the gains in programmer productivity (in particular not having to do explicit memory \nmanagement). Some additional work has been required to improve execu\u00adtion speed and memory usage [3, \n4], which has added to the programmer burden and code complexity; but the overall tradeo. has still supported \nour choice. Eclipse We have been using Eclipse (http://www. eclipse.org) as our Interactive Development \nenviron\u00adment throughout the time that the .rst author has been associated with the project; it has served \nus well. More recently, we have implemented an inter\u00adactive user interface to UrbanSim for expert users \nas an Eclipse plug-in, which allows us to leverage many of the Eclipse tools for the UI. (Since UrbanSim \nis an open source project, licensed under the GNU Pub\u00adlic License, it was also essential that our user \ninter\u00adface platform also be open source with a compatible license.) MySQL UrbanSim makes heavy use of \na relational database to store information about the region be\u00ading simulated. At one time, we supported \na variety of databases. Recently, however, we have standard\u00adized on MySQL (http://www.mysql.com). This \nhas al\u00adlowed us to tune our implementation to the API s pro\u00advided by MySQL, and has simpli.ed the database \nin\u00adterface code that we must maintain. (As with Eclipse, MySQL being an open-source project has been \nessen\u00adtial in allowing this choice.) CVS We use the CVS version control system [2] to manage our source \ncode, documentation, and web site. This has proven valuable in coordinating the work of the team; CVS \nis also well-integrated with Eclipse. Ant We use the Ant build tool (http://ant.apache.org) to build \nand test UrbanSim outside of the Eclipse en\u00advironment. Fireman Fireman is a Tinderbox-like automatic \nbuild and test system, which we have locally modi.ed and ex\u00adtended. (It is one of many such Continuous \nTest and Integration Programs; others include Cruise Control and Anthill.) Whenever new code is checked \ninto our CVS repository, a battery of tests are automatically run andmust be passedfor the checkin to \nsucceed. JUnit and FIT As in other agile development processes, we employ test-.rst development with \nan extensive battery of tests, including both unit tests and accep\u00adtance tests. The unit tests are written \nusing JUnit (www.junit.org), and the acceptance tests with Ward Cunningham s Framework for Integrated \nTests (http: //fit.c2.com/). Wiki For internal project communication, including project planning, internal \ndocumentation, procedures, hardware inventories, and so forth, we make extensive use of wiki web pages \n(http://www.wiki.org/). We earlier maintained this material as web pages under CVS control; but found \nthis overly heavy-weight for the frequent updates that we made. Taskzilla We use a locally-modi.ed version \nof the Bugzilla bug tracking system (http://www.bugzilla.org), both for bug tracking, and also for feature \nand work requests. The use of this tool has evolved from its original use for bug tracking toward more \ngeneral project planning support, including work by the mod\u00adeler group as well as the software developers. \nA re\u00admaining problem with the tool is that it focuses on .ne\u00adgrained tasks; we believe that some additional \nsupport for larger-grained project management, in addition to the plans on wiki pages, could be useful \nas well. The Tra.c Light A novel feature of our environment is that we have a physical tra.c light connected \nto our Fireman build process. (Actually, there are three of them in our lab, and a virtual one on the \nweb at http: //www.urbansim.org/fireman.) This highly visible, physical software status indicator provides \na powerful symbol of the current state of the software. Further details of the tra.c light and its social \nimplications are discussed in reference [3]. The Dashboard The dashboard provides an indication of the \ncurrent progress toward our development goals for the current software iteration. Since we are run\u00adning \nan open process project, like the tra.c light, the Dashboard is publicly visible on our web site (http://www.urbansim.org/dashboard). \nWe also support these tools with a set of processes, in\u00adcluding daily stand-up meetings at the start \nof the day [3], and today messages at the end [1]. The tools and pro\u00adcesses are tightly integrated. For \nexample, our Dashboard support program extracts task information from Taskzilla, along with schedule \ninformation from a wiki page that the developers .ll out, and displays the results on another wiki page. \nSimilarly, the tra.c light is controlled by Fireman, which in turn is linked with our CVS repository. \nTogether, this integrated collection of tools and processes provides strong support for our agile development \nprocess. Acknowledgments Many thanks to all the members of the UrbanSim project team, in particular the \ndevelopers, for their work on these tools and their application. This research has been funded in part \nby grants from the National Science Foundation (EIA\u00ad0090832 and EIA-0121326) and the Federal Highway \nAdmin\u00adistration, in part by the University of Washington PRISM project, and in part by a partnership \nwith the Puget Sound Regional Council. 3. REFERENCES [1] A. B. Brush and A. Borning. Today messages: \nLightweight group awareness via email. In CHI 2003 Extended Abstracts, pages 920 921. ACM Press, Apr. \n2003. [2] P. Cederqvist. Version Management with CVS. iUniverse.com, 2000. [3] B. Freeman-Benson and \nA. Borning. YP and urban simulation: Applying an agile programming methodology in a politically tempestuous \ndomain. In Proceedings of the 2003 Agile Development Conference, Salt Lake City, Utah, June 2003. Available \nat http://www.urbansim.org/papers. [4] M. Noth. Exploding Java Objects for Performance.PhD thesis, Dept. \nof Computer Science &#38; Engineering, University of Washington, Sept. 2003. [5] P. Waddell. UrbanSim: \nModeling urban development for land use, transportation, and environmental planning. Journal of the American \nPlanning Association, 68(3):297 314, Summer 2002. [6] P. Waddell, A. Borning, M. Noth, N. Freier, M. \nBecke, and G. Ulfarsson. Microsimulation of urban development and location choices: Design and implementation \nof UrbanSim. Networks and Spatial Economics, 3(1):43 67, 2003. [7] P. Waddell and G. F. Ulfarsson. Introduction \nto urban simulation: Design and development of operational models. In P. Stopher, K. Button, K. Haynes, \nand D. Hensher, editors, Handbook of Transport, Volume 5: Transport Geography and Spatial Systems. Pergamon \nPress, 2003. In press.  \n\t\t\t", "proc_id": "949344", "abstract": "", "authors": [{"name": "Bjorn Freeman-Benson", "author_profile_id": "81100123282", "affiliation": "University of Washington, Seattle, WA", "person_id": "P30954", "email_address": "", "orcid_id": ""}, {"name": "Alan Borning", "author_profile_id": "81100164129", "affiliation": "University of Washington, Seattle, WA", "person_id": "PP15024639", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/949344.949438", "year": "2003", "article_id": "949438", "conference": "OOPSLA", "title": "Experience in developing the urbanSim system: tools and processes", "url": "http://dl.acm.org/citation.cfm?id=949438"}