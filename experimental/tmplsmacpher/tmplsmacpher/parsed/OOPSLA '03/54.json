{"article_publication_date": "10-26-2003", "fulltext": "\n Panel Meeting the Challenge of Software Engineering Education for Working Professionals in the 21st \nCentury Software engineering education for working professionals remains a Steven Fraser (Chair) Independent \nConsultant Ray Bareiss CMU (West) Barry Boehm USC Mark Hayes Microsoft Corporation Laura Hill Sun Microsystems \nGabby Silberman IBM Dave Thomas Bedarra Research Labs &#38; Carleton University ABSTRACT partnership. \nSteve is an avid operatunist, videographer and a mem\u00adber of both the ACM and the IEEE. challenge from \nthe perspective of determining relevant content; 2. Ray Bareiss, bareiss@cs.cmu.edu identifying effective \nmethods for delivery; and maintaining the focus Ray Bareiss is Director of Educational Programs and a \nconsulting and motivation of students. This panel brings together academic and professor for Carnegie \nMellon s West Coast Campus, where he also industry professionals to share their perspectives and experiences. \nteaches in the software engineering and learning sciences programs. Anticipated points for discussion \ninclude: education/training de-He was a founder of Cognitive Arts Corporation and served as ex\u00adlivery \nstrategies, curriculum definition, certification challenges, ecutive vice president for strategic projects, \nsuch as virtual univer\u00admarketing issues, collaboration strategies to engage industry spon\u00adsity collaborations \nand large-scale corporate eLearning initiatives. sorship, value assessments for students and sponsoring \norganiza-Prior to joining Cognitive Arts, Bareiss was Assistant Director of the tions, and program success \nstories. This will be a highly interactive Institute for the Learning Sciences at Northwestern University, \nas panel and the audience should come prepared to both ask and an\u00adwell as an Associate Professor of Computer \nScience and Education. swer questions. Bareiss specializes in computer-based learning environments, corpo\u00adrate \nmemory and computer-based performance support, and cased-  Categories &#38; Subject Descriptors: based \nreasoning. He is also the author of a number of books and ar\u00adK.3.1 Computer Uses in Education ticles. \nBareiss holds a Ph.D. in Computer Sciences and a B.S. in K.3.2 Computer and Information Science Education \nCommunications from the University of Texas at Austin. K.7 [The Computing Profession]: Certification, \nLicensing While education in software engineering has a more intensely prac-General Terms: Human Factors, \nStandardization tical focus than most university programs, it still lapses, all too of\u00ad ten, into the \ntraditional mode of teaching, lecture followed by well-Keywords: Learning-How-To-Learn, Software Engineering \ndefined practice problems, and into a traditional stovepipe cur-Education, Professional Masters Program, \nCertification, Industry riculum. In contrast, current research in Cognitive Science suggests Relevance \na more effective approach: learning by doing in a realistic context in which knowledge and skills are \ntaught just in time and in which 1. Steven Fraser, sdfraser@acm.org knowledge and skills that are used \ntogether are taught together, re\u00adgardless of traditional curricular boundaries. Such an approach pro- \nSteve Fraser is an independent consultant on software engineering motes integration and retention, as \nwell as the effective transfer of and technology transfer best practices. In 2003 he served as the Pan\u00adknowledge \nand skills from school to the job. els Chair for both XP2003 and OOPSLA 03. From 1987 to 2002 Steve served \nin a variety of diverse software technology program Carnegie Mellon s West Coast Campus offers professional \nmaster s management roles at Nortel Networks including: Process Architect, degrees in software engineering, \neBusiness Technology, the man-Senior Manager (Disruptive Technology), Process Engineering Ad-agement \nof software systems development, and security &#38; net\u00advisor, and Software Reuse Evangelist. Steve launched, \nand served as working, all of which employ a new instructional model called the Chair and Event Director \nof the Nortel Networks Design Forum, a Story-Centered Curriculum. The idea of such a curriculum is that \nproprietary global technology transfer event run by video, audio and since all learning is by doing, \nthe curriculum should provide exactly web conferencing. In 1994 he served a year as a Visiting Scientist \nat the kind of things to do that one does upon entering the real world the Software Engineering Institute \n(SEI) collaborating with the Ap-with the kind of degree for which one is preparing. If a student will \nplication of Software Models project on the development of team-be getting a degree in, say, software \nengineering, then the task for based domain analysis techniques. In 1993 while working with the designer \nof the SCC in software engineering is to take the set of Tony Bailetti (Carleton University) Steve helped \nlaunch the BNR things ranging from technical to project management to interper-ConGESE (an industrial \nsoftware engineering masters program) sonal that a professional software engineer does over the course \nof his or her early career and to integrate them within a coherent story. In other words, the designer \ncreates a sequence of situations that Copyright is held by the author(s)/owner(s). OOPSLA 03, October \n26-30, 2003, Anaheim, California, USA. lead one into another, building the breadth and depth of skills \nre- ACM 1-58113-751-6/03/0010. quired by a journeyman software engineer. The intent is to make the story \nthat contains them as realistic as possible, thus providing stu\u00addents with a year whose experiences stay \nin their memories and in which they have encountered much of what they may actually en\u00adcounter in their \nprofessional lives. Our students are coached by CMU faculty and experienced indus\u00adtrial practitioners \nto learn knowledge and skills just in time, and they are evaluated on what they produce according to \nprofessional stan\u00addards. Each program concludes with an intensive practicum in which students apply their \nnewly acquired skills to a complex, real\u00adworld problem. Although our program is in its early stages, \ninitial results are quite promising; industrial partners are happy, and as one student put it, things \nyou learn on Monday, you can apply at work on Wednesday. The certification of software engineers is premature, \ngiven that there is not a consensus in the community regarding the key knowledge and skills which a software \nengineer must possess and, perhaps, not even consensus regarding the purpose of certification.   3. \nBarry Boehm, boehm@cse.usc.edu Barry Boehm is the TRW Professor of Software Engineering and the Director \nof the Center for Software Engineering in the USC Com\u00adputer Science Department. Dr. Barry Boehm served \nwithin the U.S. Department of Defense (DoD) from 1989 to 1992 as director of the DARPA Information Science \nand Technology Office and as director of the DDR&#38;E Software and Computer Technology Office. He worked \nat TRW from 1973 to 1989, culminating as chief scientist of the Defense Systems Group, and at the Rand \nCorporation from 1959 to 1973, culminating as head of the Information Sciences Depart\u00adment. He entered \nthe software field at General Dynamics in 1955. His current research interests involve recasting software \nengineering into a value-based framework, including processes, methods, and tools for value-based software \ndefinition, architecting, development, and validation. His contributions to the field include the Construc\u00adtive \nCost Model (COCOMO), the Spiral Model of the software process, and the Theory W (win-win) approach to \nsoftware man\u00adagement and requirements determination. He is a Fellow of the ACM, AIAA, IEEE, and INCOSE, \nand a member of the National Academy of Engineering. Our 36 USC Center for Software Engineering industry \nand gov\u00adernment Affiliates help keep us in touch with technology, appli\u00adcations, and economic trends \nthrough participation in our annual workshops and collaborative projects. These cover such areas as value-based \nspiral model extensions, COCOMO cost-schedule\u00adquality estimation model extensions, UML-xADL architecture \nspe\u00adcification extensions, COTS-based system development, and agile methods. Our Affiliates include IBM/Rational, \nMicrosoft, Sun, HP, Motorola, Daimler Chrysler, the major aerospace companies, DARPA, DoD, FAA, NASA, \nand a number of small companies and nonprofits. The Affiliates financial support also helps us experiment \nwith new educational approaches. Our mainstream software engineering course has 5-student teams go from \ninception through transition in 24 weeks, developing real-client e-service applications for campus (and \nsome off-campus) organizations. They use a mix of industrial\u00adgrade tools (Rational Rose/Soda/Clear Case, \nMS Project, numerous Java and other development tools) and our USC-developed tools (USC COCOMO II, Easy \nWin Win) and methods discussed above. Just keeping the applications competitive helps us keep up with \nemerging technologies: between 1996 and 2002, our percentage of COTS-based applications increased from \n28% to 61%. For distance education students, we web-cast our lectures, and have students email in questions \non the lectures for credit. We then an\u00adswer the questions both in a web-cast lecture and in a follow-on \nchat-room format that helps promote interactive discussion. For dis\u00adtance education students with difficulties \nin fully participating in team projects, we offer the option of serving as independent verifi\u00adcation \nand validation agents for a team's products. As the pace of IT change continues to accelerate, we see \nour biggest challenge not in helping students to learn new technologies, but in helping them to learn \nhow to learn. In our Software Management and Economics course, we have two assignments in which the stu\u00addents \nrole-play as the CTO of a medium-size software company in preparing an assessment for the company s President \nof the advan\u00adtages and difficulties of the company s adopting a new technology such as agile methods, \nCOTS-based solutions, or product lines. Their grading criteria include not only the incisiveness of the \nanaly\u00adsis, but the number and diversity of referenced sources they have found that support the analysis. \nThis has been a strong learning\u00adhow-to-learn experience for both the students and the faculty. 4. Mark \nHayes, mahayes@microsoft.com Mark Hayes is a Program Manager within Microsoft Research Uni\u00adversity Relations. \nOver the past four years Mark has been devel\u00adoping and directing a broad range of academic and industry \nresearch collaborations made up of government agencies, industry partners, academic organizations and \nleading research universities. Since 1986, Mark has served in a variety of diverse technical software \nand hardware program management roles both at Digital Equipment Corporation and Microsoft. He has long \nevangelized the collabora\u00adtion between key research and partnering opportunities for joint col\u00adlaboration \nbetween academic and industry researchers, beginning as far back to PDP 8 s, one of the truly first time-sharing \ncomputers. Today, Mark continues this interest in helping to support innovation and meet the growing \nchallenges of advancing technology, by en\u00adhancing the teaching and learning experience, and empowering \nthe academic-industry research community to realize their full research and scholarship potential. 5. \nLaura Hill, laura.hill@sun.com Laura Hill is the Assistant Director of Sun Microsystems Laborato\u00adries \nin Mountain View, CA and is responsible for Technology Transfer from the Labs to other parts of Sun, \ncustomers and part\u00adners. She has 18 years of experience in the computing industry, 13 years working with \nemerging technologies for the financial industry. Her specialties include creating, funding and managing \nspecialized design centers which focused on enterprise reuse programs, stan\u00addards definition and knowledge \ndistribution as well as object-ori\u00adented technologies including Java, Smalltalk, C++, ODA+D meth\u00adodologies \nand distributed objects. She holds an MS in Physics from M.I.T. 6. Gabby Silberman, gabbys@us.ibm.com \nGabby Silberman is the Program Director of the IBM Centers for Advanced Studies (CAS). Over the past \nfive plus years Gabby has been directing CAS, he has fostered academia-industry research col\u00adlaboration \nin several software domains, including development envi\u00adronments and tools, knowledge representation \nand data man\u00adagement, human-computer interaction and e-commerce. From 1997 to 2000 Gabby served on the \nboard of ConGESE, Ontario's Consor\u00adtium for Graduate Education in Software Engineering. Dr. Silber\u00adman \nis a Council Member-at-Large of the ACM, and serves as the Program Director for IBM's sponsorship of \nthe ACM International Collegiate Programming Contest. He is also a senior member of the IEEE Computer \nSociety, and a member of the International Federa\u00adtion of Information Processing Working Group 10.3. \nIn 1999 Gabby was elected to the IBM Academy of Technology, which recognizes him as one of IBM's top \ntechnical leaders. ConGESE, the Consortium for Graduate Education in Software En\u00adgineering (http://congese.on.ca/), \nis a cooperative effort among ten departments in seven Ontario universities for a Master's Degree with \na concentration in Software Engineering. The consortium's mission is to offer people in Ontario industries \na master's degree with a spe\u00adcialization in software engineering. The resulting self-funding pro\u00adgram \nis open to all qualified software professionals, providing a blend of academic rigor and industrial relevance. \nDepartments in the computing disciplines at each of the participating universities offer courses in this \nprogram. Each course is taught by a faculty member with strong credentials in research, real-world experience, \nand teaching in the subject area. Classes are commonly held on-site with cooperating industrial sponsors \nand are designed for the working professional, who might otherwise find it difficult to attend regular, \non-campus graduate programs. 7. Dave Thomas, dave@bedarra.com Dave Thomas is founder of Bedarra Corporation \nand adjunct re\u00adsearch professor at Carleton University and the University of Queensland. Bedarra current \nfocus areas are eLearning; Next Gen\u00aderation Application Development; Agile Software Development and Pervasive \nComputing. Dave is well known to the object community as the founder of Object Technology International \n(OTI) developers of Envy/Developer a unique CM environment for object oriented development; virtual machines \nfor Smalltalk, Java and IDEs for IBM VisualAge for Smalltalk; for Java; Micro Edition for Embed\u00added Systems \nand Eclipse. Bedarra focuses on the transfer of research from the lab to industry. Dave is a founding \ndirector in Agile Alli\u00adance, and columnist for the Journal of Object Technology (JOT) and OTLand. The \nmyopic industrial context that is being imposed on many of our best educators and their students is distressing. \nThere is a misleading assumption that software engineering is simply a matter of knowing how to use the \nlatest right technology. Thus many university courses are indistinguishable from short term training \nprograms pro\u00advided by the instant job training market. Even more disturbing, the use of the right technology \nis increasingly mandated by funding agencies or university research and development executives who of\u00adten \nact as misinformed representatives of the needs of industry. The moment we start believing that there \nis only one right language, op\u00aderating system, modeling language, or computational metaphor we are in \nserious trouble. Competence is too often the causality of curriculum coverage. Stu\u00addents are bombarded \nwith too many concepts and courses. The de\u00adsire to provide breadth, compromises the ability to provide \ndepth in any area. There is simply insufficient practice to develop mastery. They don t read or write \nenough programs, and they don t rewrite the ones they have written nearly enough times. Many students \nhave no idea that virtually all good programs have been rewritten 3 or more times. Most programs need \nmore than refactoring, they need to be tossed and substantially rewritten! Programs should get smaller \nfrom version to version. Educators should be able to say, Look we are just not going to be able to cover \nthe next topic, because most of the students really need to redo the last assignment to demonstrate they \nactually know what they are doing. Students need to learn how to work with designs, specifications, and \nimplementations produced by other people. Testing, releasing and refactoring all need to be complete \nbefore work is actually done . Students need an appreciation for domain and technical experience. Effective \ncommunication and the ability to listen to others is a re\u00adquirement. It isn t only the programs that \nneed to get rewritten; stu\u00addents need to polish their written and verbal communication skills. While \nsoftware engineering courses make best efforts to provide this sort of educational experience this isn \nt something that can be done without the substantial support of industry outside the classroom. In our \nexperience the best way by far for students to learn communica\u00adtion and teamwork is through the cooperative \neducation model. Computing needs to be taught in an application context, rather than through idealized \nproblems isolated from the messy reality which makes them challenging and interesting. Students need \nto experi\u00adence the joy of applications. Finally, best practice needs to be en\u00adcouraged, even if that \nbest practice means rework and in some cases even sacrificing the breadth of coverage. Industry needs \nto help in this process by providing case studies, application examples and real work experience for \nstudents and educators. Certification seems to only become an issue when lobby groups seek to protect \ntheir turf because they themselves are threatened. There is little evidence to prove that having a certified \nperson is better than one who is not certified. Too often certification is about economics and control \nrather than about the aspired goal of quality, capability and competence. Alternatively certification \nis about some narrow fleeting topic as in the latest vendor release or some current stan\u00addard. In general \n\"certification\" is best achieved by having a group of respected professionals who will speak on behalf \nof the individual, along with a project portfolio which is available for review. For young professionals \ntheir educational record should be added to make a complete package for those evaluating the individual. \nI really think the ACM self evaluation procedure is an excellent model although it needs to be revised \nto reflect a broader view of what is needed by software professionals beyond just computer sci\u00adence. \nMany producers and consumers of IT personal have taken the short route of 12 month IT programs, vendor \ncertification, or 2-3 year col\u00adlege and university programs. These programs can be very effective for \nspecific skills, but they seldom provide the same deep un\u00adderstanding of a 4 year honors program. We \nneed to emphasize deep breath rather than shallow depth. Finally I think that we as profes\u00adsionals have \nthe obligation to provide honest feedback to people and organizations on people and projects to ensure \nthat quality concerns are addressed. This includes instructors evaluating their students, and employers \ntheir employees.  \n\t\t\t", "proc_id": "949344", "abstract": "Software engineering education for working professionals remains a challenge from the perspective of determining relevant content; identifying effective methods for delivery; and maintaining the focus and motivation of students. This panel brings together academic and industry professionals to share their perspectives and experiences. Anticipated points for discussion include: education/training delivery strategies, curriculum definition, certification challenges, marketing issues, collaboration strategies to engage industry sponsorship, value assessments for students and sponsoring organizations, and program success stories. This will be a highly interactive panel and the audience should come prepared to both ask and answer questions.", "authors": [{"name": "Steven Fraser", "author_profile_id": "81339499863", "affiliation": "Independent Consultant", "person_id": "PP39039573", "email_address": "", "orcid_id": ""}, {"name": "Ray Bareiss", "author_profile_id": "81100359565", "affiliation": "CMU (West)", "person_id": "P239664", "email_address": "", "orcid_id": ""}, {"name": "Barry Boehm", "author_profile_id": "81100662018", "affiliation": "USC", "person_id": "PP40029609", "email_address": "", "orcid_id": ""}, {"name": "Mark Hayes", "author_profile_id": "81100592596", "affiliation": "Microsoft Corporation", "person_id": "PP31049080", "email_address": "", "orcid_id": ""}, {"name": "Laura Hill", "author_profile_id": "81100454337", "affiliation": "Sun Microsystems", "person_id": "PP31042976", "email_address": "", "orcid_id": ""}, {"name": "Gabby Silberman", "author_profile_id": "81542358156", "affiliation": "IBM", "person_id": "PP14128116", "email_address": "", "orcid_id": ""}, {"name": "Dave Thomas", "author_profile_id": "81100412131", "affiliation": "Bedarra Research Labs & Carleton University", "person_id": "PP43119689", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/949344.949405", "year": "2003", "article_id": "949405", "conference": "OOPSLA", "title": "Meeting the challenge of software engineering education for working professionals in the 21st century", "url": "http://dl.acm.org/citation.cfm?id=949405"}