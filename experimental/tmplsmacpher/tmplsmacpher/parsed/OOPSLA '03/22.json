{"article_publication_date": "10-26-2003", "fulltext": "\n Do You Still Use a Database? Klaus Wuestefeld Prevayler Av Jo\u00e3o Gualberto 1673, 4andar Curitiba Brazil \n- 80030-001 klaus@objective.com.br ABSTRACT This is the overview of the original System Prevalence layer \ndemonstration at OOPSLA 2003. Categories and Subject Descriptors H.2.4 [Database Management]: Systems \n concurrency, distributed databases, Object-oriented databases, Query processing, Transaction processing. \n General Terms Performance, Design, Reliability. Keywords Prevayler, Prevalence, Orthogonal Persistence, \nReplication, Java. 1. INTRODUCTION DBMSs are the single most hampering force acting on the OO community. \nWhile they provide our applications with vital services, such as babies born inside the Matrix, we are \npitifully atrophied by the restrictions they impose. Combining system snapshots and transaction logging, \nPrevayler [1], the original System Prevalence layer for Java, provides transparent persistence and transparent \nreplication for plain old Java business objects in RAM. It does not require pre or post processing of \ncode. It does not require a special VM. Any Java VM will do. Prevalent Systems, therefore, are no longer \nrestricted to the data\u00adstructures, algorithms and query language provided by a DBMS. Prevalent systems \ncan process ACID transactions just as fast as a traditional database system. Query performance scalability, \non the other hand, is typically 3 to 4 orders of magnitude greater in prevalent systems. With such performance, \nbasic OO techniques start becoming feasible with persistent objects. Using the observer pattern among \nthousands of persistent objects or running polymorphic queries on millions of them are a few examples \nthat would be way to slow otherwise, even on OO databases. The architectural simplicity of any System \nPrevalence layer makes it an extremely robust alternative to database systems. The implementation of \nthe current Prevayler framework, for example, is less than 400 lines of code long. 2. DEMONSTRATION \nTOPICS - Introduction to the ridiculously simple concepts of System Prevalence. -Presentation of Prevayler \n[1], the original System Prevalence layer for Java. - Discussion of transaction and query performance \nscalability. - Transparent persistence demonstration with the execution of the demo bank application \nincluded in the Prevayler distribution.  -Discussion of the source-code to the plain old Java objects \nin the application. - Transaction execution and recovery performance demonstration. - Automatic rollback \ndemonstration.  -Replication demonstration. -Open questions. 3. ACKNOWLEDGMENTS Thanks to all Prevayler \nusers and contributors. 4. REFERENCES [1] Prevayler Web Site, The. http://www.prevayler.org. Copyright \nis held by the author/owner(s). OOPSLA 03, October 26 30, 2003, Anaheim, California, USA. ACM 1-58113-751-6/03/0010. \n  \n\t\t\t", "proc_id": "949344", "abstract": "This is the overview of the original System Prevalence layer demonstration at OOPSLA'2003.", "authors": [{"name": "Klaus Wuestefeld", "author_profile_id": "81100575078", "affiliation": "Prevayler, Curitiba - Brazil", "person_id": "P643465", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/949344.949369", "year": "2003", "article_id": "949369", "conference": "OOPSLA", "title": "Do you still use a database?", "url": "http://dl.acm.org/citation.cfm?id=949369"}