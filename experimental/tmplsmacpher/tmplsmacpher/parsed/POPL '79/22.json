{"article_publication_date": "01-01-1979", "fulltext": "\n\t\t\t", "proc_id": "567752", "abstract": "We present an algorithn for the determination of run-time types which functions in the presence of errors, and show that it provides more information than that obtained using a previously published algorithm.In Section 1 we define the problem and state the requirements for a practically useful type prediction algorithm. In Section 2 we introduce a model programing language and in Section 3 define type inference rules for that language. Section 4 presents a type prediction algorithm and Section 5 describes how to apply the results to solve the problems stated in Section 1. Section 6 presents an example of our procedure and demonstrates how previous work does not satisfy all requirements.", "authors": [{"name": "Terrence C. Miller", "author_profile_id": "81546105156", "affiliation": "University of California, San Diego, La Jolla, CA", "person_id": "PP39030330", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/567752.567775", "year": "1979", "article_id": "567775", "conference": "POPL", "title": "Type checking in an imperfect world", "url": "http://dl.acm.org/citation.cfm?id=567775"}