{"article_publication_date": "09-29-1998", "fulltext": "\n On Application of Self-Similar Pictures in Education Zoran Putnik Institute of Mathematics, Faculty \nof Science, University of Novi Sad e-mail: putnik@unsim.ns.ac.yu A set of basic functions for drawing \nself-similar pictures in a purely functional programming language (extended with turtle graphics abilities \n[l]) has been implemented. The im-plementation is based on creation of a library of several func- tions, \nconvenient for usage with self-similar drawings. The solution is clear and simple and can easily be translated \ninto any other (functional or other) programming language with limited graphics abilities. The main educational \nvalue of this implementation lies in ability of introduction of more inventive thinking, in offering \nmore natural way for unifl-cation of a program with data structures and in serving as a ready-made prototyping \ntool. Besides, graphics features -especially turtle graphics -are excellent instrument for introduction \nof higher-order functions and functional pro-gramming style in general. Purely functional programming \nlanguage (LispKit) LISP has been developed at the Institute of Mathematics several years ago 21 and was \nat first extended with limited graphic abilities [3 , then with turtle graphics abilities [4] and [5]. \nIt I is also worth mentioning that it has been used as a part of a CSl course at the Institute called \nProgramming languages as a successful tool for introduction of basic programming principles [6] and [7]. \nFor gaining a full control of a turtle, one basically needs only a few functions: an ability to change \na direction of a turtle, an ability to draw a line (forward and backward) and an ability to move a turtle. \nThese functions may be created in any language with only limited graphics abilities and later used for \neducational purposes. So, a library mod-ule that extends (LispKit) LISP into a graphical program-ming \nlanguage, consists of the following functions: forward, backward, up, down and turn. An additional set \nof turtle graphics functions enabling more convenient work, consists of the following: angle, home, drawto \nand jumpto, with all functions having their usual meaning. Focusing on explanation of recursion, it proved \nto be very useful to use self-similar pictures in lessons. Pictures are naturally explained through recursion, \nwhile their draw-ing process can be followed on the screen and compared with the calculation process \ngiven by a teacher. Still, it is fairly easy to extend the set of turtle functions, to fulfill this re-quest. \nThere are basically two kinds of self-similar pictures -those created by drawing from one point to several \ndirec-tions and those creating connected self-similar drawings (drawings with no nodes). These two may \nbe created using the following functions: myself -a function for drawing from one point, and self -a \nfunction for drawing connected draw-ings. Besides, a few simple functions enabling easier work are added, \nlike repunt (or, repeat...until), shrink (shortening the arguments of a function), advance, return, left \nand right (for moving and turning a turtle for a default value). Usage of turtle graphics in a functional \nlanguage has twofold educational value. From one point of view, it shows the immediate results of a function \nevaluation, helping the user to understand recursion. On the other hand, it can be even used later, for \nolder students, showing how a purely functional language, without the notion of a state, side-effects \nand global storage, can handle problems exclu-sively based on those features. References [l] Ross, P.: \nLOGO Programming for the IBM PC , Ad-dison Wesley, Wokingham, 1985. [2] Budimac, Z., Ivanovic, M., Putnik, \nZ. and Tosic, D.: LISP by examples , book, Institute of Mathematics lQQl., (in Serbian) [3] Budimac, \nZ., Ivanovic, M. and Putnik, Z.: A Repre-sentation Scheme for Graphical Objects Based on Func- tion Definitions \nin Functional Language , in Proc. of XIII International Conference Information Technology Interface , \n(fmr. Yugoslavia), 1991. [4] Putnik, Z., Budimac, Z. and Ivanovic, M.: Turtle Walk Through Functional \nLanguage , ACM SIGPlan Notices, Vol.26, No.2, February 1991. [5] Budimac, Z., Putnik Z.: Purely Functional \nTur-tle Graphics , in Proc. of XXXVIII Conference for ETRAN, (Yugoslavia), 1994. [6] Putnik Z., Budimac \nZ.: Bringing LOGO to the World of Purely Functional Programming , in Proc. of EU-ROLOGO 97 Conference, \n(Hungary), 1997. [7] Putnik Z., Budimac Z.: Implem- entation of Turtle Graphics for Teaching Purposes \n, Proc. of EDUGRAPHICS 97 Conference, (Portugal), www.geocities.com/ResearchTriangle/2217/-PrePub97.html. \n1997. 341 \n\t\t\t", "proc_id": "289423", "abstract": "", "authors": [{"name": "Zoran Putnik", "author_profile_id": "81100090750", "affiliation": "Institute of Mathematics, Faculty of Science, University of Novi Sad", "person_id": "P310473", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/289423.289470", "year": "1998", "article_id": "289470", "conference": "ICFP", "title": "On application of self-similar pictures in education", "url": "http://dl.acm.org/citation.cfm?id=289470"}