{"article_publication_date": "09-29-1998", "fulltext": "\n A Term Calculus for a Unitary Approach to Normaliza4tion Claudia Faggian Dip. Matematica Pura ed Applicata, \nUniversitii. di Padova, Italy The correspondence between logical constructive systems and several A-calculi, \nknown as the Curry-Howard isomor-phllm, has played and holds a leading role in functional programming. \nThe relevance for computer science of intu- itionistic and linear logic is vicll esstablished; in recent \nyears a significant amount of work has also been directed to cl-- sical logic as a computational system. \nWhilst the inter-pretation and the computational content is different in the different logical systems, \nthe central role is always played by the cut-elimination (normalization) procedure. This paper is concerned \nwith the study of a unitary approach, having on normalization its main focus. Our approach stems from \nthe program proposed in [Sam- bin, Battilotti, Faggian 971 which introduces basic logic as common denominator \nof several logical systems, with the final aim of their study in a uniform enviroment, with a uni- form \nmethod. Our paper is closely connected with a work in preparation with Giovanni Sambin, and leading \nto a unified system named UB. Having this a8 logical foundation of our work, we in- troduce a term \ncalculus, called Aue, that is a (fully symmet- ric) extension of the simple typed X-calculus. Subsystems \nof XUB are in a Formulas-as-Types correspondence with a large variety of logical systems, among which \nclassical logic, basic logic (and thus non-distributive logics), linear logic (MALL), intuitionistic \nlogic, and its dual (cf. paraconsistent logic, e.g. [5]). The reduction rulks are unique. Therefore, \nthere is a single procedure, which is, at the same time, a normalization procedure for each of the subsystems. \nWe start presenting the system UB. The inference rules are organized into a fixed core of operational \nrules and a set of structural rules. To obtain each of the different systems, we add to the kernel of \noperational rules -which remains always the same some of the structural rules. A relevant feature is \nthe use of two symmetrical (distinct and coexisting) forms of cut, corresponding to substitution on the \ninputs and on the outputs. Notice that this fact has a suggestive interpretation in terms of proo&#38; \nas processes, taking into account both direction of the communication. In the case of c&#38;l, the left \nproof, activated an opportune door, sends a message; in cutz, it is the right proof the sender. Given \nthe normalization procedure for the whole system, we show that it is close for all the underlying s stems. \nOn this basis, we introduce the calculus A 3: , as a term assignment for UB. The reductions in /\\ model \nthe cut-elimination procedure in UB. Like for this one, the nor-malization procedure is unique (of course, \nthe behaviour of the programs is different, accordingly to the system in which they have been written). \nMoreover, the caIculus is strongly normalizing! and it is confluent. Our aim was to seek a unitary approach, \nin order to produce a single system flexible enough and able to adapt to different deduction (reasoning) \nenviroments (classical, intuitionistic, resource-sensitive, non-distributive, paracon-sistent, etc.), \naccordingly to the situation in which we can wish to manage our data, and possibly moving from an en- \nviroment to an other. Our first goal, the one tackled in this paper, has been to reach a unitary approach \nto normalization, since we believe this to be the core of the computation. The next step will be a broader \nstudy of the properties of the system, having in mind that they will immediately specialize to all the \nsub- systems. In particular, we want to deal with type checking and type deduction. On a more general \nperspective, we hope to finally gain some better understanding of the different systems and dif- ferent \napproaches, in their mutual relations. Just remember that in intuitionistic logic one sees the proofs \nas functions, and the cut-elimination as computation; for linear logic, it seems more natural to regard \nthe proofs as processes, and the cut as a communication between processes; the paradigm for classical \nlogic is not yet well established, and lies some-where in between (cf. [S] for a functional interpretation, \nand [l] for an interpretation as processes). References [l] BIERMAN G. M., URBAN C. (1998), Classical \nnatural de-duction, dmft. [2] DANOS V., JOINET J.-B., SCHELLINX H. (1997), A new deconstructive logic: \nlinear logic, Journal of Symbolic Logic. [3] GIRARD J.-Y.(1993), On the unity of logic, Annals of Pure \nand Applied Logic, 69,201-217. [4] GRIFFIN T. (1990), A formulae-as-types notion of control. In: Principles \nof Programming Languogeg, 47-W. IEEE Com-puter Society Press. POPL 1990. [5] HCRWEIN K. (1992), Keeping \ninconsistencies local. Manuscript. Technische Universit%t Wien, Austria. [6] PARIGOT M. (1992), Xp-calculus: \nan algotiyhmic interpre-tation of classical natural deduction, Proc. Conf. on Logic Progmmming and Automated \nReasoning, vol. 624 of LNCS. [7] SAMBIN G., BATTILOTTI G., FAGGIAN C. (1997), Ba-sic logic: reflection, \nsymmetry, visibility, Journal of Symbolic Logic, in press. 347 \n\t\t\t", "proc_id": "289423", "abstract": "", "authors": [{"name": "Claudia Faggian", "author_profile_id": "81100317745", "affiliation": "Dip. Matematica Pura ed Applicata, Universit&#224; di Padova, Italy", "person_id": "P49044", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/289423.289477", "year": "1998", "article_id": "289477", "conference": "ICFP", "title": "A term calculus for unitary approach to normalization", "url": "http://dl.acm.org/citation.cfm?id=289477"}