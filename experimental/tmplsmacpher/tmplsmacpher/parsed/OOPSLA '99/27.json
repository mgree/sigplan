{"article_publication_date": "10-01-1999", "fulltext": "\n\t\t\t", "proc_id": "320384", "abstract": "<p>This paper describes a novel approach to managing the evolution of distributed, persistent systems at run-time. This is achieved by partitioning a system into disjoint <italic>zones</italic>, each of which can be evolved without affecting code in any other. <italic>Contracts</italic> are defined between zones, making type-level interdependencies and inter-zone communication explicit. Programmer supplied code is added to the running system, at the boundary between zones, to constrain the scope of changes. A change methodology is presented which the software engineer uses to help describe and manage the evolution of the system. Knowledge of the application semantics is essential when evolving a system and our approach allows the engineer to concentrate on these semantic aspects of change. Our Java-based demonstration platform and methodology reduce or remove some of the burdensome tasks the software engineer is normally expected to perform when changing a system, making evolution more tractable.</p>", "authors": [{"name": "Huw Evans", "author_profile_id": "81100485374", "affiliation": "Department of Computing Science, University of Glasgow, 17 Lilybank Gardens, Glasgow, G12 8RZ, UK", "person_id": "PP31075348", "email_address": "", "orcid_id": ""}, {"name": "Peter Dickman", "author_profile_id": "81100441864", "affiliation": "Department of Computing Science, University of Glasgow, 17 Lilybank Gardens, Glasgow, G12 8RZ, UK", "person_id": "PP31042431", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/320384.320430", "year": "1999", "article_id": "320430", "conference": "OOPSLA", "title": "Zones, contracts and absorbing changes: an approach to software evolution", "url": "http://dl.acm.org/citation.cfm?id=320430"}