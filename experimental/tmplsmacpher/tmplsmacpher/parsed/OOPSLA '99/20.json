{"article_publication_date": "10-01-1999", "fulltext": "\n\t\t\t", "proc_id": "320384", "abstract": "<p>Jalape&#241;o is a virtual machine for Java#8482; servers written in Java.</p><p>A running Java program involves four layers of functionality: the user code, the virtual-machine, the operating system, and the hardware. By drawing the Java / non-Java boundary below the virtual machine rather than above it, Jalape&#241;o reduces the boundary-crossing overhead and opens up more opportunities for optimization.</p><p>To get Jalape&#241;o started, a <italic>boot image</italic> of a working Jalape&#241;o virtual machine is concocted and written to a file. Later, this file can be loaded into memory and executed. Because the boot image consists entirely of Java objects, it can be concocted by a Java program that runs in <italic>any</italic> JVM. This program uses reflection to convert the boot image into Jalape&#241;o's object format.</p><p>A special MAGIC class allows unsafe casts and direct access to the hardware. Methods of this class are recognized by Jalape&#241;o's three compilers, which ignore their bytecodes and emit special-purpose machine code. User code will not be allowed to call MAGIC methods so Java's integrity is preserved.</p><p>A small non-Java program is used to start up a boot image and as an interface to the operating system.</p><p>Java's programming features &#8212; object orientation, type safety, automatic memory management &#8212; greatly facilitated development of Jalape&#241;o. However, we also discovered some of the language's limitations.</p>", "authors": [{"name": "Bowen Alpern", "author_profile_id": "81100226760", "affiliation": "IBM T.J. Watson Research Center, PO box 218, Yorktown Heights, NY", "person_id": "P31824", "email_address": "", "orcid_id": ""}, {"name": "C. R. Attanasio", "author_profile_id": "81100186222", "affiliation": "IBM T.J. Watson Research Center, PO box 218, Yorktown Heights, NY", "person_id": "PP31031140", "email_address": "", "orcid_id": ""}, {"name": "Anthony Cocchi", "author_profile_id": "81100388520", "affiliation": "IBM T.J. Watson Research Center, PO box 218, Yorktown Heights, NY", "person_id": "P20288", "email_address": "", "orcid_id": ""}, {"name": "Derek Lieber", "author_profile_id": "81100138461", "affiliation": "IBM T.J. Watson Research Center, PO box 218, Yorktown Heights, NY", "person_id": "P66104", "email_address": "", "orcid_id": ""}, {"name": "Stephen Smith", "author_profile_id": "81332528255", "affiliation": "IBM T.J. Watson Research Center, PO box 218, Yorktown Heights, NY", "person_id": "PP31094885", "email_address": "", "orcid_id": ""}, {"name": "Ton Ngo", "author_profile_id": "81100419190", "affiliation": "IBM T.J. Watson Research Center, PO box 218, Yorktown Heights, NY", "person_id": "PP31041442", "email_address": "", "orcid_id": ""}, {"name": "John J. Barton", "author_profile_id": "81100161960", "affiliation": "Hewlett Packard Laboratories, 1501 Page Mill Road, Palo AIto, CA", "person_id": "PP15024591", "email_address": "", "orcid_id": ""}, {"name": "Susan Flynn Hummel", "author_profile_id": "81100444428", "affiliation": "IBM T.J. Watson Research Center, PO box 218, Yorktown Heights, NY", "person_id": "P272052", "email_address": "", "orcid_id": ""}, {"name": "Janice C. Sheperd", "author_profile_id": "81332527073", "affiliation": "IBM T.J. Watson Research Center, PO box 218, Yorktown Heights, NY", "person_id": "P135002", "email_address": "", "orcid_id": ""}, {"name": "Mark Mergen", "author_profile_id": "81100189564", "affiliation": "IBM T.J. Watson Research Center, PO box 218, Yorktown Heights, NY", "person_id": "PP31086545", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/320384.320418", "year": "1999", "article_id": "320418", "conference": "OOPSLA", "title": "Implementing jalape&#241;o in Java", "url": "http://dl.acm.org/citation.cfm?id=320418"}