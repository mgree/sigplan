{"article_publication_date": "01-26-2011", "fulltext": "\n Robin Milner 1934 2010 Veri.cation, Languages, and Concurrency Andrew D. Gordon Microsoft Research Robert \nHarper Carnegie Mellon University John Harrison Intel Alan Jeffrey Bell Labs A special session of the \nsymposium pays tribute to Robin Milner; the session features talks by Robert Harper (Carnegie Mellon \nUni\u00adversity), John Harrison (Intel), and Alan Jeffrey (Bell Labs), and is organised by Andrew D. Gordon \n(Microsoft Research) and Peter Sewell (University of Cambridge). Robin Milner was born near Plymouth \nin England. He was educated at Eton College, Windsor, and went up to King s College, Cambridge, in 1954. \nIn between, his national service was with the Royal Engineers, in Egypt. After university he was .rst \na school teacher and then worked in London as a programmer at Ferranti, an early British computer company. \nIn 1963 he took a job as lecturer at City University, and started research on the side he never studied \nfor a PhD. In 1968, he moved to Swansea to become a research assistant. He was excited by Scott s lectures \nin 1969 in Oxford on domain theory. During this time he learnt about Floyd s work on veri.cation, and \ngot to know Tony Hoare, and started trying to verify programs. After meeting Zohar Manna during a visit \nto Carnegie Mellon University, he got a job with John McCarthy at Stanford in 1971. There he built the \ntheorem proving system Stanford LCF, which he would later substantially re.ne with the addition of a \nmetalanguage (ML) for constructing proofs. The interesting thing there was, they were just looking for \nsomebody who would do something practical. Scott had recently produced a kind of logic of domains, a \nlogic of the hierarchy of domains, a type-theoretic hierarchy. This to me seemed to be something which \nwas practical. That is what LCF came out of. Since I was so interested in human-assisted or I would \nsay machine-assisted proof, this seemed to be a wonderful opportunity for a program\u00adoriented logic. \nIt really took off for me when I realised that I could write down the syntax of a programming language \nin this logic and I could write the semantics in the logic. (An interview with Robin Milner by Martin \nBerger, 3 September 2003) Moving to Scotland, Robin worked at the University of Edin\u00adburgh 1973 1994, \nas a professor from 1984. During this period he co-founded the LFCS, the Laboratory for Foundations of \nCom- Copyright is held by the author/owner(s). POPL 11, January 26 28, 2011, Austin, Texas, USA. ACM \n978-1-4503-0490-0/11/01. Peter Sewell University of Cambridge puter Science, and served as its .rst \ndirector. This was also a time of amazing scienti.c productivity, for which he became a Fellow of the \nRoyal Society and received the ACM A. M. Turing Award: For three distinct and complete achievements: \n1) LCF, the mechanization of Scott s Logic of Computable Functions, probably the .rst theoretically based \nyet practical tool for machine assisted proof construction; 2) ML, the .rst lan\u00adguage to include polymorphic \ntype inference together with a type-safe exception-handling mechanism; 3) CCS, a gen\u00aderal theory of concurrency. \nIn addition, he formulated and strongly advanced full abstraction, the study of the relation\u00adship between \noperational and denotational semantics. (Citation for 1991 ACM A. M. Turing Award) We can now add to \nthis list of his contributions Robin s re.ne\u00adment of CCS into the p-calculus, a more general theory of \nconcur\u00adrency that takes into account dynamic generation and communica\u00adtion of names, and also bigraphs, \na theory of ubiquitous computing. He returned to England to occupy the .rst established Chair in Computer \nScience at the University of Cambridge. He was a member of the Computer Laboratory from 1995 onwards, \nserving as Head of the Laboratory 1996 1999. During the last year of his life, he resumed his Edinburgh \nconnection as a part-time professor. All three strands of his work have been enormously in.uential. Machine-assisted \nveri.cation is now feasible for realistic systems software and for deep mathematics; Robin s concept \nof tactics is widely used in interactive provers such as HOL, Isabelle, and Coq, as is his idea of relying \non a type-safe programming language to restrict the part of a prover that must be trusted to a small \nkernel. ML itself is also still in use and has had a big impact on other programming languages: Robin \ngave us practical parametric poly\u00admorphism, now incorporated into most modern typed programming languages, \nand a push towards strongly typed languages and the use of operational semantics for language de.nition \nand metatheory. His theories of concurrency underpin much work on veri.cation (complementing the theory \nof sequential computable functions of Church and Turing) and are being applied to modelling processes \nfrom business to systems biology; Robin gave us the word bisimu\u00adlation (while always taking care to credit \nDavid Park with the idea), and, more generally, a clear understanding of the role of observa\u00adtional congruences \nand coinductive proof methods. He has left the subject a collection of elegant and .nely honed intellectual \ntools, rei.ed in mathematics and in software. Robin and Lucy married in 1963 and died within weeks of \neach other in March 2010. They are survived by two children and two grandchildren. Robin was always an \ninspirational teacher and colleague, and an unassuming and warm-hearted man; he will be greatly missed. \n\t\t\t", "proc_id": "1926385", "abstract": "", "authors": [{"name": "Andrew D. Gordon", "author_profile_id": "81100037731", "affiliation": "Microsoft Research, Cambridge, United Kingdom", "person_id": "P2509656", "email_address": "adg@microsoft.com", "orcid_id": ""}, {"name": "Robert Harper", "author_profile_id": "81100140064", "affiliation": "Carnegie Mellon University, Pittsburgh, USA", "person_id": "P2509657", "email_address": "rwh@cs.cmu.edu", "orcid_id": ""}, {"name": "John Harrison", "author_profile_id": "81100010571", "affiliation": "Intel, Portland, USA", "person_id": "P2509658", "email_address": "johnh@ecsmtp.pdx.intel.com", "orcid_id": ""}, {"name": "Alan Jeffrey", "author_profile_id": "81100380257", "affiliation": "Bell Labs, Naperville, USA", "person_id": "P2509659", "email_address": "ajeffrey@bell-labs.com", "orcid_id": ""}, {"name": "Peter Sewell", "author_profile_id": "81100511814", "affiliation": "University of Cambridge, Cambridge, United Kingdom", "person_id": "P2509660", "email_address": "Peter.Sewell@cl.cam.ac.uk", "orcid_id": ""}], "doi_number": "10.1145/1926385.1926439", "year": "2011", "article_id": "1926439", "conference": "POPL", "title": "Robin Milner 1934--2010: verification, languages, and concurrency", "url": "http://dl.acm.org/citation.cfm?id=1926439"}