{"article_publication_date": "09-17-2002", "fulltext": "\n\t\t\t", "proc_id": "581478", "abstract": "Recent research suggests that the goal of fully automatic and reliable program generation for a broad range of applications is coming nearer to feasibility. However, several interesting and challenging problems remain to be solved before it becomes a reality.We first discuss the relations between problem specifications and their solutions in program form, and then narrow the discussion to an important special case: program transformation. Although the goal of fully automatic program generation is still far from fully achieved, there has been some success in a special case: partial evaluation, also known as program specialization.A key problem in all program generation is <i>termination of the generation process</i>. This paper (See the GPCE'02 proceedings for the full paper.} describes recent progress towards automatically solving the termination problem, first for individual programs, and then for specializers and \"generating extensions,\" the program generators that most offline partial evaluators produce.", "authors": [{"name": "Neil D. Jones", "author_profile_id": "81452616043", "affiliation": "University of Copenhagen", "person_id": "PP39048361", "email_address": "", "orcid_id": ""}, {"name": "Arne J. Glenstrup", "author_profile_id": "81100046051", "affiliation": "University of Copenhagen", "person_id": "P386736", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/581478.581505", "year": "2002", "article_id": "581505", "conference": "ICFP", "title": "Program generation, termination, and binding-time analysis", "url": "http://dl.acm.org/citation.cfm?id=581505"}