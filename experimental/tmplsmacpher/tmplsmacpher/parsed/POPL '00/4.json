{"article_publication_date": "01-05-2000", "fulltext": "\n\t\t\t", "proc_id": "325694", "abstract": "<p>We propose an automatic method to enforce trace properties on programs. The programmer specifies the property separately from the program; a program transformer takes the program and the property and automatically produces another &#8220;equivalent&#8221; pogram satisfying the property. This separation of concerns makes the program easier to develop and maintain. Our approach is both static and dynamic. It integrates static analyses in order to avoid useless transformations. On the other hand, it never rejects programs but adds dynamic checks when necessary. An important challenge is to make this dynamic enforcement as inexpensive as possible. The most obvious application domain is the enforcement of security policies. In particular, a potential use of the method is the securization of mobile code upon receipt.</p>", "authors": [{"name": "Thomas Colcombet", "author_profile_id": "81100479052", "affiliation": "ENS LYON, IRISA, Campus de Beaulieu, 35042 Rennes Cedex, France", "person_id": "PP14167551", "email_address": "", "orcid_id": ""}, {"name": "Pascal Fradet", "author_profile_id": "81100185741", "affiliation": "INRIA, IRISA, Campus de Beaulieu, 35042 Rennes Cedex, France", "person_id": "P219644", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/325694.325703", "year": "2000", "article_id": "325703", "conference": "POPL", "title": "Enforcing trace properties by program transformation", "url": "http://dl.acm.org/citation.cfm?id=325703"}