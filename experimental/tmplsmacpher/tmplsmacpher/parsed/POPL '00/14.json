{"article_publication_date": "01-05-2000", "fulltext": "\n\t\t\t", "proc_id": "325694", "abstract": "<p>Various code certification systems allow the certification and static verification of important safety properties such as memory and control-flow safety. These systems are valuable tools for verifying that untrusted and potentially malicious code is safe before execution. However, one important safety property that is not usually included is that programs adhere to specific bounds on resource consumption, such as running time.</p><p>We present a decidable type system capable of specifying and certifying bounds on resource consumption. Our system makes two advances over previous resource bound certification systems, both of which are necessary for a practical system: We allow the execution time of programs and their subroutines to vary, depending on their arguments, and we provide a fully automatic compiler generating certified executables from source-level programs. The principal device in our approach is a strategy for simulating dependent types using sum and inductive kinds.</p>", "authors": [{"name": "Karl Crary", "author_profile_id": "81100253026", "affiliation": "Carnegie Mellon University", "person_id": "P157139", "email_address": "", "orcid_id": ""}, {"name": "Stephnie Weirich", "author_profile_id": "81100093135", "affiliation": "Cornell University", "person_id": "P269068", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/325694.325716", "year": "2000", "article_id": "325716", "conference": "POPL", "title": "Resource bound certification", "url": "http://dl.acm.org/citation.cfm?id=325716"}