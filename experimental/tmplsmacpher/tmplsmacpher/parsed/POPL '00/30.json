{"article_publication_date": "01-05-2000", "fulltext": "\n\t\t\t", "proc_id": "325694", "abstract": "<p>Scalable formal analysis of reactive programs demands integration of modular reasoning techniques with existing analysis tools. Principles such as abstraction, compositional refinement, and assume-guarantee reasoning are well understood for architectural hierarchy that describes the communication structure between component processes, and have been shown to be useful. In this paper, we develop the theory of modular reasoning for <italic>behavior hierarchy</italic> that describes control structure using hierarchic modes. From STATECHARTS to UML, behavior hierarchy has been an integral component of many software design languages, but only syntactically. We present the <italic>hierarchic reactive modules</italic> language that retains powerful features such as nested modes, mode reuse, exceptions, group transitions, history, and conjunctive modes, and yet has a <italic>semantic</italic> notion of mode hierarchy. We present an observational trace semantics for modes that provides the basis for mode refinement. We show the refinement to be compositional with respect to the mode constructors, and develop an assume-guarantee reasoning principle.</p>", "authors": [{"name": "Rajeev Alur", "author_profile_id": "81100359539", "affiliation": "Department of Computer and Information Science, University of Pennsylvania", "person_id": "P237979", "email_address": "", "orcid_id": ""}, {"name": "Radu Grosu", "author_profile_id": "81100063749", "affiliation": "Department of Computer and Information Science, University of Pennsylvania", "person_id": "P237438", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/325694.325746", "year": "2000", "article_id": "325746", "conference": "POPL", "title": "Modular refinement of hierarchic reactive machines", "url": "http://dl.acm.org/citation.cfm?id=325746"}