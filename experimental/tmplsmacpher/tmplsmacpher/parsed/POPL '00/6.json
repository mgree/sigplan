{"article_publication_date": "01-05-2000", "fulltext": "\n\t\t\t", "proc_id": "325694", "abstract": "<p>Inclusion-based program analyses are implemented by adding new edges to directed graphs. In most analyses, there are many different ways to add a transitive edge between two nodes, namely through each different path connecting the nodes. This path redundancy limits the scalability of these analyses. We present <italic>projection merging</italic>, a technique to reduce path redundancy. Combined with cycle elimination [7], projection merging achieves orders of magnitude speedup of analysis time on programs over that of using cycle elimination alone.</p>", "authors": [{"name": "Zhendong Su", "author_profile_id": "81100108298", "affiliation": "EECS Department, University of California, Berkeley, 387 Soda Hall #1776, Berkeley, CA", "person_id": "PP14047875", "email_address": "", "orcid_id": ""}, {"name": "Manuel F&#228;hndrich", "author_profile_id": "81100288438", "affiliation": "One Microsoft Way, Redmond, WA and EECS Department, University of California, Berkeley, 387 Soda Hall #1776, Berkeley, CA", "person_id": "P187043", "email_address": "", "orcid_id": ""}, {"name": "Alexander Aiken", "author_profile_id": "81100399954", "affiliation": "EECS Department, University of California, Berkeley, 387 Soda Hall #1776, Berkeley, CA", "person_id": "P13911", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/325694.325706", "year": "2000", "article_id": "325706", "conference": "POPL", "title": "Projection merging: reducing redundancies in inclusion constraint graphs", "url": "http://dl.acm.org/citation.cfm?id=325706"}