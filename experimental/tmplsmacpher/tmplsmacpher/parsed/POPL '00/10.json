{"article_publication_date": "01-05-2000", "fulltext": "\n\t\t\t", "proc_id": "325694", "abstract": "<p>In modern Scheme, a macro captures the lexical environment where it is defined. This creates an opportunity for extending Scheme so that macros are first-class values. The key to achieving this goal, while preserving the ability to compile programs into reasonable code, is the addition of a type system. Many interesting things can be done with first-class macros, including the construction of a useful module system in which modules are also first-class. Clams got legs! &#8212; <italic>B.C.</italic></p>", "authors": [{"name": "Alan Bawden", "author_profile_id": "81100025949", "affiliation": "Boston University", "person_id": "P12243", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/325694.325710", "year": "2000", "article_id": "325710", "conference": "POPL", "title": "First-class macros have types", "url": "http://dl.acm.org/citation.cfm?id=325710"}