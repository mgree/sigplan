{"article_publication_date": "01-05-2000", "fulltext": "\n\t\t\t", "proc_id": "325694", "abstract": "<p>Many interactive Web services use the CGI interface for communication with clients. They will dynamically create HTML documents that are presented to the client who then resumes the interaction by submitting data through incorporated form fields. This protocol is difficult to statically type-check if the dynamic documents are created by arbitrary script code using printf-like statements. Previous proposals have suggested using static document templates which trades flexibility for safety. We propose a notion of typed, higher-order templates that simultaneously achieve flexibility and safety. Our type system is based on a flow analysis of which we prove soundness. We present an efficient runtime implementation that respects the semantics of only well-typed programs. This work is fully implemented as part of the &lt;bigwig&gt; system for defining interactive Web services.</p>", "authors": [{"name": "Anders Sandholm", "author_profile_id": "81100366458", "affiliation": "BRICS, Department of Computer Science, University of Aarhus, Denmark", "person_id": "P16754", "email_address": "", "orcid_id": ""}, {"name": "Michael I. Schwartzbach", "author_profile_id": "81392609511", "affiliation": "BRICS, Department of Computer Science, University of Aarhus, Denmark", "person_id": "P198767", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/325694.325733", "year": "2000", "article_id": "325733", "conference": "POPL", "title": "A type system for dynamic Web documents", "url": "http://dl.acm.org/citation.cfm?id=325733"}