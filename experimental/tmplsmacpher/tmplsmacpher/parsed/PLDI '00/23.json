{"article_publication_date": "05-01-2000", "fulltext": "\n AGenerationalOn-the-fyGarbageColletorforJava (ExtendedAbstrat) TamarDomani* ElliotK.Kolodnert ErezPetrank+ \nAbstrat Anon-the-fygarbageolletordoesnotstopthepro\u00adgramthreadstoperformtheolletion.Instead,the olletorexeutesinaseparatethread(orproess)in \nparalleltotheprogram.On-the-fyolletorsareuse\u00adfulformulti-threadedappliationsrunningonmultipro\u00adessorservers,whereitisimportanttofullyutilizeall \nproessorsandprovideevenresponsetime,espeially forsystemsforwhihstoppingthethreadsisaostly operation. \nInthiswork,wereportontheinorporationofgener\u00adationsintoanon-the-fygarbageolletor.Theinorpo\u00adrationisnon-trivialsineanon-the-fyolletoravoids \nexpliitsynhronizationwiththeprogramthreads.To thebestofourknowledge,suhaninorporationhas notbeentriedbefore.Wehaveimplementedtheolle\u00adtorforaprototypeJavaVirtualMahineonAIX,and \nmeasureditsperformaneona4-waymultiproessor. Asforothergenerationalolletors,anon-the-fy generationalolletorhasthepotentialforreduingthe \noverallrunningtimeandworkingsetofanappliation byonentratingolletionefortsontheyoungobjets. However,inontrasttoothergenerationalolletors, \non-the-fyolletorsdonotmovetheobjets;thus,there isnosegregationbetweentheoldandtheyoungob\u00adjets.Furthermore,on-the-fyolletorsdonotstop \nthethreads,sothereisnoextrabeneftfortheshort pausesobtainedbygenerationalolletion.Neverthe\u00adless,omparingouron-the-fyolletorwithandwith\u00adoutgenerations,itturnsoutthatthegenerationalol\u00ad \n*IBMHaifaResearhLab.E-mail:..... .......... tIBMHaifaResearhLab.E-mail:........ .......... +ComputerSieneDept.,Tehnion-IsraelInstituteofTehnol-ogy.MostofthisworkwasdonewhiletheauthorwasattheIBM \nHaifaResearhLab.E-mail:.... ............... Permissiontomakedigitalorhardopiesofallorpartofthisworkfor \npersonalorlassroomuseisgrantedwithoutfeeprovidedthatopies arenotmadeordistributedforproftorommerialadvantageand \nthatopiesbearthisnotieandthefullitationonthefrstpage.To opyotherwise,orrepublish,topostonserversortoredistributeto \nlists,requirespriorspeifpermissionandorafee. PLDI2000,Vanouver,BritishColumbia,Canada. Copyright2000 \nCM1-58113-199-2/00/0006...$5.00. letorperformsbetterformostappliations.Thebest redutioninoverallrunningtimeforthebenhmarkswe \nmeasuredwas25%.However,thereweresomebenh\u00admarksforwhihithadnoefetandoneforwhihthe overallrunningtimeinreasedby4%. \nKeywords:Programminglanguages,Memoryman\u00adagement,Garbageolletion,Generationalgarbageol\u00adletion. 1Introdution \nGarbageolletorsfreethespaeheldbyunreahable (dead)objetssothatthisspaeanbereusedinfu\u00adturealloations.Onmultiproessorplatforms,itisnot \ndesirabletostoptheprogramandperformtheolle\u00adtioninasinglethreadononeproessor,asthisleads bothtolongpausetimesandpoorproessorutilization. \nSeveralwaystodealwiththisproblemexist,thetwo mostobviouswaysare: 1.Conurrentolletors:Runningtheolletoron\u00adurrentlywiththemutators.Theolletorrunsin \nonethreadononeproessorwhiletheprogram threadskeeprunningonurrentlyontheother proessors.Theprogramthreadsmaybestopped \nforashorttimetoinitiateand/orfnishtheol\u00adletion. 2.Parallelolletors:Stoppingallprogramthreads ompletely,andthenrunningtheolletorinpar-allelinseveralolletorthreads.Thisway,allpro\u00adessorsanbeutilizedbytheolletorthreads. \nInthispaperwedisussaonurrentolletor;inpar\u00adtiular,weonentrateonasublassoftheseolletors, whihweallon-the-fyolletors.(WeuseDijkstra's \noriginaltermon-the-fyforsuholletors,see[9]).An on-the-fyolletordoesnotneedtostoptheprogram threadssimultaneously,notevenfortheinitialization \northeompletionoftheolletionyle. Thestudyofon\u00adthe\u00adfygarbageolletorswasiniti\u00adatedbySteeleandDijkstra,etal.[27,2 \n,]andon\u00adtinuedinaseriesofpapers[9,14,3,4,20,21]ul\u00adminatingintheDoligez\u00adLeroy\u00adGonthier(DLG)olle\u00adtor[11,10].Theadvantageofanon\u00adthe\u00adfyolletor \noveraparallelolletorandothertypesofonurrent olletors[1,13,24],isthatitavoidstheoperation ofstoppingalltheprogramthreads.Suhanopera\u00adtionanbeostly.Usually,programthreadsannotbe \nstoppedatanypoint;thus,thereisanon\u00adnegligible waituntilthelast(ofmany)threadsreahesasafe pointwhereitmaystop.Thedrawbakofon\u00adthe\u00adfy \nolletorsisthattheyrequireawritebarrierandsome handshakesbetweentheolletorandmutatorthreads duringtheolletion.Also,theytypiallyemployfne\u00adgrainedsynhronization,thus,leadingtoerror\u00adproneal\u00adgorithms. \nGenerationalgarbageolletionwasintroduedby LiebermanandHewitt[23],andthefrstpublishedim\u00adplementationwasbyUngar[29].Generationalgarbage \nolletorsrelyontheassumptionthatmanyobjetsdie young.Theheapispartitionedintotwoparts:the younggenerationandtheoldgeneration.Newobjets \narealloatedintheyounggeneration,whihisolleted frequently.Youngobjetsthatsurviveseveralolle\u00adtionsare\"promoted\"totheoldergeneration.Ifthegen\u00aderationalassumption(i.e.,thatmostobjetsdieyoung) \nisindeedorret,wegetseveraladvantages: 1.Pausesfortheolletionoftheyounggeneration areshort. 2.Colletionsaremoree\u00c6ientsinetheyonen\u00adtrateontheyoungpartoftheheapwherewee \n\u00adpettofndahighperentageofgarbage. 3.Theworkingsetsizeissmallerbothforthepro\u00adgram,beauseitrepeatedlyreusestheyoungarea, \nandtheolletor,beauseittraesoverasmaller portionoftheheap. 1.1Thiswork Inthispaperwepresentadesignforinorporatinggen\u00aderationsintoanon\u00adthe\u00adfygarbageolletor.Tothe \nbestofourknowledgesuhinorporationhasnotbeen triedbefore1.Twoissuesimmediatelyarise.First, shorteningthepausetimesisnotrelevantforanon\u00adthe\u00adfyolletorsineitdoesnotstoptheprogramthreads. \nSeond,traditionalgenerationalolletorspartitionthe heapintothegenerationsinaphysialsense.Namely, topromoteanobjetfromtheyounggenerationtothe \n.Apartialinorporation,usedonlyforimmutableobjetswasused byDolgez,LeroyandGonthier[11,10].Thewholeshemedepends \nonthefatthatmanyobjetsinMLareimmutable.Thisisnottrue forJavaandotherimperativelanguages.Furthermore,theolletion \noftheyounggenerationisnotonurrent.Eahthreadhasitsown privateyounggeneration(usedonlyforimmutableobjets),whihis \nolletedwhilethatthreadisstopped. oldgeneration,theobjetismovedfromtheyoungpart oftheheaptotheoldpartoftheheap.On\u00adthe\u00adfy \ngarbageolletorsdonotmoveobjets;theostofmov\u00adingobjetswhilerunningonurrentlywiththepro\u00adgramthreadsistoohigh2.Thus,wehavetodowithout \nit. Demers,etal.[6]presentedagenerationalolletor thatdoesnotmoveobjets.Theirmotivationwasto adaptgenerationsforonservativegarbageolletion. \nHere,webuildontheirworktodesignagenerational olletorfortheDLGon\u00adthe\u00adfygarbageolletor[11, 10]. Wehaveimplementedthisgenerationalolletorfor \nourJDK1.1.6prototypeonAIX,andompareditsper\u00adformanewithourimplementationoftheDLGon\u00adthe\u00adfyolletor.Ourresultsshowthatthegenerational \non\u00adthe\u00adfyolletorperformswellformostappliations, butnotforall.Forthebenhmarksweranonamul\u00adtiproessor,thebestredutioninoverallprogramrun\u00adtimewas25%.However,therewasonebenhmarkfor \nwhihgenerationalolletioninreasedtheoverallrun\u00adningtimeby4%. Severalpropertiesoftheappliationditatewhether \ngenerationalolletionmaybebenefialforoverallper\u00adformane.First,thegenerationalhypothesismusthold, i.e.,thatmanyobjetsindeeddieyoung.Seond,it \nisimportantthattheappliationdoesnotmodifytoo manypointersintheoldgeneration.Otherwise,the ostofhandlinginter\u00adgenerationalpointersistoohigh. \nAndlast,thelifetimedistributionoftheobjetsshould notfoolthepartitioningintogenerations.Ifmosttenured \nobjetsintheoldgenerationareatuallydead,nomat\u00adterwhatthepromotionpoliyis,thenwewillnotgetin\u00adreasede\u00c6ienyduringpartialolletions.Ifolleting \ntheoldgenerationfreesthesamefrationoftheobjets asolletingtheyounggeneration,thenwemayaswell olletthewholeheapsinewedonotareaboutpause \ntimes.Furthermore,theoverheadpaidformaintaining inter\u00adgenerationalpointerswillauseaninreaseinthe overallrunningtimeoftheappliation. \n WeusedbenhmarksfromtheSPECjvmbenhmarks[25] plustwootherbenhmarksasdesribedinSetion7.2. Benhmarksforwhihoverallappliationperformane \nimproveswithgenerationalolletionareJumble(25% improvement),213java(15%improvement)and227mtrt (10%improvement).TheimprovementforMultithreaded \nRayTraerrangesbetween1%\u00ad16%,dependingonthe numberofappliationthreadsrunningonurrently.The appliationthatdoesnotdowellis202jess,forwhih \nthereisa4%inreaseintheoverallrunningtime.The tworeasonsforthisdeteriorationarethatlotsofob\u00adjetsintheoldgenerationhavetobesannedforinter\u00ad \n.Notethatwithonurrentolletors,suhasBa er'salgorithm [2],itispossibletomoveobjetssineallmutatorsthreadsare \nstoppedsimultaneouslytoinitiate(orfnish)aolletion.Butthisis nottheaseforon-the-fyolletors.   generationalpointersandthatmostoftheobjetsthat \ngettenureddie(beomeunreahable)inthefollowing fullolletion. 1.2Cardmarking Hosking,MossandStefanovic[16]provideastudyof \nwritebarriersforgenerationalolletion.Amongother parameters,theyinvestigatetheinfueneoftheard sizeinaardmarkingbarrierontheoveralle\u00c6ieny. \nFormostoftheappliationstheymeasured,thebest sizesfortheardswere256or512bytes,andtheworst sizesweretheextremes,16or4096bytes. \nNotethattheadvantageofsmallardsisthatthe indiationofwherepointershavebeenmodifedismore exat,andtheolletordoesnotneedtosanabigarea \ntofndtheinter\u00adgenerationalpointersthatitneedson theard.However,smallardsrequiremorespaefor thedirtymarks,whihreduesloality. \nIntheproessofhoosingtheparametersforourol\u00adletor,wehaverunsimilarmeasurementswithvarious ardsizes.Asitturnsout,thebehaviorofanon\u00adthe\u00adfygenerationalolletorisdiferent.Thebesthoie \nfortheardsizesisatoneoftheextremes,depend\u00adingonthebenhmark.Wehosetosettheardsize totheminimumpossible.Thiswasthebestformost \nbenhmarksandnotfarfrombestfortherest.Wesus\u00adpetthattheprimaryreasonthatourresultsdiferfrom thoseofHosking,etal.[16]isthatourolletordoes \nnotmoveobjets.Weprovidethedetailsinthefull paper[12]. 1.3Tehniquesusedandorganization WestartwiththestateoftheartDLGon\u00adthe\u00adfyol\u00adletor[11,10],whihwebriefyreviewinSetion2. \nWethenonstrutourgenerationalolletorsimilarto theworkofDemers,etal.[6],presentingitinSetion 3.WeaugmentDLGtoworkbetterwithgenerations, \nbothbyutilizinganadditional\"olor\"inSetion4and alsobyusingaolor\u00adtoggletriktoreduesynhroniza\u00adtioninSetion5.Asimilartrikwaspreviouslyused \nin[21,17,7,22,19].Ourfrstpromotionpoliyistriv\u00adial:promoteafteranobjetsurvivesasingleolletion. Wealsostudyoptionstopromoteobjetsafterseveral \nolletions(seeourfullpaper[12]fortheseresults).In Setion6weprovidetheodeoftheolletorandlower leveldetailsappropriateforanimplementer.InSetion \n7wereporttheexperimentalresultswemeasured,and weonludeinSetion8. 1.4Whatismissing Duetolakofspae,someimportantitems,whihwe \nreportinourfullpaper[12],aremissingfromthisex\u00adtendedabstrat.Inthefullpaperwedesribeourad\u00ad vanedagingmehanism.Thismehanismdidnotgive \nustheimprovementswehopedfor.Wealsoreportmore runtimemeasurementsexplainingthebehaviorofthe appliations.Finally,weexplainthehoieofthepa\u00adrameters(forexample,thesizeoftheardsforard \nmarking)byprovidingomparisonsforvariousvalues oftheparameters. 2Theolletor WebuildontheDLGolletor[11,10].Thisisanon\u00adthe\u00adfyolletorthatdoesnotstoptheprogramtodo \ntheolletion.Therearetwoimportantpropertiesof thisolletorthatmakeite\u00c6ient.First,itemploys fne\u00adgrainedatomiity.Namely,eahinstrutionanbe \narriedoutwithoutextrasynhronization.Seond,it doesnotrequireawrite\u00adbarrieronoperationsusinga stakorregisters.Thewritebarrierisrequiredonlyon \nmodifationsofreferenesinsideobjetsintheheap. Theoriginalpapersalsosuggestusingthreadloal heaps,butthedesignassumesanabundantuseofim\u00admutableobjetsasinML.Wedidnotusethreadloal \nheaps. WestartwithashortoverviewoftheDLGolletor. Foramorethoroughdesriptionandaorretnessproof thereaderisreferredtotheoriginalpapers[11,10].The \nolletorisamarkandsweepolletorthatemploysthe standardthreeolormarkingmethod.Allobjetsare whiteatthebeginningofthetrae,therootobjets \narethenmarkedgray,andthetraethenontinuesby hoosingonegrayobjet,markingitblak,andmark\u00adingallitswhitesonsgray.Thisproessontinuesuntil \ntherearenomoregrayobjetsintheheap.Themean\u00adingoftheolorsis:ablakobjetisanobjetthathas beentraed,andwhoseimmediatedesendantshave \nbeentraedaswell.Agrayobjetisanobjetthathas beentraed,butwhosesonshavenotyetbeenheked. Awhiteobjetisanobjetthathasnotyetbeentraed. \nObjetsthatremainwhiteattheendofthetraeare notreahablebytheprogramandarerelaimedbythe sweepproedure.Shaded(grayorblak)objetsare \nreoloredwhitebysweep.Afourtholor,blue,isused toidentifyfreeobjets. Todealwiththefatthattheolletorison\u00adthe\u00adfy,i.e.,ittraesthegraphofliveobjetswhileob\u00adjetsarebeingmodifedbytheprogram,someadjust\u00admentstothestandardmarkandsweepalgorithmare \nrequired.Theolletorstartstheolletionwiththree handshakeswiththemutatorthreads.Onahandshake, theolletorhangesitsstatus,andeahmutatorthread \nooperates(i.e.,indiatesthatithasseenthehange) independently.Afterrespondingtothefrsthandshake, thewritebarrierbeomesativeandthemutatorsbe\u00adgingrayingobjetsduringpointerupdates.Theseond \nhandshakeisrequiredfororretness;thebehaviorof themutatorsdoesnothangeasaresult.Whilere\u00adspondingtothethirdhandshake,eahmutatormarks \nitsrootsgray,i.e.,theobjetsreferenedfromitsstak Themutatorshekwhethertheyneedtorespondto handshakesregularlyduringtheirnormaloperation.They \nneverrespondtoahandshakeinthemiddleofanupdate orthereationofanobjet.Theolletoronsidersa handshakeompleteafterallmutatorshaveresponded. \nAfterompletingthethreehandshakes,theolletor ompletesthetraeoftheheapandthensweepsit. Themutatorsgrayobjetswhenmodifyinganobjet \nslotontainingapointeruntiltheolletorompletes itstraeoftheliveobjets.Theamountofgraying dependsonthepartoftheolletionyle.Supposea \nreferenetoanobjet.ismodifedtopointtoanother objet..Betweenthefrstandthethirdhandshake, themutatormarksboth.and.gray.Afterthethird \nhandshakeanduntiltheendofthesweep,themutator marksonly.asgray. Themutatorsalsoooperatewiththeolletorwhen \nreatinganobjet.Duringthetrae,objetsarere\u00adatedblak,whereastheyarereatedwhiteiftheol\u00adletorisidle.Duringsweep,objetsarereatedblak \nifthesweeppointerhasnotseenthemyet(sothat theywillnotberelaimed).Ifthesweeppointerhas passedthem,theyarereatedwhitesoastobeready \nforthenextolletion.Ifthesweeppointerisdiretly onthereationspot,theobjetisreatedgray.Some extraaremustbetakenhereforpossibleraesbetween \nthereateandthesweep.However,asimplemethod ofolor\u00adtoggleallowsavoidingalltheseonsiderations. WedisussitinSetion5below. \nGenerationalolletionwithoutmovingobjets Wedesribeanapproahtogenerationalolletionthat doesnotreloateobjets.Weallaolletionofthe \nyounggenerationapartialolletionandaolletionof theentireheapafullolletion. OurdesignissimilartotheDemers,etal.[6]design \nforastop\u00adthe\u00adworldonservativeolletor.However, weinorporatefeaturesneessarytosupporton\u00adthe\u00adfy olletion:learingtheardmarkswithoutstoppingthe \nthreads,anadditionalolorforobjetsreatedduring aolletionandaolortoggletoavoidsynhronization betweenobjetalloationandsweep. \nInsteadofpartitioningtheheapphysiallyandkeep\u00adingtheyounggenerationinaseparateplae,wepar\u00adtitiontheheaplogially.Foreahobjet,wekeepan \nindiationofwhetheritisoldoryoung.Thismaybea onebitindiationorseveralbitsgivingmoreinforma\u00adtionaboutitsage. \nThesimplestversionistheonethatpromotesobjets aftersurvivingoneolletion.Webeginbydesribing thissimpleralgorithm.Wedisussanagingmeha\u00ad \nnisminourfullpaper[12].Demers[6]notesthatifan objetbeomesoldaftersurvivingoneolletion,then theblakolormaybeusedtoindiatethatanobjetis \nold.Clearly,beforethesweep,allobjetsthatsurvived thelastolletionareblak.Ifwedonotturnthese objetswhiteduringthesweep,thenweaninterpret \nblakobjetsasbeingintheoldgeneration. Duringthetimebetweenoneolletionandthenext, allobjetsarereatedwhiteandthereforeonsidered \nyoung.Atthenextpartialolletion(i.e.,olletion oftheyounggeneration)everythingfallsquiteniely intoplae.Duringthetrae,wedonotwanttotrae \ntheoldgeneration,andindeed,wedonottraeblak objets.Duringthesweep,wedonotwanttorelaim oldobjets,andindeed,wedonotrelaimblakobjets. \nAllliveobjetsbeomeblak,thus,alsobeomingold forthenextolletion. Beforeafullolletion(aolletionoftheoldand \nyounggeneration),weturntheolorofallobjetswhite. Otherthanthat,fullolletionsaresimilartopartial olletions. \n3.1Inter-generationalpointers Itremainstodisussinter\u00adgenerationalpointers,point\u00adersinoldobjetsthatpointtoyoungobjets.Sinewe \ndonotwanttotraetheoldgenerationduringtheol\u00adletionoftheyounggeneration,wemustassumethat theoldobjetsarealiveandtreattheinter\u00adgenerational \npointersasroots. Howdowemaintainalistofinter\u00adgenerationalpoint\u00aders?Similarlytoothergenerationalolletors,wemay \nhoosebetweenardmarking[26]andrememberedsets [23,29].(See[18]foranoverviewongenerationalolle\u00adtionandthetwomethodsformaintaininginter\u00adgenerational \npointers.)Inourimplementation,weonlyusedard marking.ThereasonisthatinJavaweexpetmany pointerupdates,andtheostofanupdatemustbemin\u00adimal.Also,wedidnothaveanextrabitavailableinthe \nobjetheadersrequiredforane\u00c6ientimplementation ofrememberedsets. Inaardmarkingsheme,theheapispartitioned \nintoards.Initially,theardsaremarked\"notdirty\". Aprogramthread(mutator)marksaarddirtywhen\u00adeveritmodifesaardslotontainingapointer.The \nolletorsanstheobjetsonthedirtyardsforpointers intotheyounggeneration;itmayturnofaardmark ifitdoesnotfndanysuhpointersontheard.Card \nmarkingmaintainstheinvariantthatinter\u00adgenerational pointersmayexistonlyondirtyards. Thesizeoftheardsdeterminesatradeofbetween \nspaeandtimeusage.Biggerardsimplylessspae requiredtokeepalldirtymarks,butmoretimerequired bytheolletortosaneahdirtyardtofndtheinter\u00adgenerationalpointers.Wetriedallpowersof2between \n16and4096andfoundthatthetwoextremesprovided thebestperformane(seeourfullpaper[12]forthese measures). \n3.2Theolletor Apartialolletionbeginsbymarkinggrayallyoung objetsreferenedbyinter\u00adgenerationalpointers;inpar\u00adtiular,theolletormarksgrayallwhiteobjetsrefer\u00adenedbypointersondirtyards.Atthesametime,all \nardmarksareleared.Clearingthemarksisokaysine allsurvivingobjetsarepromotedtotheoldgeneration attheompletionoftheolletion,sothatallexisting \ninter\u00adgenerationalpointersbeomeintra\u00adgenerationalpoint\u00aders.Foramoreadvanedagingmehanism(suhasin ourfullpaper[12])wewouldhavetohektodetermine \nwhetheraardmarkouldbeleared. Afterhandlinginter\u00adgenerationalpointers,allmu\u00adtatorsare\"told\"tomarktheirrootsusingthehand\u00adshakemehanism.Thisisfollowedbytrae,whihre\u00admainsunhangedfromthenon\u00adgenerationalolletor, \nandthensweep.Sweepismodifedsothatitdoesnot hangetheolorofblakobjetsbaktowhite. Afullolletionbeginsbylearingardmarks,with\u00adouttraingfromthedirtyards.Theolletoralsore\u00adolorsallblakobjetstowhite,allowinganyunreah\u00adableobjettoberelaimedinafullolletion.After \nthat,themutatorsare\"told\"tomarktheirrootsand theolletorontinueswithtraeandsweepasabove. 3.3Triggering \nWeuseasimpletriggeringmehanismtotriggerapar\u00adtialolletion.Aparameterrepresentingthesizeofthe younggenerationisdeterminedforeahrun,andapar\u00adtialolletionistriggeredafteralloatingobjetswith \naumulatingsizeexeedingthepredeterminedsize3. Totriggerafullolletion,weusethestandardmethod ofstartingtheonurrentolletionwhentheheapis \n\"almost\"full. 4Dealingwithprematurepromotion Whenpromotingallobjetsthatsurviveaolletion, thereareinfantobjetsreatedjustbeforethestartof \ntheolletion,whihareimmediatelymadeold.These objetsmaydieyoung,buttheyhavealreadybeenpro\u00admotedtotheoldgeneration,andwewillnotollet \nthemuntilthenextfullolletion.Inanon\u00adthe\u00adfyol\u00adletion,objetsarealsoreatedduringtheolletion yle;thus,ompoundingthispromotionproblem.We \nhaveaddedasimplemehanismtoavoidpromotingob\u00adjetsreatedduringtheolletiontotheoldgeneration. 3Withourheapmanager,weannottriggerexatlyatthistime. \nThus,thepredeterminedboundservesasalowerboundtothetrigger time. Amoreadvanedmehanismthatkeepsanageforeah \nobjetisdesribedinourfullpaper[12]. Thisisdonebyintroduinganewolorforobjets reatedduringaolletionyle.Insteadofreatingob\u00adjetswhiteorblakdependingonthestageoftheolle\u00adtionasintheDLGalgorithm,wereateobjetsyellow \nduringtheolletion.Yellowobjetsarenottraedby theolletor,andthesweepturnsyellowobjetsbak towhite(withoutrelaimingthem).Thus,theolletor \ndoesnotpromotethemtotheoldgeneration.Onesub\u00adtlepoint,whihwedisussinthemoretehnialsetion (seeSetion6below),foresanexeptiontotherule.In \npartiular,betweenthefrstandthethirdhandshakes oftheolletor,themutatorsalsomarkyellowobjets gray. 5Usingaolor-toggle \nReallthatduringtheolletion,mutatorsalloateall objetsyellow.Traehangestheolorofallreahable whiteobjetstoblak.Inthedesigndesribedsofar, \nsweeprelaimswhiteobjetsandolorsthemblue(the olorofnon\u00adalloatedhunks),andhangestheolorof yellowobjetstowhite.Thus,attheendofthesweep, \ntherearenoremainingwhiteobjets. Insteadofreoloringtheyellowobjets,sweepan employaolortogglemehanismsimilartoprevious \nwork[21,1 ,,2,22,1 ].Theolortogglemehanism exhangesthemeaningofwhiteandyellow,withouta\u00adtuallyhangingtheolorindiatorsassoiatedwiththe \nobjets.Thus,liveobjetsremaineitherblakoryel\u00adlow,andmutatorsgoonoloringnewobjetsyellow, sothatyellowplaystheroleofwhitefromtheprevious \nolletionyle.Whenanewolletionbegins,themu\u00adtatorsbeginoloringnewobjetswhite,sothatwhite beginsplayingtheroleoftheyellowolorfromthepre\u00adviousyle. \nToimplementtheolortoggle,weusetwoolor names:thealloationolorandthelearolor.Ini\u00adtially,thealloationoloriswhite,andthelearolor \nisyellow.Atalltimes,objetsarealloatedusingtheal\u00adloationolor.Atthebeginningoftheolletionyle, thevaluesofthealloationolorandthelearolorare \nexhanged.Inthefrstylethismeansthatthealloa\u00adtionolorbeomesyellowandthelearolorbeomes white.Duringthetrae,allreahableobjetsthathave \nlearolorareturnedgray.Objetsthathavetheal\u00adloationolorarenottraedandtheirolordoesnot hange.Duringthesweep,allobjetswithlearolor \narerelaimed. Usingthistogglewedonotneedtoturnyellowob\u00adjetsintowhiteduringthesweep,butmoreimportant, weavoidtheraebetweenthereateandthesweep.We \ndonotneedtoknowwherethesweeppointerisinorder todeterminetheolorofanewobjet.Anewlyallo\u00ad atedobjetisalwaysassignedtheurrentalloation \nolor. Sometehnialdetails Inthissetionweprovidepseudo\u00adodeandsomeaddi\u00adtionaltehnialdetails.Thispaperiswrittensothat \nthereadermayskipthissetionandstillgetabroad viewoftheolletor. Ourpurposeinpresentingtheodeistoshowhow \nthegenerationalmehanismftsintotheDLGolletor. Thus,ourpresentationoftheodeonentratesonthe detailsrelatedtogenerations.Wedonotpresentde\u00adtailsofthemehanismforkeepingtrakoftheobjets \nremainingtobetraed,nordowepresentdetailsof athread\u00adloalalloationmehanismneessarytoavoid synhronizationbetweenthreadsduringobjetalloa\u00adtion.SeetheDLGpapers[11,1 \n]forthedetailsofthese mehanisms.OneotherdiferenewithDLGisthatwe separatethehandshakeintotwoparts,postHandshake \nandwaitHandshake,insteadofusingaseondolletor thread. Figure1showsthemutatorroutines,whiharein\u00adfuenedbytheolletor:thewritebarrier(updaterou\u00adtine),objetalloation(reateroutine),andtheoop\u00aderateroutine,whihthemutatormustallregularly \n(e.g.,bakwardbranhesandinvoations).Intheode thenotationheap[x,i]denotesslotioftheobjetatad\u00addressx.Figure2showstheoverallolletionyleand \ninFigure3wepresentroutinesalledbytheolletor. Werefertotheodebelow. WeassumethatthereaderisfamiliarwiththeDLG \nolletor[11,1 ],andweusethefollowingterminology takenfromtheirpaper.Theperiodbetweenthefrst handshakeandtheseondisdenotedsyn1,theperiod \nbetweentheseondhandshaketothethirdisdenoted syn2,andtherestofthetime,i.e.,afterthethirdhand\u00adshakeandupuntilthebeginningofthenextolletion \nyleisdenotedasyn.Eahmutatorhasitsownper\u00adeptionoftheseperiods,dependingonthetimesthatit hasooperatedwiththehandshake. \nThemostdeliateissueforthegenerationalolletor istheproperhandlingoftheardmark:howtoset andresetit,properlyavoidingraesandmaintaining \norretness.Weuseatablewithadesignatedbytefor eahardholdingtheardmark.Thebytedoesnot haveanyotheruse.Ontheplatformweused,abyte \nisthesmallestentitythatanbeatomiallyreadand written. First,weonsiderthehandlingoftheardmarks forthesimplestalgorithm,withouttheyellowolor \northeolortoggle,inpartiularthealgorithmofSe\u00adtion3.Usingthisalgorithm,theolletormarksall liveobjetsblakandpromotesthem.Thus,aninter\u00adgenerationalpointeranbereatedonlyaftertraeis \nomplete.Thus,ardmarksanbelearedatthebe\u00adginningoftheylewithoutfearoflosingamarkdue toaraeonditionwithamutator. \nNowweaddtheyellowolor(Setion4).Theol\u00adletordoesnottraeobjets,whiharereatedyellow duringtheyle.Thus,itmustkeepareordofany \npointerrefereningayellowobjetfromanyotherob\u00adjet.(Atually,weareonlyinterestedinpointersfrom blakobjets,butwedonotperformthisflteringin \nourolletor.)Tosolvetheproblemofkeepingorret ardmarksforparentsofyellowobjets,itisenoughto makesurethattheorderofoperationsatthebeginning \nofaolletionyleisasfollows:santheardtable andlearthedirtymarksandonlyafterthatstartre\u00adatingyellowobjets.NotiethatClearCards(odein \nFigure3)preedesSwithAlloationClearColors(ode inFigure3)intheolletionyle(odeinFigure2). Nextweaddtheolortoggle(Setion5).Thereis \nawindowoftimebetweenthehekofanobjetAfor inter\u00adgenerationalpointersduringthesanoftheard tableandtheolortoggle.Ifaftertheolletorheks \nA,amutatorreatesanewinter\u00adgenerationalpointerin ArefereningayellowobjetB,theolletorwillmiss thispointerduringtheurrentolletion.Furthermore, \naftertheolortoggle,theobjetBbeomeswhite(i.e., havingthelearolor)anditmightbeolletedinthe urrent(partial)olletion. \nTosolvethis,wemakeanexeptiontothetreatment ofyellowobjetsbytheDLGwritebarrierandtreat themthesameaswhiteobjetsduringsyn1andsyn2 \n(betweenthefrstandthirdhandshakes).Thismeans thatinthis(usuallyshort)periodoftime,wheneverthe DLGwritebarrierwouldshadeawhiteobjetgray,it \nwillalsoshadeayellowobjetgray.SeeMarkGrayin Figure1. Anadditionalpointthatneedstobeverifedisthat thetraingalwaysterminates.Withouttheyellowolor \nmodifation,all(live)objetsturnfromwhitetogray andfromgraytoblak.Sinethenumberofliveobjets isfnite,allofthemturnblakintheend,andthe \ntraingalwaysterminates.Thisisstilltheasehere. Ayellowobjeteitherstaysyellowtilltheendofthe trae,oritmayturngrayandlaterblak. \nAfterperformingtheseneessarymodifations,we notethatthereisnoneedforardmarkingduringsyn1 andsyn2.Thus,wegetasmallgainine\u00c6ieny:ard \nmarkingisrequiredonlyduringtheasynstage.Notie thatMarkCardisalledonlyduringasyninthewrite barrierodeinFigure1. \nTosummarize,ardmarkingoursonlyduringasyn. Thelearingandhekingoftheardmarksbytheol\u00adletorisdoneafterthefrsthandshake,andbeforethe \nseondhandshake.Afterlearingtheardmarks,the olletortogglesthe(learandalloation)olors;thus, mutatorsreatenewobjetswiththe\"yellow\"olor. \nUpdate(x,i,y): If(statusm =asyn)then MarkGray(heap[x,i]) MarkGray(y) elseif(Colletoristraing)then MarkGray(heap[x,i]) \nMarkCard(x) else MarkCard(x) heap[x,i].y Create: PikxEree. olor[x].alloationColor Returnx Cooperate: \nIf(statusm )then =status If(statusm=syn2)then ForeahxEroots: MarkGray(x) statusm.status MarkGray(x): \nIf(olor(x)=learColor)or (olor(x)=alloationColor1 statusm =asyn)then olor(x).ray Figure1:Themutatorroutines \nYellowobjetsmaybeshadedgraybythewritebarrier insyn1andsyn2. Experimentalresults Ourgoalistoomparetheon-the-fyolletorwith \nandwithoutgenerations,andtoomparetheefetsof hoiesfortheparametersgoverningthegenerational version,e.g.,sizeofards,sizeofyounggeneration,use \nofaging,et.Weimplementedboththeoriginalon-the\u00adfyolletor4andthegenerationalon-the-fyolletorin .Forafairomparison,wealsointroduedablak-whiteolor \ntoggleintheoriginalon-the-fyolletor lear:If(fullolletion) InitFullColletion Handshake(synl) mark:postHandshake(syn2) \nClearCards SwithAlloationClearColors waitHandshake postHandshake(asyn) markglobalroots ompleteTrae waitHandshake \ntrae:ompleteTrae sweep:Foreahobjetxintheheap: if(olor(x)=learColor)ree.reeUx olor(x).blue Figure2:Theolletionyle \nClearCards: Foreahard: If(dirty())then ClearCardMark() Foreahobjetxon If(olor(x)=blak)then olor(x).ray \nSwithAlloationClearColors: temp.learColor learColor.alloationColor alloationColor.temp InitFullColletion: \nForeahobjetxintheheap: If(olor(x)=blakVolor(x)=ray) then olor(x).alloationColor Foreahard: ClearCardMark() \nMarkBlak(x): If(olor(x) =blak)then ForeahpointeriExdo: MarkGray(i) olor(x).blak orpleteTrae: Whilethereisagrayobjet: \nPikagrayobjetx MarkBlak(x) Handshake: postHandshake(s) waitHandshake postHandshake(s): status.s waitHandshake: \nForeahmEmutators waitforstatusm=status Figure3:Theolletorroutines aprototypeAIXJDK1.1.6JVM.Measurementswere \ndoneona4\u00adway332MHzIBMPowerPC604e,with512 MBmainmemory,runningAIX4.2.1.Additionalmea\u00adsurementsonauniproessorwererunonaPowerPC \nwith192MBmainmemory,runningAIX4.2. Allrunswereexeutedonadediatedmahine.Thus, althoughelapsedtimesaremeasured,thevarianebe\u00adtweenrepeatedrunsissmall.Allrunsweredonewith \ninitialheapsizeof1MBandmaximumheapsizeof32 MB.Thealulationofthetriggerforafullolletion wasthesamewithandwithoutgenerations.Weverifed \nthattheworkingsetforallrunsftinmainmemory,so thattherewerenoefetsduetopaging. 7.1Measuringelapsedtimeforanon-the-fyolletor \nAdeliatepointwithanon\u00adthe\u00adfyolletorishowto measureitsperformane.Ifwerunasingle\u00adthreaded appliationonamultiproessor,thenthegarbageol\u00adletorrunsonaseparateproessorfromtheappliation. \nMeasuringtheelapsedtimeoftheappliation,doesnot showhowmuhtimetheolletorhasonsumedonthe seondproessor. \nInarealworld,theserverhandlesmanyproesses andtheseondproessordoesnotomeforfree.In ordertogetareasonablemeasureofhowmuhCPU \ntimetheappliationplusthegarbageolletoratually onsume,wemustkeeptheotherproessorsbusy.We hosetorunfoursimultaneousopiesoftheappliation \nonour4\u00adwaymultiproessor.Thisensuredthatallthe proessorswouldbebusyallthetime,andthemore e\u00c6ientgarbageolletorwouldwin.Eahparallelrun \nwasrepeated8times,andtheaverageelapsedtimewas omputed. Inaddition,wemeasuredtheimprovementofgen\u00aderationalolletiononauniproessor.Thisisnota \ntypialenvironmentforanon\u00adthe\u00adfyolletor,butit wasinterestingtohekwhethergenerationshelpin thisaseaswell(andtheyusuallydo). \n7.2Thebenhmarks MostofourbenhmarksaretakenfromtheSPECjvm benhmarks[25].Desriptionsofthebenhmarksan befoundontheSpewebsite[25].Weranallthe \nSPECjvmbenhmarksfromtheommandlineandnot throughtheharness.Foralltestsweusedthe\"\u00ads100\" parameter. Wealsousedtwoadditionalbenhmarks.Thefrst \nisanIBMinternalbenhmarkalledJumble[15].This programimplementsananagramgeneratorusingasim\u00adple,reursiveroutinetogenerateallpermutationsofthe \nharatersintheinputstring.Ifallresultingwordsin apermutedstringarefoundintheditionary,theper\u00admutedstringisdisplayed.Thisprogramisolletion\u00adintensive,reatingandfreeingmanystrings. \nNo.of threads 2 4 6 8 10 Impro\u00advement 1.3% 2.6% 10.6% 16.0% 11.7% Figure4:Perentageimprovement(elapsedtime)for \nmulti\u00adthreadedRayTraerona4\u00adwaymultiproessor Benhmark Multiproessor Uniproessor Improvement Improvement \nJumble 25.0% 32.7% Figure5:PerentageimprovementforJumble Theseondisaodemodifationofthe227mtrt[5] fromtheSPECjvmbenhmarks[25]inordertomakeit \nmoreinterestingonamultiproessormahine.Thepro\u00adgram227mtrtisavariantofaRaytraer,wheretwo threadseahrendertheseneinaninputfle,whih \nis340KBinsize[5].227mtrtrunsonmatriesof 200200anduses2onurrentthreads.Wemodifed .ittorunonabiggermatrixofdimensions300.300and \nwealsoparameterizedthenumberofrenderingthreads. Weallthismodifationmulti-threadedRayTraer. ThemodifedodeisavailableonrequestforSPECjvm \nliensees. 7.3Thehoieofparameters Foreahappliation,adiferenthoieoftheparame\u00adtersgoverningthegenerationalolletionseemstoyield \nbestperformane.Ontheaverage,thebesthoieof parametersturnsouttobeobjetmarking(i.e.,ard markingwith16bytesperard)withouttheadvaned \nagingmehanismandthebestsizeoftheyounggener\u00adationturnsouttobe4megabytes(wealsotried1,2 and8megabytesfortheyounggeneration).Inthenext \nsetion(Setion7.4),wepresentresultsforthissetof parameters.Inourfullpaper[12]wejustifyourhoie byomparingtheperformaneofthealgorithmwith \nagingandforvarioussettingsoftheotherparameters. 7.4Theresults InFigure4wepresenttheperentageimprovementfor \nthemulti\u00adthreadedRayTraerbenhmark,desribedin Setion7.2above.Thenumberofappliationthreads variesfrom2to10.Generationsperformverywellfor \nit. Next,inFigure5,wepresenttheimprovementgen\u00aderationalolletionyieldsfortheJumblebenhmark. Here,generationalolletionisalsoverybenefial.In \nFigure6weexaminetheappliationsoftheSPECjvm benhmark.Asonemaysee,formostappliationsgen\u00aderationsdowell.Weomittheresultsforthebenh\u00admarks200hekand222mpegaudio,sinetheydo \n     Benhmark MultiproessorImprovement Uniproessor Improvement 227mtrt 7.0% 25.2% 201ompress 0.0% \n2.0% 209db \u00ad0.9% 0.7% 202jess \u00ad3.7% \u00ad2.5% 213java 17.2% 15.3% 228jak \u00ad2.12% \u00ad7.7% Pagestouhedby w/o \ngenerations partial full 227mtrt 1489 N/A 3355 201ompress 76 124 109 209db 944 2794 2827 202jess 1304 \n2227 2048 213java 2607 3709 3080 228jak 1199 2052 1767 Jumble 1082 4938 5054 Figure6:PerentageimprovementforSPECjvmbenh\u00admarks \nFigure8:Averageno.ofpagestouhedbyag No.GC w/o generations partial full 227mtrt 36 0 26 201ompress 5 15 \n17 209db 15 1 15 202jess 70 2 51 213java 36 16 82 228jak 45 4 35 Jumble 152 8 56 Figure7:Numberofgarbageolletionyles \nnotperformmanygarbageolletionsandtheirperfor\u00admaneisindiferenttotheolletionmethod. Theperformaneofthebenhmarkseithergainsa \nboostfromgenerationalolletionorremainsvirtually unhanged,exeptfortwobenhmarks,202jessand   228jak,whihsuferaperformanederease.Toa\u00adountforthediferenesbetweentheappliations,we \nmeasuredseveralruntimepropertiesoftheseapplia\u00adtions.Asexpeted,anappliationperformswellwith generationalolletionifmanyobjetsdieyoungand \nifpointersintheoldgenerationdonotgetfrequently modifed.Thedereaseinperformanefor202jessand 228jakoriginatesfromseveralreasons,someofthem \nareshowninourfullpaper:First,thelifetimeofob\u00adjetswasnottypialtogenerations\u00adtheydiesoonafter beingpromoted,unlessonemakesahugeyounggener\u00adation.Seond,for202jess36.2%oftheobjetsthat \naresannedduringpartialolletionaresannedbe\u00adausetheyaredirtyobjetsintheoldgeneration.This isahighostformanipulatinginter\u00adgenerationalpoint\u00aders.However,notethatthesuessorfailureofgenera\u00adtionalolletorisinfuenedalsobyfatorsthatwedid \nnotmeasure.Forexample,theinreasedloalityofthe heap,ausedbyfrequentolletionsishardtomeasure. Figure7showsthenumberandtypesofolletion \nylesforthebenhmarks.Forallbenhmarksthenum\u00adberoffullolletionswhenusingthegenerationalol\u00adletorislessthanthenumberoffullolletionswhen \nusingthenon\u00adgenerationalolletor. Finally,weexaminethenumberofpagestouhedby theolletorduringthevariousolletions,seeFigure8. \n   \\emeasurethepagestouhedduringtraeandsweep, inludingallthetablestheolletoruses(suhasthe ardtable.)Naturally,thenumberofpagestouhed \nduringthepartialolletionsaresmallerthanthenum\u00adberofpagestouhedduringfullolletions.Thesmall\u00adestratioisfortheJumblebenhmark,wherethenum\u00adberofpagestouhedduringpartialolletionsisabout \n20%ofthenumbertouhedduringfullolletions.The largestratioisforthe213javabenhmark.There, thenumberofpagestouhedinpartialolletionsis \nabout70%ofthenumberofpagestouhedduringfull olletions.Thesepositiveresultsmathsimilarmea\u00adsurementsinDemers,etal.[6]. \nInourfullpaper[12]wereportmanymoreresults ontheruntimebehavioroftheappliationsaswellas tablesomparingpossiblevaluesfortheparameters.In \npartiular,wereporthowmanypointersaresanned forinter\u00adgenerationalpointers,howmanyobjetsare sannedaltogetherduringthetrae,whatperentage \nofobjetsarefreedinpartialandfullolletions,how muhtimeittakestoperformpartialandfullolle\u00adtions,et.\\ealsohektheperformaneofthealgo\u00adrithmforvarioussizesoftheyounggeneration,forvar\u00adiousardsizes,andforvarioustenuringstepsforthe \nadvanedagingmehanism(whihisompletelyabsent inthisextendedabstrat). BConlusion \\ehavepresentedadesignforinorporatinggenera\u00adtionsintoanon\u00adthe\u00adfygarbageolletorforJava.To \nthebestofourknowledgesuhaombinationhasnot beentriedbeforeforanimperativelanguage.Ourfnd\u00adingsimplythatgenerationsarebenefialinspiteofthe \ntwo\"obstales\":thefatthatthegenerationsarenot segregatedinspaesineobjetsarenotmovedbythe olletor,andthefatthatobtainingshorterpausesfor \ntheolletionarenotrelevantforanon\u00adthe\u00adfyolletor. Itturnsoutthatformostbenhmarkstheoverall runningtimewasreduedbyupto25%,butthere \nwasonebenhmarkforwhihgenerationalolletionin\u00adreasedtheoverallrunningtimeonourmultiproessor by4%. Thebestperformingvariantofgenerationalolle\u00adtionoutofthevariantsweheked,wastheonewiththe \nsimplestpromotionpoliy(promotinganobjettothe oldgenerationaftersurvivingoneolletion),aquite bigyounggeneration(4megabytes),andasmallsize \nofardsfortheardmarkingalgorithm(16bytesper ard). Inmostolletions,lesspagesaretouhedbythe generationalolletor.Thus,oneshouldespeiallyon\u00adsiderusinggenerationsforanon-the-fyolletorwhen \ntheappliationsruninlimitedphysialmemory. Aknowledgments WethankHansB6ohmforhelpfulremarks.Wethank AlainAzagury,KatherineBarabash,BillBerg,John \nEndiott,MihaelFator,ArvFisher,NaamaKraus, YossiLevanoni,EthanLewis,EliotSalant,DafnaShein\u00adwald,RonSivan,SagiSnir,andIgorYanoverforhelpful \ndisussions. Referenes [1]HenryG.Baker.Listproessinginreal-timeon aserialomputer.CommuniationsoftheACM, \n21(4):280-94,1978. [2]HenryG.Baker.TheTreadmill,real-timegarbage olletionwithoutmotionsikness.ACMSIGPLAN \nNoties,27(3):66-70,Marh1992. [3]MordehaiBen-Ari.On-the-fygarbageolletion: Newalgorithmsinspiredbyprogramproofs.In \nM.NielsenandE.M.Shmidt,editors,Au\u00adtomata,languagesandprogramming.Ninthollo\u00adquium(Aarhus,Denmark),pages14-22,NewYork, \nJuly12-161982.Springer-Verlag. [4]MordehaiBen-Ari.Algorithmsforon-the-fy garbageolletion.ACMTransationsonProgram\u00admingLanguagesandSystems,6(3):333-344,July \n1984. [5]JefChanandNikShaylor.MultithreadedRay Traer.SunMirosystems,privateommuniations. [6]AlanDemers,MarkWeiser,BarryHayes,Hans \nBoehm,DanielG.Bobrow,andSottShenker.Com\u00adbininggenerationalandonservativegarbageolle\u00adtion:Frameworkandimplementations.InConfer\u00adeneReordoftheSeventeenthAnnualACMSym\u00adposiumonPriniplesofProgrammingLanguages, \nACMSIGPLANNoties,January1990.ACMPress, pages261-269. [7]J.DeTreville.ExperienewithConurrentGarbage ColletorforMudula-2+.TehnialReport64,DEC \nSystemsResearhCenter,PaloAlto,CA,November 1990. [8]EdsgerW.Dijkstra,LeslieLamport,A.J.Mar\u00adtin,C.S.Sholten,andE.F.M.Stefens.On\u00adthe-fygarbageolletion:Anexeriseinooper\u00adation.InLetureNotesinComputerSiene,No. \n46.Springer-Verlag,NewYork,1976. [9]EdsgerW.Dijkstra,LeslieLamport,A.J.Mar\u00adtin,C.S.Sholten,andE.F.M.Stefens.On\u00adthe-fygarbageolletion:Anexeriseinoopera\u00adtion.CommuniationsoftheACM,21(11):965-975, \nNovember1978. [10]D.DoligezandG.Gonthier.Portable,unobtru\u00adsivegarbageolletionformultiproessorsystems. \nInConfereneReordoftheTwenty\u00adfrstAnnual ACMSymposiumonPriniplesofProgramming Languages,ACMSIGPLANNoties.ACMPress, \n1994,pages113-123. [11]D.DoligezandX.Leroy.Aonurrentgenerational garbageolletorforamulti-threadedimplementa\u00adtionofML.InConfereneReordoftheTwentieth \nAnnualACMSymposiumonPriniplesofProgram\u00admingLanguages,ACMSIGPLANNoties.ACM Press,January1993. [12]T.Domani,E.Kolodner,andE.PetrankAGener-ationalOn-the-fyGarbageColletorforJava.Teh\u00adnialReport88.385IBMHaifaReesrahLab.Web \naess:http://www.s.tehnion.a.il/.erez/gen.ps [13]JohnR.Ellis,KaiLi,andAndrewW.Appel.Real\u00adtimeonurrentolletiononstokmultiproessors. \nTehnialReportDEC-SRC-TR-25,DECSystems ResearhCenter,PaloAlto,CA,February1988. [14]DavidGries.Anexeriseinprovingparallel \nprogramsorret.CommuniationsoftheACM, 20(12):921-930,Deember1977. [15]RandyHeishandKaivalyaDixit.Jumble:An \nAnagramGenerator.Privateommuniations. [16]AntonyL.Hosking,J.EliotB.Moss,DarkoSte\u00adfanovic.AComparativePerformaneEvaluationof \nWriteBarrierImplementations.InProeedingsof theACMConfereneonObjet\u00adOrientedProgram\u00admingSystems,Languages,andAppliations,pp92-109(Vanouver,Canada,Otober1992).ACMSIG\u00adPLANNoties27(10),Otober1992. \n[17]PaulHudakandRobertM.Keller.\"GarbageCol-letionandTaskDeletioninDistributedSystems.In ACMSymposiumonLispandFuntionalProgram\u00adming,pp.168-178,Pittsburgh,PA,August1982. \n[18]R.E.JonesandR.D.Lins.GarbageColletion: AlgorithmsforAutomatiDynamiMemoryMan\u00adagement.JohnWiley&#38;Sons,July1996. \n[19]E.K.KolodnerandE.Lewis.UsingaColorToggle toRedueSynhronizationintheDLGColletor. PrivateCommunations,1998. \n[20]H.T.KungandS.W.Song.Ane\u00c6ientparallel garbageolletionsystemanditsorretnessproof. InIEEESymposiumonFoundationsofComputer \nSiene,pages120-131.IEEEPress,1977. [21]L.Lamport.Garbageolletionwithmultiplepro\u00adesses:anexeriseinparallelism.InProeedingsof \nthe1976InternationalConfereneonParallelPro\u00adessing,pages50-54,1976. [22]L.HuelsbergenandP.Winterbottom.VeryCon\u00adurrentMark-&#38;-SweepGarbageColletionwithout \nFine-GrainSynhronization.InProeedingsofthe 1998InternationalSymposiumonMemoryManage\u00adment,pages50-54,1998. \n[23]H.LiebermanandC.E.Hewitt.ARealTime GarbageColletorBasedontheLifetimesofOb\u00adjets.CommuniaitonsoftheACM,26(6),pages \n419-429,1983. [24]DavidA.Moon.Garbageolletioninalarge LISPsystem.InGuyL.Steele,editor.Conferene Reordofthe1984ACMSymposiumonLispand \nFuntionalProgramming,Austin,TX,August1984, ACMPress,pages235-245. [25]SPECjvm.Spe\u00adTheStandardPerformaneEvaluationCorporation. \nWebaesshttp://www.spe.org/osg/jvm98/. [26]PatrikSobalvarro.Alifetime-basedgarbageol\u00adletorforLispsystemsongeneral-purposeomput-ers.TehnialReportAITR-1417,MIT,AILab, \nFebruary1988. [27]GuyL.Steele.Multiproessingompatifying garbageolletion.CommuniationsoftheACM, 18(9):495-508,September1975. \n[28]GuyL.Steele.Multiproessingompatifying garbageolletion.CommuniationsoftheACM, 18(9):495-508,September1975. \n[29]D.Ungar.GenerationSavenging:ANon\u00addisruptiveHighPerformaneStorageRelamation Algorithm.ProeedingsoftheACMSymposium \nonPratialSoftwareDevelopmentEnvironments, ACMSIGPLANNotiesVol.19,No.5,May1984, pp.157-167.\n\t\t\t", "proc_id": "349299", "abstract": "<p>An <italic>on-the-fly garbage collector</italic> does not stop the program threads to perform the collection. Instead, the collector executes in a separate thread (or process) in parallel to the program. On-the-fly collectors are useful for multi-threaded applications running on multiprocessor servers, where it is important to fully utilize all processors and provide even response time, especially for systems for which stopping the threads is a costly operation. </p><p>In this work, we report on the incorporation of generations into an on-the-fly garbage collector. The incorporation is non-trivial since an on-the-fly collector avoids explicit synchronization with the program threads. To the best of our knowledge, such an incorporation has not been tried before. We have implemented the collector for a prototype Java Virtual Machine on AIX, and measured its performance on a 4-way multiprocessor.</p><p>As for other generational collectors, an on-the-fly generationalcollector has the potential for reducing the overall running time and working set of an application by concentrating collection efforts on the young objects. However, in contrast to other generational collectors,on-the-fly collectors do not move the objects; thus, there is no segregation between the old and the young objects. Furthermore, on-the-fly collectors do not stop the threads, so there is no extra benefit for the short pauses obtained by generational collection. Nevertheless, comparing our on-the-fly collector with and without generations, it turns out that the generational collector performs better for most applications. The best reduction in overall running time for the benchmarks we measured was 25%. However, there were some benchmarks for which it had no effect and one for which the overall running time increased by 4%.</p>", "authors": [{"name": "Tamar Domani", "author_profile_id": "81100481252", "affiliation": "IBM Haifa Research Lab.", "person_id": "P278195", "email_address": "", "orcid_id": ""}, {"name": "Elliot K. Kolodner", "author_profile_id": "81100522094", "affiliation": "IBM Haifa Research Lab.", "person_id": "PP14181233", "email_address": "", "orcid_id": ""}, {"name": "Erez Petrank", "author_profile_id": "81100377919", "affiliation": "Computer Science Dept., Technion - Israel Institute of Technology", "person_id": "PP39040138", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/349299.349336", "year": "2000", "article_id": "349336", "conference": "PLDI", "title": "A generational on-the-fly garbage collector for Java", "url": "http://dl.acm.org/citation.cfm?id=349336"}