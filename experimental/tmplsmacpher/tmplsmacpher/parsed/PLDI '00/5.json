{"article_publication_date": "05-01-2000", "fulltext": "\n ModularInterproeduralPointerAnalysisUsingAessPaths:Design, Implementation,andEvaluation Ben\u00adChungCheng*Wen\u00admeiW.Hwut \n*DepartmentofComputerSiene tDepartmentofEletrialandComputerEngineering UniversityofIllinois Erail:{bheng,hwu} \nrh.uiu.edu Abstrat Inthispaperwepresentamodularinterproeduralpoint\u00aderanalysisalgorithmbasedonaess\u00adpathsforCprogram\u00ads.Wearguethataesspathsanreduetheoverheadof \nrepresentingontext\u00adsensitivetransferfuntionsandefe\u00adtivelydistinguishnon\u00adreursiveheapobjets.Andwhen themodularanalysisparadigmisusedtogetherwithoth\u00adertehniquestohandletypeastsandfuntionpointers, \nweareabletohandlesignifantprogramslikethoseinthe SPECint92andSPECint95suites.Wehaveimplemented thealgorithmandtesteditonaPentiumII450PCrun\u00adningLinux.Theobservedresoureonsumptionandper\u00adformaneimprovementareveryenouraging. \nIntrodution Interproeduralpointeranalysisisaritialomponentof auratestatimemorydisambiguationandhasbeenad\u00addressedbymanyresearhersoverthepast20years.The \nanalysisgoalhasalsoevolvedfromdetetingaliasesamong formalparametersforFortranprogramstoaliasesamong multi\u00adlevelpointerdereferenesinC,C++andJava.How\u00adever,interproeduralpointeranalysisisstillnotmatureon \nthewhole,sinethefeasibilityofafullyfuntionalinterpro\u00adeduralpointeranalysisalgorithmwhihanaommodate realistilargeprogramshasnotbeendemonstratedinthe \nliterature.Unlikefuntioninlining[1],registeralloation[2], andSSAanalysis[3],interproeduralpointeranalysishas \nnotbeenintegratedintoommerialompilers. Thekeyissuesthatneedtobeaddressedbyaninter\u00adproeduralpointeranalysisalgorithminludethefollowing. \nWewilldemonstratelaterthatouralgorithmindeedraises theappliabilityofinterproeduralpointeranalysistothe \nnextlevel. Flowsensitivity.Apointeranalysisalgorithmisfow\u00adsensitiveifitonsiderstheefetsofpointerassignments \n.CurrentlyemployedwithSunMirosystems,PaloAlto,CA 94303. Permissiontomakedigitalorhardopiesofallorpartof \nthisworkforpersonalorlassroomuseisgrantedwithoutfee providedthatopiesarenotmadeordistributedforproft \norommerialadvantageandthatopiesbearthisnotie andthefullitationonthefrstpage.Toopyotherwise, orrepublish,topostonserversortoredistributetolists, \nrequirespriorspeifpermissionand/orafee. PLDI2000,anouver,BritishColumbia,Canada. Copyright2000ACM1\u00ad58113\u00ad199\u00ad2/00/0006...$5.00. \n withrespettostatementorders.Thebeneftisthatalater assignmentmaykillearlierdefnitionsofthesamepoint\u00ader.However,mostalgorithmsonlyallowstrongupdates \nforsalarpointervariables[4,5,6].Inreality,mostsalar pointersarerarelyredefned.Whentheyareredefnedfre\u00adquently,usuallytheyareusedinloopstotraversearraysor \nlinkedlists,butsuhdatastruturesareoftentreatedon\u00adservativelyasasingleaggregateelement.Asaresult,the aurayyieldedisnotproportionaltothetimespent,and \nearlierworkreportsthatlittlebeneftisobservedonmost studiedbenhmarks[7]. Contextsensitivity.Aontext\u00adsensitiveinterproedu\u00adralpointeranalysisalgorithmdistinguishesdiferentaller \nontextsforaommonalleesothataliasinformationar\u00adriedbyoneallerwillnotbeleakedintotheother.Thene\u00adessityofperformingontext\u00adsensitivepointeranalysisfor \nsomebenhmarksshowslittleornopreisionbeneft[8]. However,forthosewhereitisbenefial,weproposeanin\u00adexpensiveontext\u00adsensitivealgorithm. \nWhole-programormodularanalysis.Themosts\u00adtraightforwardwaytomaintainontextsensitivityistoana\u00adlyzeawholeprogramfollowingtheinterproeduralontrol\u00adfowgraph[9,4],butmemoryusageandanalysistimeare \nostlyforthismethod.Partialtransferfuntions,aspro\u00adposedbyWilsonandLam[5],usememoizationtoavoidthe redundantanalysisofasubsetall\u00adgraph.Thereentmodu\u00adlaranalysisproposedbyChatterjeeetal.[6]furtherredues \nthememoryrequirementsineonlymethodbodiesbelong\u00adingtothesamestronglyonnetedomponents(SCC)[10] inaC++programneedtobememoryresidentsimultane\u00adously.SinerealprogramsontainlargeSCCs,itisdesirable \ntofurtherreduethememoryrequirementforanalyzinga singleSCC. Storage-orpath-basedrepresentation.Astatial\u00adgorithmoftenneedstouseanabstratnotationtorepresent \nrun\u00adtimeaessedmemoryloations.Storage\u00adbasedrepre\u00adsentationusesextendedvariablenamesforphysialmemory loations[9,4,5,6].Toavoidambiguity,itisoftenre\u00adquiredthatasinglememoryloationannotberepresented \nbymorethanonestoragename.Duetodiferentaliasesa\u00admongformalparameters,morethanoneversionoftransfer funtions,eitherseparatelymaintained[5],orolletively \nmaintainedbutdiferentiatedbyaliasontexts[6],arere\u00adquired.Aesspaths[9,11],ontheotherhand,simplyrep\u00adresentphysialmemoryloationsbyhowtheyareaessed \nfromaninitialvariableinastore\u00adlessmodel.Aslongasthe lengthofaesspathsanbeboundinthepreseneofreur\u00adsivedatastrutures,aontext\u00adindependentrepresentationof \nthesummarytransferfuntionandaneasierwaytoprodue  Build estimated Analyze local Propagate concrete Determine \nparameter call graph. statements values. aliases. (flow-sensitive). Propagate summary transfer functions \n(context-sensitive). (a) Intraprocedural Interprocedural  Analyze local Build accurate Propagate summary \nPropagate concrete Propagate concrete Determine parameter statements call graph transfer functions function \nnames. values. aliases. (flow-insensitive). (context-insensitive). (context-sensitive). (b) Figure1:Modularinterproeduralpointeranalysis:(a)ReIalgorithmforasubsetofC++,(b)proposedmodularanalysis \nforompleteC. uniquenamesforheapobjetsanbeenabled.However,the literaturedoesnotexplainhowsummarytransferfuntions \naretobemaintainedinaesspaths. Partialorompletelanguagefeatures.Aom\u00adpilerneedsafulloverageofalllanguagefeaturesinor\u00addertoperformorretoptimizations.Theworkproposed \nbyWilsonandLam[5]isthefrsttooverallCfeatures, butitsappliabilityislimitedbythememoryrequiremen\u00adtofwhole\u00adprogramanalysis.Ontheotherhand,many \nfow\u00adandontext\u00adinsensitivealgorithmsareasymptotial\u00adlyfaster[12,13,14],buthandlingrealistiCfeaturesmay \nhaveadrastiimpatontheomplexity.Forexample,with\u00adouthandlingstruturesandunions,Steensgaard'salgorithm hasalmostlinearomplexity[13];whenaggregatefeldsare \nonsidered,theomplexitybeomesexponential[15]. Efetivenessstudy.Mostearlieralgorithmsaree\u00advaluatedbyresoureonsumptions,pointerresolutions,and \nstatistisofimprovedoptimizationopportunities[16,17,18, 19].TheworkbyWilsonandLamin[5]usespointeranalysis \nresultstoguideloopparallelizationsforoneSPECbenh\u00admark,whereastheworkbyDiwanetal.[19]usestype\u00adbased aliasanalysistoguideredundantloadeliminationandloop\u00adinvariantloadmigrationforasetofModula\u00ad3programs. \nCooperandLu[17]studytheefetofregisterpromotionfor variablesinthepreseneofpointers,butindiretaesses toheapobjetsandfeldsofaggregatesarenothandled.In \nthispaper,interproeduralpointeranalysisresultsareused toguidemuhmoreaggressivememoryaessoptimization\u00adsinludingredundantload/storeelimination,loop\u00adinvariant \nmemoryaessmigration,andload/storesheduling[28]. TheseoptimizationsaremoreaggressivebeauseCisnota type\u00adsafelanguage,andbothstak\u00adandheap\u00adbasedmemory \naessesanbeoptimizedevenforoderegionsontaining funtionalls.Sineaformalverifationfortheorretness ofpointeranalysisresultsisstillabsent,usingtheanalysis \nresultstoguideaggressiveoptimizationsprovidesaprag\u00admatialternativeforverifation. Inthispaper,weproposeafullyfuntionalinterproedu\u00adralpointeranalysisalgorithmwhihanhandlewidelyused \nCprograms.Ourdesignemphasizesthepratialaspet ofinterproeduralpointeranalysis,adoptingthemodular andfow\u00adinsensitiveparadigm.Thepropagationofsumma\u00adrytransferfuntionsisondutedinaontext\u00adsensitivebut \ninexpensivemannerusingaesspathsandpoints\u00adtoanal\u00adysis[4].InaommodatingrealistiCfeatures,ouralgo\u00adrithmhandlesfuntionpointersbystartingwithanunder\u00adestimatedallgraphwhihisaugmentediterativelyalong \ntheourseofinterproeduralpointeranalysis[4].Weal\u00adsoinorporatetheofsetrepresentationforstruture/union feldsintoaesspathstohandlealiasesausedbyunions \nandtypeasts[5,20].Inaddition,wedemonstratethatthe numberofnamesrepresentingreursiveheapobjetsan beboundandtheloationofayliheapobjetsanbe \ndisambiguatedusingaesspaths.Experimentswereon\u00addutedintheIMPACTompilerframework[21]usingthe ompleteSPECint92andSPECint95benhmarksuitesin\u00adluding126.g,whihontains205,583linesofodeand \n2001funtions.Insteadofusingahigh\u00adendworkstation,we usedaPentiumII450PCwith256MBofmemoryrunning LinuxRedHat6.0todemonstratethefeasibilityofouralgo\u00adrithm.Withnomorethan10minutesofanalysistimeand \nnomorethan238MBofmemoryusage,ouranalysisan deliveranaverageperformaneimprovementof42%anda peakimprovementof110%overprogramsompiledwithout \npointeranalysisandmemoryaessoptimizations.These numbersdemonstrateboththee\u00c6ienyandefetiveness ofouralgorithm. \nTherestofthispaperisorganizedasfollows.Setion2 detailstheproposedmodularinterproeduralpointeranal\u00adysisalgorithm.Setion3evaluatestheomplexityofthe \nalgorithm.Setion4presentsempirialresults.Setion5 reviewsrelatedwork.Setion6onludesthepaper. 2ModularInterproeduralPointerAnalysis \nModularinterproeduralanalysisisatehniquethatdeom\u00adposesthewholeprogramintosmallermodulessothatonly asmallnumberofmodulesneedtoberesidentinmemory \nsimultaneously.Ouralgorithmonsistsoftwomajorstages: theintraproeduralstageandtheinterproeduralstage.In \n typedefstrutS{ fn1((**fa)(S*,S*), int*key; 1*0 3*1 (*fb)(S*,S*), strutS*next;1*4 7*1 (*f)(S*,S*)) }S; \n{  main() (**temp)(S*,S*); { S4:temp=fa; void(*fn2)(S*,S*); S5:*temp=fb;  Sst1,st2,st3; } S1:fn1(bfn2,fn3,fn4);fn3(S*r,S*s) \nS2:(*fn2)(bst1,bst2); { S3:(*fn2)(bst3,bst3); S6:r->next=s; }}  fn4(S*r,S*s) { S7:s->next=r; }  (a) \n(b) () Figure2:Storage-andpath-basedtransferfuntions(shownbydashededges):(a)ode,(b)twoversionsdistinguishedby \naliasontexts,()onegeneriversionappliabletobothallingontexts. theintraproeduralstage,eahfuntionisanalyzedasan \nisolatedompilationmodulewhereformalparameters,allee returnvalues.,andglobalvariablesareallassumedtohave \nunknownvalues.Indiretlyaessedloationsthroughun\u00adknownpointersarerepresentedbyaesspaths.Bythe endoftheintraproeduralstage,asummarybehaviorof \neahfuntionisalulated,inludingasetofmemoryloa\u00adtionsaessiblearossfuntionboundaries,asetofall-site names,andasetofpointerdefnitionsinvolvingpointers \naessiblearossfuntionboundaries.Thethirdsetison\u00adsideredasthesummarytransferfuntionandrepresentedby points-torelations.Intheinterproeduralstage,weperform \nbottom-uppropagationofsummarytransferfuntionsalong theallgraph.Inthepreseneoffuntionpointers,wealso needtoperformtop-downpropagationoffuntionnames \nalongthepartiallyresolvedallgraph,sinesomeindiret all-sitesmayreeiveonretefuntionnamesthroughpa\u00adrameters.Beausethetransferfuntionofajust-resolved \nindiretalleemaydefnefuntionpointersusedsomewhere elseintheprogram,thebottom-upandtop-downpropaga\u00adtionneedstobeperformediterativelyuntilafxedpointis \nreahed.Thealiasesamongformalparametersarethenal\u00adulatedaftertop-downpropagationofonretevaluesalong theompleteallgraph. \nAtahigh-level,theideabehindouralgorithmissimilar toRelevantContextInferene(RCI),proposedbyChatter\u00adjeeetal.[6],sinewebothusemodularanalysistoredue \ntheresourerequirements.However,severalsignifantim\u00adprovementsproposedinthispaperdistinguishourwork,as \nhighlightedinFigure1.First,RCIoversasubsetofC++ onstrutswheremanygeneralCfeaturesinludingexpliit addressoperator(&#38;),funtionpointers,struturemember\u00ads,andgeneralpointerassignmentsareexluded.Ourwork \noversompleteCfeaturesandangeneratesafeanalysis resultstoguideodeoptimizations.Seondly,RCIuses anover-estimatedallgraph.Foranindiretall-site,al\u00adlfuntionswithnamestakenandidentialsignaturesare \nonsideredaspossibleallees.In132.ijpeg,aSPECint95 benhmark,thereare188funtionswithnamestakenand themajorityofthemhavethesamesignature.Further\u00admore,thereare641indiretall-sitesintheprogram.There\u00adforetheestimatedallgraphwillbeveryinaurate,whih \nwastestimeinpropagatingsummarytransferfuntionsand .Forsimpliitywewillolletivelyusethetermparametersto \nmeanfuntionreturnvalues. produesspuriousresults.Lastly,RCIusesaliasontexts tolazilyenumeratepotentialaliasesamongparametersin \nordertodistinguishtransferfuntionsfordiferentalling ontexts.Inourmethod,aesspathsenableaontext\u00adindependentrepresentationoftransferfuntionssothatthe \nmemoryusedtorepresentsummaryfuntionsisredued. ConsidertheexampleshowninFigure2a.Whenanes\u00adtimatedallgraphisused,*fn2mayinvokebothfn3and \nfn4sineboththeirnamesaretakenandtheirsignatures math.Infat,onlyfn3anbealledthrough*fn2,so propagatingthesummarytransferfuntionoffn4wouldbe \nspuriousandunneessary.Figure2bshowshowsummary transferfuntionsarerepresentedforfn3inRCI.rinitand SinitrepresenttheobjetspointedbyrandS,respetively. \nTheupperdashededgeindiatesthatrinit.nextpointsto rinitwhenrandsreeivethesameonretevalue,while thelowerdashededgeshowsthatrinit.nextpointstoSinit \nwhenrandsreeivediferentonretevalues.Webelieve theenumerationisunneessarysinetheallerknowsbetter thanthealleewhetherornotidentialvaluesarepassed \ntodiferentparameters.Aslongastheabstratmemory nameinthetransferfuntionfaithfullyrepresentshowthe memoryloationisaessedthroughformalparametersor \nglobalvariablesinaontext-independentmanner,thealler aneasilydeterminewheretheloationisafterreplaing theformalparameterwithaonretevalue.Asshownin \nFigure2,byusingpostfxaesspaths[11],itisstraight\u00adforwardforall-siteS2toderivethatr*standsforst1and s*standsforst2,andforall-siteS3toderivethatboth \nr*ands*standforst3.Thereforebothpoints-torelations (st1.next,st2)and(st3.next,st3)anbederivedfroma singlesummarypoints-torelation(r*.next,s*). \n2.1IntraproeduralAnalysisStage Muhoftheadvantageoftheproposedalgorithmomes fromusingaesspathstorepresentmemoryloations.De\u00adsribedinregularexpressions,thegrammarofanaess \npathis.(..i.).(.iE),where.isavariableorall-sitename, .isoftheform\".soeo\"whihdenotesthestartingandend \nofsetsofafeldinastruture/union,and.denotesastep ofderefereneandissymboliallyshownas\"*\"elsewhere inthispaperwhenthereisnoonfusionwiththelosure \nsymbolinregularexpressions.Coneptually,anaesspath issimplyanenodedpostfxsequeneofderefereneand ofsetoperationstakentoreahthefnaldestination.Un\u00adlesstheontentsofintermediatepointersinanaesspath \nareknown,anaesspathisnotboundwithanypartiular loations,butsimplyleadstothedenotedloations. Defnition2.l(Construtionofaesspaths)Asde-fnedbythefollowingrules,APdenotesthefuntionthat \nreursivelydeterminespostfxaesspathsforCexpressions thatinvolvememoryaesses: 1.AP(v)=v,wherevisavariable. \n2.AP(exp())=AP(exp)n(),whereexpisaall-site, eitherdiretorindiret,andnisauniqueid. 3.AP(*exp)=AP(exp)*ifexpisnotafuntionname. \n4.AP(*exp)=AP(exp)ifexpisafuntionname. 5.AP(exp[index])=AP(exp),whereexpisofarraytype andexpisnotaformalparameter. \n6.AP(exp[index])=AP(exp)*,whereexpisanarbitrary pointeroraformalparameterofarraytype. 7.AP(expopexp1)=AP(exp),whereopisanarbitrary \nbinaryoperatorandexpisapointertypevariable. 8.AP(exp-feld)=AP(exp)*.soeo. 9.AP(exp.feld)=AP(exp).so eo. \n10.AP(exp.feld1.feld2)=AP(exp).so3 eo3,whereso3 =sol+so2andeo3=sol+eo2.< Insteadofgeneratingallpossibleaesspathsfromanyvari\u00adables,aesspathsaregeneratedlazilyfromobservedCex\u00adpressionsineahfuntion.AsreursivelydefnedinDefni\u00adtion2.1,exeptforoperators\".\"and\"->\"whihalwaysadd \naonstantofsettoapointer,weomitotherofsetmanipula\u00adtionoperators,resultinginaoarsebutsafeaesspathfor linearlyaessedloations.Thatis,wedonotaggressively \ndiferentiateelementsinanarray.Ithasbeenshowninthe literaturethatusingthestartingofset(so)andendofset \n(eo)torepresentfeldaessesanefetivelyresolvealias\u00adesausedbyunions[5]andtypeasts[20].Weintegrate bothtehniquesbyoalesingbak-to-bakfeldsasshown \ninRule10.Forexample,givenanestedstruturefeldaess s1.s2.f1,assumingthesizeofs2is100bytesandf1o\u00adupiesthefrst4bytesins2,((strut*S2)(&#38;s1))->f1 \nisanaliaswhihalsoaessesthesameloation.Without Rule10,twoaesspathsareenodedass1.0 99.0 3and s1.0 3,respetively.WithRule10,anormalizedaess \npathanbegeneratedass1.0 3andthereforealiasesan beeasilydeteted.Withoutexpliitpointerassignments, aesspathsusingbyteofsetsanresolvealiasesausedby \ntypeastsandpointerarithmetis.Howtoresolvealias\u00adesinthepreseneofarbitrarypointerassignmentswillbe disussedmomentarily. \nThepoints-torelationproposedbyEmamietal.[4]is alsoadoptedinthispapertorepresentthedata-fowfats ofpointerassignments.Theoriginalpoints-torelationis \nathree-tupleoftheform(p,t,PID)wherepandtare twostoragenamesrepresentingphysialpointerandtarget memoryloations,respetively.Thethirdoperand,PID, \nspeifeswhetherthepointerpossiblyordefnitelypointsto thetarget.Inthepoints-tonotationdefnedforthispaper, \nbothpandtarerepresentedinaesspaths,andthePID attributeisnotusedsineonlypossiblepoints-torelations aregenerated. \nGivenapointerassignmentIhs=rhswherebothIhs andrhsarepointer-typeCexpressionsandrhsisnotNUL\u00adL,thefrststepofdeterminingtheorrespondingpoints-to \nrelationsistoonstruttheorrespondingaesspathsfor Ihsand*rhs,notiingthederefereneoperatoraddedtothe rhsexpression.Duetotheefetsofearlierpointerassign\u00adments,Ihsand*rhsmayhavealiases.Forexample,givena \npointerpandapriorpointerassignmentq=&#38;p,bothaess paths,p,q*,arealiases.Similarly,givenapointerranda \npriorpointerassignmentr=&#38;i,r*andiarealsoaliases. Asaresult,anyofthefollowingfourstatementsanause \nptopointtoi:p=&#38;i,p=r,*q=&#38;i,or*q=r.   Defnition2.2(Right-mostaesspath)Givenadi\u00adretaesstoavariable,itsright-mostaesspathissimply \nthevariable'sname.Ifamemoryloationisaessedin\u00addiretly,itsright-mostaesspathisontrivedbasedonthe aesspathsofthepointersthatappearastheveryfrstRHS \noperandinasequeneofpointerassignmentsthatpropagate theaddressoftheindiretlyaessedmemoryloation.< Onewaytoorretlyrepresenttheefetsoftheaboveset \nofpointerassignmentsistoreatefourpoints-torelations usingtherossprodutsofallaliasesoftheLHSpointerand \nallaliasesoftheRHStargetas(p,i),(p,r*),(q*,i),and (q*,r*).However,theompleteenumerationisunnees\u00adsarysinetherearewaystotransformanaesspathintoa \nnormalizedformbasedontheobservationsthataliasesare ausedbypointerassignments,andpointersmustbeini\u00adtializedbeforetheyanbeused.Soforeverypointerderef\u00aderene,theremustbeoneorasmallnumberofright-most \naesspaths,asexplainedinDefnition2.2,whihdenote theaessedmemoryloationwhoseaddressesareassigned tothedereferenedpointerthroughanarbitrarynumberof \npointerassignments.Aslongasallenodedaesspath\u00adsfromCexpressionsanbenormalizedtotheright-most aesspaths,feweraesspathsareendedupandthere\u00adforefewerpoints-torelationsneedtobemaintained.Defni\u00adtion2.3showshowtousetheenodedaesspathfromaC \nexpressionandexistingpoints-torelationstofndtheentire setofright-mostaesspaths,whereDefnition2.4shows \nhowtoaddpoints-torelationsbasedonright-mostaess pathsforapointerassignment.Notiethattheevaluated resultisasetofaesspathsinsteadofasingularpathdue \ntothatapointermayhavemorethanonedefnition.Thisis eitherausedbyonditionaldefnitionsmadetoapointeror thefow-insensitivenatureofthepointeranalysisalgorithm. \nDefnition2.3(Findingtheright-mostformsofan aesspath)Underasetofpoints-torelationsST,the evaluationofanaesspathisreursivelydefnedasbelow: \n1.EVAL(vor(fv)*,ST)={vIvisavariable} 2.EVAL(v*,ST)={vIvisafuntionname} 3.EVAL(a*,ST)={,I:(EEVAL(a,ST),((, \n,)EST}U{(*I:(EEVAL(a,ST),(does notpointtoanyloationand(hasfewerthankprefx pathswithommontypesofa*}U{bI:(EEVAL(a, \nST),(haskprefxpathswithommontypesofa* andbisthelongestone} 4.EVAL(af,ST)={\u00c6I:(EEVAL(a,ST),\u00c6= (f}< Defnition2.4(Path-basedpoints-torelations)Giv\u00adenapointerassignmentlhs=rhsinfuntionfnwhereboth \nlhsandrhsarepointer-typeCexpressionsandrhsisnot NULL,letSTbethesetofpoints-torelationsalready addedforfn.Forevery7EEVAL(AP(lhs),ST)and \nTEEVAL(AP(*rhs),ST),points-torelation(7,T)is addedtoST.< k >= 3   k = 2 k = 1 sp sp* sp sp* sp sp* \ng1 S*sp; sp*.0_3 g1 sp*.0_3 g1 sp*.0_3 g2 intg1,g2,g3; sp*.4_7 sp*.4_7* sp*.4_7 sp*.4_7* sp*.4_7 g3g2 \nsp->key=&#38;g1; sp->next->key=&#38;g2; sp*.4_7*.0_3 g2 sp*.4_7*.0_3 g3 sp->next->next->key=&#38;g3; \n sp*.4_7*.4_7 sp*.4_7*.4_7* sp*.4_7*.4_7 sp*.4_7*.4_7*.0_3 g3 (a) (b) Figure3:Usingaesspathstorepresentreursivedatastrutures:(a)ode,(b)diferentpoints\u00adtorelationsontrolledby \ndiferentvaluesofk. Defnition2.3defnesalosurefuntionEVALthatevalu\u00adatestheontentsofintermediatepointersinanaesspath \nbyrefereningexistingpoints\u00adtorelationstofndthesetof right\u00admostaliasesoftheinputpath.Rules1and2aretheterminalaseswherenoevaluationismadeonsimplevari\u00adablesandfuntionnames.Rule3hasthreeases.The \nj\u00adsetdisoversthedenotedloationsofa*bydeterminingthedenotedloationsofafrst,thenforelementsfoundin EVAL(a,S),theirpoints\u00adtoloationsaretheonesde\u00ad \n notedbya*.Ifapointerisnotinitializedbutthereisa potentialderefereneofthepointer,itisaddressedbythe followingtwoases.Thee*\u00adsetsimplyreatesatrivialtar\u00adgete*forauninitializedpointere,ifa*isnotofareursive \ntype,ornomorethankinstanesofsuhareursivetype havebeendenotedbyprefxesofe.Atrivialpoints\u00adtore\u00adlation(e,e*)isalsoadded.Otherwisethelongestprefxof \newiththesameCtypeofa*isreused,asspeifedbythe Iset.kisareursive-sensitivityparameterwhihdiferen\u00adtiatesthefrstkobjetsinalinkedlist.Thisissimilarto \nthek-limitingapproahusedin[9],butweonlyontrolthe lengthofaesspathsinvolvingreursivedatatypes.Con\u00adsidertheexampleinFigure3.Thelargerthevalueofk,the \nbettertheresolutionis,attheexpenseofmoreaesspaths andpoints\u00adtorelations.Inourexperiments,weassumethe \nmostonservativeasewithk1.Finally,Rule4simply refnesloationsdenotedbyawithfeldofsets. ConsiderpointerassignmentsS4andS5fromFigure2a. \nThepurposeofvariabletempisdesignedtoshowthatthe indiretmodifationto*faanbeapturedbyDefnition\u00ads2.4and2.3.AfterS4isanalyzed,points\u00adtorelation(temp, \nfa*)isadded.WhenanalyzingS5,duetotheprevious\u00adlyaddedpoints\u00adtorelation,tempisaninitializedpointer, soEVAL(temp*,{(temp,fa*),...})is{fa*}.Ontheoth\u00aderhand,theresultofEVAL(fb*,S)is{fb*}sinefb \n isaformalparameterwhihisassumedasuninitializedin theintraproeduralphase.Thereforethepoints\u00adtorelation \naddedforS5is(fa*,fb*). Figure4showsthepseudoodeoftheintraproedural stage.Forlibraryfuntions,weapproximatetheirsafesum\u00admarytransferfuntionswithtemplatestatements.Forex\u00adample,points\u00adtorelation(pi*,p2**)anbederivedtorep\u00adresentthetransferfuntionofmempybyanalyzing: \nmempy\u00abvoid *pi,void*p2,intn){ *\u00ab\u00abhar**)pi)=*\u00ab\u00abhar**)p2); } Currentlythereare186libraryfuntionsmodeledby \ntemplatestatementsintheIMPACTompiler.TheyoverallthelibraryfuntionsinvokedbySPECint92,SPECin\u00adt95,MediaBenh[22],andmanyUnixutilityprograms. \n IntraproeduralPointerAnalysis(fn) { S(fn)=f ..{ ApplyEVAL(AP(*exp),S (fn))foreverypointer-type atualparameterexpfoundinfn \n...(eahpointerassignment\"lhs=rhs\"Efn) ApplyDefnition2.4toonstrutpoints-torelations ...(eahstruture/unionassignment\"lhs=rhs\"Efn) \nApplyDefnition2.4on\"lhs.f=rhs.f\"forevery pointer-typefeldf }.....(newaesspathsorpoints-torelationsareadded) \n} Figure4:Pseudoodeoftheintraproeduralpointeranal\u00adysisstage. 2.2InterproeduralAnalysisStage Theinterproeduralanalysisstageofouralgorithmhasthreeiterativephasesfollowedbytwoayliphasesasshownin \nFigure1b.ThefundamentaltasksperformedinthesephasesaresimilartoReI,soweusethesamemajorphasenumbers withminorannotations.Thesummarizedbehaviorofeah \nfuntionistheonlyinformationneededintheinterproe\u00adduralstage.Inphase0,depth\u00adfrstsearh(DFS)isinitiat\u00adedfromfuntionmaintoonstruttheallgraph.Along \nwithDFS,theallgraphispartitionedintostronglyon\u00adnetedomponentsandviewedasadiretedayligraph SCC\u00adDAG.Iftheprogramhasnoindiretalls,theitera\u00adtivephasesonlyneedtobeenteredoneandtheomplete \nallgraphanbebuiltinthefrstinvoationofphase0. Otherwise,fortheexampleinFigure2,onepoints\u00adtorela\u00adtion(fn2,fn3)ispropagatedtomain,whihwillhappeninphaseI\",evaluatingtheaesspathassoiatedwithindiret \nall\u00adsite*fn2inphase0ofthenextiterationwillrevealthe allee,sineEVAL(fn2*,{(fn2,fn3),...}){fn3}. InphaseI\",summarytransferfuntionsarepropagatedalongtheSCC\u00adDAGinareversetopologialorder.Asin[6], \nsummarytransferfuntionsinthesameSCCarefrstprop\u00adagatediterativelyuntilafxedpointisreahed.However, sineourmethodisfow\u00adinsensitive,weonlyneedtokeep \nthesummarybehavioroftheallerinsteadofthefullfun\u00adtionbodyandontrol\u00adfowinformationofallfuntionsina SCCsimultaneouslyinmemory.Aswillbeshowninthe \nexperiments,thelargestSCCinbenhmark126.gholds 391funtions..Thisanintroduememoryproblemswhen fullinsteadofsummarizedinformationismemory\u00adresident \nwhenanalyzingaSCC. .Thelargestbenhmarkstudiedin[6]hasnomorethan230meth\u00adodsandthelargestseehasnomorethan4methods. \n 61 Defnition2.5(Propagatingsummarytransferfun\u00adtions)Let(ro,s()beapoints-torelationinfuntionfn's summarytransferfuntionwherer,sareparametersor \nglobalvariables,ando,(aretwosu\u00c6xaesspaths.The propagatedpoints-torelationsof(ro,s()toallerfmare: {(\u00c6,0):\u00c6EEVAL(ao,ST(m))and:0EEVAL(b(, \nST(m))}wherea=rifrisaglobalvariable.Other\u00adwiseaistheorrespondingatualparameterinfm.The samerelationholdsbetweenbands.< \nNoteverypoints\u00adtorelationinafuntion'ssummarybe\u00adhaviorbelongsinthefuntion'ssummarytransferfuntion. Forexample,trivialpoints\u00adtorelationsdonotountsine \ntheydonotrepresentexpliitpointerassignments.Givena points\u00adtorelation(ro,s(),onlywhenrandsareparameter\u00adsorglobalvariablesandro* \n=s(will(ro,s()bequalifed asanentryinthesummarytransferfuntion.Topropa\u00adgatesuhapoints\u00adtorelationfromthealleetothealler \nwhilemaintianingontext\u00adsensitivityisstraightforward.As showninDefnition2.5,theinitialstepistoreplaethe \nformalparameterwiththeorrespondingatualparameter. Thenbyrefereningthepoints\u00adtorelationsontainedinthe \nsummarybehavioroftheallerfuntion,thesu\u00c6xaess pathguidesthesearhforloationsintheallerdenoted bytheaesspathonstrutedintheallee.Forexam\u00adple,topropagatethepoints\u00adtorelation(fa*,fb*)fromfn1 \ntomain,faisfrstrepladby&#38;fn2,thenEVAL(0&#38;fn2 *, S(main))={fn2}.Similarly,fbisreplaedwithfn3 T andEVAL(fn3*,S(main))={fn3}.Sothepoints\u00adto \nT relationpropagatedtomainfromfn1is(fn2,fn3).Besides thisexample,itisalsopossiblethatthepropagatedpoints\u00adtorelationisrepresentedbythealler'sformalparametersor \nglobalvariables,meaningthatthealler'ssummarytransfer funtionisaugmentedandwillbereportedtograndallers. \nSinetheformalparametersoftheallerarestillonsidered uninitializedintheinterproeduralstage,theaugmented \ntransferfuntionisstillontext\u00adindependent. Thenextinterestingquestionishowwehandledynami\u00adallyalloatedobjetsandpropagatetheirexisteneaross \nfuntionboundaries.Insteadofgeneratingpseudovari\u00adablenamesusingsynthesizedall\u00adsitepaths,wenameheap objetsdiretlyalloatedfromallingmallobyall\u00adsite \nnameswhihareuniquewithineahfuntion,asshownby Rule2inDefnition2.1;andwenameheapobjetsindiret\u00adlyalloatedfromallingwrapperfuntionsbyaesspaths \nderivedfromatualparameters,whihguaranteethatu\u00adniquenamesarealwaysgeneratedforobjetsalloatedfor diferentallingontexts.Theremainingproblemishowwe \ndetetthepotentialdependeneamongindiretaessesto heapobjetsalloatedforthesameallingontext.Consid\u00adertheexampleshowninFigure5.Infuntionfn5,thereare \nthreeintegerpointers,andthroughallingmy mallo,two instanesofheap\u00adbasedintegerobjetsarealloated.Be\u00adforepropagatingthetransferfuntionofmy \nmallotofn5, p1,p2,andp3areassumedtopointtodisjointloationsas denotedbyp1*,p2*,andp3*inFigure5b3.However,in \nthisexamplep2andp3pointtothesameloation,anddis\u00adregardingthisfatmayauseWAWhazardsforstatements S3andS4.Therearetwooptionstorepresentthedepen\u00addeneaseitherreatinganexpliitobjetlikeHinFigure5, \noraddingatleastoneofthetwodashededgesfromp2to p3*orfromp3top2*.Inouralgortihm,wehoosethe latteronebeauseitrequiresnospeialrepresentationfor \nheapobjets.Weusetheoneptofextendedaesspath 3Thestatementthatausesthepoints-torelationisannotated alongeahedge. \n  DetermineExtendedAessPath(fn) { 8=0 ...(eahaesspathafoundinfn'ssummarybehavior){ 8=8{a}ifainitiatesfromaparameterorglobal \nvariable EAP(a)=a } ..{ Let'bethefrstelementin8andremove'from8 ..(:fsuhthat(',f)ES(fn)andEAP(f)isnot \ndefned){ EAP(f)=EAP(')* 8=8{f} } if(:f.....andEAP(f.....)isnotdefned){ EAP(f.....)=EAP(f)..... 8=8{f.....} \n} }..... (8=0) } Figure6:PseudoodeofEAPonstrution. (EAP)todetetthedependene,whosealgorithmisshown inFigure6. \nThebasiideabehindthealgorithmisthatifaallee funtionalloatesaheapobjetfortheallertouse,theob\u00adjetmustbereahablebyondutingDFSfollowingpoints\u00adtorelationsinitiatedfromparametersandglobalvariables. \nAnEAPanbeonsideredasareverse\u00adengineeredaess pathobtainedfromDFSandindiatesapotentialwayfor theobjettobeaessedfromaparameteroraglobalvari\u00adble.ThefrstEAPfoundforanaesspathishosenasthe \npersistentnametobeviewedbythealler.Forexample, mallo 10 *andmallo 20 *representtwoheapobjet\u00adsalloatedinmy \nmallo.mallo 10 *hasauniqueEAP asq1**butmallo 20 *maybeassignedasq2**orq3**, dependingonwhetherDFSinitiatesfromq2orq3frst.In \nthepartiularasewhereDFSisperformedforq2beforeq3, theEAPofmallo 20 *isq2**,andthepoints\u00adtorelation fromq3*tomallo \n20 *isonsideredinmy mallo'strans\u00adferfuntionas(q3*,q2**).Afterpropagatingthatfrom my mallotofn5,thedashededgefromp3top2*willbe \nadded.OtherwiseifDFSisperformedforq3beforeq2,(p2, p3*)willbeadded.Itdoesnotmatterwhihoneisatual\u00adlyadded,aslongasEVAL(p2*,S(fn5))nEVAL(p3*, \nT S(n5)) istruesineitassertsthedependeneof T=0twomemoryaesses. Infat,theonstituentpoints\u00adtorelationsinthesumma\u00adrytransferfuntionanbeidentifedsolelybyEAPs.Ifan \naesspath'sEAPisnotdefned,itmeansthatthedenoted loationisnotaessiblebythealler,thereforepoints\u00adto relationswithEAP\u00adlessaesspathsarenotonsideredas \npartofthetransferfuntion.TherevisedversionofDef\u00adinition2.5,whihpropagatestransferfuntionsaswellas detetsdependeneamongaessestoheapobjets,isgiven \nbelow. Defnition2.6(Propagatingsummarytransferfun\u00adtionsusingEAPs)Let(r,))beapoints-torelationin fn.Itispartoffn'stransferfuntionifEAP(r) \n=0and EAP()) Assumingr=roand)=s(,randsmust =0.beparametersorglobalvariables.Thepropagatedpoints-to relationsof(r,))toallerfmare:{(\u00c6,0):\u00c6EEVAL(ao, \nST(m))and:0EEVAL(b(,ST(m))}.Theremain\u00adingonditionsareidentialtothoseinDefnition2.5.<    fn5() { int*p1,*p2,*p3; \nS1:my mallo(&#38;p1,&#38;p2,&#38;p3); S2:*p1=1; S3:*p2=2; S4:*p3=3; } my mallo(int**q1,int**q2,int**q3) \n{ S5:*q1=(int*)mallo(sizeof(int)); S6:*q2=(int*)mallo(sizeof(int)); S7:*q3=*q2; } &#38;p1 S1 p1 S2 p1* \n&#38;p2 S1 p2 S3 p2* &#38;p3 S1 p3 S4 p3* Summary behavior of fn5 p2* p2 H p3 p3*  (a) (b) () Figure5:Handlingheapobjets:(a)ode,(b)points-torelationsinfuntions'summarybehavior,()representingdependene \namongaessestoheapobjets. InterproeduralPointerAnalysis(prog) { ..{ Resolvefuntionpointersforeahindiretall-site \nUseDFstoomposesee-DAGforreahablefuntions Eprog ...(eahseeEproginbottom-uporder){ DetermineEAPforaesspathsofeahfuntion \nEthesee Iterativelypropagatepoints-torelationswithinthe seeiftheseehasmorethanonefuntion Re-determineEAPforeahfuntionifnewpoints-to \nrelationsarereeived Propagatethesummarytransferfuntionofthesee toitsallersees } ...(eahseeEprogintop-downorder){ \nIterativelypropagatefuntionnameswithinthesee iftheseehasmorethanonefuntion Propagatefuntionnamesfromtheseetoits \nalleesees } }.....(allgraphishangedinthepreviousiteration) ...(eahseeEprogintop-downorder){ Iterativelypropagateonretevalueswithintheseeif \ntheseehasmorethanonefuntion Propagateonretevaluesfromtheseetoitsalleesees } Determinealiasesamongparameters \n} Figure7:Pseudoodeoftheinterproeduralpointeranal\u00adysisstage. PhaseII'performsasubsetofworkdoneinthephase \nIIanalysisinReIsineweonlypropagatefuntionnames. Regardlessofwhetherafuntionpointerisdefnedbylo\u00adalstatements(handledinphaseI'),side-efetsofinvoked \nfuntions(handledinphaseI\"),oronretevaluespassed byallers(handledbyphaseII'),theaurateallgraphan beiterativelybuilt.However,beausefuntionnamesare \naumulatedintheallee,theallgraphbuiltinphase0is ontext-insensitive.Whentheallgraphisfnalized,phases II\"propagatesallonretevaluesinthetop-downmanner \nalongSCC-DAG.TheresultofphaseII\"willbeusedin phaseIIIinordertodeterminepotentialparameteraliases.  Duetospaeontraints,detailswillbeomittedinthispaper \nsinetheyareverysimilarto[6].Thepseudoodeofthe interproeduralstageisshowninFigure7. 3ComplexityAnalysis \nInthissetionwedisusstheomplexityofouralgorithm usingasetofparameters.Fisthenumberofuserandli\u00adbraryfuntionsontainedintheprogram.Eisthenumber \nofallsitesintheprogram.VJisthesumofvariablesand all-sitesinasinglefuntion.Tisthenumberofdatatypes delaredintheprogram,wherekisthenumberofunique \ninstanesdistinguishedforlinkedlists.AlthoughCisnot well-typed,Tisstillafnitenumber.fisthetotalnumber \noffeldswithdistintstartingandendofsetsinallstru\u00adtures/unions.Sisthenumberofpointerassignmentsina funtion,andMisthenumberexpressionsthatresultin \nmemoryaessesinafuntion. Firstwedemonstratethatthenumberofaesspaths stemmedfromavariableisboundbyO(fkT).Sineaninter\u00admediatepathanbeastedintoastruturetype,anypath \nanbewidenedbyfeldoperations,butthelengthofeah pathisontrolledbythenumberoftypesintheprogramand numberofuniqueinstanesoflinkedlists.Thereforethes\u00adpaeomplexitytostoreaesspathsintheintraproedural \nphaseforasinglefuntionisO(VJfkT),andforthewhole programintheinterproeduralphaseisO(FVJfkT).The spaeomplexitytostorepoints-torelationsintheintrapro\u00ad \nJf.kT eduralphaseforasinglefuntionisthereforeO(V.), . Jf.kT andO(FV)intheinterproeduralphase.Boththeal\u00adgorithmsintheintraproeduralandinterproeduralphase \nwillterminatebeausethenumberofaesspaths,points-to relations,andtypesarefnite. Asforthetimeomplexity,generatinganaesspath \nforaCexpressiontakesO(l)steps,aslisasmallandfxed numberofderefereneandfeldaessesassoiatedwith eahexpression.EvaluatinganaesspathusingDefni\u00adtion2.1takesO(V)f)kT)steps.Sinetheourintraproe- \nJ duralalgorithmevaluateseverymemoryaessandpointer assignment,thetimeomplexityforeahiterationisO((M+ \nS)VJ)f)kT).Andsinethealgorithmisfow-insensitive,the timeforanalyzingeahfuntionanbeboundbyO(S(M+ Table1:Benhmarkharateristis. \n Benhmark Lines Fns D.Fns Li_s Sts__ns M.Fl_s S__s M.S__ 008.espresso 14838 361 62 24 20 19 317 2 \n023.eqntott 12053 62 7 21 4 17 76 1 026.ompress 1503 16 2 24 1 14 38 1 072.s 8639 179 13 53 13 31 208 \n7 085.1 90857 1452 84 44 88 126 1258 148 099.go 29246 372 26 11 5 20 353 1 124.m88ksim 19092 252 25 36 \n81 138 261 3 126.g 205583 2001 238 45 125 229 1421 363 129.ompress 1934 24 12 5 1 14 17 1 130.li 7597 \n357 9 27 14 44 67 309 132.ijpeg 29290 473 231 18 90 161 258 3 134.perl 26874 277 14 72 34 61 292 23 147.vortex \n67205 923 331 33 86 292 576 33      S)V/)f)kT).Intheinterproeduralphase,transferringana\u00adf)kT). \nesspathsalongtheallgraphisalsoboundbyO(V) / UsingtheDFStopartitiontheallgraphintoSCC\u00adDAG takesO(F+E)steps,whereEmaybediferentfromitera\u00adtiontoiterationwhenindiretfuntionpointersareresolved. \nIntheworstase,EanbeboundbyO(F.).UsingDFSto /f.kT determineEAPstakesO(V.)steps.Resolvinganindi\u00adf)kT), \nretallsitealsotakesthetimeofO(V)soassuming / thereareiindiretall\u00adsitesintheprogramandtheheight oftheallgraphish,theomplexityoftheinterproedural \nalgorithmanbeboundasO(h((E+i)VP)f)kT+(VP.f.kT)+ (F+E))). Theworst\u00adaseomplexityourswhenallpointers,in\u00adludingpointervariablesandfelds,areastedsothatthey \nanpointtoallpossibledatatypes.Empirialresultsindi\u00adatethattheworst\u00adaseomplexityisnotobservedforthe studiedbenhmarks. \n4Experiments Theproposedmodularinterproeduralpointeranalysisal\u00adgorithmhasbeenimplementedandtestedintheIMPACT \nompilationframework[21].Toquantifythealgorithm's quality,theanalysisresultisusedtoguideaggressiveop\u00adtimizationroutinesinludingredundantload/storeelimi\u00adnation,loop\u00adinvariantloationpromotion,andload/store \nsheduling.Similarexperimentshavebeenreportedin[17, 23],butouroptimizerismuhmoreaggressiveduetofully resolvedpointersandfuntionside\u00adefets.Insteadofus\u00adingtraditionalCbenhmarksadoptedbyearlierwork,the \nSPECint92andSPECint95benhmarksuitesarehosen todemonstratethatouranalysisisapableofhandlingmuh moresignifantCprograms. \n4.1AnalysisCosts Inthissetion,theanalysisostsfortheSPECint92and SPECint95benhmarksarereported.AslistedinTable1, \nsomegeneralharateristisofeahbenhmarkareshown, inludingthenumbersoflines,funtions,deadfuntions,invokedlibraryfuntions,strutures/unions,numberofu\u00adniquefeldsinstrutures/unions,stronglyonnetedom\u00adponents(SCC),andfuntionsontainedinthelargestSC\u00adC.Thenumberoflinesdiretlyafetsthetimespentin \ntheintraproeduralstage,whereasthenumberoffuntions playsanimportantroleindeterminingtheomplexityin theinterproeduralstage.Removingdeadfuntionsan \nspeeduptheompilationproessandimprovetherun\u00adtime Table2:Resourerequirementsofondutinginterproedu\u00adralpointeranalysis. \n Benhmark Intra. Inter. Total T.(Se) T.(Se)Mem.(MB) (Se) 008.espresso 5.66 20.20 14.26 25.86 023.eqntott \n0.75 0.99 2.81 1.54 026.ompress 0.12 0.48 1.93 0.60 072.s 2.42 3.15 6.34 5.57 085.1 33.61 277.67 79.22 \n311.28 099.go 2.82 0.21 8.13 3.03 124.m88ksim 2.36 3.54 8.09 5.90 126.g 76.68 520.85 238.00 597.53 129.ompress \n0.09 0.10 1.26 0.19 130.li 2.33 149.59 30.58 151.92 132.ijpeg 7.34 99.16 29.97 106.50 134.perl 14.43 \n468.33 51.14 482.76 147.vortex 15.08 166.90 74.80 181.98   performane.Inadditiontoinheriteddeadfuntionsinthe \nprogram,funtioninliningintroduemoredeadfuntions tomanybenhmarks.Sinetheproposedinterproedural pointeranalysisalgorithmalsoonsidersthesummarized \nbehavioroflibraryfuntions,theefetivenumberoffun\u00adtionsbeinganalyzedisthenumberoftotalfuntionsminus thenumberofdeadfuntionsplusthenumberoflibrary \nfuntions,whosenumberrangesfrom5to72intheseSPEC programs.Thenumberofstrutures/unionsdeterminesthe numberofuniquetypesintheprograms.Togetherwiththe \nnumberofuniquefeldsonsideredfromallaggregatedata types,theydeterminethenumberofderivableaesspaths fromavariable.Sinebenhmark126.ghas125aggre\u00adgatedelarationsand229uniquebyte\u00adofsetrepresentation\u00adsforfelds,aswillbeshownshortlyafter,analyzingthis \nbenhmarktakesthelongesttimeandthelargestamount ofmemory.WheneahSCChasexatlyonefuntion,the totalnumberoffuntionsontainedintheprogramplusthe \nnumberofinvokedlibraryfuntionsminusdeadfuntions willbeequaltothenumberofSCCs,asfoundin023.e\u00adqntott,026.ompress,099.goand129.ompress.Duetothe \nommonreursivefeatureinlanguageproessingprograms, 0S5.1,126.gand130.lihavelargeSCCs.Theproposed modularanalysistehniqueinSetion2anreduethemem\u00adoryusageinanalyzingasingleSCCsineonlythesummary \nbehaviorofeahfuntionneedstobemaintained. Table2showstheresoureonsumptionstatistisol\u00adletedfromapersonalomputerequippedwithanIntel \nPentiumIIproessorrunningat450MHzwith256MBof Table3:Resolutionsofinterproeduralpointeranalysis:(a) targetperpointer,(b)pointerpertarget. \nBenhmark 1 2 3 >4 Avg. 008.espresso 3071 436 40 24 1.16 023.eqntott 310 115 0 7 1.31 026.ompress 34 1 \n1 0 1.08 072.s 662 46 13 6 1.12 085.1 9231 1659 384 189 1.26 099.go 312 0 0 0 1.00 124.m88ksim 622 49 \n3 15 1.15 126.g 16147 3679 705 451 1.31 129.ompress 37 2 0 0 1.05 130.li 1576 243 50 4 1.19 132.ijpeg \n3897 766 135 23 1.23 134.perl 2873 691 340 435 1.62 147.vortex 6768 121 41 5 1.03 RAM.TheunderlyingoperatingsystemisLinuxRedHat \n6.0,whereallIMPACTmodulesareompiledusingGNUC version2.91.66asthenativeompilerwiththe\"-O\"option turnedon.Theelapsedtimeisshowninseondsexlud\u00adingthediskI/Otimeandthememoryusageisshownin \nmega-bytes(MB).ThetimeintheIntraproeduralstageol\u00adumnsumsuptheanalysistimespentoneahfuntion.The high-watermarkofmemoryusageintheintraproedural \nstageisnotshownsineeahfuntionisanalyzedinisolation andthereforethememoryusageisnodiferentthanother funtion-levelanalysis.TheInterproeduralstageolumns \nshowtheelapsedanalysistimeintheinterproeduralstage andthehigh-watermarkofmemoryusage.Thesumofanal\u00adysistimespentinbothstagesisshowninthelastolumn \nofTable2. Asexpeted,analyzingl26.gonsumesthemostmem\u00adoryandlongesttimeduetoitssize(2001funtions/205,583 \nlinesofode),omplexstruturedelarations,andintensive usageoftypeasts.Duetosimilarharatersfoundin085.\u00adlandl47.vortex,theyalsorequiremoreresouresthan \notherbenhmarks.Theonventionalwisdomholdsthatin\u00adterproeduralpointeranalysisisanexpensivetaskwhih requiresahigh-endomputersystemwithahugeamoun\u00adtofmemorytoaomplish.Withthestatistisshownin \nTable2,itisdemonstratedthattheproposedmodularin\u00adterproeduralpointeranalysisalgorithmindeedraisesthe appliabilityofpointeranalysistothenextlevel.Notonly \nthattheanalyzedprogramsareonesteplosertoreal-world programs,butalsothesystemrequirementsanbemetbya personalomputer.Inthefollowingtwosubsetions,itwill \nbeshownthatthenewalgorithmisalsoaurateandan providesignifantperformaneimprovements. 4.2AurayMeasurement \nIntheliterature,thereareseveralmetrisdefnedtomea\u00adsuretheaurayofpointeranalysis.Oneommonmetriis toountthenumberoftargetsthateahpointerpointsto, \nandageneralruletojudgetheaurayofapointeranal\u00ad Benhmark 1 2 3 >4 Avg. 008.espresso 1341 329 253 282 1.76 \n023.eqntott 165 30 31 37 1.77 026.ompress 21 6 2 2 1.52 072.s 291 88 36 40 1.62 085.1 2527 617 607 980 \n2.01 099.go 159 24 5 21 1.46 124.m88ksim 562 88 35 16 1.29 126.g 4481 1092 795 1852 2.00 129.ompress \n36 9 0 0 1.20 130.li 588 239 58 126 1.73 132.ijpeg 3166 829 201 144 1.38 134.perl 1205 477 206 543 2.04 \n147.vortex 4848 671 214 347 1.35 Unique 100% 90% 80% 70% (a) (b)  Anonymous Named_cyclic Named_acyclic \n   Distribution ysisalgorithmisthattheloserthenumberoftargetsisto 1,thebettertheanalysisresult.However,thetarget-per\u00ad \npointermetrimaybemisleadingwhenusedalonesinethe 60% 50% 40% mosttrivialpointeranalysisalgorithmansimplyassume30% \nthatallpointerspointtothesametarget,ausingtheal-20% gorithmtobefalselyjudgedasperfet.Soasymmetri10% 0% \nmetriwhihmeasuresthenumberofpointersthatpoint tothesametargetisusuallyusedtoavoidthebiasedmea\u00adsurement.Similarly,abetteralgorithmshouldalsohavethe \npointer-per-targetmetrireasonable. Table3showsthestatistisofthetarget-per-pointer metriandthepointer-per-targetmetriobservedonright\u00admostaesspathsaftermergingtheinterproeduralpoint\u00aderanalysisresultstoeahfuntion.Eahbenhmarkhas \ngonethroughfuntioninliningwhihallows60%ofode growth.NumbersinTable3arefetthenumbersofoutgo\u00adingpoints-torelationsarriedbypointer-typeaesspaths, \nwherenumbersinTable3bolumnsrefettheopposite. Diferenttargetspassedtopointer-typeformalparameter\u00adsfromdiferentallingontextsareonsideredasasingle \nobjetsinethemultipleinstanesoftargetsaretheresults oftheprogrammingstyleandthereforeareirrelevantwith \ntheaurayofpointeranalysis.Theaveragenumbersof targetsresolvedforpointerpathsrangefrom1.00to1.62, indiatingthatmostpointersareresolvedtoasingletar\u00adgetpath.Theaveragenumbersofpointer-per-targetrange \nfrom1.31to3.20,showingthatthereareusuallymorethan Benchmark Figure8:Distributionofpointerdefnitions. \nonepointerpointingtothesametarget.Givenhundredsor thousandsofpointersineahprogramandthelownumber\u00adsshownbybothmetris,thenewmodularinterproedural \npointeranalysisalgorithmisveryaurate. Themostaurateassessmentforfowsensitivityisto ondutbothsensitiveandinsensitiveanalysesonthesame \nprograms[7].However,ittakesalotofoverheadtoimple\u00admentbothmethodsinthesameompiler,andithasnever beenshownintheliteraturethatafow-sensitivepointer \nanalysisalgorithmanhandletheompleteSPECsuites. Therefore,omparisonisondutedindiretlyinthispaper. Figure8lassifesintraproeduralpointerdefnitionsin\u00ad \n Std/base Adv/base tofourategoriesasunique,anonymous,namedyli,and namedayli.Theuniqueategoryrepresentspointersthat \naredefnednomorethanoneineahfuntion.Forexam\u00adple,ifaloalpointervariableisinitializedafterbeingde\u00adlaredandneverredefnedinafuntion,itbelongstothe \n ategory.Also,ifapointer\u00adtypeparameterisde\u00ad unique fnedbytheallerandpassedtothealleefordereferenes \nonly,thepointerbelongstotheuniqueategoryaswell.As showninFigure8,onaverageover57%ofpointersarenot redefned.Theanonymousategory,whihaountsfor7% \nofpointerdefnitionsonaverage,overspointersthatare notsimplevariablesbutaredefnedformultipletimes.The \nnamedyliportion,aounting26%ofpointerdefnition\u00ads,overspointervariableswhiharedefnedinloops,where thenamedayliategoryrepresentspointervariablesthat \n havemorethanonedefnitioninaylioderegions.For pointersthatareredefned,afow\u00adsensitivepointeranalysis algorithmanupdatethetargetinformationifthepointer \nisavariableandthedefnitionshappeninayliodere\u00adgions.Thestudyshowsthatthereareonlyabout10%of pointerdefnitionsthatpotentiallyouldbebetterresolved \nbyafow\u00adsensitivealgorithm.Aswillbeshowninthenext setion,theadditionalperformaneimprovementprovided bythese10%ofpointersisfairlysmallomparedtothatpro\u00advidedbystatimemorydisambiguationasawhole,arguing \ntheworthoftradingfow\u00adsensitivityforloweromplexity. 4.3PerformaneImprovements Theresultsofinterproeduralpointeranalysisareusedto \nguidethreememoryaessoptimizationsasmentionedbe\u00ad fore.Thepotentialbeneftsofthesememoryaessopti\u00ad-0.1 -0.2 \nBenchmark Figure9:Performaneimprovementsenabledbymemory disambiguation. Load Store 0.6 0.5 0.4 Reduction \nrate 0.3 0.2 0.1 0 mizationsareevaluatedonasimulatedproessorwhihan issue8instrutionsperyleinorder.Thisproessorhas \n4memoryports,4integerALUs,4foatingpointunits,2 branhunits,and64integerandfoatingpointregisters. Thememorysystemonsistsofa64Kdiret\u00admapped,non\u00adblokingdataahewith64bytebloksize.Thedataahe \niswrite\u00adthroughwithnowritealloateandhasahitla\u00adtenyof2ylesandamisspenaltyof4ylesifhitin theseond\u00adlevelahe.Theseond\u00adlevelaheisaunifed \n1024K,4\u00adwayassoiativeahewithamisspenaltyof100 yles.Theinstrutionaheisassumedtobeperfetsine thegoaloftheexperimentsistounderstandthedataaess \nbehavior.Thebranhpreditionshemeisa1K\u00adentryBTB with2bitounters.Theinstrutionsetarhitetureand instrutionlateniesusedmaththoseoftheHPPA\u00ad7100 \nmiroproessor,whereintegeroperationsbesidesloadshave 1\u00adylelateny[24]. ThreesetsofparametersintheIMPACTompilerare \nonfguredtogeneratethreeversionsofprogramswithdifer\u00adentlevelsofsophistiationinmemorydisambiguation.The \nbaseversionassumesallmemoryinstrutionsareambiguous andallfuntionallshavepessimistiside\u00adefets.Suhpes\u00adsimistiassumptionsompletelypreventregisterpromotion \nandsheduling..Thestandardversionemploysmemorydis\u00adambiguationinformationderivedintraproedurally.Memo\u00adrydisambiguationofthislevel,whihisommonlyusedby \nommerialompilerswithoutinterproeduralpointeranal\u00adysis,anefetivelydisambiguateaessestospillloations, loalvariables,globalvariables,andindiretaesseswith \nequivalentbaseregistersandofsets,butreverttoambigu\u00adousrelationsforotherombinations.Thepreiseside\u00adefets \n.Fortemporaryvariablesinsertedbytheompilerandloalvari\u00adableswhoseaddressesarenevertaken,theyarealwayspromotedto \nregistersnevertheless. Benchmark Figure10:Redutionratesofloadandstoreinstrutions. oflibraryfuntionallsanbemodeled,butthepessimisti \nside\u00adefetsarestillassumedforuserfuntions.Thead\u00advanedversionutilizestheompletememorydisambiguation informationgeneratedbyinterproeduralpointeranalysis \nandusesthememorydisambiguationinformationtoguide memoryaessoptimizations.Side\u00adefetsofallfuntions anbeauratelymodeledinthisversion.Exeptforthe \ndiferenesmentionedabove,allthreeversionsareompiled throughinliningupto60%ofodeinrease[25],lassial optimizations[26],andsuperblokoptimization[27].The \ntraininginputsetsareusedforalllevelsofexperimentsin thispaper. Figure9plotsthespeedupsinexeutiontimeofthestan\u00addardandadvanedversionsoverthebaseversionobserved \nonthe8\u00adissueproessor.Thisfgureindiatesthatmem\u00adoryoptimizationswithmemorydisambiguationperformed intraproedurallyanprovideanaveragespeedupof1.07. \nWithmuhmoreoptimizationopportunitiesenabledbybet\u00adterdisambiguatedmemoryaesses,theaveragespeedupis boostedto1.43.Theadditionalperformaneimprovement \nfromthestandardversiontotheadvanedversion,whih hasaratioabout600%,refetstheadvanementofperfor\u00admaneimprovementsderivedfromtheompile\u00adtimememory \ndisambiguationtehnology. Tobetterunderstandthemeritsofadvanedstatimem\u00ad No scheduling 120% 100% 80% 60% \n40% 20% 0% Achieved performance Benchmark Figure11:Ratiooftheperformaneimprovementsenabled byshedulingonlyversusfullmemoryaessoptimizations. \norydisambiguation,therun\u00adtimebehaviorsofthestandard andadvanedversionsofodearefurtherstudied.Theleft \nbarofeahbenhmarkinFigure10showstheredutionof dynamiloadsbetweenthestandardandadvanedversions. Asthesenumbersshow,asmuhas40%ofdynamiloads \nfor026.ompressanbeeliminated,withanaverageredu\u00adtionrateof16%.Attributingtheminorvariane(.3%)in speedupnumberstothenormaldeviationofdetailedsimula\u00adtion,loadsinbenhmarks023.eqntott,l26.g,l30.li,l32.i\u00adjpeg,andl34.perlarenoteliminatedinasignifantman\u00adner.TherightbarofeahbenhmarkinFigure10stands \nfortheperentageofstoresthatareeliminated.Forsome benhmarks,thenumbersofloadsandstoresareatually inreasedduetotworeasons.Thefrstreasonismanyload \ninstrutionsarespeulativelyexeuted.Forexample,on\u00adsidertheodesequene\"................\".Withoutin\u00adterproeduralpointerpointeranalysis,therelationbetween \nthestoreandtheloadmaybeambiguousandthereforethe loadisonlyexeutedafterthebranhisnottaken.Ifthe memorydisambiguationinformationindiatesthatthestore \nandtheloadareindependentandthereareemptymemory slotsabovethebranh,theloadanbeexeutedspeula\u00adtivelybeforethebranh.Ifthebranhisnottaken,theload \ninstrutionhasbeenissuedanditslatenyanbehidden. Otherwiseanunneessaryloadisexeutedwhoseresultwill bedisarded.Theseondreasonistheinreasedregister \npressureduetomorememoryontentsareheldinregisters, whihmayinreaseboththenumbersofloadandstorein\u00adstrutionsbeauseofregisterspillingandreflling.Asshown \ninFigure9,signifantperformaneimprovementsarestill obtainedeventhoughthereareextramemoryinstrutions. Figure11showstheontributionofregisterpromotion \ntotheoverallperformaneimprovementwithmemorydis\u00adambiguation.The100%speedupisderivedfromtheper\u00adformanediferenebetweenthestandardversionandthe \nadvanedversion,wheretheahievedperformaneimprove\u00admentshownbyeahbarisobtainedbydisablingload/store sheduling.ComparingFigure10and11,itshowsthatreg\u00adisterpromotionandshedulingbothanprovidesignifant \nperformaneimprovements.Benhmarkslike00B.espresso and026.ompressobtainalloftheirperformaneimprove\u00admentsfromregisterpromotion.Withoutspeulativelyexe\u00adutedloadinstrutionswhihmayauseextraahemisses, \ntheperformaneisevenslightlybetter.Ontheotherhand, forbenhmarklikel32.ijpegwithanegativeload\u00adredution \nrate,theperformanespeedupbetweentheadvanedand thestandardversionisashighas1.70,whereonly10%of thetotalspeedupisahievedwhenshedulingisdisabled. \nAdditionalexperimentalresultsanbefoundin[28],in\u00adludingtheestimateofperformanelossduetospurious analysisresultsandtheimpatofreduedmahineresoures \ntothebeneftofstatimemorydisambiguation.Casestud\u00adiesfromSPECodefragmentsarealsoinludedtoexemplify thestrengthandweaknessoftheproposedmodularinter\u00adproeduralpointeranalysisalgorithm. \n5RelatedWork InadditiontothedisussioninSetion1andathorough studyofReIinSetion2,wewillsummarizemorerelat\u00adedworkinthissetion.Landietal.[9]usethemay\u00adalias \nrepresentationtoperformfow\u00adandontext\u00adsensitiveinter\u00adproeduralpointeranalysis.Thisisthepioneerworkinim\u00adprovingtheaurayofpointeranalysisusingtheinterpro\u00adeduralontrol\u00adfowgraph(ICFG).Theanalyzedlanguage \nissimplifedfromC,andmemoizationisnotused.Emami etal.[4]proposethepoints\u00adtorepresentationtomodelthe storageshapegraph.Sinetheiranalysisisfow\u00adsensitive, \ntheirpoints\u00adtorelationsanbelassifedasdefniteorpos\u00adsible,whileweonlygeneratepossiblerelations.Theiral\u00adgorithmisnotdesignedtoaggressivelydisambiguateheap \nobjets,andmemoizationisnotusedeither.Theyalsohan\u00addleasubsetofC,butfuntionpointersareinluded.Choi etal.[29]proposeasparserepresentationforthealiaspairs, \nandtheyusetheinvoationpathtowardsmemoryalloation sitestonameheapobjets.However,experimentalresults andimplementationdetailsarenotprovided.Tolookbe\u00adyondtraditionappliationsofpointeranalysis,Ruginaand \nRinard[30]performpointeranalysisformultithreadedpro\u00adgrams. Manyalgorithmsusetypestoperformaliasanalysis[19, \n31,13,32].Deutsh[11]usessymboliaesspathstoan\u00adalyzethealiasrelationsamongaessestoreursivestru\u00adturesonwell\u00adtypedprograms.Inouralgorithm,although \ntheaesspathnotationisalsopostfx,weuselow\u00adlevelof\u00adsetsforfelds.Typesarealsouseddiferentlysinetheyare notdiretlyusedtoresolvealiasesduetotypeastsinC,but \nusedtoontrolthelengthofaesspathsinthepreseneof reursivedatastrutures.Thefow\u00adinsensitiveanalysispro\u00adposedbyAndersen[14]hasubiworse\u00adaserunningtime, \nandtheworkfromFaahndrihetal.[33]showsthatAnder\u00adsen'smethodanbepratialforlargeprograms.Shapiro et.al[18]proposeahybridmethodwithonfgurableom\u00adplexitybetweenSteensgaard'sandAnderson'salgorithms. \nHastietal.[34]proposetheideaofiterativelyimproving theaurayofpointeranalysisinSSAform[3],butempir\u00adialresultisnotavailable.Zhangetal.[35]andStokset \nal.[36]balanetheomplexitybyswithingbetweenvari\u00adousalgorithms.Thelargestbenhmarkhandledhasaround 60,000linesofode.Ouralgorithmisthefrsttodemon\u00adstratethatafow\u00adinsensitiveanalysisaommodatingom\u00adpleteCfeaturesanhandleprogramsofmorethan200,000 \nlinesofode. Besidesresolvingaliasesforgeneralpointerdereferenes, alotofresearhershavefousedonobtainingdetailedde\u00adsriptionsforheapobjets[37,38,39,40,41,11].Oural\u00adgorithmanonlyprovideasafeapproximationbutnota \ndetailedprofle. 6Conlusions Inthispaperwehavepresentedane\u00c6ientandefetive modularinterproeduralpointeranalysisalgorithmforC \nprograms.Ouralgorithmanalulatefow\u00adinsensitiveand ontext\u00adsensitivesummarytransferfuntionsbasedonthe aurateallgraph,thereforeshorteranalysistimeandbet\u00adteranalysisresultsanbeahievedwhentheprogramon\u00adtainsalargenumberofindiretfuntionalls.Thelow\u00adlevel \nrepresentationofstruture/unionfeldsinaesspathshan\u00addlesbothaliasesausedbytypeastsandunions. Theexperimentalresultsdemonstratethatourmethod \nane\u00c6ientlyhandlemuhlargerprogramsthanotherin\u00adterproeduralpointeranalysisalgorithms.Reasonabletime andmemoryusagesuggestthatouralgorithmhasnies\u00adalability,andthusismorefeasibleforimplementationin \nprodutionenvironments.Theperformanestudyonthe ompleteSPECint92andSPECint95benhmarksuitesal\u00adsoshowsthattheproposedinterproeduralpointeranalysis \nanprovidesignifantspeedup. Futureworkinludestheevaluationoftheproposedal\u00adgorithmonabroaderrangeofrealappliations.Although \nhandlingtheSPECbenhmarksisanimportantmilestone towardspratialinterproeduralpointeranalysis,theirsize \nisstillafrationofmanyrealworldappliations.Weare alsoativelystudyingtherelationsbetweenaggressivestati \nmemoryoptimizationsanddataspeulationwithhardware supports. 7Aknowledgments TheauthorswouldliketothankallthemembersoftheIM\u00adPACTresearhgroupfortheirassistane,espeiallyDan \nConnorsandErikNystromfortheirdesignandimplemen\u00adtationofmanymemoryaessoptimizationroutines,and MarieConteandHilleryHunterfortheirarefulreview.The \nvaluableommentsfromtheanonymousreviewerssignif\u00adantlyimprovedthequalityofthepaper.Thisresearhhas beensupportedbytheNationalSieneFoundation(NSF) \nundergrantCCR\u00ad9629948andtheIntelFoundationFellow\u00adship. Referenes [1]R.AllenandS.Johnson,\"CompilingCforvetor\u00adization,parallelization,andinlineexpansion,\"inPro\u00adeedingsoftheACMSIGPLAN1988Confereneon \nProgrammingLanguageDesignandImplementation,p\u00adp.241.249,June1988. [2]F.ChowandJ.Hennessy,\"Registeralloationby \npriority\u00adbasedoloring,\"inProeedingsoftheSIG\u00adPLAN1984SymposiumonCompilerConstrution,p\u00adp.222.232,June1984. \n[3]R.Cytron,J.Ferrante,B.K.Rosen,M.N.Weg\u00adman,andF.K.Zadek,\"E\u00c6ientlyomputingstat\u00adisingleassignmentformandtheontroldependene \ngraph,\"ACMTransationsonProgrammingLanguages andSystems,vol.13,pp.451.490,Otober1991. [4]M.Emami,R.Ghiya,andL.J.Hendren,\"Context\u00adsensitiveinterproeduralpoints\u00adtoanalysisinthepres\u00adeneoffuntionpointers,\"inProeedingsoftheACM \nSIGPLAN'94ConfereneonProgrammingLanguage DesignandImplementation,pp.242.256,June1994. [5]R.P.WilsonandM.S.Lam,\"Efetiveontext\u00adsensitivepointeranalysisforprograms,\"inProeed\u00adingsoftheACMSIGPLAN'95ConfereneonPro\u00adgrammingLanguageDesignandImplementation,pp.1. \n12,June1995. [6]R.Chatterjee,B.G.Ryder,andW.A.Landi,\"Rel\u00adevantontextinferene,\"inProeedingsoftheACM SymposiumonPriniplesofProgrammingLanguages, \npp.133.146,January1999. [7]M.HindandA.Pioli,\"Assessingtheefetsoffow\u00adsensitivityonpointeraliasanalyses,\"inLetureNotes \ninComputerSiene,Springer\u00adVerlag,1998.Proeed\u00adingsfromthe5thInternationalStatiAnalysisSympo\u00adsium. [8]E.Ruf,\"Context\u00adinsensitivealiasanalysisreonsid\u00adered,\"inProeedingsoftheACMSIGPLAN95Con\u00adfereneonProgrammingLanguageDesignandImple\u00admentation,pp.13.22,June1995. \n[9]W.LandiandB.G.Ryder,\"Asafeapproximatealgo\u00adrithmforinterproeduralpointeraliasing,\"inProeed\u00adingsoftheACMSIGPLAN'92ConfereneonPro\u00adgrammingLanguageDesignandImplementation,p\u00adp.235.248,June1992. \n[10]T.H.Cormen,C.E.Leiserson,andR.L.Rivest,In\u00adtrodutiontoalgorithms.TheMITPressandMGraw\u00adHill,1992. [11]A.Deutsh,\"Interproeduralmay\u00adaliasanalysisfor \npointers:Beyondk\u00adlimiting,\"inProeedingsofthe ACMSIGPLAN'94ConfereneonProgrammingLan\u00adguageDesignandImplementation,pp.230.241,June \n1994. [12]M.Burke,P.Carini,J.D.Choi,andM.Hind,\"Flow\u00adinsensitiveinterproeduralaliasanalysisinthepresene \nofpointers,\"inLetureNotesinComputerSiene,892 (K.Pingali,U.Banerjee,D.Gelernter,A.Niolau,and D.Padua,eds.),pp.234.250,Springer\u00adVerlag,1995. \nProeedingsfromthe7thWorkshoponLanguagesand CompilersforParallelComputing. [13]B.Steensgaard,\"Points\u00adtoanalysisinalmostlinear \ntime,\"inProeedingsoftheACMSymposiumonPrin\u00adiplesofProgrammingLanguages,pp.32.41,January 1996. [14]L.O.Andersen,ProgramAnalysisandSpeialization \nfortheCProgrammingLanguage.PhDthesis,DIKU, UniversityofCopenhagen,May1994. [15]B.Steensgaard,\"Points\u00adtoanalysisbytypeinferene \ninprogramswithstruturesandunions,\"inLeture NotesinComputerSiene,1060(T.Gyimothy,ed.), pp.136.150,Springer\u00adVerlag,1996.Proeedingsfrom \ntheInternationalConfereneonCompilerConstru\u00adtion. [16]R.GhiyaandL.J.Hendren,\"Puttingpointeranaly\u00adsistowork,\"inProeedingsoftheACMSymposium \nonPriniplesofProgrammingLanguages,pp.121.133, January1998. [17]K.D.CooperandJ.Lu,\"Registerpromotioninpro\u00adgrams,\"inProeedingsoftheACMSIGPLAN1997 \nConfereneonProgrammingLanguageDesignandIm\u00adplementation,pp.308.319,June1997. [18]M.ShapiroandS.Horwitz,\"Fastandauratefow\u00adinsensitivepoints\u00adtoanalysis,\"inProeedingsofthe \nACMSymposiumonPriniplesofProgrammingLan\u00adguages,pp.1.14,January1997. [19]A.Diwan,K.MKinley,andJ.E.B.Moss,\"Type\u00adbasedaliasanalysis,\"inProeedingsoftheACMSIG\u00adPLAN'98ConfereneonProgrammingLanguageDe\u00adsignandImplementation,pp.106.117,June1998. \n[20]S.Yong,S.Horwitz,andT.Reps,\"Pointeranalysisfor programswithstruturesandasting,\"inProeedings oftheACMSIGPLAN'99ConfereneonProgramming \nLanguageDesignandImplementation,pp.91.103,May 1999. [21]P.P.Chang,S.A.Mahlke,W.Y.Chen,N.J.Warter, andW.W.Hwu,\"IMPACT:Anarhiteturalframe\u00adworkformultiple\u00adinstrution\u00adissueproessors,\"inPro\u00adeedingsofthe18thInternationalSymposiumonCom\u00adputerArhiteture,pp.266.275,May1991. \n[22]C.Lee,M.Potkonjak,andW.Mangione\u00adSmith,\"Me\u00addiabenh:Atoolforevaluatingandsynthesizingmulti\u00admediaandommuniationssystems,\"inProeedingsof \nthe30thAnnualInternationalSymposiumonMiroar\u00adhiteture,pp.330.335,Deember1997. [23]R.Bodik,R.Gupta,andM.L.Sofa,\"Load\u00adreuse \nanalysis:Designandevaluation,\"inProeedingsof theACMSIGPLAN1999ConfereneonProgramming LanguageDesignandImplementation,pp.64.76,May \n1999. [24]Hewlett\u00adPakardCompany,Cupertino,CA,PA\u00adRISC 1.1ArhitetureandInstrutionSetRefereneManual, 1990. \n[25]B.Cheng,\"Aprofle\u00addrivenautomatiinlinerforthe impatompiler,\"Master'sthesis,DepartmentofCom\u00adputerSiene,UniversityofIllinois,Urbana,IL,1997. \n[26]A.Aho,R.Sethi,andJ.Ullman,Compilers:Prini\u00adples,Tehniques,andTools.Reading,MA:Addison\u00adWesley,1986. \n[27]W.W.Hwu,S.A.Mahlke,W.Y.Chen,P.P.Chang, N.J.Warter,R.A.Bringmann,R.G.Ouellette,R.E. Hank,T.Kiyohara,G.E.Haab,J.G.Holm,andD.M. \nLavery,\"TheSuperblok:Anefetivetehniquefor VLIWandsupersalarompilation,\"TheJournalof Superomputing,vol.7,pp.229.248,January1993. \n[28]B.Cheng,Compile\u00adTimeMemoryDisambiguationfor CPrograms.PhDthesis,DepartmentofComputerSi\u00adene,UniversityofIllinois,Urbana,IL,2000. \n[29]J.D.Choi,M.G.Burke,andP.Carini,\"E\u00c6ient fow\u00adsensitiveinterproeduralomputationofpointer\u00adinduedaliasesandsideefets,\"inProeedingsofthe \n20thACMSymposiumonPriniplesofProgramming Languages,pp.232.245,January1993. [30]R.RuginaandM.Rinard,\"Pointeranalysisformulti\u00adthreadedprograms,\"inProeedingsoftheACMSIG\u00adPLAN'99ConfereneonProgrammingLanguageDe\u00adsignandImplementation,pp.77.90,May1999. \n[31]M.C.RinardandP.C.Diniz,\"Commutativityanaly\u00adsis:Anewanalysisframeworkforparallelizingompil\u00aders,\"inProeedingsoftheACMSIGPLAN1996Con\u00adfereneonProgrammingLanguageDesignandImple\u00admentation,June1996. \n[32]E.Ruf,\"Partitioningdatafowanalysesusingtypes,\" inProeedingsoftheACMSymposiumonPriniplesof ProgrammingLanguages,January1997. \n[33]M.Faahndrih,Z.S.J.S.Foster,andA.Aiken,\"Partial onlineyleeliminationininlusiononstraintgraphs,\" inProeedingsoftheACMSIGPLAN'98Conferene \nonProgrammingLanguageDesignandImplementation, pp.85.96,June1998. [34]R.HastiandS.Horwitz,\"Usingstatisingleassign\u00admentformtoimprovefow\u00adinsensitivepointeranalysis,\" \ninProeedingsoftheACMSIGPLAN'98Conferene onProgrammingLanguageDesignandImplementation, pp.97.105,June1998. \n[35]S.Zhang,B.G.Ryder,andW.A.Landi,\"Experi\u00admentswithombinedanalysisforpointeraliasing,\"in Proeedingsofthe1998WorkshoponProgramAnalysis \nforSoftwareToolsandEngineering,June1998. [36]P.A.Stoks,B.G.Ryder,W.Landi,andS.Zhang, \"Comparingfowandontextsensitivityonthe \nmodifations\u00adside\u00adefetsproblem,\"inInternational SymposiumonSoftwareTestingandAnalysis,pp.21. 31,Marh1998. \n[37]N.D.JonesandS.S.Muhnik,\"Afexibleapproahto interproeduraldatafowanalysisandprogramswith reursivedatastrutures,\"inConfereneReordofthe \n9thACMSymposiumonPriniplesofProgramming Languages,January1982. [38]J.R.LarusandP.N.Hilfnger,\"Detetingonfits \nbetweenstrutureaesses,\"inProeedingsoftheACM SIGPLAN'88ConfereneonProgrammingLanguage DesignandImplementation,pp.21.34,July1988. \n[39]L.J.HendrenandA.Niolau,\"Parallelizingprogram\u00adswithreursivedatastrutures,\"IEEETransations onParallelandDistributedSystem,vol.1,pp.35.47, \nJanuary1990. [40]D.R.Chase,M.Wegman,andF.K.Zadek,\"Analysis ofpointersandstrutures,\"inProeedingsoftheACM \nSIGPLAN'90ConfereneonProgrammingLanguage DesignandImplementation,pp.296.310,June1990. [41]L.Hendren,J.Hummel,andA.Niolau,\"Abstration\u00adsforreursivepointerdatastrutures:Improvingthe \nanalysisandtransformationofimperativeprograms,\" inProeedingsoftheACMSIGPLAN'92Conferene onProgrammingLanguageDesignandImplementation, \npp.249.260,June1992. \n\t\t\t", "proc_id": "349299", "abstract": "<p>In this paper we present a modular interprocedural pointer analysis algorithm based on access-paths for C programs. We argue that access paths can reduce the overhead of representing context-sensitive transfer functions and effectively distinguish non-recursive heap objects. And when the modular analysis paradigm is used together with other techniques to handle type casts and function pointers, we are able to handle significant programs like those in the SPECcint92 and SPECcint95 suites. We have implemented the algorithm and tested it on a Pentium II 450 PC running Linux. The observed resource consumption and performance improvement are very encouraging.</p>", "authors": [{"name": "Ben-Chung Cheng", "author_profile_id": "81100098751", "affiliation": "Department of Computer Science, University of Illinois", "person_id": "P28723", "email_address": "", "orcid_id": ""}, {"name": "Wen-Mei W. Hwu", "author_profile_id": "81406592242", "affiliation": "Department of Electrical and Computer Engineering, University of Illinois", "person_id": "PP80030334", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/349299.349311", "year": "2000", "article_id": "349311", "conference": "PLDI", "title": "Modular interprocedural pointer analysis using access paths: design, implementation, and evaluation", "url": "http://dl.acm.org/citation.cfm?id=349311"}