{"article_publication_date": "05-01-2000", "fulltext": "\n SalableContext-SensitiveFlowAnalysisUsingInstantiationConstraints ManuelFaahndrihJakobRehofManuvirDas \n MirosoftResarhOneMirosoftWay RedmondWA,98052 {maf,rehof,manuvir} mirosoft.om ....... Thispapershowsthatatypegraph(obtainedviapolymor\u00adphitypeinferene)harborsexpliitdiretionalfowpaths \nbetweenfuntions.Thesefowpathsarisefromtheinstan\u00adtiationsofpolymorphitypesandorrespondtoall-return sequenesinfrst-orderprograms.Weshowthatfowinfor\u00admationanbeomputede\u00c6ientlywhileonsideringonly \npathswithwellmathedall-returnsequenes,eveninthe higher-orderase.Furthermore,wepresentapratialal\u00adgorithmforinferringtypeinstantiationgraphsandprovide \nempirialevidenetothesalabilityofthepresentedteh\u00adniquesbyapplyingthemintheontextofpoints-toanalysis forCprograms. \n............ Context-sensitivitybasedonHindley-Milnerstylepolymor\u00adphitypeinfereneisinwidespreaduseduetoitsgood \npratialrunningtime.Thelowostofsuhinferenebased analysesstemsfromtheuseofunifationtomodelintra\u00adproeduraldependeniesofvalues.Inter-proeduraldepen\u00addeniesofvaluesisapturedbyinstantiationsofpolymor\u00adphifuntiontypes,butthisinformationisgenerallyig\u00adnored. \nInthispaperwestudythefowofvaluesbetweenfun\u00adtionsharaterizedbyinstantiationsofpolymorphitypes. Tomakemattersonrete,westudyapolymorphiversion \nofSteensgaard'stype-basedpoints-toanalysis[Ste96].Our analysisisfow-insensitive,i.e.,statementorderisignored, \nbutitisontext-sensitive,i.e.,theefetsofoneallsitedo notpollutetheresultsatanotherallsitetothesamefun\u00adtion.Theintra-proeduralpartoftheanalysisusesundi\u00adreteddependenies. \nTheanalysishastwophases.Inthefrstphasewe buildatypeinstantiationgraph(TIG)usingapolymor\u00adphiinferenealgorithmsimilartoML'stypereonstru\u00adtion,butbasedoninstantiation(orsemi-unifation)on\u00adstraints[Hen93].Intheseondphase,points-toinforma\u00adtionforindividualprogrampointsisomputedbyanswering \nPermissiontomakedigitalorhardopiesofallorpartofthis workforpersonalorlassroomuseisgrantedwithoutfeepro\u00advidedthatopiesarenotmadeordistributedforproftorom\u00admerialadvantageandthatopiesbearthisnotieandthefull \nitationonthefrstpage.Toopyotherwise,orrepublish,to postonserversortoredistributetolists,requirespriorspeif \npermissionand/orafee. PLDI2000,Vanouver,BritishColumbia,Canada. Copyright2000 CM1-58113-199-2/00/0006$5.00. \n... simplereahabilityqueriesonthetypeinstantiationgraph. Contributionsofthispaperare: .Ourfowomputationworkswithouthangeonhigher\u00adorderprograms.Previousworkonontext-sensitive \nfowanalysisiseitherrestritedtofrst-orderprograms (e.g.[CRL99,LH99]),reduesthehigher-orderase tofrst-orderbyomputingaall-graphapproximation \nthroughothermeans(e.g.[WR99,CGS+99]),orom\u00adputesaglobalfx-point,revisitingfuntiondesriptions asfuntionpointersaredisovered(e.g.[WL95]).Our \ntehniqueenablesustoomputefowinformationinthe higher-orderasediretly,withouttheneedforaall\u00adgraphapproximationoranexpensiveglobalfx-point.1 \n. Ourfowalgorithmise\u00c6ient.Individualqueries(e.g. allsoures-onesink)anbeansweredompletelyonde\u00admandinlineartime(inthesizeofthetypeinstantiation \ngraph).Furthermore,thealgorithmissimple,sine queriesorrespondtographreahabilityquestions. .Theanalysisispratialandsalestolargeprograms. \nTheGCCSPECbenhmarkisanalyzedinunder3min\u00adutes(notinludingparsetime). .Eventhoughvaluedependeniesarerepresentedas \nequivalenelassesintra-proedurally,fowofvalues arossproedureboundariesisdiretional.Ourfow omputationanberetrofttedtoexistinganalyses \nbasedonHindley-Milnertyping,extendingtheminto fowanalyses. Manyontext-sensitivefowanalysesbasedonfuntion \nsummaries(e.g.[CRL99,LH99,FFAOO])arepresentedas atwophaseomputation.InphaseO,informationisprop\u00adagatedfromtheallees(whereitoriginates)totheallers. \nInphase1,informationispropagatedfromallerstoallees. Thisinformationrepresentssummaryinformationwithina \nalleefromallontexts.Ourresultsshowthatthisphase distintionispresentoneahindividualfowpathandgen\u00aderalizestothehigher-orderase. \nTherestoftheintrodutiondefneswhatwemeanby ontext-sensitivityandfow.Setion2defnesourframe\u00adworkofonstraintbasedtypeinferene.Setion3presents \nouronstraintresolutionalgorithmanddesribestheon\u00adstrutionofthetypeinstantiationgraph.Setion4presents thefowomputationonthetypeinstantiationgraph.Ex\u00adperimentalresultsprovingthesalabilityareshowninSe\u00adtion5.Thepaperonludeswithrelatedwork. \n.InSetion1.1wedisussdiferentnotionsofontext-sensitivity withdistintost/preisiontrade-ofs. 1.1Context-sensitivityinhigher-orderprograms \nContextsensitivityinfrst-orderprogramsisdefnedin termsofvalidall-returnpaths.Apathisvalidifpairedup allandreturnedgesonthatpathareassoiatedwiththe \nsameallsite.Forhigher-orderprograms(funtionpointers inC)wemustfrstdefnewhatontext-sensitivitymeansfor \nindiretfuntionalls.Weexplaintheontext-sensitivityof ananalysisintermsofaoneptualopyingoffuntionbod\u00adies.Considertheexampleprogrambelow: \ntypedefint(*FIP)(int*); intf(int*p){...} intg(int*q){...} voidfoo(inta,intb,int){ intra,rb; FIPfp=?fi:gj; \n(1)ra=fp.(&#38;a); (2)rb=fp.(&#38;b); } Funtionpointerfpisassignedeitherfuntionfatour\u00adreneiorfuntiongatourrenej.Indiretallsites \n1and2areusingfp.Considerapolymorphianalysisof thisprogramthattreatseahindiretalltoapartiular funtionindependentlyfromotheralls.Suhananalysis \norrespondstoanalyzingtheexpandedprogramshownin Figure1monomorphially(notontext-sensitive).Inthis expansion,wehavetwoopiesfi.andfi.offuntionf, \noneperindiretallsite,andsimilarlyforfuntiong.This ontext-sensitivityisbasedonfuntionsreahingindividual \nall-sites.Itisexpensive,sinethenumberofinstanesofa funtiondependsonthenumberofindiretallsitesitfows to. \nAnotherformofontext-sensitivityforhigher-orderpro\u00adgramsisadoptedinthispaper.Weonlyallowoneopy ofafuntionperourreneofafuntionsymbol.Inour \nexample,thisformorrespondstoanalyzingtheexpanded programinFigure2monomorphially.Thereisoneopy offuntionforrespondingtoourreneiandoneopyof \nfuntiongorrespondingtoourrenej.Thesamefuntion isalledatthetwoindiretall-sites1and2.Thisformhas theadvantagethatitgeneratesonlyasmanyinstanesofa \nfuntionfasthereareourrenesofthesymbolfinthe program.Ontheotherhand,theuseoffewerinstanesmay leadtolesspreiseresults.Thisformofontext-sensitivity \norrespondstoreursivelet-polymorphism[MyS4].Note thatinthefrst-orderase,thetwoapproahesareidenti\u00adal,sinefuntionsymbolsonlyouratallsites. \nTheanalogyofopyingfuntionsisonlyoneptual(and obviouslydoesnotapplyinthereursivease).Inpratie, weanalyzeafuntiononlyone,produingaompatsum\u00admary(itspolymorphitype).Ateahinstane,aopyof \nthissummaryisused. 1.2Flowinformation Wenowdefnethefowqueriesweompute.Assumethat eahsub-expressioninaprogramisannotatedbyalabel \ne.Weaskquestionssuhas ovaluesarisingatlabele.intheprogramfowtoaprogrampointlabellede.7\"More preisely,weassoiatethelabeleofanexpressionewith \nthetypeTofe.Thequeriesarethenansweredbytraing pathsonthetypeinstantiationgraph(TIG)insteadofthe program.TheTIGembodiesthetyperelationsneessary \nfortheprogramtobewell-typed. 2Constraintbasedtypeinferene Constraintbasedtypeinfereneautomatiallyinferstypes \nforaprogrambygeneratingasetoftypeonstraintsfrom theprogramtextandthensolvingtheonstraints.The followingsetionintroduestypesandonstraints,andin \nthenextsetionwegiveanalgorithmforsolvingtheseon\u00adstraints.Notethatthetypesweinferdonotneessarily oinidewithstandardCtypes. \n2.1Typesandloations Typebasedfowanalysisassignstypesandloationstopro\u00adgramobjets..Typeexpressions,rangedoverbyT,arebuilt \nfromvariables,rangedoverbya,andtypeonstrutors: T::=aI(T.Tn)-eTIptre(T) Inordertoapturefowproperties,typeonstrutors(-, \nptr)arelabeledwithfowvariables,rangedoverbye.The type(T Tn)-eTisthetypeoffuntionsmapping . argumentsoftypesT.TntoaresultoftypeTthetype \nptre(T)isthetypeofpointerspointingtoobjetsoftype T.Flowvariables,e,areusedtouniquelyname(typesof) programobjetsofinterest,suhaspointers,funtionsand \nloations.Forexample,ptre(T)isapointertotheloation namede.Inthetype(T.Tn)-eT,weanthinkofe astheaddressofapartiularfuntion. \nInordertomodelthedistintionbetweenL-valuesand R-valuesinC,weintrodueloationsoftheform[T]e,de\u00adnotingamemoryloationnamede,holdingvaluesoftypeT. \nLoations[T]eareassoiatedwithL-values,whereastypes TareassoiatedwithorrespondingR-values.Considerthe followingCprogramfragmentasasimpleexample: \nintx,*p; p=&#38;x; Inthisprogram,symbolxisassoiatedwithaloation [a]e,andpisassoiatedwith[ptre(a)]e. .Thetypesare \ninterpretedassayingthatafterexeutingtheassignment,p pointstoloationeassoiatedwithx,i.e.,ppointstox. 2.2Constraintgeneration \nFigure3givesarepresentativesetofonstraintgeneration rulesforourpointeranalysisofCprograms.Therulesfor \nexpressionsusetypingjudgmentsoftheformAfe:aC, whereaiseitheraloationoratype.Themeaningofsuh ajudgmentisthatintypeenvironmentAexpressionean \nbegiventypeorloationa,ononditionoftheonstraint setC.AtypeenvironmentAisasetofassignmentsofthe formx:[T]e,assigningloation[T]etoprogramvariablex.A \nonstraintsetCisafnitesetofsimultaneousequalitiesand inequalitiesbetweentypes,writtenasT=T. andT. <iT., \nrespetively.AnequalityT=T. meansthatthetypesT andT. mustbeunifed.Inequalitiesarealledinstantiation onstraints.Wenowexplainthemeaningofinequalities \ntogetherwithsomeofthetherulesofFigure3. .Weshouldemphasizethatthetehniquespresentedinthispaper generalizetoanyonventionaltypelanguage.Theonehosenhere \njustmakesiteasyforustoshowhowourtehniquesapplytothe analysisofCprograms. intfil(int*p){...} intfi2(int*p){...} \nintgjl(int*q){...} intgj2(int*q){...} voidfoo(inta,intb,int){ intra,rb; if(){ ra fil(&#38;a); rb fi2(&#38;b); \n} else{ ra gjl(&#38;a); rb gj2(&#38;b); } } Figure1:Oneexpansionperfuntionperall\u00adsite 2.2.1Instantiationonstraints \nPolymorphism[Mil78,DM82]speializesthetypeofafun\u00adtionateahusebyinstantiatingthetype.Instantiationis usuallyexpressedbysubstitutionofboundvariables.In\u00adsteadweuseinequalitiesoftheformT:iT. \ntoexpress thatT. isaninstaneofT[Hen93,KTU94].Aninequality T:iT. requiresthatT. mustbeasubstitutioninstaneof \n T,i.e.,T. =R(T)forsomesubstitutionR(mappingoftype variablestotypes). ConstraintsoftheformTdef:iTusearegeneratedwhen\u00ad \neverrule[Fun]inFigure3isapplied.HereTdefrepresents thetypeinferredfromthedefnitionofafuntionI(viarule \n[Def]),whereasTuserepresentstheinstanetypeinferred forapartiularuseofI(forexampleviarule[Call]).A formaldefnitionofthesolutiontoasetofonstraintsis \ngiveninSetion3.Disregardingforthemomenttheindies 3 iandpontheinequalitysymbol,webriefyoutlinehow funtionsgettypedusingtherulesofFigure3byasimple \nexample. 2.2.2Anexample Considertheidentityfuntioniddefnedby id(x){returnx;} Thisfuntionanbegiventhepolymorphitypea-ea, \nwherethetypevariableamaybeinstantiatedtoanytype atusesofid.Thedefnitionaltypea-eaisinferredby rule[Def].Assumingloation[a]e.forx,weonludeby \nrule[Ret],thatthereturntypeofid(denotedae (..)in therule)isa.Byrule[Def]wethenonludethatthe defnitionaltypeofid(denoteda..intherule)isa-ea. \nNow,supposeweapplyidtoapointerpoftypeptre. (r)ata allsiteid(p).Beausethisallsitementionsthefuntion nameid,therule[Fun]givesrisetoaonstraintofthe \nforma..:if,wherefisafreshvariableforthetypeofid atthisallsite.Sinewealreadyfoundthata..=a-ea, theinstantiationonstraintisequivalenttoa-ea:if. \n 3ThemeaningofindexiisexplainedinSetion2.2.3,andthe meaningoftheindexpisexplainedinSetion2.2.4. intfi(int*p){...} \nintgj(int*q){...} voidfoo(inta,intb,int){ intra,rb; if(){ ra fi(&#38;a); rb fi(&#38;b); } else{ ra gj(&#38;a); \nrb gj(&#38;b); } } Figure2:Oneexpansionperfuntionourrene Finally,rule[Call]requiresthetypeoftheargumentpto \nbeequaltothedomaintypeofid,sothetypeofidat -e.. thisallsite(i.e.,f),musthavetheformptre.(r)T, forsometypeT.Theinequalityabovethereforebeomes \nequivalentto ptre. e.. a-ea:i(r)-T (1) ByhoosingTtobeptre.(r),theinequality(1)anbesolved byinstantiatingatoptre.(r). \nNotiethattheorderinwhihweproessthedefnition andtheusesofafuntionsymboldoesnotmatter.Ifwe proessausebeforeadefnition,weanstillexpressthefat \nthatthedefnitionaltypemustinstantiatetotheusetype, beauseweollettheonstraintaf:iTuseattheusesite. WhenthedefnitionofIisproessed,anequalityaf= \nTdefisgenerated,leadingtoTdef:i Tuse.Instantiation onstraintsthereforeallowtypeinferenetobeperformed \ninafullymodularway[OJ97]. 2.2.3Constraintindies TextualreferenestoafuntionsymbolIinaprogramare assumedtobetaggedwithauniqueindexiidentifyingthe \nourrene,writtenIi.ForeahourreneIi,rule[Fun] givesrisetoaonstraint:if,whereisaplae\u00ad af af holderforthedefnitionaltypeofIandfisaplaeholder \nfortheinstanetyperequiredatthepartiularuseIi.The indexioftheourreneisattahedtotheorresponding inequalityandisusedbytheonstraintsolvertokeeptrak \nofinequalitiesinferredfromthisone. 2.2.4Constraintpolarities Inequalities:i arefurtherannotatedbyapolarityp.Po\u00adlaritiesareusedbyouralgorithmtodiretthefowompu\u00adtation.Intuitively,polaritieskeeptrakofinputandoutput \npositionsintypes,andtheydosoinawaythatworksfor higherorderprograms.Formally,polaritiesareelementsin theset{+,-,T},whihisorderedby+:T,-:T.The \npolarity+representspositivepolarity,-negativepolarity, andTbothpositiveandnegativepolarity. Expressions \nffresh[Fun] AfIi:fI{cf:if} A(x)=[T]e [ar] Afx:[T]eI C Afeo:ToICo Afei:TiICi(i=) . =Unj=oCj C .. ={To=(T1, \n,Tn)-T} [Call] . UC.. Afeo(e1, ,en):TIC Afe1:[T]eIC1 Afe2:T.,IC2 C ={T=T.} [Assign] Afe1 e2:T.IC1UC2UC \nAfe:[T]eIC [Rval] Afe:TIC Afe:[T]eIC [Addr] Af&#38;e:ptre(T)IC Afe:ptre(T)IC [Deref] Afe:[T]eIC Statements \nAf81:C1 Af82:C2 [Sequene] Af81;82:C1UC2 A,x:[T]ef8:C [Loal] Afloalxin8:C C A,x1:[T1]e.,,xn:[Tn]e.f8:C \n. ={cf=(T1, ,Tn)-ec(f)} [Def] AfI(x1,,xn){8}:CUC. Afe:TIC C . =CU{c(f)=T} [Ret] Afreturnfe:C. Figure3:ConstraintgenerationforanalysisofC \nWesaythatatermTourspositively(resp.negatively) inatypeexpressionT.,ifToursnestedtotheleftofthe funtiontypeonstrutor(-)inT. \naneven(resp.uneven) numberoftimes.Forexample,inthetypeexpression(c\u00adf)-I,thetypec-foursnegatively,candIour \npositively,andfoursnegatively.TargetsTofpointer typesptr(T)ouratpolarityT. Thenotionofpolaritiesisstandardintypetheory.We \ntransferthisnotiontoinequalitiesinthefollowingway.Ini\u00adtially,everyinequalitygeneratedbyrule[Fun]inFigure3 \nhaspositivepolarity( ). i.e.,allinequalitieshavetheform:iDuringonstraintresolutioninequalitiespropagatetotheir \nsubterms,wherepolaritiesswithaordingtothepolarities ofthesubterms. OurfowomputationinSetion4interpretstheinstan\u00adtiationrelationsasfow\u00adedges.Intuitively,thederivedon\u00adstraintc:i \nptre.(I)anbeinterpretedasimplyingthat (thetypeof)theatualargumentp(ptre(I))fowsto(the typeof)theformalparameterx(c),andtheonstraint \nc:iTasimplyingthat(thetypeof)thereturnvalueof id(c)fowsto(thetypeof)thereturnpointoftheall(T). Inthisinterpretation,thediretionoffowisgovernedby \npolarities:thefowmovesoppositethediretionoftheneg\u00adativeinequality(:i)butalongthediretionofthepositive \n :i inequality( ). 3Constraintresolution Inthissetionwefrstgiveatehnialdefnitionofwhatit meanstosolveasetofonstraints.Wethengoontopresent \nouronstraintresolutionalgorithm. 3.1Semi-unifation Theproblemofsolvingonstraintsystemsinvolvingequal\u00aditiesandinequalitiesoftheformdesribedaboveiswell\u00adknownandusuallyreferredtoasthesemi\u00adunifationprob\u00adlem[Hen93,KTU94]. \nFollowingisatehnialdefnitionofwhatitmeansto solvesuhsystems(thereadermaywishtoskipitonafrst reading;morebakgroundanbefoundin[Hen93,KTU94]). \nDefnition3.1Asubstitutionisafuntionfromtypevari\u00adablestotypes.AninequalityT:iT'isalledsolvableifT' isasubstitutioninstaneofT,i.e.,onehasRi(T)=T'for \nsomesubstitutionRi. AsubstitutionSisasolutiontoaonstraintsetC(on\u00adsistingofsimultaneousequalitiesandinequalities)ifone \nhasS(T)=S(T')foreveryequalityT=T'ECand S(T):iS(T')issolvable(bysomesubstitutionRi)forevery inequalityT:i \nT'EC.Notiethatforeahpartiularindex i,thesetofinequalitiesassoiatedwithi(S(T):iS(T')) maybesolvedbydiferentsubstitutionsRi.. \n Semi\u00adunifationisknowntobeundeidable[KTU93], butapratialsemi\u00addeisionproedurewasdefnedbyHen\u00adglein[Hen93].Sofar,nonaturalounterexample(i.e.,a \nprogramthatwouldmakethealgorithmloop)isknown,and theresultsofthepresentpaperorroboratethepratiality ofthealgorithm. \n3.2Algorithm Theoreofouronstraintresolutionalgorithmisshownin Figure4.ItusesauxiliaryoperationsdefnedinFigure5. \n1.Input:AfnitesetCofonstraints,oftheformt:.t. ort=t.. 2.Initially:Wlist:=C 3.Iteration: whileWlist =fdo \nTopT. :=FETH(Wlist); L:=FIND(T); R:=FIND(T.); ifL=Rthenontinue; . ifLmathese(T., ,Tn)andRmathesde.(T. \n.,,Tn)and= dthenfail; swith(op) ase= UNION(L,R); . e(Te.(T. ifLmathes., ,Tn)andRmathes., ,Tn) then .=T. \nWlist:=Wlistn=n} TkkIk=1}; ase:. storable:=STORE(L:.R); ifnotstorablethenontinue; . e(Te.(T. ifLmathes., \n,Tn)andRmathes. , ,Tn) then .:.T. Wlist:=Wlistn:. n} Tk .kIPk=PROPAGATE(,P,k),k=1}; ifLmathese(T., ,Tn)andRmathesa \nthen ifEO(a,L) then Wlist:=Wlista=L}; else Wlist:=Wlista=e.(;,,;n),L:.a} wheren.,;,,;narefresh; end;(*while*) \n. . (Notation:TmathesT. issyntatipatternmathing.) Figure4:AlgorithmIforsolvinginstantiationonstraints \nOuralgorithmextendsHenglein'salgorithmin[Hen93]inwhihareonentratedintheoperationsPROPAGATE,EO twodiretions.First,itallowsreursivetypes(sothattype \nandSTORE. equationssuhasa=a-ahavesolutions)viayliuni\u00adfation([ASU88]Setion6.6),and,seondly,ourproedure \n3.2.1Typerepresentationandreursivetypes propagatespolarities.WhileHenglein'salgorithmwasspe\u00adifedasanabstratgraphrewritingsystemin[Hen93],we \nInFigure4,non\u00advariabletypesarewrittenase(T.,,Tn) giveamoreonrete,worklistbasedalgorithm.Wedosoforwithanddrangingovertypeonstrutors(-,ptr).Types \nthreereasons.First,thealgorithmbuildstheinstantiation arerepresentedaspossiblyyligraphs(ylesrepresentre\u00adgraphoverwhihthefowomputationtakesplae,andwe \nursivetypes),whosenodesrepresenttypeonstrutorsand attempttogiveenoughdetailthatthereaderanseehow typevariables,asin[ASU88]Setion6.6.Asingletypeon\u00ad \nourfowomputationissupportedbytheonstraintsolverin strutor,say,anberepresentedbymanydiferentnodes, pratie.Seond,wewishtodemonstratethesalabilityoforrespondingtodiferentourrenesoftheonstrutor. \nthepartiularimplementationstrategyhosenhere.Third,Unifationoftypesisimplementedviaequivalenere\u00adhandlingreursivetypesturnsouttobehallenging,andlationsbasedonfastUNION/FIND,andnodesareinstru\u00adwehopethatourspeifationanserveasanof\u00adthe\u00adshelf,mentedwithUNION/FIND\u00adinformationinastandardmanner \neasilyimplementablesolution. ([ASU88]Setion6.6). Sinethemainstrutureofthealgorithmfollows PerformingaUNIONoperationontwoonstrutedtypes \n. e(T(T. sivetypesandtheonstrutionoftypeinstantiationgraphs, thenodesrepresentingthemainonstrutorofoneofthe \n[Hen93],wewillfousontheextensions,polarities,reur\u00ad.,,Tn)ande.. ,,Tn)involveshoosingoneof FETH(Wlist)= \nifequalities(Wlist) =f thenreturnPOP(equalities(Wlist)); elsereturnPOP(inequalities(Wlist)); UNION(TTT.)= \nifTisavariable thenrep:=T.;other:=T; elserep:=T;other:=T.; er(other):=rep; Wlist:=Wlistrep TIother T}; \n f STORE(T T.)= iftarget(TTi)isundefned then target(TTi):=T.; polarity(TTiTT.):=p; returntrue; else \nif TTi T.=target() then polarity(TTiTT.):=polarity(TTiTT.)Up; Wlist:=WlistT. =target(TTi)}; returnfalse; \nPROPAGATE(TpTk)= ifiso-variantink thenreturnp; ifisontra-variantink thenreturn'p; ifisinvariantink \nthenreturnT; EO(TTT.)= if:T.T...TTnsuhthat T. =T.andT. fT2 f... =T fTn andTispropersubtermofT. thenreturntrue; \nelsereturnfalse; f (Notation:Tf T. if:iTp.T T..) Figure5:AuxiliaryproeduresforAlgorithmI twotypesasequivalenelassrepresentative(inthisase, \neitherthenodeforlabeledwitheorthenodeforlabeled withe. ishosenasrepresentative).Labelsontypeonstru\u00adtorsrespetnodeequivalenesuhthatlabeleisequivalent \ntolabele. ifandonlyiftheonstrutornodesorresponding ll. toandareequivalentunderUNION!FIND.Labelson typeonstrutorsanbeusedasidentifersof(equivalene \nlassesof)nodes,sothatldenotesapartiular(equivalene lass)noderepresentingonstrutor. 3.2.2Mainloop Themainloopofthealgorithm(Figure4)usesawork\u00adlist,whihalwaysholdstheremainingunsolvedonstraints \n(initiallytheinputonstraintsetC).Intheloop,anun\u00adsolvedonstraintTopT. ispopped(usingtheoperation FETH)fromtheworklist,whereopiseitheranequality \nsymbol(=)oraninequality( TheFETHoperation ). hoosesequalitiesbeforeinequalities.Thisshemeidentifes asmanynodesinthetypestrutureasearlyaspossible, \nleadingtoimprovedperformane.IfthetermsTandT. of theonstrainthavedistintrootonstrutorsandd,the onstraintannotbesolvedandthealgorithmfails.4Other\u00adwise,thealgorithmbranhesontheformoftherelation(op) \noftheonstraint.Ifopisequality,=,aUNIONisperformed, andequalitiesarepropagateddownwardsonthetypetrees. \nIfopisinequality,T ,aSTOREoperationisper\u00ad T. formed.Thisoperationahesinstantiationsandapplies thefollowingonstraintlosurerule: \nT T T . T2 T =T2 (2) Notiethat,inthisrule,theindeximustbethesameon bothinequalities.Theruleensuresthatanytwoour\u00adrenesofthesamevariablegetinstantiatedtothesame \ntype,withinasingleinstantiation.Forexample,theon\u00adstraint(1)fromourrunningexampleinSetion2.2.2,afl (r)fl.. \na ptrl. T,impliesa ptrl. (r)anda T,as explainedearlier.Hene,wemusthaveptrl. (r)=T. ForaninequalityT \nT',theSTOREoperationstores areferenetothenoderepresentingthemainonstrutor ofT'atthenoderepresentingthemainonstrutorofT. \nThisreferenealsoarriestheinformationontainedinthe indexiandpolarityp.Thealgorithmusesthenotation T T'forahedinstantiationsaswellastarget(TTi)= \nf T' ' andpolarity(TTiTT)=p.Ifanodehasalreadybeenstored atTandindexi(i.e.,iftarget(TTi)isdefned),theSTORE \noperationemitstheequationT'=target(TTi),therebyim\u00adplementingrule(2). OperationSTOREdefnesthetypeinstantiationgraphon \nwhihourfowomputationswillbeperformed(seeSe\u00adtion3.3).Theinstantiationgraphisfurtherusedbythe UNIONoperation.Supposewehaveaonstraintoftheform \nT=T',andthatTishosenasequivalenelassrepre\u00adsentative.ThenthetypeT'willefetivelybe\"killed\".If target(T'Ti)isdefned(foranyi),wemustmakesurethat \ntargetsofT'donotgetlostasT'iskilled;thisisdoneby ' substitutingTforT',andwethereforeemitT T'tothe ' \nworklistforalltargetsT'ofT';thesewillthenbeometar\u00adgetsofTbyfutureSTOREoperations,asdesribedabove. TheoperationPROPAGATEgetsalledwhenonstraints \narepropagated(addedtotheworklist),asexplainedinSe\u00adtion2.2.4..Thisoperationfndstheappropriatepolarityfor \nthepropagatedonstraints. Theextendedourshek[Hen93],implementedinthe operationEO,ensuresthatyliinstantiationonstraints \n. oftheformT': .:TwhereTisapropersubterm . . ofT'gettransformedintoequalities,therebyblokingases whereinfniteinstantiationsmightotherwiseour.The \nhekEO(TTT')isimplementedbyadepth\u00adfrstsearhover theinstantiationgraphstartingfromtherootnodeofT'.If therootnodeofTisreahableviainstanesfromtheroot \nnodeofT',onehekswhethertherootofTproperlyours withinT'.Theours\u00adhekisdonebyadepth\u00adfrstsearh oftheterm\u00adgraphrepresentingT'. \n3.3Typeinstantiationgraph TheinstantiationahemaintainedbySTOREdefnesthe typeinstantiationgraphandrepresentsaompletetrae \n.ForC,weusefnitesumtypesasin[Ste96],guaranteeingthat onstraintssolvingneverfails. typedefvoid(*FIP)(int*); \n\u00a32 voidf(int*p){ 1*f ptr\u00a3.(a) void*1 (1) ...*p...; } \u00a37.)\u00a34 FIPg(){ 1*g void (ptr\u00a33(a void)*1 (i) return(&#38;f); \n1*fi ptr\u00a33(a.) \u00a34void*1 } h(){ ..]\u00a3 int; 1* [a*1 \u00a3 \u00a3; (j) FIPfp g(); 1*gj void (ptr\u00a3 (a..) void)*1 (2) \nfp(&#38;); 1*fp ptr\u00a3 (a..) \u00a3;void*1  } i\u00c6 ) +i\u00c6 ) +i\u00c6 ) i\u00a32 \u00a34 \u00a3; - - - \u00a32 i\u00c6) i\u00c6) i\u00c6) >\u00a34 - \n>\u00a3; - - - -  i\u00c6 ) i\u00c6 ) i\u00c6 )  i ptr\u00a3. ptr\u00a33 ptr\u00a3 i\u00c6 ) .i\u00c6 ) .i\u00c6 ) - - - > - - ptr\u00a3. ptr\u00a33 >ptr\u00a3 \n- - - ++ . '.  i a a a''  >-' >-'' a a a Typeinstantiationgraph Flowgraph Figure6:Examplewithreturnedfuntionpointer \n P atualfowdiretionofvaluesandarelabelledbyapolar\u00ad   >  -: T1 T2InstantiationonstraintT1 T2 ity(explainedlater).Nodesarepartiularsubexpressionsof \n P T1 : ; types.Wedrawonlythetop\u00adlevelnodesofsuhtypes,pos\u00ad  T2 InstantiationonstraintT1 T2 siblysurroundedbyaboxtohelpidentifythemasnodes. \nT1+->T2Positivepolarityfowedge Whereappropriate,weonnettypeswiththeirimmediate subexpressionsviaundiretedsolidedges. \n> - T1T2Negativepolarityfowedge i\u00c6 ) Weontinuebyexaminingasimpleexamplethatsug\u00ad ptr\u00a3 Struturaledgeintypeptr\u00a3(T)gestshowtointerpretatypeinstantiationgraphasafow \ngraph.Ourexamplesexpliitlyontainfuntionpointersto T showtheworkingsofthefowomputationinthehigher\u00adorderase.Moredetailsontheorretnessoftheapproah \n- Figure7:Edgeonventions anbefoundinatehnialreport[FRDOO]. Figure6showsaCprogramwiththeinferredtypesgiven \nasomments.Theinstantiationgrapharisingfrompointsi ofallinstantiationsduringresolution.Morepreisely,the \nandjisgivenatthebottomleftoftheFigure(voidnodes nodesofthegrapharesubtermsoftypesandthereisan arenotshown).Reallthatlabelsanbethoughtofas \ni P'labellingtypenodes.Wewilltakethisviewinthefollowing edgeTT'ifandonlyifT i T ,i.e.,theonstraint explanation.Letusfrstaskthefollowingqueryatline \n:i' resolutionalgorithminferredTT. (2):Whatarethefuntionsthatareappliedatthisindiret all?Thefuntionnodeoftheindiretallisi\u00c6 \n;) . \u00a3TheC - i\u00c6 ) 4Computingglobalfowinformation semantistellsusthatfuntionfidentifedby-\u00a32fowsto  i\u00c6 \n) theindiretall.Inourinstantiationgraph,node \u00a32is ) Thissetionshowshowtoomputeglobalfowinforma\u00adonnetedtoi\u00c6 \n\u00a3;viatheinstantiationedges - - tion(points\u00adtoinformationinourrunningexample)from i thetype\u00adinstantiationgraphbyinterpretingtypeinstanti\u00ad \n i\u00c6) i\u00c6) i\u00c6) >\u00a34 - >\u00a3; - ationgraphsasfowgraphs.Whenpresentinggraphs,we \u00a32 - - -  usetheonventionsshowninFigure7.Instantiationsare \nTheseinstantiationswithpositivepolaritystemfromtheuse representedasdottededgeslabelledbytheinstantiation \nofthe[FUN]ruleonourrenesoffiandgj.Ifweview onstraint.Theirdiretionrepresentstheinstantiationdi\u00ad theseinstantiationedgesasdiretedfowedges(asshown \nretion(fromgeneritoinstane).Flowedgesrepresentthe inFigure6bottomright),weanonludethatfuntion  (0)int*id(int*p){ \n1*id:ptre.( ) e ptre1( )*1 (1) *p;returnp; } foo(){ intb; 1*b:hBIe3*1 e4 (i) id(&#38;b); 1*idi:ptre3(B) \nptre3(B)*1 } bar(){ int; 1*:hrIe5*1 e6 (j) id(&#38;); 1*idj:ptre5(r) ptre5(r)*1 } + [\u00c6JJ[\u00c6JJ[\u00c6JJ e4 \n e6 j + [\u00c6JJ[\u00c6JJ i -> e  + [\u00c6 JJ e4<  e6  e   +   [\u00c6    [\u00c6 [\u00c6 [\u00c6 JJ ptre3 ptre1 ptre5 \n++ JJJJJJ j <   ptre1 i>T - [\u00c6 JJ[\u00c6 JJ T ptre3 ptre5 ++ ++  iT jT r B >-  Br    ++ Typeinstantiationgraph \nFlowgraph Figure8:Identityexample [\u00c6 JJ f(representedbynode e )fowstotheindiretfuntion [\u00c6 JJpointerfp(representedbynode \ne6).Weapturethis  observationinourfrstfowrule. Rule4.1Instantiationedgeswithpositivepolarity(+) translateintofowedgeswiththesamediretion.Thesefow \nedgesinheritpolarity+. Next,weaskthefowquery:whatpointervaluean bedereferenedbypatpoint(I)?TheCsemantistells \nusthattheaddress(orloation)offowstopwhereit isdereferened.Theontentsofpisuniquelyidentifed [\u00c6JJ[\u00c6JJ bynodeptre1,andtheloationofislabelledbyptre5. \nInspetingourinstantiationedgesinFigure6,wenotiethat thesetwonodesareonnetedbytheinstantiationedges [\u00c6JJ \n[\u00c6 JJ [\u00c6 JJ (j), we obtainthe answer: p oin ters to loations\u00a33 (b) an d \u00a35 ()throughthepath + + ptre3 \nptre1 ptre5 Thefowof\u00a33(b)isimpreisesineittraesapathfrom allsite(i),throughid,returningtoallsite(j).Inor\u00addertoobtainmorepreiseanswerstofowqueries,weneed \ntorestritthesetofpathsweonsiderinthereahability question,withoutsarifingsoundness. 4.1PosNeg-fow Sofarwehaveusedthepolarityoninstantiationstogive \ndiretiontofowedges.Butwehaveignoredthepolarityof j\u00ad i\u00ad thefowedgesthemselves.Flowedgesinherittheirpolarity \n-- [\u00c6 JJ e1 ptr  JJ[\u00c6 ptre3  JJ[\u00c6 ptre5 fromtheinstantiationedgethatgivesrisetothefowedge. [\u00c6 JJ[\u00c6 \nJJ Theimpreisefowpathfromptre3toptre5aboveonsists ofanegative(-)fowedge,followedbyapositive(+)fow  \n wheretheonstraintshavenegativepolarity.Inorderto [\u00c6 JJ[\u00c6 JJ deduefowfromptre5toptre1 edgeswithpolarity-asfowedgesintheoppositediretion \n,wemusttreatinstantiation edge.Inthefrst\u00adorderase,anegativepolarityedgerep\u00ad oftheinstantiation,suggestingthenextfowrule: \nRule4.2Instantiationedgeswithnegativepolarity(-) translateintofowedgeshavingoppositediretion.These fowedgesinheritpolarity-. \nThetwofowrulesyieldasoundfowrepresentationofa programdesribedbyatypeinstantiationgraph,i.e.,they ompletelyaptureallvaluefowintheprogram.Butun\u00adfortunately,applyingthemblindlytoatypeinstantiation \ngraphresultsinaompletelossofontext\u00adsensitivityas shownbythenextexampleinFigure8.Ifweasktheques\u00adtion:whatpointersarereturnedbytheappliationofidat \nresentsthefowedgefromanatualtoaformalparameter, andapositivepolarityedgerepresentsthefowofaresult baktothealler.Inthislight,apathfragmentonsisting \nofanegative(-)fowedgefollowedbyapositive(+)fow edgerepresentsaall/returnfow.Intheontext\u00adsensitive setting,suhpathsneedonlybeonsiderediftheallsite \nofthealledgemathesthesiteofthereturnedge.Inour formulation,allsitesarerepresentedbyindiesonthein\u00adstantiationedgesbutwehosetoelidetheindexonfow \nedgesforreasonsaddressedbelow.Supposefortheinstant thatweneverthelessattahtheindexofaninstantiation edgewhenwetranslateitintoafowedge.Annotatedwith \nindies,theimpreisepathabovehastheform 7,\\+,j  \u00c6 \u00c6 \u00c6 ptr ptr ptr 5 indiatingthatthealledgeoriginatesfromsitei,but \nreturnstositej.Repset.al.showin[RHS95]forthe frst-orderasethatrestritingfowpathstomathing all/returnsisequivalenttoaontext-freelanguagereah\u00adabilityquery.Inourasehowever,theproblemissimpler \nsineourtypeinfereneexplainedintheprevioussetionol\u00adlapsesmathingsequenesofanegativeedge(-)followed byapositive(+)edgebyRule(2).Inotherwords,pre\u00adsentedwithtwoinstantiationedgeswithmathingindies \ni >. :. - . . > \u00ad 71 70 72 theonstraintresolutionproduesanequality71=72,ef\u00adfetivelyollapsingnodes71and72.Ontheequivalentfow \ngraphtheollapseamountsto \\,7 \\,+ >\u00ad 71 70 >-72=70 . \\, +  \\,7 \u00c67172 Thus,fowsequenesrepresentingmathingall/returnsare \nalreadyollapsedinthetypeinstantiationgraphandan beignoredinthefowomputation.Wethusdisregardall pathsontaininganegativeedgefollowedbyapositiveedge \ninourgraphreahabilityproblem.Thus,theonlyvalidfow pathsonsistofanynumberofpositiveedges,followedby anynumberofnegativeedges.WeallsuhpathsPosNeg\u00adpaths. \nDefnition4.1[PosNeg-Flow]Wesaythatthereisfow fromanodelabelled\u00a31toanodelabelled\u00a32inafowgraph GonstrutedviaRules4.1and4.2,ifthereexistsaPosNeg-pathinGfrom\u00a31to\u00a32. \n. ThesoundnessofourPosNeg-fowinthehigher-order asereliesonthefatthateahinstantiationonstraintpro\u00adduedduringonstraintgenerationanbeinterpretedasa \nsubtypingonstraintwiththeobviousfowinterpretation. Adetaileddisussionofthemehanismandaproofofits soundnessanbefoundin[FRDOO]. \n4.2Complexity Ourfowformulationanswersindividualqueries(e.g.all soure-onesink)inlineartimeinthesizeofthetypein\u00adstantiationgraph.Allqueriesanbeansweredinquadrati \ntime.Theomplexityisdiretlyrelatedtothefatthatthe end-pointsofmathingall/returnedgesareollapsed. RestritingeahindividualquerytoPosNeg-pathsleads \ntoasimplealgorithmthatisnaturallydemand-driven.In ontrast,twophasealgorithmsrequirethatphaseO(up propagation)beentirelyompletedbeforeanypropagation \nofphase1(downpropagation),otherwiseontext-sensitivity islost.Implementingaompletelydemand-drivenversion \nofthesetwo-phasealgorithmsisthushallenging. In[FRDOO],westudythegeneralizationofthepresent fowanalysistodiretionaledges.Inthegeneralizedase, \nfowqueriesareansweredviaontext-freelanguagereah\u00adabilityasdesribedbyRepset.al[RHS95,MR97].Our tehnialreportontainsaubialgorithmforansweringall \noranysinglequery. 5Experiments Thissetionshowsthatourtehniquessaletolargepro\u00adgramsbypresentingnumbersforanimplementationofthe \ndesribedtypeinfereneandfowalgorithms.Weshowthe preisionimprovementsgainedoveramonomorphiversion intheontextofpoints-toanalysis.Themonomorphianal\u00adysisisaversionofSteensgaard'spoints-toanalysis[Ste96].5 \nWeanalyzearangeofCprogramsfromtheSPECbenh\u00admarksuite.TherawnumbersaregiveninTable1.Allex\u00adperimentswererunonaDellPreision61Owith512MBof \nmemory.Tomeasurethepreisionofthepoints-toanaly\u00adsis,weountpoints-tosetsizesatstatipointerdereferene pointsonly(diretaessestoarraysarenotountedas \ndereferenes). Typesofglobalvariablesaretreatedmonomorphially. Eahourreneof.....generatesafreshglobalvariable \nrepresentingthelassofheapellsarisingatthatpoint.Our implementationusessumtypestorepresentCvaluesthat \nanbeeitherpointersorfuntions. Figure9showstheredutionsintheaveragepoints-toset sizeobtainedthroughpolymorphism.Themostdramati \nredutionisobtainedforVortex,wheretheaveragepoints\u00adtosetsizedropsfrom1661to62.EvenforGCC,weget almostafatorof5redutionintheaveragepoints-toset \nsize. Figure1Ogivestherunningtimeofthemonomorphiand thepolymorphianalyses.Wegivethetimeperabstrat syntaxtreenodetoshowthesalingbehavior.Therunning \ntimeisbrokendownintomonomorphirunningtime,time foromputingthepolymorphitypeinstantiationgraph(in exessofthemonomorphitime),andthetimetoompute \nthefowresult.Thenumbersshowthatthepolymorphi typeinstantiationgraphanbeomputedwithlittleover\u00adheadoveramonomorphianalysis.Thetimetoompute \nthefowinformationhoweverisasubstantialfrationofthe analysistime.Fortunately,theabsolutetimesarestillsmall \n( 3minutesforg).Thefowomputationisurrently implementedasanon-demanddriven,forward-onlyfow, whereeahsymbolispropagatedalongallPosNeg-paths. \nWebelievethisnaiveimplementationanbeimprovedsub\u00adstantially. Finally,Figure11showsthespaeonsumptionofthe \npolymorphianalysisasafatorofthespaeonsumption ofthemonomorphianalysis.Thespaeisbrokendown intotypenodesandinstantiationedges.Thespaeover\u00adheadofpolymorphismissubstantialandurrentlythemain \ninhibitortosalingtheanalysistoverylargeprograms.We areabletoonstrutthefnaltypeinstantiationgraphfor MSWord(2.1MLo)within512MBofmemory,butexeed \nmemoryduringthefowomputation.Findingwaystofur\u00adtherreduethememoryonsumptionispartoffuturework. 6Relatedwork \nJagannathanandWright[JW95]andNielsonandNiel\u00adson[NN97]studyfowanalysisframeworks.Theseframe\u00adworksontainanalysesthatandistinguishbetweenanum\u00adberofdistintontextsinwhihfuntionsareused.They \ndiferfromourtehniqueinthatfuntionsarereanalyzedin eahnewontext. 5Libraryfuntionstubsaretreatedpolymorphially,noondi\u00adtionalunifationisused. \n2000 1500 100 80 1000 Normalized dereference set size Analysis time (us per node)  500 0 20 0 Benchmark \nBenchmark Monomorphic Polymorphic Monomorphic Instantiation overhead Flow step overhead Figure9:Redutionsofpoints-tosizes \nFigure10:Runningtimes Testprogram Codelines ASTnodes Ave.derefsize Analysistime(ses) Mono Poly Mono Poly \nFlow ompress 1,904 2,234 7 3 0.5 0.6 10.7% li 7,602 23,379 282.1 185.2 1.8 40.9 93.2% m88ksim 19,412 \n65,967 107.3 11.6 4.6 11.5 42.8% ijpeg 31,215 79,486 37.9 11.1 7.0 44.8 80.7% go 29,919 109,134 51.3 \n16.6 4.7 9.9 38.1% perl 26,871 116,490 51.1 21.1 7.6 16.4 39.8% vortex 67,211 200,107 1661.3 61.9 17.3 \n161.3 79.5% g 205,406 604,100 429.5 91.8 42.3 179.5 64.7% Table1:Rawmeasurementdata:LinesofodeandASTnodeount.Averagesizesofpoints-tosetsatstatidereferene \npoints,andrunningtimeinseonds. 18 Cprograms.  InLakwit[OJ97],O'CallahanandJaksonexploitare\u00adlationinduedbyinstantiationsofpolymorphitypes,alled \nompatibility.Compatibilityisundiretedandanbeunder\u00adstoodasalesspreiseversionofourfowrelation. Fosteret.al.[FFA00]presentsastudyoftherelativepre\u00adisiontrade-ofsofmonomorphivs.polymorphipoints-to \nanalyses,bothfordiretedandundiretedintra-proedural Multiple of #Nodes Monomorphic 12 6 0 fow.TheirpolymorphiversionofSteensgaard'spoints-to \nanalysisislesspreisethantheonepresentedhereintwoas\u00adpets:1)setsofmutuallyreursivefuntionsareanalyzed Benchmark \nmonomorphially,and2),thefowomputationdoesnot #Nodes: Polymorphic #Instantiation edges Figure11:Spaeoverhead \nInontrasttotheontext-freelanguagereahabilityfor interproeduralpreisefowpathsofRepsal.[RHS95],valid pathsinouranalysishavethesimpleformofPosNeg-paths \nduetotheabseneofdiretionalfowwithinafuntion. Alonganotherdimensionourfowismoregeneral,sineit dealsdiretlywithstrutureddatatypesandhigher-order \nprograms. HeintzeandMAllesterpresentasub-transitivelosure analysisforML[HM97]alsobasedontypes.Likeours,their \nanalysistraesfowpathsontypegraphs,butfowpathsare notontext-sensitive.Furthermore,theiranalysisrequiresa \nnon-reursivetypegraphwhihpreludesitsappliationto takefulladvantageofthepolaritiesdesribedhere. TheanalysesofChatterjeeet.al.[CRL99]andWilson \nandLam[WL95]arefowsensitiveandmuhmorepreise thantheanalysispresentedhere.Theirsalabilityremains unknown. \nFinally,thetehniquepresentedhereisaspeialase ofamoregeneralanalysisbasedonbothdiretionalfow onstraintsandinstantiationonstraints[FRD00]. \n7Conlusion Thispaperarguesthattype-basedontext-sensitiveanaly\u00adsesbasedonparametripolymorphismharborimpliitdi\u00adretionalinter-proeduralfow,evenintheasewhereintra\u00adproeduralfowisundireted.Theinter-proeduralfowis \ndefnedbyannotatinginstantiationedgeswithpolaritiesand interpretingthemasdiretedfowedges.Wepresentedthese \nideasthroughaontext-sensitivepoints-toanalysisforC. Theresultingalgorithmomputesindividualfowqueriesin \nlineartime.Wehavepresentedempirialevidenesupport\u00adingthepratialnatureoftheapproah. Referenes [ASU88]A.V.Aho,R.Sethi,andJ.D.Ullman.Compil\u00adersPriniples,Tehniques,andTools.Addison \nWesley,1988. [CGS+99]Jong\u00adDeokChoi,ManishGupta,MauriioSer\u00adrano,VugranamC.Sreedhar,andSamMid\u00adkif.Esapeanalysisforjava.In00PSLA'99 \n[00P99],pages1.19. [CRL99]RamkrishnaChatterjee,BarbaraG.Ryder,and WilliamA.Landi.Relevantontextinferene. \nInConfereneReordofthe26thAnnualACM SIGPLAN\u00adSIGACTSymposiumonPriniplesof ProgrammingLanguages,January1999. \n[DM82]L.DamasandR.Milner.Prinipletype\u00adshemes forfuntionalprograms.InConfereneReord ofthe9thAnnualACMSymposiumonPrini\u00adplesofProgrammingLanguages,pages207.212, \nJanuary1982. [FFA00]JefreyS.Foster,ManuelFahndrih,andAlexan\u00adderAiken.Polymorphiversusmonomorphi points\u00adtoanalysis.InProeedingsofthe7th \nInternationalStatiAnalysisSymposium,Le\u00adtureNotesinComputerSiene.SpringerVerlag, June2000. [FRD00]ManuelFaahndrih,JakobRehof,andManuvir \nDas.FrompolymorphisubtypingtoCFLreah\u00adability:Context\u00adsensitivefowanalysisusingin\u00adstantiationonstraints.TehnialReportMSR\u00adTR\u00ad99\u00ad84,MirosoftResearh,Marh2000. \n[Hen93]FritzHenglein.Typeinferenewithpolymorphi reursion.ACMTransationsonProgramming LanguagesandSystems,15(2):253.289,1993. \n[HM97]NevinHeintzeandDavidMAllester.Linear\u00adtimesubtransitiveontrolfowanalysis.InPro\u00adeedingsofthe1997ACMSIGPLANConfer\u00adeneonProgrammingLanguageDesignandIm\u00adplementation,number32:6inSIGPLANnoties, \npages261.272,June1997. [JW95]SureshJagannathanandAndrewWright.Efe\u00adtivefowanalysisforavoidingrun\u00adtimeheks.In \nProeedingsofthe2ndInternationalStatiAnal\u00adysisSymposium,volume983ofLetureNotesin ComputerSiene,pages207.224.SpringerVer\u00adlag,September1995. \n[KTU93]A.J.Kfoury,J.Tiuryn,andP.Urzyzyn.The undeidabilityofthesemi\u00adunifationproblem. InformationandComputation,102(1):83.101, \nJanuary1993. [KTU94]A.J.Kfoury,J.Tiuryn,andP.Urzyzyn.An analysisofMLtypability.JournaloftheACM, 41(2):368.398,Marh1994. \n[LH99]DonglinLiangandMaryJeanHarrold.E\u00c6ient points\u00adtoanalysisforwhole\u00adprogramanalysis.In Proeedingsofthe7thEuropeanSoftwareEngi\u00adneeringConfereneandthe7thACMSIGSOFT \nSymposiumontheFoundationsofSoftwareEn\u00adgineering,September1999. [Mil78]R.Milner.Atheoryoftypepolymorphismin \nprogramming.JournalofComputerandSystem Sienes,17:348.375,1978. [MR97]DavidMelskiandThomasReps.Interon\u00advertibilityofsetonstraintsandontext\u00adfree \nlanguagereahability.InProeedingsofthe ACMSIGPLANSymposiumonPartialEvalua\u00adtionandSemantis\u00adBasedProgramManipulation \n(PEPM\u00ad97),volume32,12ofACMSIGPLAN Noties,pages74.89.ACMPress,June1997. [My84]A.Myroft.Polymorphitypeshemesandre\u00adursivedefnitions.InProeedingsofthe6thIn\u00adternationalSymposiumonProgramming,pages \n217.228,1984. [NN97]FlemmingNielsonandHanneRiisNielson.In\u00adfnitaryontrolfowanalysis:aolletingseman\u00adtisforlosureanalysis.InConfereneReord \nofthe24thAnnualACMSIGPLAN\u00adSIGACT SymposiumonPriniplesofProgrammingLan\u00adguages,pages332.345.ACMPress,January \n1997. [0J97]Robert0'CallahanandDanielJakson.Lakwit: Aprogramunderstandingtoolbasedontypein\u00adferene.InInternationalConfereneonSoftware \nEngineering,May1997. [00P99]Proeedingsof14thAnnualConfereneon Objet\u00adOrientedProgramming,Systems,Lan\u00adguages,andAppliations,volume34,10ofACM \nSIGPLANNoties.ACMPress,November1999. [RHS95]ThomasReps,SusanHorwitz,andMoolySa\u00adgiv.Preiseinterproeduraldatafowanalysisvia \ngraphreahability.InConferenereordofPOPL '95,22ndACMSIGPLAN\u00adSIGACTSymposium onPriniplesofProgrammingLanguages:papers \npresentedattheSymposium:SanFraniso,Cal\u00adifornia,January22-25,1995,pages49.61,1995. [Ste96]BjarneSteensgaard.Points\u00adtoanalysisinalmost \nlineartime.InConfereneReordofthe23rdAn\u00adnualACMSIGPLAN\u00adSIGACTSymposiumon PriniplesofProgrammingLanguages,pages32. \n41,January1996. [WL95]RobertP.WilsonandMoniaS.Lam.E\u00c6ient ontext\u00adsensitivepointeranalysisforprograms. \nInProeedingsofthe1995ACMSIGPLANCon\u00adfereneonProgrammingLanguageDesignand Implementation,number30:6inSIGPLANno\u00adties,June1995. \n[WR99]JohnWhaleyandMartinRinard.Compositional pointerandesapeanalysisforjavaprograms.In 00PSLA'99[00P99],pages187.206.\n\t\t\t", "proc_id": "349299", "abstract": "<p>This paper shows that a type graph (obtained via polymorphic typeinference) harbors explicit directional flow paths between functions. These flow paths arise from the instantiations of polymorphic types and correspond to call-return sequences in first-order programs. We show that flow information can be computed efficiently while considering only paths with well matched call-return sequences, even in the higher-order case.  Furthermore, we present a practical algorithm for inferring type instantiation graphs and provide empirical evidence to the scalability of the presented techniques by applying them in the context of points-to analysis for C programs.</p>", "authors": [{"name": "Manuel F&#228;hndrich", "author_profile_id": "81100288438", "affiliation": "Microsoft Research, One Microsoft Way, Redmond, WA", "person_id": "P187043", "email_address": "", "orcid_id": ""}, {"name": "Jakob Rehof", "author_profile_id": "81100614854", "affiliation": "Microsoft Research, One Microsoft Way, Redmond, WA", "person_id": "P131488", "email_address": "", "orcid_id": ""}, {"name": "Manuvir Das", "author_profile_id": "81100143266", "affiliation": "Microsoft Research, One Microsoft Way, Redmond, WA", "person_id": "PP14060503", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/349299.349332", "year": "2000", "article_id": "349332", "conference": "PLDI", "title": "Scalable context-sensitive flow analysis using instantiation constraints", "url": "http://dl.acm.org/citation.cfm?id=349332"}