{"article_publication_date": "05-01-2000", "fulltext": "\n A Single Intermediate Language That Supports Multiple Implementations of Exceptions Norman Ramsey Harvard \nUniversity nr@eecs.harvard.edu ABSTRACT Wepresentmehanismsthatenableourompiler\u00adtargetlan\u00adguage,C..,toexpressfourofthebestknowntehniques \nforimplementingexeptions,allwithinasingle,uniform framework.Wedefnethemehanismspreisely,usinga formaloperationalsemantis.Wealsoshowthatexep\u00adtionsneednotrequirespeialtreatmentintheoptimizer; \nbyintroduingextradatafowedges,wemakestandardop\u00adtimizationtehniquesworkevenonprogramsthatuseexep\u00adtions.Ourapproahlarifesthedesignspaeofexeption\u00adhandlingtehniques,anditallowsasingleoptimizertohan\u00addleavarietyofimplementationtehniques.Ourultimate \ngoalistoallowasoure\u00adlanguageompilerthefreedomto hooseitsexeption\u00adhandlingpoliy,whileenapsulatingthe arhiteture\u00addependentmehanismsandtheiroptimization \ninanimplementationofCthatanbeusedbyompilers .. formanysourelanguages. 1. INTRODUCTION Cisaompiler\u00adtargetlanguageintendedtobeindepen\u00ad \n..dentofbothsoureprogramminglanguageandtargetar\u00adhiteture(PeytonJones,Oliva,andNordin1997;Pey\u00adtonJones,Ramsey,andReig1999).Itsdesignaommo\u00addatesavarietyofsourelanguagesandleavesroomforbak\u00adendoptimization,allwithoutupallsfromthebakendto \nthefrontend. Cisnotauniversalintermediatelanguage(Conway1958) .. ora\"write\u00adone,run\u00adanywhere\"intermediatelanguage \n(LindholmandYellin1997).Rather,Cenapsulatesom\u00ad ..pilationtehniquesthatarewellunderstood,butdi\u00c6ultto implement.Suhtehniquesinludeinstrutionseletion, \nregisteralloation,instrutionsheduling,andsalaropti\u00admizationsofimperativeodewithloops.Beyondthis,C .. \nalsoenapsulatesthearhiteture\u00adspeifrun\u00adtimesupport requiredforhigh\u00adlevelrun\u00adtimeserviessuhasgarbageol\u00adletion,onurreny,debugging,andexeptiondispath.It \nisinappropriateforabakendlikeCtoimplementsuh .. servies,sothehallengeistoidentifylow\u00adlevel,primitive \nPermission to make digital or hard copies of all or part of this work for personal or classroom use is \ngranted without fee provided that copies are not made or distributed for pro.t or commercial advantage \nand that copies bear this notice and the full citation on the .rst page. To copy otherwise, or republish, \nto post on servers or to redistribute to lists, requires prior speci.c permission and/or a fee. PLDI2000, \nVancouver, British Columbia, Canada. Copyright 2000 ACM 1-58113-199-2/00/0006 $5.00. ... Simon Peyton \nJones Microsoft Research Ltd simonpj@microsoft.com mehanismsthatabakendshouldprovide,ontopofwhih aClientanimplementhigh\u00adlevelservies. \n.. ThispaperexplainshowCenapsulatesthetehniques .. ompilersusetosupportexeptiondispath.Itmakesthe followingontributions: \n.WepresentthetwomehanismsthatCusesto .. speifyinterproeduralontrolfow:weakontinua\u00adtionsthatdonotoutlivetheirproedureativations, \nandall\u00adsiteannotations(Setion4).Thesemeha\u00adnismssupport,inasingleframework,threewell\u00adknown waysofimplementingexeptions.Calsosupports \n.. ontinuation\u00adpassingstyle,afourthimplementation tehnique.Everynative\u00adodeompilerofwhihweare awareusesoneofthesefourtehniquestoimplement \nexeptions. .Todefnethesemehanismspreisely,wepresentthe intermediatelanguageAbstratCanditsformalop\u00ad .. \nerationalsemantis(Setion5).AbstratCiseasily .. derivedfromCsoure. .. .Itisnotimmediatelyobvioushowstandardanalyses \nandoptimizationsshouldbeimplementedinthepres\u00adeneofexeptions.Wethereforepresentanalgorithm foronvertingabstratCintoadatafowgraph(Se\u00ad \n.. tion6).Thismaybeanovelwayofdoumentingan intermediaterepresentation,anditshouldbediretly usefultoimplementors,whoanthenusestandard \ndatafowanalysestoprodueaurateandsafeode eveninthepreseneofexeptionsandexeptionhan\u00addlers;exeptionsneednotbetreatedasspeialases. \nTherefore,asingleoptimizershouldsu\u00c6eforallC .. programs,regardlessoftheoriginalsourelanguage. .Ourapproahissimpleandanbeappliedtoother \nintermediateforms,anditilluminatesthedesignspae ofexeption\u00addispathmehanisms. Noteverythinghereisnew.Forexample,anyompiler \nwriterwhothinkshardmaydeidetouseextrafowedges toexpresstheoptimizationonstraintsofexeptions(Hsieh, Gyllenhaal,andHwu1996).Buttheliteratureonoptimiz\u00adinginthepreseneofexeptionsissparse;Hennessy(1981) \nandChase(1994b)arerareexeptions.Wedonotknowof otherworkthatpresentslanguage-independenttehniques forsuhoptimization. \n 2. WHAT S THE PROBLEM? Sineweintendtoprovideexeptionmehanismsthatsu\u00c6e tosupportavarietyofprogramminglanguages,webegin \nbysurveyingthemehanismsthatarewidelyused.Weare awareoffourtehniquesthatareusedtotransferontrol fromthepointwhereasoure-languageexeptionisraised \ntothepointatwhihthatexeptionishandled. . Stakuttingsetsthestakpointerandtheprogram ountertopointdiretlytothehandler.Inanative\u00adodeompiler,thistehniqueanbeveryfast,but \nitdoesnotrestorethevaluesofallee-savesregisters; ingeneral,thesevaluesmaybedistributedthroughout thestak.Thistehniquemaybebestsuitedtoimple\u00admentationsthatusenoallee-savesregisters.Obje\u00adtiveCAMLusesthistehnique,asdomanyCommon \nLispsandpre-ShemeLisps. InCode,setjrpandlongjrputthestak,but theytypiallysaveandrestorelotsofstate:thesize \nofajrp bufis6pointersonPentium/Linux,19on Spar/Solaris,and84onAlpha/Digital-Unix.Al\u00adthoughsetjrpandlongjrpdonotalwaysusetheen\u00adtirebufer,theyaresignifantlymoreexpensivethan \nanative-odestakutter,whihsaves2pointers.On theSPARC,longjrppaystheadditionalpenaltyof fushingregisterwindows.Beauseoftheperformane \npenalty,setjrpandlongjrpareusedonlybyimple\u00admentationsthatompiletoC,suhasSRCModula-3. . Run-timestakunwindingusestherun-timesystemto \nunwindthestakoneframeatatimeuntilthehandler isreahed.Therun-timesystemrestoresthevalues ofallee-savesregistersasitunwindsthestak,typi\u00adallybyinterpretingtablesdepositedbythebakend. \nOperatingsystemsmayprovidesupportforrun-time stakunwinding;forexample,theMIPSABIprovides a\"run-timeproeduretable,\"andDigitalUnixin\u00adludesawell-speifedABIforallstaks.Thenative\u00adodebakendsofPolytehniModula-3usethisteh\u00adnique,asdothetheJavaVirtualMahineandmany \nC++ompilers. . Native-odestakunwindingusesspeializedodein eahproeduretounwindthestakwhena\"nonlo\u00adalreturn\"or\"exeptionaltermination\"isalledfor. \nBeausetheompilergeneratesnativeodetodothe unwinding,nointerpretiveoverheadisinvolved.The Selfompilerusesthistehnique. \n. Inontinuation-passingstyle,thepotentialexeption handlersarerepresentedbyanexeptionontinuation. Generatedoderaisesanexeptionbymakingatail \nalltothisontinuation.Theontinuationdeides whihhandlerapplies.Again,theompilergenerates speializedodeforeahhandler.StandardMLof \nNewJerseyusesthistehnique. C--supportsontinuation-passingstylethroughfullygen\u00aderaltailalls(PeytonJones,Oliva,andNordin1997),whih \nrequirenofurtherexplanation.Wethereforedisussonly thefrstthreemehanisms.Althoughthesemehanismsare wellunderstood,supportinganyofthemrequiresintimate \nooperationamongtheoptimizer,theodegenerator,and therun-timesystem. /*Ordinaryreursion*//*Loops*/ exportsp1; \nexportsp3; sp1Cbits32n){ sp3Cbits32n){ bits32s,p; bits32s,p; ifn==1{ s=1;p=1; returnC1,1); }else{ loop: \ns,p=sp1Cn-1); ifn==1{ returnCs+n,p*n); returnCs,p); } }else{ } s=s+n; p=p*n; n=n-1; /*Tailreursion*/ \ngotoloop; exportsp2; }} sp2Cbits32n){ jurpsp2 helpCn,1,1); } sp2 helpCbits32n,bits32s,bits32p){ ifn==1{ \nreturnCs,p); }else{ jurpsp2 helpCn-1,s+n,p*n); } } Figure1:Threeproeduresthatomputethesum .. .. ... \niandprodut... i,writteninC--. . Corretexeptiondispathdependsbothonthese\u00admantisofexeptionsinthesourelanguageandon \ntherepresentationoftheallstakonthetargetma\u00adhine;theinterationsmaybesubtle. . Optimizationisfundamentallyafetedbyexeptions. \nOptimizingompilersmayhaveratheradhomodif\u00adationsthatmaketheoptimizers\"dotherightthing\" fortheexeptionsemantisofonepartiularlanguage. \n Theeasywayoutisfortheodegeneratortoknowthe language-speifdetailsofexeptionsemantis,andforthe run-timesystemtoknowtheodegenerator'sstaklayouts \nandregister-savingprotools.Butsuhintimateooper\u00adationisnotavailabletoareusableodegenerator,whih mustsupportmultiplesourelanguagesonmultipletarget \narhitetures. Amainontributionofthispaperistoshowhowareusable odegeneratoranooperatewithfrontendsatarm's \nlength,andyetstillsupportavarietyofexeptionseman\u00adtisinanarhiteture-independentway.Ourkeyobserva\u00adtionisthatalanguagealoneannotprovideasu\u00c6iently \nfexibleinterfae.C--inludesnotonlyalanguage,whih ooperateswiththethesoure-languageompiler,butalsoa run-timesystem,whihooperateswiththesoure-langage \nrun-timesystem. 3. C..: A PORTABLE ASSEMBLER BeforedisussinghowCdealswithexeptions,wesketh .. thelanguageanditsrun-timesystem;moredetailsanbe \nfoundinPeytonJones,Oliva,andNordin(1997)andPey\u00adtonJones,Ramsey,andReig(1999).TogiveafeelforC.., Figure1presentsthreeCproedures,eahofwhihom\u00ad \n.. putesthesumandprodutoftheintegers1 ..n. 3.1 The C..language MuhofCisunremarkable.Chasparameterizedpro\u00ad \n....edureswithdelaredloalvariables.Aproedurebody onsistsofasequeneofstatements,whihinludeassign\u00adments,onditionals,gotos,alls,andjumps(tailalls). \nFigure1illustratestwofeaturesthatareommoninassem\u00adblers,butlessommoninprogramminglanguages.First,a proeduremayreturnmultipleresults.Forexample,allthe \nproeduresinFigure1returntworesults,andsp1ontainsa alltoamulti-resultproedure(namelysp1itself).Seond, \naC--proeduremayexpliitlytail-allanotherproedure. Forexample,sp2tail-allssp2 help(using\"jump\"),and thelattertail-allsitself.Atailallhasthesamesemantis \nasaregularproedureallfollowedbyareturn,butitis guaranteedtodealloatethealler'sresoures(notablyits ativationreord)beforetheall. \nC--hasanextremelymodesttypesystem:theonlytypes arewordsandfoating-pointvaluesofvarioussizes,e.g., bits8,bits16,bits32,bits64,float32,andfloat64.For \neahtargetarhiteture,eahimplementationofC--des\u00adignatesoneofthebitsntypesasthe\"nativedata-pointer type\"andoneasthe\"nativeode-pointertype.\"Forexam\u00adple,thenameofaproedure,likesp1inFigure1,denotes \nanimmutablevalueofthenativeode-pointertype. Byintent,theC--typesystemdoesnotprotetthe programmer-itssolepurposeistodirettheC--ompiler's \nuseofmahineresoures;inpartiular,itsmappingofvari\u00adablestoregisters.Forexample,C--doesnothekthe numberortypesofargumentspassedtoaproedure. \nBothloalandglobalvariablesmodelmahineregisters,not memoryloations.Therefore,variableshavenoaddresses\u00adwheneverpossible,theC--bakendmapsthemtoregisters. \nC--alsopermitstheprogrammertodelarenamesthat refertobloksofmemoryalloatedeithergloballyorina proedure'sativationreord,butthesenamesdonotstand \nforvariables;theystandforaddressesofmemorybloks,and assuhtheydenoteimmutablevaluesofthenativedata\u00adpointertype. \nAllmemoryaessisexpliit.Forexample,thestatement bits32[x]=bits32[y]+1; loadsa32-bitwordfromthememoryloationwhosead\u00addressisinthevariabley,inrementsit,andstoresitinthe \nmemoryloationwhoseaddressisinthevariablex.  3.2 Programs as graphs WeregardaC--programasthetextualdesriptionofa \nontrol-fowgraph,orrather,ofasetofnamedontrol-fow graphs,oneforeahproedure.C--syntaxisdesignedto makeallintraproeduralontrol-fowedgesexpliit. \n Forexample,alabel,likeloopinsp3,namesanodeinthe graph,andagotoreatesanedgetothespeifedlabel. Thetargetofagotomustbealabelinthesameproedure. \nAlabelisavalue,sothetargetofagotoanbeomputedat runtime,butsuhagotomuststatiallyidentifyallpossible targets,sotheC--ompileraninludethoseedgesinits \nontrol-fowgraph. 3.3 The run-time systems Weassumethatanexeutableprogramisbuiltbylinking togetherthreeparts,eahofwhihmaybefoundinobjet \nfles,libraries,oraombination. .Thefrontendtranslatesthehigh-levelsoureprogram intooneormoreC--modules,whihtheC--ompiler \ntranslatestogeneratedobjetode. . Thefrontendomeswitha(probablylarge)front-end run-timesystem.Thisrun-timesystemimplementsall \npoliy,aswellasanymehanismsthatdependonthe sourelanguage.Thesemayinludeagarbageolle-tor,exeptiondispather,threadsheduler,et.The \nfront-endrun-timesystemiswritteninaprogramming languagedesignedforhumans,notinC--;hereweas\u00adsumeitiswritteninC. \n.EveryC--implementationomeswitha(hopefully small)Crun-timesystem.Thisrun-timesystem .. enapsulatesarhiteture-speifmehanisms,and \nitprovidesserviestothefrontendrun-timesys\u00adtemthroughaC-languagerun-timeinterfae(Pey\u00adtonJonesandRamsey1998).Diferentfrontendsmay \ninteroperatewiththesameC--run-timesystem. ThemainservieprovidedbytheC--run-timeinterfae istopresentthestateofasuspendedC--omputation \n(\"thread\")asastakofabstratativations.Operations areprovidedtowalkdownthestak;togetinformation fromanativation;tomakeapartiularativationbeome \nthetopmostone;andtohangetheresumptionpointof thetopmostativation.Theseoperationsaresummarized inTable1;thelatterthreeoperationsaredisussedinSe\u00adtion4.Givenknowledgeofstaklayout,implementingthese \noperationsisstraightforward;therepresentationofanati\u00advationislikelytoinludeopiesofallee-savesregistersand \napointertoanativationreordontherealallstak. C--syntaxenablesafrontendtoassoiatewitheahall siteoneormorearbitrarystatidatabloks,ordesriptors, \neahofwhihisalloatedandinitializedbythefrontend. Thesyntaxisnotimportantinthispaper.Atrun-time, theC--run-timeinterfaeprovidesGetDesriptor,whih \nreturnsthen'thdesriptorassoiatedwithapartiulara\u00adtivation. HowisontroltransferredbetweenarunningC--ompu\u00adtationandarun-timesystem?Afront-endruntimemay \nreatemanyC--threads,eahofwhihmakesaoroutine alltothefront-endruntimetorequestservieslikethread swithingorexeptiondispath.Oraruntimemayreate \nasingleC--thread,whihrunsonthesystemstakand requestsserviesbymakingordinaryallstothefront-end runtime.Ineitherase,theC--threadinitiatestheinter\u00adationbyallingthespeialC--proedureyield. \nResume(t) ResumesC--threadt. FirstAtivation(t, &#38;a) Setsato\"urrentlyexeuting\"ativationofthreadt. NextAtivation(&#38;a) \nMutatesatopointtotheativationtowhihawillreturn(normallya'saller). SetAtivation(t, a) Arrangesforthreadttoresumeexeutionwithativationa. \nSetUnwindCont(t, n) Arrangesforthreadttoresumeexeutionbyunwindingtothen'thontinuationoftheativationwith \nwhihitissettoresume. SetCutToCont(t,k) Arrangesforthreadttoresumeexeutionbyuttingthestakto ontinuationk. \nFindContParam(t, n) Returnsapointertotheloationinwhihthe n'thparameteroftheurrently-setontinuationwillbe \nreturnedtothreadt. GetDesriptor(a, n) Returnsapointer tothe n'thdesriptorassoiatedwithativationa. Table1:TheCrun-tineinterfae. \n.. 4. IMPLEMENTING HIGH-LEVEL EX-CEPTIONS IN C.. Wenowturnourattentiontoexeptions.Whateverthe details,exeptionshangethefowofontrol.Thedesti\u00adnationofanexeptionalontroltransferisusuallyalleda \nhandler;fndingahandlerandtransferringtoitisalled exeptiondispath.Cmodelshandlersasontinuations, .. anditprovidesseveralontrol\u00adtransfermehanisms.C \n.. usesannotationsonallsitestotelltheoptimizerwhatex\u00adeptionalontroltransfersantakeplae.Theseannota\u00adtionsalsohelpimplementtheontrol\u00adtransfermehanisms. \nThissetiondesribesthemehanisms;AppendixAshows examplesoftheiruse.  4.1 C..Continuations WemodelanexeptionhandlerasaContinuation,whih \n.. isabitlikealabelwithparameters. f(bits32x,bits32y){ float64w; .. . g(x,k)alsoutstok; 1*kmaybe\"utto\"byg,or \n.. . bysomethinggalls*1 return; ontinuationk(x): ... ... odefork,mentioningx,y,w } Here,kisaontinuation,whihispassedtog.Aon\u00adtinuationanbedelaredonlyinsideaproedure.Thex \ninontinuationk(x)isnotabindinginstane;the\"for\u00admalparameters\"ofaontinuationmustbevariablesofthe enlosingproedure,andthereforetheyneednotypede\u00adlarations.LikeeveryC--ontinuation,kdenotesavalue, \nwhihanbeusedtotransferontroltoit,asshowninSe\u00adtion4.2.Thevaluekenapsulatesastakpointeranda programounter. \nAontinuationvaluemaybepassedtoproeduresorstored indatastrutures;itstypeisthenativedata\u00adpointertype. Oneanativationdies,however,itsontinuationsdietoo. \nInvokingadeadontinuationisanunhekedrun\u00adtimeer\u00adror,whihitisuptothehigh\u00adlevelfrontendtoavoid.C-\u00adontinuationsarethereforelesspowerfulthan(say)Sheme \nontinuations,buttheyanbeimplementedverye\u00c6iently, withoutstakopying.Toavoidunhekederrors,afront endmightprotetinvoationswitharun\u00adtimehek,orit \nmightimposeinvariantsthatguaranteenodeadontinua\u00adtionaneverbeinvoked. Stakwalkrequired?  Exeutein No \nYes  Generated ode utto return<m1n> Run\u00adtime system SetCutToCont SetAtivationand SetUnwindCont  Figure2:Alternativesforontroltransfer. \n Theannotation\"alsoutstok\"atg'sallsiteindiates thatontrolmightfowfromthealldiretlytok.Wedis\u00adussall\u00adsiteannotationsinSetion4.4. \n4.2 Transferring control to a C--continuation AC--proedureantransferontroltoaontinuationin anyoffourways,eahofwhihhasadiferentostmodel. \nThefourmehanismsthatC--providesoferompilerwrit\u00adersalternativesforeahoftwotrade\u00adofs. Doesraisinganexeptioninvolvewalkingthestak? \nWalkingthestakmakesraisinganexeptionexpen\u00adsive,butanmakeitheapertoenterthesopeofa handler. Shouldthebulkoftheworkbedoneingeneratedode \norintherun-timesystem?Usinggeneratedodere\u00adsultsinlargerexeutables,buttheymaybefaster. Figure2showsthefourmehanismsthatsupporttheseal\u00adternatives.InthefrstrowareC--primitives,whihresult \ningeneratedode.Intheseondrowareentrypointsinthe C--run\u00adtimeinterfae(Table1).Wedesribeofthefour designhoiesinFigure2inturn,startingwiththetopleft \nornerandworkingounterlokwise. Stack cutting (.rst column of Figure 2) Givenaontinuationvalue,theC--primitive\"utto\"in\u00advokestheontinuation,transferingontroldiretlytothe \nontinuationwithoutwalkingthestak. ut tok(arguments); Here,kisaontinuationvalue,suhasthatpassedtogin \ntheexampleofSetion4.1.Theuttoprimitivetransfers argumentstoonventionalloations.,trunatesthestakto k'sativation,andsetstheprogramountertok'sprogram \n.Theseloations,whiharetypiallyregisters,aredeterminedby aallingonventionthatisprivatetoC--. ounter.Allofthistakesonstanttime;thereisnostak \nwalk. Insteadofusingutto,theC--programmayyieldtothe front\u00adendrun\u00adtimesystem.Onethelatterfndsaontinu\u00adationvalue,itandupliatetheefetofuttoby \n1.allingSetCutToCont(Table1),whihutsthestak, 2.allingFindContParam,whihidentifestheloations inwhihtheontinuationexpetsparameters, \n3.storingtheatualparametersinthoseloations,and 4.allingResumetopassontrolbaktogeneratedode. Stakuttingtakesonstanttime,butitimposestheostof \nreordingtheontinuationvaluetobeutto.BeauseC-\u00adplaesfewonstraintsontheidentifationoftargetontinu\u00adations,diferentfrontendsanusediferentimplementation \ntehniques.Herearetwoommonhoies: .Havetheprogramkeeptrakofasingle\"exeption ontinuation,\"perhapsinaregister.Commonly,when \nontrolistransferredtothisontinuation,itupdates theregistertopointtoanewexeptionontinuation. .Keepaglobalstakofontinuations;hoosethetop\u00admostone.Alternatively,keepinformationaboutwhih \nexeptionswerehandledbytheontinuation,and hoosethefrstonethatappliestothegivenexep\u00adtion. Bothhoiesimposeasmallostwheneverexeutionenters \norleavesthesopeofanexeptionhandler,regardlessof whethertheexeptionisraised. Thestak\u00aduttingtehniquealsoreduestheutilityofallee\u00adsavesregisters.Normally,weouldkeepyandwinallee\u00adsavesregistersarossthealltog.Butthestak\u00adutting \ntehniqueannotrestorethevaluesofyandwbeforeenter\u00adingk.Whynot?Beausethevaluesofyandwmighthave beenspilledintoanyativationinthestakbetweenk'sown \nativationandtheplaewheretheexeptionisraised.Stak uttingthereforeimposesasmallperformanepenaltyon anyallthatanuttoaontinuation;theallee\u00adsaves \nregistersmustbeonsideredkilledbyfowedgesfromthe alltoanyuttoontinuations.Thispenalty,too,ispaid regardlessofwhethertheontinuationisused. \nStack unwinding (second column of Figure 2) Awell\u00adknownalternativetostakuttingistowalkthe stak,oneativationatatime,todisoverthetopmosta\u00adtivationthatanhandleagivenexeption.Theideaisthat \nitshouldostnothingtoenterorleavethesopeofahan\u00addler;inexhange,wearewillingtopaymoretoraisean exeption.C--supportsthisapproahaswell. \nTousetheunwindingtehnique,theC--programmay yieldtothefront\u00adendrun\u00adtimesystem,indiating(insome mannerthatC--neitherknowsnoraresabout)whih \nexeptiontoraise.Thefront\u00adendruntimetheninitialises anativationhandlewithFirstAtivation,andwalksthe stakusingNextAtivation(Table1).Foreahativation \nitallsGetDesriptortofndthestatidesriptordeposited fortheativationbythefront\u00adendompiler.Ifthisdesrip\u00adtorindiatesthatthisativationanhandletheexeption, \n thefront\u00adendruntimeusesSetAtivationtoarrangethat exeutionwillresumeattheativationthusidentifed. Thesuspendedallsiteinthisativationshouldlooksome\u00adthinglikethis: \ng(x)alsounwindstok0,kl; Here,k0andklareontinuations,defnedinthesamepro\u00adedureasthealltog.Thealsounwindstoannotations \nindiateontrolfow,justlikethealsoutstoannotation disussedinSetion4.1.Inaddition,alsounwindstosup\u00adportstheSetUnwindContrun\u00adtimeinterfaeall(Table1). \nThefront\u00adendruntimeusesSetUnwindCont(t,n)toar\u00adrangethatwhenexeutionisresumed,itwillresumeatthe n'thontinuationinthe\"unwindsto\"listoftheallsite. \nFinally,itanuseFindContParamasbeforetofndwhereto storeparameterstotheontinuation,andResumetoresume exeution.Figure9inAppendixAshowsthedetails. \nTheunwindingtehniquedesribedsofarissomewhatin\u00adterpretive:thefront\u00adendruntimewalksthestak,looking atdesriptorinformationuntilitfndsahandler.C--also \nmakesitpossibletoompilethisstakwalk,byallowinga proeduretoreturnabnormallytoitsaller,thus: return<0/2>(returnvalues); \n ThistellsC--thattheallerhastwoabnormalreturnon\u00adtinuations(inadditiontothenormalreturnpoint),and ausesareturntothefrst(index0)ofthesetwo.Anormal \nreturntosuhaallsitewouldbewritten return<2/2>(returnvalues); Theallsitetowhihsuhaallreturnsmustspeifypre\u00adiselytheorretnumberofreturnstoontinuationsas \narespeifedinthereturnstatement: g(x)alsoreturnstok0,kl; wherek0andklare,asbefore,ontinuationsdelared \ninthesameproedureastheallsite.Thestatement return<0/2>(p,q)wouldreturntoontinuationk0,pass\u00adingpandqfromthereturnsitetotheparametersofk0.The \nnormalreturnontinuationisalwaysthelast,soanormal returninthisasewouldbereturn<2/2>.Anunannotated returnisequivalenttoreturn<0/0>. \nBeausereturntransfersontrolonlyfromaproedureto itsaller,allproeduresmustooperatetogettheefet ofompiledunwinding.Inalanguagethatspeifesstat\u00adiallywhatexeptionsaproeduremayraise,onemight \nompileeahallsitewithanabnormal\u00adreturnontinuation foreahpossibleexeption.Alternatively,onemightuse asingleabnormal\u00adreturnontinuationtodispathallexep\u00adtions.C--supportsbothstylese\u00c6iently,leavingthehoie \ntotheimplementorofthefrontend. Howaretheseabnormalreturnsimplemented?Itwould bepossiblesimplytoreturnanadditionalvaluefromeah \nproedure,whihtheallerouldtesttoseewhetherthe alleehadrequestedstakunwindingoranormalreturn. Suhatest,however,wouldaddanoverheadateveryall. \nTheoverheadanbeeliminatedbymeansofaleverode\u00adgenerationtrik.Attheallsite,theallinstrutionisfol\u00adlowednotbytheodetobeexeutedafteranormalre\u00ad \n . . . Instrutionsleading uptotheall %i7: allg (Instrutionindelayslot) Instrutionsfornormal ontinuation \n. . . . . . Instrutionsleading uptotheall %i7: allg (Instrutionindelayslot) ba,akO (UnonditionalbranhtokO) \nba,ak1 (Unonditionalbranhtok1) Instrutionsfornormal ontinuation . . .  Figure3:StandardSPARCinstru\u00ad \nFigure4:SPARCinstrution tionsequeneatallsite. sequeneusingthebranh\u00adtable method. Normalreturnisjrp%i7+8. \nNormalreturnisjrp%i7+16;returnto ontinuationkOisjrp%i7+8. turn,butbyatableofbranhestoontinuations(Atkinson, \nLiskov,andSheifer1978).Figures3and4showanex\u00adample,usingtheSPARCinstrutionset.Figure3shows theinstrutionsequeneatanordinaryallsite.Theall \ninstrutionleavesitsaddressinregister%i7,andthein\u00adstrutioninthedelayslotisexeutedimmediatelyafterthe all,beforeontrolistransferredtog.Thestandardreturn \ninstrutionisjrp%i7+8,whihskipspasttheinstrutionin thedelayslotandresumesexeutingthenormalontinua\u00adtion. \nFigure4showstheinstrutionsequeneattheannotated allsiteg(x)alsoreturnstokO,k1.Thealleeuses jrp%i7+16foranormalreturn;itusesjrp%i7+8or \njrp%i7+12toreturntoontinuationkOork1.Thisteh\u00adniquehasnodynamioverheadinthenormalase.2Even intheabnormalase,theonlydynamioverheadisabranh \ntoabranh,whihismuhheaperthanbranhfollowedby testandonditionalbranh.Atkinson,Liskov,andShei\u00adfer(1978)allsthistehniquethe\"branh-tablemethod,\" \nnotingthatbeauseitaddswordstoeveryallsite,the spaeoverheadmaybe\"onsiderable.\"Onotherproes\u00adsorarhitetures,therun-timeoverheadmayalsobeon\u00adsiderable;theunusualreturnaddressusedinthenormal \nasemayrequireextrainstrutions,anditmayalsoonfuse branh-preditionhardware.Still,thebranh-tablemethod isusedintheSelfompilertoimplementnonloalreturns.3 \nItanalsosupportane\u00c6ientimplementationofthe\"ve\u00adtoredreturns\"usedintheGlasgowaskellCompiler(Pey\u00adtonJones1992,\u00a79.4). \nWhetherastakwalkisimplementedinterpretively,inthe run-timesystem,orinnativeode,usingnonloalreturn, itaneasilyrestorethevaluesoftheallee-savesregisters. \n2Eventhebranh-preditionhardwaremayworkwithoutover\u00adhead,beauseunderthestandardSPARCallingonvention, someCproeduresreturnto%i7+8andsometo%i7+12. \n3PrivateommuniationfromCraigChambers,January1999. Indeed,NextAtivationdoessoautomatially4.Sotheun\u00adwindingtehniqueallowsallee-savesregisterstobeused \nateveryallsite,evenifthosevaluesmightbeusedina ontinuation. 4.3 Primitive operations that can fail C--expressionsrepresentpureomputationsonvalues;they \nareevaluatedwithoutsideefets,whihouronlyasthe resultofassignmentsoralls.What,then,arewetodo whensuhomputationsfailbeauseofafaultdetetedby \nthehardwareortheoperatingsystem?Forexample,what aboutadivideinstrutionthattrapswhenthedivisoris zero?Foreahsuhoperationweprovidetwovariants: \n Thefast-but-dangerousvariant(%divu,say)generates theshortestpossibleodesequene(usuallyonein\u00adstrution),butitsbehaviorisunspeifedifitfails. \n%divu(x,O)mightauseaninterrupt,killtheproess, orsilentlygivethewronganswer.Theexatbehavior willvarybetweenarhitetures.(Analternativewould \nbetoguaranteeproessabortion,butforertainpro\u00adessorsthisalternativewouldimposerun-timeosts thatmightbeannoyinginaseswherethedivisorwas \nprovablynon-zero.)  Theslow-but-solidvariant(%%divu)mapsfailureintoa yield.Forexample,%%divuisindistinguishablefrom \naproeduredefnedasfollows:  %%divu(bits32p,bits32q){ ifq==Othen{yield(DIVZERO)} return(%divu(p,q)) } \n 4Sinexandymaybeindiferentallee-savesregistersatdiferent allsites,thesameontinuationmayneeddiferentprologues \natdiferentallsites.Theseprologuesroughlyorrespondto4\u00adnodesinSSAform.Thedispathermusthoosetheprologuethat \nisappropriatefortheallsiteatwhihfissuspended.Lukily, thishoieanbehiddenbehindtheC--run-timeinterfae. \nNotethatiftherun\u00adtimesystemfailstounwindorut thestak,thebehaviorofthesubsequentallto%divu isunspeifed. \nAuseof%%divutakestheformofaproedureall, togetherwithitsalsoannotations.Aswellasmaking theontrolfowexpliit,writingfaultingoperations \nasallsalsoensuresthattheoperationsareevaluated inawell\u00addefnedorder.TheC--implementationan hoosewhethertoperformthetestforzeroexpliitly \n(slow,buteasy),orinsteadaththeinterruptand mapitintoayield(fast,buttriky).  4.4 Informing the optimizer \nExeptiondispathhangesthefowofontrol.Iftheop\u00adtimizerknowsonlythatontrolmightbetransferredunex\u00adpetedlytoaontinuation,ithastomakepessimistias\u00adsumptions;forexample,someAdaompilersrequirethatif \nanyexeptionhandlerusesavariable,thatvariablemust alwaysbekeptinmemory.Asanotherexample,Com\u00adpilersmakepessimistiassumptionsaboutloalvariablesin \nthepreseneofsetjrpandlongjrp.Theonlyportableway toguaranteethatloalvariableswillhavetherightvalues afteralongjrpistodelarethemvolatile,whihmany \nCompilersinterprettomean\"alwayskeepthevaluesof thesevariablesonthestak.\" C--supportsaggressiveoptimizationbyrequiringthatthe \nfrontendtelltheoptimizerexpliitlyhowanexeptiondis\u00adpathmighthangethefowofontrol.Thisinformation isonveyedthroughtheannotationsattahedtoallsites, \nsomeofwhihwehavementionedalready.Thefollowing exampleshowstheompleteset: r=g(x)alsoutstokl alsounwindstok2,k3 \nalsoreturnstok4 alsoaborts; Inthenormalase,thealltog(x)returnsavalue,whih isplaedinr.However,ifthealltograisesanexeption, \ntheexeptiondispathermayutthestakbyinvokingon\u00adtinuationkl(withalossofallee\u00adsavesregisters),unwind thestaktoontinuationsk2ork3,returntoalternateon\u00adtinuationk4,oraborttheexeutionoftheproedureati\u00advationontainingtheall(e.g.,byunwindingoruttingthe \nstakpastthatativation).Thenamesappearinginthese annotations,likekl,k2,k3,andk4,arealwaysnamesofon\u00adtinuationsdelaredinthesameproedureastheallsite; \ntheannotationsmaynotnamevariablesorexpressions. The\"also\"annotationsaddextrafowedges,fromtheall sitetothespeifedontinuationsortotheexitnodeofthe \nproedure(intheaseofalsoaborts).Theseedgesex\u00adpresspreiselytheonstraintsthatexeptionhandlingim\u00adposes,butnomore.Theannotationsannotreasonablybe \ninferredbytheC--ompileronitsown;onlythefront\u00adend ompilerknowswhihallsanfowtowhihontinuations andwhihallsanabort.Iftheontrolfowannotbede\u00adterminedaurately,thefrontend,notC--,deideswhat \napproximationisuseful. Thealsoutstoannotationmayalsobeattahedtoa uttostatement.Anunannotateduttoisonsidered \nsimplytoexittheurrentproedure,butiftheuttoould transferontroltoaontinuationinthesameproedure,it musthaveanalsoutstoannotationnamingthaton\u00adtinuation. \n 5. OPERATIONAL SEMANTICS OF C-\u00adSofar,ourtreatmentofC--hasbeeninformal,asisom\u00admoninindesriptionsofexeptionhandling.5Butwithout \napreisespeifationitisimpossibletosayforsurewhether apartiularoptimizationhangesthebehaviorofthepro\u00adgram.Thereisalsotheriskthatafront\u00adendompilerand \naC--ompilermightdisagreeaboutwhathappensinsome obsureirumstane.Aordingly,inthissetionwede\u00adsribeC--formallyandpreisely. \nWedefneAbstratC..,alanguagethatresemblesthefow\u00adgraphrepresentationsusedinoptimizingompilers,andwe giveitaformaloperationalsemantis.Theoperationalse\u00admantisusestransitionrulestospeifythepermissiblebe\u00adhaviorsofboththegeneratedodeandtherun\u00adtimesystem. \nWealsoskeththetranslationofC--toAbstratC--and theimplementationofAbstratC--onhardware. AprograminAbstratC--isapartialmapXfromnames \ntoproedures.Aproedureisaontrol-fowgraphformed usingthenodesdefnedinTable2.TherangeofXinludes onlynodesoftheformEntryeporYield. \nThemutablestateoftheC--abstratmahinehas7om\u00adponents: 1.theontrolp,whihrepresentstheurrentnode, 2.theloalenvironmentp,whihmapsnamestovalues, \n3.asetsontainingthevariablesofpthatarestored inallee\u00adsavesregisters, 4.auniqueintegeruid,whihisusedtoenforethere\u00adstritionagainstusingdeadontinuations, \n5.amemoryM,mappingaddressestovalues,6 6.anargument-passingareaA,whihisalistofvalues, and 7.astaks,whihiseitheremptyorisatupleonsist\u00adingofaontinuationbundle,aloalenvironment,a \nallee\u00adsavesvariableset,auniqueid,andastak.A ontinuationbundleenodesthepossibleoutomesof aproedureall. \n Wewriteastateasfollows: ppsuidMAs  5.1 Environments, values, and expressions Anenvironmentisapartialfuntionfromnamestovalues. \nWewritetheemptyenvironmentas..Todefneanenvi\u00adronmentthatislikepexeptthatitmapsvtoe,wewrite p[v e].Wegeneralizethisnotationtop[e \ne ]when IvIwe havealistofvariablesevandalistofexpressionse ,boththe samelength.Todefneanenvironmentthatislikepexept \nthatitisundefnedonthevariablesinsets,wewritep\\s. 5TheMLommunity,whihhasalong-standingtraditionoffor\u00admaldefnitionsandanalyses,isanhonorableexeption. \n6Itisstraightforwardtogeneralizetoamahinewithseparate addressspaesforinstrutionsanddata. Entrykkp Theuniqueentrynodeofaproedurewithontinuationskkandfrstnodep. \nExitj n Normalexitfromaproedure,representingareturntoontinuationj(theallsitemusthaveexatlyn alternatereturnontinuationstaggedwithalsoreturnsto). \nCopylnkvp Putresultsfromaall,orparameterstoaproedureorontinuation,intovariableskv,andontinue withp. CopyOutkep \nMake th e v aluesofexpressionskeresultsofaall,ortheparameterstoaproedureorontinuation,and ontinuewithp. \nCalleeSavessp Makesthesetofvariablesinallee\u00adsavesregisters(byspillingorreloading),andontinuewithp. Assignl \ne p Assignetol,andontinuewithp. Branhptpf Branh toptorpf whenistrueorfalse. Callef ' Callproedureef,returningtooneofthenodesintheontinuationbundle'.A \non tinuationbundleisa quadruple(kp:,kpu,kp,abort),where kp: arethenodesforontinuationslistedinalso returns \nto,plusthenodefornormalreturns, kpu arethenodesforontinuationslistedinalso unwinds to, kp arethenodesforontinuationslistedinalso \nuts to,and abort iseitherTrue(whenaallsiteisannotatedwithalso aborts) orFalse(otherwise). Jumpef Tailallproedureef. \nExitstheurrentproedure. CutToe Cutthestak to o n tinuatione.Exitstheurrentproedure. Yield Exeuteaproedureintherun\u00adtimesystem. \n Table2:Kindsofnodesinontrol-fowgraph. Toenablevariablestodenoteproeduresandontinuations aswellasbasiC--values,wedefneavalueasoneofthe \nfollowingforms: Bits.kThen\u00adbitvaluek Codep(Apointerto)thenodep Cont(p,u)Aontinuationtothenodepinthe stakframewithuniqueidu. \nBeauseC--expressionshavenosideefets,weangivethe semantisofanexpressionesimplybygivinganevaluation funtionE[[e]]pM.TheexatdefnitionofEisnotrelevant \ntothispaper,sowepresentanabbreviateddefnitionthat givestheidea.Forsimpliity,weassumethatthenamesof loalvariablesarediferentfromthenamesofproedures, \nsoforanyp,dompndomX=1.Underthisassumption, E[[e]]pMmightbedefnedasfollows: E[[v]]pM=p(v)ifvEdomp E[[v]]pM=Code(X(v))ifvEdomX \nE[[type[e]]]pM=loadtype(M,E[[e]]pM) E[[e+e]]pM=Bits\"(n+n)ifE[[ei]]pM=Bits\"ni .... Ruleslikethe+rulewouldapplytotheotherbuilt\u00adinop\u00aderators.Theloadtypeandstoretypeoperationsusethenative \nbyteorderofthetargetmahine.  5.2 Transitions of the abstract machine TheC--abstratmahineexeutesaprogrambyentering \ntheinitialstate X(rain).10.nilempty Themahinemakestransitionsuntilitreahesastatein whihnotransitionsarepossible.If,inthatstate,theon\u00adtrolisExit00andthestakisempty,wesaytheprogram \nhasterminatednormally;otherwiseithasgonewrong. Asetoftransitionrulesdesribestheallowabletransitions. \nEahtransitionrulehastheform: (State1) = (State2) Ifthemahineisinastatemathing(State1)thenitan moveinonestepto(State2)(suitablyinstantiated).The \nrestofthissetiongivesthetransitionrules. Aproedure'sentrynodebindstheproedure'sontinua\u00adtionsintoanemptyenvironment.Theinomingenviron\u00adment,p,isdisarded.(Thevaluesofparametersarebound \nlaterbyaCopylnnode.) Entrykk p p s uid M A s = p addConts(.,kk, uid) 1 uid M A s whereeahkinkkisapair(v,p)andaddContsreates \nbindingsasfollows: addConts(p,kk,uid) =p,wherekkisempty =addConts(p[v k.,uid), ICont(p,uid)],kwherekkis(v,p)followedbykk.. \n Thesequenekkliststheontinuationsdelaredinthepro\u00adedurebody.EahkEkkisa(v,p)pair,wherevisthename oftheontinuationandpisthegraphnoderepresentingit. \nExitpopsanativation,returningtothereturnontinuation namedinareturn.Thevalue\u00adpassingareaAmayhold returnvalues,plaedtherebyapreedingCopyOutnode. \nExitjnpsuidMA((',p.,s.,uid.,s.) = kp:.[j]p. s. uid. MAs. where'=(kp:.,kpu.,kp .,abort),andIkp:.I=n+. \n Thevalue-passingareaAholdsargumentsandresults thatarepassedamongproeduresandontinuations.The CopylnandCopyOutnodestransfervaluesfromandtothat \narea.ToenableanimplementationtoreuseregistersinA, wespeifythatCopylnreplaeAbytheemptylist,nil. CopyOutmayoverwriteAwhateveritsstate. \nCopylnPvPpsuidMA8 == Pp[P suidMnil8vIA] CopyOutPeP p s uid M A 8 == P p s uid M E[[Pe]]pM 8 Theoptimizermaymovevaluesintoandoutofallee-saves \nregisters. CalleeSavess. PpsuidMA8 == Pps. uidMA8 CalleeSavesnodesareintroduedonlybyoptimizers;they arenotpartofthedirettranslationofanyCprogram \n..intoAbstratC...ACalleeSavesnodeorrespondstoa mixofspillsandreloads. Assignmenttoavariablehangestheloalenvironment;as\u00adsignmenttomemoryhangesmemory. \nAssignv e P p s uid M A 8 == P p[v I E [[e]]pM] s uid M A 8 Assigntype[a]e P p s uid M A 8 == P p s \nuid M. A 8 whereM. =storetyp (M,E[[a]]pM,E[[e]]pM). Conditionalbranhisstraightforward: BranhPtPI p s \nuid M A 8 == ..E[[]]pM....Pt....PI p s uid M A 8 Aallpushesanewativation.(Parameterswillhaveal\u00adreadybeenplaedinAbyaCopyOutnode.)Theontinu\u00adationbundleissavedonthestak,beausetheallee,not \nthealler,determineswhatisexeutedaftertheall.Eah ativationreordmusthaveauniqueuid. CalleI'psuidMA8 == \nPI .0uMA(',p,s,uid,8) whereE[[eI]]pM=CodePI,anduisafresh,unique identifer. Tailallsaresimpler;theappropriateontinuationbundle \nisalreadyonthestak. JumpeIpsuidMA8 == PI .0uMA8 whereE[[eI]]pM=CodePI,anduisafresh,unique identifer. \n Whenthemahinetriestouttoaontinuationbelonging toanativationdiferentfromtheurrentone(uid..= uid.), itremovesaframefromthestakandtriesagain.Areal \nimplementationutsthestakinonstanttime,butthe abstratmahineremovestheativationsoneatatime, soitangowrongifasuspendedalldoesnothavean \nalsoabortsannotation. CutToepsuidMA(',p.,s.,uid.,8.) == CutToepsuidMA8. whereE[[e]]pM=Cont(P..,uid..) \nuid.. =uid. '=(PP:.,PP,.,PP .,True) Whenthemahinefndstherightativation(uid.. =uid.), itheksthattheallsitehasanalsoutstoannotation, \nandittransfersontroltotheappropriateontinuation.The uidhekensuresthatthemahineneverinvokesadeadon\u00adtinuation;aprogramthattriestodosogoeswrong.Asdis\u00adussedinSetion4.2,uttodoesnotrestorevaluesstored \ninallee-savesregisters;wemodelthisbehaviorbyremoving themfromthesavedenvironmentp.. CutToepsuidMA(',p.,s.,uid.,8.) \n== P.. p. 8. \\s. 0uid. MAwhereE[[e]]pM=Cont(P..,uid..) uid.. =uid. '=(PP:.,PP,.,PP .,abort) P.. EP. P \n TheYieldnodemodelsexeutionintherun-timesystem. Unliketheotherrules,therulesforYielddonotfullyspe\u00adifywhihtransitionstakeplae;thatis,therearestates \ninwhihmorethanonetransitionispermitted.Thisun\u00adderspeifationallowstherun-timesystemtoimplementa varietyofdiferenthigh-levelexeptionsemantiswhilestill \nrespetingthesingleC--semantis. Therun-timesystemmayunwindthestakifthesuspended proedurehasanalsoabortsannotation: \nYieldpsuidMA(',p.,s.uid.,8.) == YieldpsuidMA8. where'=(PP:.,PP,.,PP .,True). Therun-timesystemmayhangememory,thentransfer \nontroltothenormalreturnontinuation,ortoaontin\u00aduationlistedinanalsoreturnstooralsounwindsto annotation.Thistransitionrestoresallee-savesregisters. \nYieldpsuidMA(',p.,s.,uid.,8.) == P. p. s. uid. M. A. 8. where'=(PP:.,PP,.,PP .,abort),P. EPP:.UPP,.,andA. \nisthe rightlength. Therun-timesystempassesparametersA. totheontinua\u00adtionP.;thevaluesoftheseparametersareunspeifed,but \ntheremustbeexatlyasmanyparametersasP. expets. Ep EntryppcefM.Foreahv ,cefv.cefA[i],1SiSN,whereNisthenumberofparametersof \ntheproedure.  ExitjuseM.useA[i],1SiSN,whereNisthenumberofresultsoftheproedure. CopylnpvpForeahiE1 lpvl,pv[i]=A[i]. \nCopyOutpepForeahiE1 lpel,A[i]=pe[i]. CalleeSavesspNoefetondatafow. AssignvepForeahv. Efv(e),usev..Thencefv. \n v. v. Assigntype[a]epForeahEfv(a)Ufv(e),use.ThencefM. Branhptpf ForeahvEfv(),usev. Callef(pp;,ppu,pp,abort)ForeahvEef,usev.useM.cefM.useA[i],1SiSN,whereNisthenumberof \nparameterstotheall.Alongtheedgeto pp;[j]cefA[i],1SiSN,whereNisthenumberofparameterstotheontinuationpp;[j]. \nppu[j]cefA[i],1SiSN,whereNisthenumberofparameterstotheontinuationppu[j]. pp[j]cefA[i],1SiSN,whereNisthenumberofparameterstotheontinuationpp[j]. \nForeahvthatouldbeinswhentheodeisexeuted,killv. IfabortisTrue,plaeuseA[i],1SiSN,whereNisthenumberofresultsoftheproedure, \nalongtheedgetotheexitnode.  Jumpef ForeahvEef,usev.useM.useA[i],1SiSN,whereNisthenumberofparametersto \nthejump. CutToe ForeahvEe,usev.useM.useA[i],1SiSN,whereNisthenumberofparametersto  theutto. Yield Notinanyoptimizedproedure. \n fv(e)isthefreevariablesofe,possiblyinludingthevariableM,whihrepresentsmemory. Table3:DatafowrulesforAbstratC--. \nTherun-timesystemmayalsotransferontroltoaontinua\u00adtionlistedinanalsoutstoannotation,withoutrestoring allee-savesregisters. \nYieldpsuidMA(\",p.,s.,uid.,s.) =? p.. p. \\s. 1uid. M. A. s. where\"=(pp;.,ppu.,pp .,abort),p.. Epp .,andA. \nistheright length. Finally,therun-timesystem,intheformofthegarbage olletor,mayreadandwritenotonlythevaluesinmemory, \nbutalsothelivevaluesstoredinanypanywhereonthestak oftheabstratmahine.Thispossibilityisnotexpressedby \nourformalsemantis;todosowouldrequireanevenmore ompliatedabstratmahine,whihwouldreordtheset oflivevariablesateahallsite. \n 5.3 Translating C--to Abstract C-\u00ad Translationofeverythingexeptontinuations,alls,jumps, andutsshouldbeobvious.Totranslateaontinuation, \nreateaCopylnnodenamingtheparametersoftheon\u00adtinuation,andwhosesuessoristhestatementfollowing theontinuation.Assoiatethisnodewiththeontinua\u00adtion.Totranslateaall,reateaCopyOutnodethatputs \nthevaluesoftheparametersinthevalue-passingarea,and thesuessorofwhihisaCallnodeontaininganexpres\u00adsiondesignatingtheproeduretobealled.TheCallnode's \nontinuationbundleisomputedfromthealsoannotations asdesribedabove.Iftheallreturnsvalues,thenormal ontinuationshouldbeaCopylnnodebindingthereturn \nvaluestothevariablesontheleft-handsideofaall.Jumps andutsaretranslatedsimilarly,withthesimplifationthat \ntheyneverreturn. 5.4 Implementing the abstract machine TheC--abstratmahineisdesignedtobeverylikeareal \nmahine,hidingonlythedetailsoftheregisters,thealling onvention,andtheinstrutionset.Theontrolporre\u00adspondstotheprogramounter.Aloalenvironmentpor\u00adrespondstoparametersandloalvariablesthatarestored \ninregistersorintheativationreord;thesetsidenti\u00adfesthevariablesthatarestoredinallee-savesregisters. TheCalleeSavesnode,whihhangess,isimplemented \nbyinstrutionsthatmovevaluesintooroutofallee-saves registers.Suhinstrutionsinludespills,reloads,andreg\u00adistershufes.ThetranslationofC--toAbstratC--does \nnotuseallee-savesregistersortheCalleeSavesnode,but byinludingCalleeSavesnodeinAbstratC--,weenable AbstratC--torepresenttheresultsofaodeimprove\u00admentthatputsvaluesinallee-savesregisters.Ofourse, \nsuhodeimprovementsmuhtakeintoaountontrolfow alongalsoutstoedges;suhfowdestroysvaluesstored inallee-savesregisters. \nThevalue-passingareaAisanabstrationrepresenting thoseregistersthataresetasideforpassingvaluesandre\u00adsults,aswellasoverfowareasthatmaybereservedonthe \nstak.Thisabstrationmayhavediferentonreterep\u00adresentationsatdiferentallsites.C--supportsmultiple namedallingonventions,andeahallingonventionmay \nditateadiferentrepresentationofA.Wealsointendthat C--optimizersbefreetohooseustomizedvalue-passing mehanismswhenpossible,e.g.,forpassingparametersto \nproeduresallofwhoseallsitesareknown. Finally,theabstratstakorrespondstothemahine's stakofativationreords.7Onthestak,aontinuation \nbundleanberepresentedjustbyitsprogramounterPC, whihingeneralpointstoabranhtable(Setion4.2).If therun\u00adtimesystemneedstofndP \npu,itanusePCtolook themupinatable. Theuidexistsonlytoensurethataprogramwhihtriesto useadeadontinuationgoeswrong.Beauseusingadead \nontinuationisanunhekedrun\u00adtimeerror,theuidneed notberepresentedanimplementation.Itmaynevertheless beusefultorepresentitexpliitlyinordertodebugfront\u00adendompilersthatgenerateodewhihgoeswrong. \nValuesoftheformBitsknare,ofourse,thebasivalues ofmahines.AvalueoftheformCodepisrepresentedby apointertotheinstrutionsforp.Thereareseveralways \ntoimplementaontinuationvalueCont(p,u).Onepossible implementationistoalloatetwowordsintheurrenta\u00adtivationreord,andtorepresentCont(p,u)asapointerto \nthispair.Withabitmoreleverness,itmaybepossibleto alloateonlytheprogramounterintheurrentativation reord,andusethepointertothatloationastheinitial \nstakpointerfortheontinuation.Ineitherase,someon\u00adtinuationvalueswillneedtoenapsulateloationsinwhih tostoreparametersthatannotftinregisters.Thisinfor\u00admation,too,anbemadeimpliit. \n  6. OPTIMIZING C..PROGRAMS Table3givesrulesforaddingdatafowinformationtoaC .. proedure,intermsofdefnitions,uses,opies,andkills.8 \nThisinformationisenoughtoenablestandardoptimizations likeommon\u00adsubexpressionelimination,partial\u00adredundany \nelimination,onstantpropagation,opypropagation,dead\u00adodeelimination,odemotion,et.Theoptimizeranper\u00adformalltheusualrearrangements,provideditrespetsthe \ndatafowanditdoesn'tinsertodeafterExit,Jump,CutTo, ortheabortpartofaontinuationbundle. Figure5showsanexampleCproedure,andFigure6 \n..showsitstranslationintoAbstratC..andthedatafowin\u00adformationattahedtotheAbstratC...Thedatafowinfor\u00admationisexpressedasastatisingle\u00adassignment(SSA)num\u00adberingofthevariables(Alpern,Wegman,andZadekl988; \nRosen,Wegman,andZadekl988;Appell998).Theele\u00admentsoftheAarraymaybemappedontodiferenthardware registersdependingonwhihnodesdefneandusethemand \nwhattheonventionsforpassingparametersandreturnval\u00aduesare.Forexample,inFigure6,variablesA[lhandA[lh shouldbemappedtotheregisterholdingthefrstparame\u00adtertoaall,butvariablesA[lh \n,A[lh ,andA[lh7shouldbe mappedtotheregisterholdingthefrstresultfromaall. 7WedonotintendthatC--itselfbeompiledusingontinuation\u00adpassingstyle,althoughofourseC--aneasilyrepresenthigh\u00adlevelprogramsthatareompiledusingontinuation\u00adpassingstyle. \nAfrontendwouldperformaCPStransformationandbuildex\u00adpliitlosurestorepresentontinuations.Theodeintheselo\u00adsureswouldberepresentedbyC--proedures,towhihontrol \nwouldbetransferredusingjump.TheweakC--ontinuations areusefulonlyfornonloalexits,notforrepresentingfrst\u00adlass \nontinuations. 8Theoperation....vmaybedefnedasassigningabogusvalue, e.g.,v .wTong,andanyomputationthatdependson.wTong \nmaybedefnedtohavegonewrong. f(bits32a){ bits32b,,d; b=a; =a; b,=g() alsounwindstok; =b++a; return(); \n ontinuationk(d): return(b+d); } Figure5:Exampleproedure. ...M ...k  7    ...M... 7  Figure6:Theexampleproedure'stranslationin \nAbstratC--,anditsdatafowgraphinSSAform. 7. RELATED WORK Thispaperdisussesthelow\u00adlevelimplementationofexep\u00adtions;DrewandGough(1994)omplementsthispaperby \npresentingataxonomyofhigh\u00adleveldesignsofexeption\u00adhandlingmodels. Chase(1994a)and(1994b)providehelpful,learexplana\u00adtionsofthetehniquesrequiredtoimplementbothsyn\u00adhronousandasynhronousexeptions.LiskovandSny\u00adder(1979)disussesboththeprogrammingmethodologyin \nwhihexeptionsshouldbeusedandthee\u00c6ienyoftheir implementation. Drew,Gough,andLedermann(1995)disussesimplementa\u00adtionofthestak\u00adunwindingtehnique,inwhihthereiszero \ndynamioverheadtoenterthesopeofanexeptionhan\u00addler.Theirregisteralloatorisunawareoftheontrol\u00adfow edgesfromallsitestoexeptionhandlers,soanyvariable \nthatismentionedinabodyandahandlermustbealloated onthestak.C..'salsounwindstoannotationshoulden\u00adableoptimizerstoavoidthisperformanepenalty. \nHennessy(1981)disusseserrorsthatanouriftheopti\u00admizerdoesnotknowabouttheadditionalontrol\u00adfowedges introduedbyexeptionaltermination.Itpresentsdatafow \nequationsthatafront\u00adendompileranusetoomputethe annotationsitmustplaeateahC--allsite.Italsodis\u00adussesinterproeduralanalysesthatomputepotentialef\u00adfetsonglobalvariables.Suhanalysesouldbeaommo\u00ad \n datedinC--bysplitting..Thisshemewouldrequire additionalannotationsforstores,fethes,alls,jumps,and invoations. \nTheintermediateformusedintheVortexompiler(Dean etal.1996)inludesexpliitontrolfowedgesthatrepre\u00adsenttheefetsofexeptions.Theseedgesenabletherest \noftheVortexoptimizertoworkorretlywithouthaving totreatexeptionsasaspeialase.Itishardtofndout howotherrealoptimizingompilersdealwithexeptions, \nbutwebelievethatmosteithermakepessimistiassump\u00adtionsorimplementadhorulesthataretightlyboundto thepartiularexeptionmodelofthelanguagebeingom\u00adpiled.Ineitherase,allthestandardoptimizationsmustbe \nreonsideredinlightofthepartiularsemantishosenfor exeptions.Theapproahweadvoate,whihisusedinVor\u00adtex,allowswell\u00addevelopedoptimizationtehnologytobeap\u00adpliedtoaprogramthatusesexeptions.Appel(1992)does \nsomethingsimilarinafuntionalsetting-byidentifyingex\u00adeptionhandlerswithontinuations,Appel'sompileran simplyusetheexistingbodyofoptimizationsknowntobe \nsupportedbyontinuation\u00adpassingstyle.(Thisstyleould beexpressedinC--inamannermuhlikethatoftheAp\u00adpendix,exeptthatjumpwouldbeusedinsteadofutto.) \nBruggeman,Waddell,andDybvig(1996)introdues\"one\u00adshotontinuations,\"whiharelikegeneralShemeontinu\u00adationsexeptthattheyanbeinvokedatmostone.One\u00adshotontinuationswouldertainlysu\u00c6etoimplementC-\u00adontinuations,buttheimplementationispartoftheChez \nShemesystem,anditisnotimmediatelyobviouswhether thetradeofsthataregoodforShemewouldalsobegood forC--.Theresultsonsegmentedstaks,atleast,appear \nhighlyrelevanttoaonurrentversionofC--. Acknowledgments RihardBlak,KentDybvig,MihaelErnst,LalGeorge, \nThomasJohnsson,XavierLeroy,GregMorrisett,Nikhil, JohnReppy,OlinShivers,DavidWatt,andtherefereesfor PLDI'99andPLDI2000haveallgivenvaluablefeedbak. \nThisworkhasbeensupportedinpartbyNSFgrantsCCR\u00ad9733974andASC\u00ad9612756,byDARPAContratMDA904\u00ad97\u00adC\u00ad0247,andbyagenerousgiftfromMirosoft. \nReferences Alpern,Bowen,MarkN.Wegman,andF.KennethZadek. 1988(January).Detetingequalitiesofvariablesinpro\u00adgrams.InConfereneeordofthe15thAnnualACM \nSymposiumonPriniplesofProgrammingLanguages, pages1-11,SanDiego,California. Appel,AndrewW.1992.CompilingwithContinuations. \nCambridge:CambridgeUniversityPress. .1998(April).SSAisfuntionalprogramming.SIG\u00adPLANNoties,33(4):17-20. \nAtkinson,RussellR.,BarbaraH.Liskov,andRobertW. Sheifer.1978(Deember).Aspetsofimplementing CLU.InProeedingsoftheACM1978AnnualConfer\u00adene,pages123-129.ACM. \nBruggeman,Carl,OsarWaddell,andR.KentDybvig. 1996(May).Representingontrolinthepreseneof one\u00adshotontinuations.ACMSIGPLAN'96Confer\u00adeneonProgrammingLanguageDesignandImplemen\u00adtation,inSIGPLANNoties,31(5):99-107. \nChase,David.1994a(June).Implementationofexeption handling,PartI.TheJournalofCLanguageTransla\u00adtion,5(4):229-240. \n.1994b(September).Implementationofexeption handling,PartII:Callingonventions,asynhrony,op\u00adtimizers,anddebuggers.TheJournalofCLanguage \nTranslation,6(1):20-32. Conway,ME.1958(Otober).ProposalforanUNCOL. CommuniationsoftheACM,1(10):5-8. \nDean,Jefrey,GregDeFouw,DavidGrove,VassilyLitvinov, andCraigChambers.1996(Otober).Vortex:Anop\u00adtimizingompilerforobjet\u00adorientedlanguages.OOP\u00adSLA'96ConfereneProeedings,inSIGPLANNoties, \n31(10):83-100. Drew,StevenJ.andK.JohnGough.1994(May).Exep\u00adtionhandling:expetingtheunexpeted.Computer \nLanguages,20(2):69-87. Drew,StevenJ.,K.JohnGough,andJ.Ledermann.1995. Implementingzerooverheadexeptionhandling.Teh\u00adnialReport95\u00ad12,FaultyofInformationTehnology, \nQueenslandU.ofTehnology,Brisbane,Australia.See http://www.dst.qut.edu.au/-gough/zeroex.ps. Hennessy,John.1981(January).Programoptimizationand \nexeptionhandling.InConfereneeordofthe8thAn\u00adnualACMSymposiumonPriniplesofProgramming Languages,pages200-206,Williamsburg,Virginia. \nHsieh,Cheng\u00adHsuehA.,JohnC.Gyllenhaal,andWen\u00admeiW.Hwu.1996(Deember).Javabyteodetonative odetranslation:theCafeineprototypeandprelimi\u00adnaryresults.InProeedingsofthe29thannualIEEE/ \nACMInternationalSymposiumonMiroarhiteture. Lindholm,TimandFrankYellin.1997(January).TheJava VirtualMahineSpeifation.TheJavaSeries.Read\u00ading,MA,USA:Addison\u00adWesley. \nLiskov,BarbaraH.andAlanSnyder.1979(November).Ex\u00adeptionhandlinginCLU.IEEETransationsonSoft\u00adwareEngineering,SE\u00ad5(6):546-558. \nPeytonJones,SimonL.1992(April).Implementinglazy funtionallanguagesonstokhardware:Thespine\u00adlesstaglessG\u00admahine.JournalofFuntionalProgram\u00adming,2(2):127-202. \nPeytonJones,SimonL.,DinoOliva,andT.Nordin.1997. C--:Aportableassemblylanguage.InProeedingsof the1997WorkshoponImplementingFuntionalLan\u00adguages,Vol.1467ofLNCS,pages1-19.SpringerVer\u00adlag. \nPeytonJones,SimonL.andNormanRamsey.1998(Au\u00adgust).Mahine\u00adindependentsupportforgarbageol\u00adletion,debugging,exeptionhandling,andon\u00adurreny(draft).TehnialReportCS\u00ad98\u00ad19,De\u00adpartmentofComputerSiene,UniversityofVir\u00adginia.Seehttp://www.ees.harvard.edu/-nr/pubs/ \n--rti-abstrat.htrl. PeytonJones,SimonL.,NormanRamsey,andFerminReig. 1999(September).C--:aportableassemblylanguage \nthatsupportsgarbageolletion.InNadathur,G,ed\u00aditor,InternationalConfereneonPriniplesandPra\u00adtieofelarativeProgramming,number1702inLe\u00adtureNotesinComputerSiene,pages1-28,Berlin. \nRosen,BarryK.,MarkN.Wegman,andF.KennethZadek. 1988(January).Globalvaluenumbersandredundant omputations.InConfereneReordofthe15thAn\u00adnualACMSymposiumonPriniplesofProgramming \nLanguages,pages12-27,SanDiego,California. APPENDIX  A. IMPLEMENTING EXCEPTIONS WebelievethatC--ansupportarihvarietyofsoure\u00adlanguageexeptionsemantis.Demonstrationswouldpro\u00advidesupportingevidene,butunfortunatelyanydemonstra\u00adtionneessarilyfxesboththesemantisofthesourelan\u00adguageandtheostmodelusedintheimplementation.To \nsavespae,weskethonlytwopotentialexeptiondispath\u00aders.BothdispathersimplementModula\u00ad3exeptions,but theyusetwodiferentostmodels. \nA.1 Modula-3 exceptions with zero normal\u00adcase overhead Figure7showsafragmentfromagame\u00adplayingprogram \nwritteninModula\u00ad3.Modula\u00ad3usesTRY\u00adEXCEPT\u00adENDto showhandlersandtheirsopes.Thestatementsequenesto therightofthearrows(=\u00bb)arehandlersfortheexeptions \nBadMoveandNoMoreTiles.Ifeitheroftheseexeptionsis raisedanywherebetweenTRYandEXCEPT,ontroltransfers totheappropriatehandler.Otherwise,aftertheassignment \ntonext,ontrolskipsdiretlyfromEXCEPTtoEND.After exeutionofahandler,ontrolalsotransferstoEND. Usinganimplementationbasedonrun\u00adtimestakunwind\u00ading,thisodemightbetranslatedintotheC--proedure \nshowninFigure8. PROCEDURETryAMove()= BEGIN TRY makeMove(getMove(player)); next:=(next+1)MODNUMBER(players); \n E.CEPT IBadMove(why)=>player.badmove(why); INoMoreTiles=>player.badmove(\"toofewtiles\"); END; INC(movesTried); \n ENDTryAMove; Figure7:ExampleModula-3proedure. TryAMove(){ bits32s,t; t=getMove(player)alsounwindstok1,k2 \nalsoaborts; makeMove(t) alsounwindstok1,k2 alsoaborts; t=bits32[players]; /*loadsizeofarray fromitsdesriptor*/ \nnext=(next+1)modt; finish: movesTried=movesTried+1; return; ontinuationk1(s): t=bits32[bits32[player]+12];/*loadaddressof \nbadmovemethod*/ t(s); gotofinish; ontinuationk2: t=bits32[bits32[player]+12];/*loadaddressof badmovemethod*/ \nt(\"Notenoughtiles\"); gotofinish; } Figure8:C--implementationofModula-3TryAMove, usingrun-timestaunwinding. \nToseehowexeptiondispathworks,letussupposethat getMoveterminatesnormally,butrakeMovedisoversthat themoveannotbemadebeauseitgoesoftheboard. \nrakeMovewouldontaintheModula\u00ad3statement RAISE BadMoveC\"offboard\"); whihmightbetranslatedintoayieldtoawakenthefront \nendruntimeandrequestexeption\u00addispathingservie.The detailsofthepartiularexeptionwouldbepushedontoa global\"exeptionstak.\" \npush exn infoCExn BadMove,\"offboard\"); yieldCEXCEPTION);  Thefront\u00adendruntimewouldinvoketheexeptiondis\u00adpather,asimplifedversionofwhihappearsinFigure9. \nThedispatherwouldgettheexeptioninformation,then allFirstAtivationCtb,&#38;a)togettheativationhan\u00addleforthetopmostativationonthestak.Nextitwould \nmaptheativationhandletoastatiallyalloatedexeption desriptorforTryAMovemehanismsforimplementingthis mappingaredisussedinPeytonJonesandRamsey(1998). \nstrutexn desriptor{ inthandler ount; strut {void*exn tag;intont num;inttakes arg;} handlers[1]; } voiddispather(){ \nativationa; void*exn tag *arg; pop exn info(&#38;exn tag &#38;arg); FirstAtivation(tb &#38;a); for(;;){ \n strutexn desriptor*d; d=...a...;1*Mapativationtoexn desriptor somehow*1 if(d){ inti; for(i=0;i<d->handler \nount;i++) if(d->handlers[i].exn tag==exn tag){ SetAtivation(tb &#38;a); 1*unwindstak*1 SetUnwindCont(tb \nd->handlers[i].ont num); 1*hoosehandler*1 if(d->handlers[i].takes arg){ 1*exnexpetsvalue*1 void**result=FindContParam(tb \n0); *result=arg; 1*Assignresult*1 } return; } } if(!NextAtivation(&#38;a)) abort();1*unhandledexeption:dumpore*1 \n} } Figure9:Asimplifedexeptiondispatherfor Modula-3,writteninC. Iftheexeptionraisedwerenothandledbyanyofthe \nhandlersinthedesriptor thedispatherwouldthenall NextAtivation(&#38;a)togetthenextframe.Eventuallyit wouldfndtheativationforTryAMove \nwhoseexeptionde\u00adsriptorstatesthatontinuation0handlestheModula-3ex\u00adeptionBadMove.(ForpurposesofSetUnwindContwenum\u00adberontinuations \nstartingatzero intheorderinwhihthey appearinthealsounwindstoannotationfortheallsite atwhihtheativationissuspended.)Thedispatherwould \nthenuseSetAtivationtoestablishtheativationtore\u00adsumeandSetUnwindConttoauseresumptionattheproper ontinuation.FinallyitwoulduseFindContParam(tb \n0) tofndtheloationinwhihtoputtheargumenttothehan\u00addler.(Continuationparametersarealsonumberedstarting \natzero.) AsreommendedintheModula-3manual thisimplementa\u00adtionrequireszerodynamioverheadforenteringthesopeof \nanexeptionhandler buttheostofdispathinganexep\u00adtionmaybeonsiderable.ArealdispatherforModula-3 wouldbemoreompliated \nbeauseitwouldhavetopro\u00advideforfnalization(TRY-FINALLY-END) forhandlersthat reeivemultipleexeptions andforbetterreoveryfrom \nunhandledexeptions.ThedispatherinludedwithDEC SRCModula-3eveninludesperformaneoptimizations suhase\u00c6ientfnalizationofloks. \n registerbits32exn top; 1*topofexnstak*1 TryAMove(){ bits32t exn tag arg k1; exn top+=sizeof(k); 1*putkonthedynamiexeptionstak*1 \nbits32[exn top]=k; t=getMove(player)alsoutstok; makeMove(t) alsoutstok; t=bits32[players]; 1*loadsizeofarrayfromitsdesriptor*1 \nnext=(next+1)modt; exn top-=sizeof(k) 1*leaveTRY-EXCEPT-END*1 finish: movesTried=movesTried+1; return; \n ontinuationk(exn tag arg): if(exn tag==BadMove){ t=bits32[bits32[player]+12]; 1*loadaddressofbadmovemethod*1 \nt(arg); gotofinish; }elseif(exn tag==NoMoreTiles){ t=bits32[bits32[player]+12]; 1*loadaddressofbadmovemethod*1 \nt(\"Notenoughtiles\"); gotofinish; }else{ k1=bits32[exn top]; exn top-=sizeof(k1); uttok1(exn tag arg); \n } } Figure10:C--implementationofModula-3 TryAMove,usingstakutting. A.2 Modula-3 exceptions in constant \ntime Someompilersuseadiferentimplementationtrade-of.A smalloverheadisaddedtoeveryTRY-EXCEPT-END butinex\u00adhange \nexeptiondispathisverye\u00c6ient-typiallyafew instrutions.Thehigh-levellanguagemaintainsastakof handlers perhapspointedtobyaregister.Everyexeption \nisdispathedtothehandlerontopofthestak andthat handlerontainsodetoidentifytheexeptionandpassit ontothenexthandlerifneessary. \nUsingthisstyleofimplementation theproedureTryAMove fromFigure7ouldbeompiledintotheC--odeshown inFigure10.(Thisexampleassumesthatthemahine's \nnativedata-pointertypeisbits32.)Theodetoraisean exeption: RAISEexn(val); wouldbeompiledintothisC--: \nk=bits32[exn top];/*fethurrenthandler fromstak*/ exn top-=sizeof(k);/*popstak*/ invokek(exn val);/*invokethehandler*/ \n ThereisnoequivalenttotheexeptiondispatherinFig\u00adure9;instead thepropagationofexeptionsisimplemented inthehandleritself. \n \n\t\t\t", "proc_id": "349299", "abstract": "<p>We present mechanisms that enable our compiler-target language, C--, to express four of the best known techniques for implementing exceptions, all within a single, uniform framework. We define the mechanisms precisely, using a formal operational semantics. We also show that exceptions need not require special treatment in the optimizer; by introducing extra dataflow edges, we make standard optimization techniques work even on programs that use exceptions. Our approach clarifies the design space of exception-handling techniques, and it allows a single optimizer to handle a variety of implementation techniques. Our ultimate goal is to allow a source-language compiler the freedom to choose its exception-handling policy, while encapsulating the architecture-dependent mechanisms and their  optimization in an implementation of C--that can be used by compilers for many source languages.</p>", "authors": [{"name": "Norman Ramsey", "author_profile_id": "81100300481", "affiliation": "Harvard University", "person_id": "PP14110628", "email_address": "", "orcid_id": ""}, {"name": "Simon Peyton Jones", "author_profile_id": "81100271851", "affiliation": "Microsoft Research Ltd", "person_id": "PP40033275", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/349299.349337", "year": "2000", "article_id": "349337", "conference": "PLDI", "title": "A single intermediate language that supports multiple implementations of exceptions", "url": "http://dl.acm.org/citation.cfm?id=349337"}