{"article_publication_date": "05-01-2000", "fulltext": "\n FieldAnalysis:GettingUsefulandLow-ost InterproeduralInformation Sanjay h em awat. KeithH.Randall DanielJ.Sales \nSystemsResearhCenter SystemsResearh C en ter WesternResearhLaboratory CompaqComputerCorp. CompaqComputerCorp. \nCompaqComputerCorp. sanjay google.om randall pa.de.om sales pa.de.om Abstrat Wepresentanewlimitedformofinterproeduralanaly\u00adsisalledfeldanalysisthatanbeusedbyaompilerto \nreduetheostsofmodernlanguagefeaturessuhasobjet\u00adorientedprogramming,automatimemorymanagement,and run\u00adtimeheksrequiredfortypesafety.Unlikemanypre\u00adviousinterproeduralanalyses,ouranalysisisheap,and \ndoesnotrequireaesstotheentireprogram.Fieldanaly\u00adsisexploitsthedelaredaessrestritionsplaedonfelds inamodularlanguage(e.g.feldaessmodifersinJava) \ninordertodetermineusefulpropertiesoffeldsofanobjet. Wedesribeourimplementationoffeldanalysisinthe SwiftoptimizingompilerforJava,aswellasetofopti\u00admizationsthatexploittheresultsoffeldanalysis.These \noptimizationsinluderemovalofrun\u00adtimetests,ompile\u00adtimeresolutionofmethodalls,objetinlining,removalof unneessarysynhronization,andstakalloation.Ourre\u00adsultsdemonstratethatfeldanalysisise\u00c6ientandefetive. \nSpeedupsaverage7%onawiderangeofappliations,with sometimesreduedbyupto27%.Compiletimeoverhead offeldanalysisisabout10%. \nIntrodution ModernlanguagessuhasJavaandModula\u00ad3providefea\u00adturessuhasobjet\u00adorientedmethoddispath,automati \nmemorymanagement,andtypesafetythatimprovepro\u00adgrammerprodutivity,reduebugs,andimproveseurity. However,beauseoftherun\u00adtimeostofthesefeatures, \nappliationswrittenintheselanguagesandompiledwith standardoptimizationsareoftenslowerthansimilarappli\u00adationswritteninlanguagessuhasCandFortran.For \nexample,typesafetyrequiresthatallarrayreferenesin\u00adludeboundsheks.Virtualmethodallsaremoreexpen\u00adsivethandiretallstoproedures.Alloatinganobjet \nontheheaptypiallyintroduesmoreoverheadthanstak alloationoftheobjet. .Author'surrenta\u00c6liationisGoogle,In.,2400BayshorePark\u00adway,ountainViewCA94043 \nPermissiontomakedigitalorhardopiesofallorpartofthis workforpersonalorlassroomuseisgrantedwithoutfeeprovided \nthatopiesarenotmadeordistributedforproftorommerial advantageandthatopiesbearthisnotieandthefullitationon \nthefrstpage.Toopyotherwise,orrepublish,topostonservers ortoredistributetolists,requirespriorspeifpermissionand/or \nafee. PLDI2000,Vanouver,BritishColumbia,Canada. Copyright2000 CM1-58113-199-2/00/0006...$5.00. Theseoverheadsanoftenbeeliminatedbyompilerop\u00adtimizations.Forexample,aboundshekanbeeliminated \niftheompileranprovethattheindexofthearrayrefer\u00adeneisnon\u00adnegativeandlessthanthelengthofthearray. Avirtualmethodallanbeonvertedtoadiretallif \ntheompileranprovethatthereisonlyonepossibletarget method.Similarly,anewobjetanbealloatedinastak frameif,amongotherthings,theompileranshowthata \nreferenetotheobjetneveresapestoanotherthreador toamethodhigherinthestak. Compileranalysesfortheseoptimizationstraditionally \nhavebeenwhole\u00adprogramanalysessuhaslasshierarhy analysis(CHA),wheretheentiresetoflassesisexamined todeterminetheexatlasshierarhy[7],orsometypeof \ninterproeduraldatafowanalysis.Bothofthesemethods anbequiteexpensiveintermsofompiletimebeause theymustexaminemanylassessimultaneously. \nWehavebeeninvestigatingfeldanalysis,aheaperform ofinterproeduralanalysisthatisappliabletomodular, objet\u00adorientedlanguages.Inpartiular,thesopeofanaly\u00adsisisasinglelassoralimitedsetoflasses,andnoformof \ninterproeduraldatafowanalysisisrequired.Fieldanalysis isthereforelessdependentonanabilitytodeterminethe \nexatallgraph,whihisoftendi\u00c6ultinobjet\u00adoriented appliations.Beauseoftheseproperties,feldanalysisis heapenoughtobeusedinaompilerwhihisinvokeddy\u00adnamiallyatrun\u00adtimeonfrequentlyexeutedmethods. \nFieldanalysisdeterminesusefulpropertiesofafeldofan objetbysanningtheodethatouldpossiblyaessthat feld,asditatedbylanguageaessrules.Forexample,a \nprivatefeldinJavaanonlybeaessedbymethodsin theloallass,whileapakagefeld.anonlybeaessed bymethodsinlassesthatareinthesamepakageasthe \nontaininglass.Anexampleofafeldpropertyistype informationthatismoreexatthanthedelaredtypeof thefeld.Fieldanalysisanoftenshowthatafeld,ifnon\u00adnull,onlyreferenesobjetsoflassC,andneverobjets \nofanyofC'ssublasses.Similarly,feldanalysisanoften provethatafeld,ifnon\u00adnull,alwaysontainsanarrayofa partiularonstantsize. \nThesesimplefeldpropertiesanbeusedtoattakava\u00adrietyofoverheads.Exattypeinformationanhelpresolve virtualmethodalls,andotherpropertiesanbeusedto \nprovethatnullheksandboundsheksareunneessary. Fieldanalysisanbeusedinadditiontoorasanalterna\u00adtivetooptimizationslikeCHAthatassumethatalllasses \n.Aavafeldwithoutanyaessmodifersisvisibletoitsentire pakageandthereforeweallitapakagefeld. Class Field \nCodetosan publi private ontaininglass publi pakage ontainingpakage publi proteted ontainingpakageand \nsublasses non\u00adpubli private ontaininglass non\u00adpubli non\u00adprivate ontainingpakage Table1:FieldAessRegions \n(i.e.allappliationode)areknownatompiletime.Per\u00adformingCHAisnotalwaysdesirable,beauseifitisusedin aseswhenadditionallassesmaybeloadedlater,thenit \nmaybeneessarytoinvalidateodethathasusedtheCHA assumption.Fieldanalysisisthereforeusefulwhenloading theentirelasshierarhyistooexpensiveoritisundesirable \ntoinvalidateodelater.EvenifCHAwithodeinvalidation isused,itisbenefialtoapplyfeldanalysisfrst,sinea methodallresolvedusingfeldanalysiswillnothavetobe \ninvalidatedlater. Inthispaper,wedesribeourimplementationoffeld analysisintheSwiftompiler.Swift[18]isaompleteopti\u00admizingJavaompilerfortheAlphaarhiteturewhihuses \nstatisingle\u00adassignmentformforitsinternalrepresentation. TheompileriswritteninJavaandittranslatesJavabyte\u00adodestoAlphaode.Wedesribethebasisetoffeldprop\u00adertiesthatarehekedandtheiruseinanumberofsimple \noptimizations.Wethendesribeseveralmoreomplexfeld properties,andtheiruseinperforminginexpensiveanalyses \nforobjetinlining,stakalloation,andsynhronizationre\u00admoval.Wethenpresentperformaneresultsandstatistis foravarietyofoptimizationsenabledbyfeldanalysisona \nnumberofappliations,inludingtheSpeJVM98applia\u00adtions. 2BasiFieldAnalysis Inthissetion,wedesribeanimplementationoffeldanal\u00adysisandabasisetofusefulfeldproperties.Ourapproah \ntofeldanalysisistosanalltheodethatanaessafeld andthendeduepropertiesofthefeldfromtheproperties ofalltheaessestothefeld.Fieldanalysisisthereforeap\u00adpliabletoanymodular,objet\u00adbasedlanguage.However, \nbeausethepartiulardetailsandtheusefulpropertiesde\u00adpendonthelanguage,wewilldesribeourimplementation fortheJavalanguage. \nMostofthefeldpropertiesthatareurrentlyheked arerelevantonlyforreferenefelds(i.e.feldsthatontain referenestoobjetsorarrays,ratherthansalartypessuh \nasintegers).Thereforeoururrentimplementationignores feldswithsalartypes. 2.1FindingAllAessestoaField \nWeuseJavafeldmodiferstodeterminethesubsetofthe programthatmustbehekedforaessestoagivenfeld. ThismehanismissummarizedinTable1.Thefrsttwo \nolumnsontainthelassandfeldmodiferrespetivelyand thethirdolumndesribesthesubsetoftheprogramthat hastobesannedforaessestoafeldwiththespeifed \nmodifers.Forafinalfeld,theaboverulesareusedfor fndingallthereads,butonlytheontaininglasshastobe sannedforwritestothefeld. \nNotethatforaprotetedfeldinapublilassT,we sanallsublassesofT.Dynamiloadingouldintrodue newsublassesofT,andthereforeourompileranalyzes \nsuhfeldsonlyifCHAisalsobeingused(orifthelass isdelaredfinal).Publifeldsinpublilassesouldbe handledbysanningtheentireprogram,butSwifturrently \nignoresthemfore\u00c6ienyonsiderations. Dynamiloadingouldalsopotentiallyreateproblems inourhandlingofpakage\u00advisiblefeldsbyintroduinganew \nlassintoapakage.However,thethreemostwidelyused lassloaders,namelythesystemloader,theinstalledexten\u00adsionsloader,andtheappliationloader,simplyloadfrom \npredeterminedportionsoftheflesystem.Swiftanthere\u00adforesanthoseportionsoftheflesystemtodeterminethe basesetofpakagesandanbesurethatdynamiloading \nwillnotintrodueanynewlassesintothesepakages.(We assumethattheontentsofthesepartsoftheflesystemdo nothangebetweenompilationtimeandruntime.) \n2.2ComputingFieldProperties Fieldanalysisusesatablethatholdsinformationaboutthe propertiesofthefeldsbeinganalyzed.TheSwiftom\u00adpilerdoestheanalysisbyonvertingeahmethodbeing \nsannedfromJavabyteodetoitsstandardmahine\u00adinde\u00adpendentintermediaterepresentation(IR)basedonstati single\u00adassignment(SSA)form.TheSSAgraphisessentially \nafatoreduse\u00addefgraph,andSwiftalsoinrementallymain\u00adtainsdef\u00aduseinformationforeahnodeinthegraphwhile buildingandmodifyingthegraph.OnetheSSAformis \nbuilt,Swiftiteratesthroughallnodesinthegraphwhih representloadsoffeldsorstorestofeldsandinrementally \nupdatestheinformationknownabouttheaessedfeld.For eahloadofafeld,itanalyzeseahuseoftheload.For eahstoreofafeld,itanalyzesboththevaluestoredinto \nthefeldandanyotherusesofthatvalue.Beauseofthe useofSSAform,theextratedpropertiesarefow\u00adsensitive. However,Swiftonlyusesloalinformationinprovingprop\u00adertiesanddoesnotderiveanyontext\u00adsensitiveproperties. \nNooptimizationsareappliedtotheSSAformbeforeitis analyzed. Someofthefeldpropertiesanbebestexpressedin \ntermsofageneralizedtypeforobjetsstoredinafeld. Swifthasasimplebutefetivesystemoftypeswhihis usedtosummarizethepossibleresultsofnodesinanSSA \ngraphorontentsoffeldsofanobjet.TheSwifttypesys\u00adteminludesthestandardJavatypesystemasasubset,but alsoallowsspeifationofthefollowingadditionalproper\u00adtiesaboutavaluewithapartiularJavatypeT: \n.thevalueisknowntobeanobjetofexatlylassT, notasublassofT .thevalueisanarraywithapartiularonstantsize \n.thevalueisknowntobenon\u00adnull Byinorporatingthesepropertiesintothetypesystem,we andesribeimportantpropertiesofanynodeintheSSA \ngraphbyitstype.Inaddition,weaneasilyindiateprop\u00adertiesfordiferentlevelsofreursivetypes,suhasarrays. Onepossiblegeneralizationofthetypesystemistoallow \nuniontypes.However,wehavenotfoundthisextensionto beveryusefulfortheappliationsthatwehaveexamined. WhilebuildingtheSSAgraph,Swiftautomatiallyas\u00adsignstheappropriatetypestonodesrepresentingmethod \narguments,loadsoffeldsofobjets,andloadsofglobal variables.Inaddition,itassignsnon\u00adnullexattypesto nodesrepresentingnewlyalloatedobjets.Itmayalsobe \nabletogiveonstant\u00adsizearraytypestonodesrepresenting newlyalloatedarrays.Swiftthendoesastandardtype Property \nDefnition exattype(feld) thefeldisalwaysassignedavalueofthespeifedtype alwaysinit(feld) thefeldisassignedexatlyoneineahonstrutor \nnoonstrutoraessesthefeldbeforeassigningit noonstrutor\"leaks\"this onlyinit(feld) thefeldisnotassignedanywhereoutsideaonstrutor \nsouretype(feld) anindiationofwhatkindofvaluesareassignedtothefeld: new,new/null,new/null/param,orother \nusesheader(feld) theheaderoftheobjetreferenedbythefeldispossiblyused mayleak(feld) theobjetreferenedbythefeldmaybestoredintotheheapor \nreturnedbyamethod nonnull(feld) exattype(feld).nonnull&#38;&#38;alwaysinit(feld) final(feld) alwaysinit(feld)&#38;&#38;onlyinit(feld) \ninlineablewithheader(feld) final(feld)&#38;&#38;souretype(feld)==new&#38;&#38; exattype(feld)==statitype(feld) \ninlineablewithoutheader(feld) inlineablewithheader(feld)&#38;&#38; !usesheader(feld)&#38;&#38;!mayleak(feld) \nenapsulated(feld) !mayleak(feld)&#38;&#38;souretype(feld)==new/null neverleaks(feld) !mayleak(feld)&#38;&#38;souretype(feld)==new/null/param \n Table2:BasiandDerivedPropertiesofFields propagationtodeterminetypesfortheremainingnodesin thegraph.Thetypepropagationprovidesextrainformation \nthatisimmediatelyusableforfeldanalysis. BuildingtheSSAgraphfrombyteodeinvolvesbuild\u00adingtheCFG,alulatingthedominatortree,determining \nphi-nodeplaement[20],anddoingabstratinterpretation overthebyteodestoreateandonnettheSSAnodes. Thedominator-fndingalgorithm[15]issuper-linearinthe \nworstase,butisinpratielinear,andtheremainingpasses arelinear.Hene,theanalysistimeisapproximatelylinear \nintheamountofodetobeanalyzed,andrequiresstor\u00adageonlyforthetableofanalyzedfelds,plustheIRfor asinglemethod.Forsomeproperties(e.g.alwaysinit, \nasdesribedbelow),additionalstorageisrequiredtosave someinformationaboutmethods,sothatmethodsarenot repeatedlyanalyzed. \n2.3BasiProperties Thebasipropertiesoffeldsthatweomputeareshown inTable2.Thefrstproperty,exattype,reordsthe \nknowninformationaboutthetypeofthevaluesassigned tothefeld.Thus,exat typeanindiatethatafeldis alwaysassignedvaluesfromasinglelass,valuesthatare \nnon-null,orvaluesthatareaonstant-sizedarray.Inour urrentimplementation,weonlyusethetypeofanodein theSSAgraphtodetermineifitrepresentsavaluethatis \nnon-null,hasanexattype,orhasanexatarraylength. Hene,wewillmostoftenproveusefulpropertiesaboutthe exat \ntypeofafeldifitisonlyassignednewlyalloated objets.Fore\u00c6ieny,wedonoturrentlytrytoprovethat avalueisnon-nulloranexattypeinanyotherway.Note \nthatexattypedesribesthetypeofafeldafteritsfrst assignment,soanon-nulltypedoesnotneessarilyimply thatallaessesreturnnon-nullvalues. \nTheseondproperty,alwaysinit,isusefulinproving thatafeldisalwaysnon-null.alwaysinitindiatesthat thefeldhasalwaysbeeninitialized(assigned)beforeitis \naessed.Tosimplifyanalysis,weusesomewhatonser\u00advativeonditions.Asshown,werequirethatthefeldis assignedexatlyoneinanynormally-terminatingalltoa \nonstrutorfortheontaininglass,andthatnoonstru\u00adtorsaessthefeldbeforeitisassigned..Anoperationwill ourexatlyoneinamethodalliftheoperationdoes \nnotourinaloopanditdominatesthenormalexitofthe method.Additionally,werequirethatareferenetothe newobjet(aessedviathethiskeyword)isnot\"leaked\" \ninaonstrutor.    Weonsiderthistoleakifitisstoredintotheheapor passedtoanunanalyzedmethod.Ifthisisleakedbeforea \nfeldisinitialized,thenanotherthread(oreventheurrent thread)maybeabletousethereferenetothistoaess theuninitializedstateofthefeld.Beausemostonstru\u00adtorsinvokesuperlassonstrutors,wereursivelyanalyze \nallresolvablemethodallswiththisasareeiver(whih inludesallsuperlassonstrutoralls,aswellasothers). However,itisnotommoninonstrutorstopassthisasa \nnon-reeiver,sowedonotreursivelyanalyzemethodsalls whihtakethisasanon-reeiverargument.Thisrestri\u00adtionoftenlimitsthesetofextramethodsthatneedtobe \nanalyzedtothoseintheurrentlassanditssuperlasses. Hene,thisomputationisveryheap,eventhoughitmay involvemethodsthatarenotintheloallassorpakage. \nThethirdproperty,onlyinit,indiatesthatafeldis notassignedoutsideofaonstrutor.Theremainingba\u00adsipropertiesinTable2areusedforourmoreadvaned \noptimizationsandwillbedesribedinlatersetions. Table2alsoindiatessomepropertiesderivedfromthese basiproperties.Forexample,afeldisalwaysnon-null \nwhenreadifitisalwaysinitanditsexattypeproperty indiatesthatitisnon-null.Afeldisfinal(unmodifed afterbeinginitialized)ifitisalwaysinitandonlyinit. \nAsanexample,onsidertheodeinFigure1.Beause thefeldpointsisprivate,theompileronlyneedstosan theinstanemethodsinlassPlanetodetermineitsproper\u00adties.Itiseasytoseethatexattype(points)mustindiate \nanon-nullarraywithbase-typePointandafxedsizeof 3.Inaddition,thebasipropertiesalwaysinit(points) andonlyinit(points)arebothtrue,implyingthatthe \nderivedpropertiesnonnull(points)andfinal(points)are bothtrueaswell. .Wealsoallowanassignmenttoafeldtobeimpliitlyperformed \nbyallinganotheronstrutorinthesamelass.     publilassPlane{ privatePoint[]points; publiPlane(){ points=newPoint[3]; \n} publivoidSetPoint(Pointp,inti){ points[i]=p; } publiPointGetPoint(inti){ returnpoints[i]; } } Figure1:ExampleClassforFieldProperties \n2.4BasiOptimizations Thesefeldpropertiesanbeusedinanumberofsimpleop\u00adtimizations.Iftheexattypepropertyofafeldindiates \nthatitontainsobjetsonlyofaertainlass,thenavirtual methodallwhosereeiveristheontentsofthefeldan beresolvedtoadiretall.Inthesameway,exattype \ninformationanbeusedtostatiallyevaluatetype\u00adinlusiontests,suhasinstaneoforarraystoreheks inJava.If exat \ntype(feld)indiatesthatfeldonlyontainsarrays ofafxedsize,thenboundsheksandotherexpressions thatusethelengthofthearrayanbesimplifedandoften \neliminated.Ifnonnull(feld)istrue,thenanynullhek(re\u00adquiredinJavaforallnon\u00adstatifeldandmethodaesses) ontheontentsofthefeldanbeeliminated.Whilemost \nJavasystemsanusepageprotetiontoimplementnull hekswithoutanyextraode,eliminatingthenullhek isstillusefulbeauseitgivestheompilermorefexibility \nindoingodemotion. Forexample,intheSetPointmethodinFigure1,some possibleoptimizationsinludeeliminatingthenullhekon \npoints,usingtheonstant3intheboundshekomputa\u00adtion,andeliminatingthearraystorehek. Fieldpropertiesanevenmakestandardoptimizations \nmoreefetive.Iffinal(feld)istrue,thenfeldisknown nottobemodifedinanymethodexepttheonstrutorfor itsontaininglass.Aonstrutoranonlybealledimme\u00addiatelyafteralloatinganewinstaneofanobjet,orbya \nonstrutorofthesamelassorasublass.Amethodwhih isnotaonstrutorannotpossiblyalltheonstrutoron apreexistingrefereneandsoannotpossiblymodifythe \nfnalfeldofthereferene.Therefore,ifwehavetwoloads ofafeldofthesameobjetseparatedbymethodallwhih isnotaonstrutor,weanapplyommonsubexpression \nelimination(CSE)tothetwoloads,evenifweannotana\u00adlyzethemethodall. 2.5LimitationsofFieldAnalysis Ourfeldanalysishasanumberofpotentiallimitations. \nFirst,nativemethodsannotbeanalyzedbytheompiler. Theompilerthereforeassumesthatanativemethodreads andwritesallfeldsthatareaessibletoanon\u00adnativemeth\u00adoddefnedinthesamelass.(Theompilerisaugmented \nwithbuilt\u00adinknowledgeabouttheefetsofsomewidely 3Storingtoanarrayin avarequiresarun-timehek,alledan arraystorehek,toensurethattheobjetbeingstoredintothe \narrayisompatiblewiththebasetypeofthearray.   usednativemethodstomakethisanalysislessonservative.) Ifanynativemethodbypassesnormalfeldprotetions,our \nfeldanalysiswillbeinorretandshouldbedisabledon thesefelds. TherefetionfailitiesinJavaanalsobeusedtoby\u00adpassfeldprotetionsviathesetAessiblemethodinthe \njava.lang.refletpakage.However,odemustbeexpli\u00aditlygrantedpermissiontousesetAessiblebytheurrent seuritypoliy.Suhbypassingoffeldprotetionsistyp\u00adiallyonlyusedforsystemfuntionssuhasdebuggingor \nserializationofdataforwritingtodisk.Again,ourfeld analysisshouldbedisabledonthefeldsinquestion.Ifthe \nompilerisintegratedwiththerun\u00adtimesystem,theimple\u00admentationofsetAessibleouldpotentiallybemodifed toinvalidateompiledodethathasbeenoptimizedbased \nonpropertiesoftheassoiatedfeld. Finally,theappliabilityofsomeoptimizationsmaybe afetedbytheJavamemorymodel.Inamulti\u00adthreaded \nprogram,afeldmaypotentiallybeseeninanuninitial\u00adizedstateevenifalwaysinit(feld)istrue.Supposeone threadreatesaninstaneofalassontainingthatfeld \nandstoresareferenetotheobjetinaglobalvariable.On theloalproessor,theinitializingwritetothefeldpreedes \nthewriteofthereferenetotheglobalvariable.However, thesewritesarenotrequiredtoappearinthisorderona remoteproessor,unlessthereispropersynhronizationon \nbothproessors. Notethatthisproblemanonlyouronamultiproes\u00adsorwithaweakmemoryonsistenymodelforanobjet whoserefereneisstoredintheheapwithoutanysynhro\u00adnization.Undertheseonditions,itwouldbeimproperfor \nsafetyreasonstoremoveanullhekontheontentsof thefeldforwhihnonnull(feld)istrue.However,itmay beaeptabletogivetheompilerextrafreedominmoving \nsuhnullheks,sinethereisadataraebetweentheini\u00adtializationofandaesstotheobjet,soresultsarelikely tobeunpreditableanyway.Similarly,aessestoafeld \nforwhihfinal(feld)istrueouldyieldanuninitialized valueaswellastheinitializedvalue.TheCSEoptimization \ndesribedaboveforfnalfeldsmaybeimproperiftheinter\u00adveningmethodhassynhronization,sinetheseondload ofthefeldmightberequiredtoseetheinitializedvalueof \nthefeld,aordingtotheurrentJavamemorymodel. 3ObjetInlining Wehavealsousedthefeldanalysisapproahtodetermine \nfeldsthatareandidatesforobjetinlining.Objetinlin\u00ading[12]isamethodofreduingtheoverheadofaessing objetsbyalloatingthestorageofanobjetwithinitson\u00adtainingobjet.IfobjetBisinlinedinobjetA,theost \nforaessingobjetBisreduedbyapointerdereferene. Also,garbageolletionostsareredued,sinethereisonly asinglealloationunittobesanned,ratherthantwo.Ob\u00adjetsAandBarelikelytobefrequentlyaessedtogether, \nsoaheloalitymaybeimprovedbyinliningifAandB arenowstoredinthesameaheline.Asanexampleof objetinlining,Figure2(a)showsthestoragelayoutfora \nRayobjetwhihreferenestwoPointobjets.Figure2(b) showsthestoragelayoutwhenthetwoPointobjetsare inlinedintotheRayobjet. \n3.1Analysis Ouranalysisisuniqueinthatitfndsbothobjetsthat anbeinlinedwithoutaheaderfortheinlinedobjet,and \n Ray Point Ray start end (a) (b) Figure2:ExampleofObjetInlining objetsthatanbeinlined,butrequireanobjetheader. \nTheobjetheaderontainsanindiationofthetypeofthe objetanditsmethodtable,andisalsotypiallyusedfor synhronizingontheobjet.Theheaderisthereforenees\u00adsaryiftheprogrammightexeuteertainoperations,suh \nasvirtualmethodinvoations,synhronization,andtype\u00adinlusionheks,ontheobjet.Inaddition,ifanobjetis inlinedwithaheader,thenareferenetotheobjetanbe \nallowedtoesapeintotheheap.Thegarbageolletoran determineviatheheaderthatarefereneaessesaninlined objet,andanthereforeavoidolletingtheontainingob\u00adjet.Wearenotawareofanyotherimplementationsof \nobjetinliningthatallowreferenestoinlinedobjetstobe storedintheheap.However,unlikesomeothersystems, ourapproahisnotontext\u00adsensitive,soweinlineobjetB \natfeldfofobjetA,onlyifitisprovablethattheon\u00adtentsoffeldfanbeinlinedforanyinstaneofthelass ofobjetA. ByusingthefeldanalysisinformationdesribedinTa\u00adble2,weaneasilydetermineiftheontentsofafeldanbe \ninlinedintheontainingobjet.Thefrstpropertythatwe use,soure type,indiateswhatisknownaboutthesoure ofthevaluesstoredintothefeld.Itindiatesthatthe \nfeldhasonlybeenassignednewlyalloatedobjets(new), onlynewobjetsornull(new/null),onlynewobjets,null, ormethodparameters(new/null/param),ornoneofthese. \n(Thenew/nullornew/null/parampropertieswillbeuseful foresapeanalysis,asdesribedinthenextsetion.)Inthe \naseofobjetinlining,weareinterestedinfeldswhihare onlyassignednewlyalloatedobjets.Theseondproperty, uses.eader,isusedfordeterminingifaninlineableobjet \nmustontainthestandardobjetheader.Thethirdprop\u00adertyweuse,mayleak,indiatesthattheontentsofafeld may\"leak\"outoftheontainingobjetbybeingstoredinto \ntheheaporbeingreturnedbyamethod.4 Giventheseproperties,weanspeifywhentheontents ofapartiularfeldanbeinlined,eitherwithoutorwith \nanobjetheader,asshowninTable2.Ifafeldistobe inlinedwithaheader,werequirethatthefeldbeinitialized withasingle,fnalvaluewhihisanewlyalloatedobjet. \nForsimpliity,werequirethatthelassoftheinlinedobjet mustbethesameasthestatitypeofthefeld.Inthis way,objetlayoutissimplerfortheunderlyingJavaVirtual \nMahine(JVM),beauseinlinedobjetsalwayshavethe samelassastheirstatitype.Ifafeldistobeinlined withoutaheader,weadditionallyrequirethattheheader \noftheobjetreferenedbythefeldisneverusedanda 40urimplementationofmayleakforobjetinliningisquiteon\u00adservativebutfast(itassumesthatanobjetleaksifitispassedas \nanon\u00adthisargumenttoamethod),whereasouresapeanalysisde\u00adsribedbelowusesamoregeneralimplementation.  int \nx; int y;   Initialode Codeafterinliningfeldfiny'slass x=y.f; x=y+offset(y,f); x=newT;y.f=x; ifneessary,initializeheaderofy.f \nx=y+offset(y,f); <deleted> Table3:CodeGenerationforInlinedFields referenetothisobjetneverleaks.5 Ouranalysisalsoallowsustoinlineafeldthatrefer\u00adenesanarray.Inthatase,thereisoneextraondition \n(notmentionedinTable2)thatthealloatedarraymust haveastatiallyfxedonstantsize.Instanesoftheon\u00adtaininglass(withtheinlinedarray)thenhaveaonstant \nsizeandanbealloatedusingthenormalobjetalloation mehanisms. 3.2Implementation Ouranalysisallowsreferenestoinlinedobjetstoesape \nintotheheapaslongastheobjetinludesaheader.We havemodifedtheunderlyingJVMtomarktheheadersof suhinlinedobjets.Thegarbageolletorantherefore \ndeterminewhenitenountersareferenetoaninlinedob\u00adjet.Insuhases,thegarbageolletorsansfromthestart oftheurrentvirtualmemorypagetofndtheobjetthat \nontainsthereferenedinlinedobjet.Itthenpreservesthe storagefortheentireenlosingobjet,notjusttheinlined \npart. Codegenerationforinlinedobjetsisfairlysimpleand therequiredtransformationsarelistedinTable3.Aloadof \nareferenetoaninlinedobjetistransformedintoasimple addressalulation.Theadditionsinthetransformedode anoftenbeombinedwithotheradditionsbystandard \nompileroptimizations,soderefereninganinlinedobjet typiallyhaszeroost.Codethatinitializesafeldwithan inlinedobjetistransformedintoodethatinitializesthe \nheaderoftheobjet,ifneessary,andreatesareferene totheinlinedobjet.Inoururrentimplementation,the bodyoftheinlinedobjetdoesnothavetobeinitialized \nseparatelyfromtheenlosingobjet,beausethenewop\u00aderationreturnsazeroedblokofmemory.Foraninlined multi\u00addimensionalarray,theinlinedarraymayneedtobe \ninitializedwithreferenestotheneessarysubarrays.Any nullheksontheontentsoftheinlinedfeldareeliminated, \nsinethefeldisguaranteedtobenon\u00adnullatallaesses. 4EsapeAnalysis Esapeanalysisisusedtodetermineifareferenetoan \nobjetesapesathread(i.e.anbeaessedbyanother thread)orapartiularmethodall(i.e.anstillbeaessed bytheurrentthreadaftertheallompletes).Esapeanal\u00adysisisaneessaryomponentfordeterminingifanobjet \nanbealloatedonthestak,ratherthantheheap.Ifa referenetoanobjetdoesnotesapeapartiularmethod all(alongwithafewotheronditions),thentheobjetan \nbealloatedonthestakframeofthatall.Esapeanalysis analsobeusedforeliminatingorreduingtheostofun\u00adneessarysynhronization.Ifareferenetoanobjetdoes \nnotesapeathread,thensynhronizationontheobjetis 5Thisoptimizationouldbegeneralizedbyallowingmultipleas\u00adsignmentstothefeld,aslongasalloftheassignedvaluesarenew \nobjetswiththeorrettype,andtheontentsofthefeldarenot involvedinanypointer\u00adequalityomparisons. Property \nDefnition returnsunaliased(method) methodreturnsanew,unaliasedobjetornull mayreturnparam(method,i) inputparameterimaybereturnedbymethod \nmaystoreparam(method,i) inputparameterimaybestoredintotheheaporreturnedbymethod mayontainparam(method,i) \nthemethodmaystoreareferenetoinputparameteriina\"neverleaks\"feld oftheobjetreferenedbyparam0,butdoesnototherwisestoreparameteri \nmaystoreparam2(method,i) maystoreparam(method,i)mayontainparam(method,i) Table4:BasiandDerivedPropertiesofMethods \nunneessary.6Inthedisussionbelow,wewillfousonde\u00adterminingifanobjetesapesamethodall;provingthatan objetdoesnotesapeathreadinvolvesonlyalittleextra \nanalysisrelatedtothethreadreationroutines.Foronve\u00adniene,wewillsimplysaythat\"anobjetesapes\"whenwe meanthatareferenetotheobjetesapesamethodall. \nEsapeanalysishastypiallyinvolvedeitherfairlysim\u00adpleanalysesorhighlyomplexandexpensiveomputations. Thesimplestanalysis[13]assumesthatanobjetesapesif \nareferenetotheobjetiseverstoredintoaglobalvariable oraheapobjet(inludingarrays).Foronveniene,we willsimplysayinthisasethattheobjetisstoredintothe \nheap.7Whenasimpleinterproeduralanalysisisusedto determinetheefetsofmethodalls,thisanalysisistypi\u00adallyefetiveatfndingmanyobjetsthatdon'tesape.In \nontrast,otherformsofesapeanalysis[5]doafullinter\u00adproeduralandontext\u00adsensitivedatafowthatbuildsupa \"points\u00adtograph\"thatsummarizesthestoragerelationship \nofsetsofobjets.Thesekindsofanalysesanprovethat anobjetdoesn'tesape,evenifareferenetotheobjetis storedintothefeldofanotherobjet.However,theseanal\u00adysesanbeveryexpensiveintermsofomputationtimeand \nmemory,beauseoftheirmanipulationsofpoints\u00adtographs andtheirontext\u00adsensitivesummariesofmethods. Wehavedevelopedanextensionofthesimpleanalysis \nwhihusessomeadditionalfeldpropertiestofndmoreob\u00adjetsthatdon'tesape.Beausethefeldanalysisisso heap,ourextensionostslittlemorethanthesimplees\u00adapeanalysis,yetfndssignifantlymoreobjetsthatdon't \nesape.Wefrstdesribeourimplementationofthesimple analysis,andthenourextensionusingfeldproperties. 4.1SimpleAnalysis \n0ursimpleesapeanalysisproeedsbyfndingaandidate valueinamethodM,andthenprovingthatthevalueis neverstoredintotheheapandisnotreturnedbyM.Aan\u00addidatevalueisanobjetthatisalloateddiretlyinM,or \nanewlyalloatedobjet0returnedbyamethodallin Msuhthat0isknownnottohavebeenotherwisestored intotheheap.Todeterminewhihmethodsreturnandi\u00addatevalues,thereturnsunaliasedpropertyinTable4is \nalulatedforeahresolvablemethodallinM. Theompilerthenprovesthataandidatevaluedoesnot esapebyexaminingallusesofthevalueinMandhek\u00adingthatnonereturnthevalueorstorethevalueinthe \nheap.Whentheandidatevalueisusedinamethodall, 6UndertheurrentJavamemorymodel,thesynhronizationanf notneessarilyberemoved,sinetheuseofsynhronizationmust \nauseallupdatesbytheloalproessortobeommittedandallupf datesbyotherproessorstobeseen.However,theJavamemory \nmodelwilllikelyberevisedsothatsynhronizationonlyhassuhef fetsforaessesthatareonnetedbyhainsofsynhronizationson \nthesameobjets[1]. 7Forthepurposesofesapeanalysis,wealsoonsideranobjetto bestoredifitisthrownasanexeption. \n Pairp=newPair(); Integerx=newInteger(5); p.first = x; lass Pair { private Objet first; private Objet \nseond; } Figure3:AnEnapsulatedFieldExample weusetheseondandthirdpropertiesinTable4todeter\u00admineifthevalueesapes.Ifthepropertymaystoreparam \nistrue,thevalueisassumedtoesape,andiftheproperty mayreturn paramistrue,thevalueisassumedtoesape ifthereturnvalueofthemethodallesapes(thetruthof \nwhihisomputedreursively). ThefrstthreepropertiesinTable4anbedetermined usingasimpledepth\u00adfrstanalysisofmethodsthatmakes \ntheonservativeassumptionthatanunanalyzablemethod allreturnsandstoresallparametersanddoesnotreturn anunaliasedobjet.Thisassumptionisalsomadefora \nalltoamethodthatisurrentlybeinganalyzed(i.e.fora reursivemethodall).Alternatively,afullinterproedural \ndatafowanalysisthathandlesreursivemethodallsless onservativelyouldbeused. 4.2FieldPropertiesforEsapeAnalysis \nUnfortunately,thesimpleanalysispresentedintheprevious setionfailstofndmanyobjetsthatdon'tesape.The mainideainimprovingthesimpleanalysisistodisover \nfeldswhihareenapsulated,inthesensethatthefeldis initializedwithareferenetonewobjetbymethodsin theobjet'slassorpakage,anonlybeaessedbythese \nmethods,andisnever\"leaked\"bythesemethods.Ifwe disoveranobjetthatdoesnotesape,thentheontents ofanyenapsulatedfeldsofthatobjetdonotesape,and \nsoon,reursively. Therearetwoonditionsneededtoensurethattheon\u00adtentsofafeldneveresapetheontainingobjet:(1)the \nvaluedoesnotesapeviaamethodthataessestheon\u00adtentsofthefeld;and(2)anyvalueassignedtothefeld hasnotalreadyesaped.Condition(1)isequivalentto \n!maylea.(feld),andondition(2)istriviallytrueifwere\u00adquirethatthevaluesassignedtothefeldarealwaysanewly \nalloatedobjetornull.Thepropertyenapsulated(feld) inTable2exatlyoversthesetwoonditions.Ifwehave disoveredanobjetthatdoesnotesapeandafeldofthat \nobjetisenapsulated,thentheobjetstoredinthatfeld alsodoesnotesape.Notethatwehaveprovedthatthe objetinthefelddoesnotesapeeventhoughareferene \ntotheobjethasbeenstoredintheheap.Forexample,in theodeinFigure3,weanprovethatxdoesnotesapeif    Vetorv=newVetor(); \n Enumeratione=v elements(); while(e hasMoreElements()){ Objeto=e nextElement(); } lassVetor{ Enumerationelements(){ \nreturnnewVetorEnumerator(this); } } lassVetorEnumerator implementsEnumeration{ Vetorve; VetorEnumerator(Vetorv){ \nve=v; } } Figure4:EnapsulationofaConstrutorArgument.The vetorvisenapsulatedintheenumeratore. pdoesnotesape,asxisonlystoredintotheenapsulated \nfeldfirstofp. Wealsohandle,viaasmallextension,amoregeneral asewhenondition(2)isnottriviallytrue.AnobjetB \nissometimesreatedinmethodMandthenpassedasa parametertoaonstrutorofanotherobjetAandstored inafeldofA.Inthisase,ifAdoesnotesapeandthe \nmayleakpropertyofthefeldisfalse,thenBdoesnotesape bybeingstoredinA.Aommonexampleisthereationof anenumerationobjettoiteratethroughtheontentsofa \nlistorvetor.Inthisase,thevetorisusuallystoredin theenumerationobjet,buttheenumerationisusedloally anddoesnotesape.Figure4showsanexampleinJava \ninwhihanEnumerationobjetisusedtoenumeratethe elementsofavetor.Thealltoelementsreturnsanew VetorEnumeratorobjeteintowhihvhasbeenstored, \nbutvdoesnotesapeifedoesnotesape. Tohandlethisase,wedefneaderivedpropertynever leaks,whihislikeenapsulated,butallowsthesoure \nofthefeldtobeanewobjet,null,oraparametertoa methodoronstrutorinthefeld'slass.Ifnever leaksis true,thenthequestionofwhetherthefeld'sontentsan \nesapebeomesequivalenttowhethertheinputparameter anesapeintheallingmethod.Weanthenusenever leakstodefnetheadditionalpropertymayontainparam \nformethodsasshowninTable4,whihindiateswhethera parameterisonlystoredintoafeldofthemethodreeiver thatdoesnot\"leak\".Wealsodefneamorepreisederived \npropertymaystoreparam2(method,i)tobefalseinthease thatmayontainparam(method,i)istrue. Withthesenewproperties,weanextendouranaly\u00adsisinthefollowingmanner.SupposeaandidatevalueB \nispassedtoamethodwhosereeiveristheobjetA,and themaystoreparam2propertyisfalseforthatmethod,but mayontainparamindiatesthatBmaybestoredintoa \nfeldofA.Then,indeterminingifBesapes,wesimplyadd theextrarequirementthatAmustnotesapeeither,be\u00adausetheonlyplaeareferenetoBanbestoredisintoa \nnever leaksfeldofA.         probleIdoIain lines Swiftrun-tiIe of base+ base+ ode CHA CHA+FA \nompress textompression 910 9.78s 9.75s jess expertsystem 9734 4.11s 4.12s st datastrutures 1800 5.79s \n5.35s db databaseretrieval 1026 12.65s 12.32s si interpreter 1707 6.03s 5.87s java Javaompiler .18000 \n7.15s 7.16s mpeg audiodeompr. .3600 6.41s 5.77s rihards taskqueues 3637 4.78s 4.72s mtrt raytraing 3952 \n2.01s 1.61s jak parsergenerator .7500 5.08s 5.03s jlex sannergenerator 7590 4.11s 3.23s Table5:JavaAppliations \n 5PerformaneResults Inthissetion,wegiveresultsshowingthebeneftsofusing feldanalysis.Wefrstdesribetheexperimentalplatform, \ntheappliationsusedinourstudy,andsomeoverallperfor\u00admaneresultsforfeldanalysis.Wethenanalyzeindetail howofteneahfeldpropertyisappliable,andhowmuh \nJavaoverheadanbeeliminatedbyusingthisfeldproperty information. 5.1ExperimentalPlatform OurperformaneresultsarefortheSwiftompilersystem \nrunningunderTru64Unix(formerlyknownasDigitalUnix) onanAlphaworkstation.Theworkstationhasone667MHz Alpha21264out\u00adof\u00adorderproessor,whihhas64Kbyteon\u00adhipinstrutionanddataahes,anda4Mbyteombined \nboard\u00adlevelahe.SwiftisaompleteJavaoptimizingom\u00adpilerthatimplementsnumerousoptimizationsinadditionto thosedesribedabove,inluding:methodinlining,method \nsplitting,globalommonsubexpressionelimination,global odemotion,onditionalonstantpropagation,interproe\u00adduralaliasanalysis,exattypeanalysis,peepholeoptimiza\u00adtions,andtraesheduling.Italsoinludesanefetive \nregisteralloatorbasedonbiasedgrapholoring.Swiftis writteninJavaandtranslatesJavabyteodestoAlphama\u00adhineode.Thegeneratedodeisinstalledintoahigh\u00adperformaneJVMforJava1.2thathasamostly\u00adopying \ngarbageolletorandextremelyfastsynhronization[6].All resultsareforappliationsrunningwiththeJava1.2stan\u00addardlibraryandusinga100Mbyteheap. \n5.2GeneralResults Wemeasureourresultsforanumberofappliations,inlud\u00adingthoseintheSpeJVM98suite.Table5liststheapplia\u00adtionsandproblemdomains,aswellasthenumberoflines \nofode.Column4ontainstherunningtimesofeahap\u00adpliationwhenompiledviaSwiftinthebaseonfguration, withtheadditionoflasshierarhyanalysis(CHA).The \nbaseonfgurationinludesalloptimizationsexeptthose enabledbyCHAandfeldanalysis(FA).Theresultsinol\u00adumn4are1.18\u00ad2.33timesfasterthantheresultsforthe \nunderlyingJVM.Column5ontainstherunningtimewhen feldanalysisandtherelatedoptimizationsdesribedinthis paperareaddedtotheresultsmeasuredinolumn4.The \noverallresultsshowthatfeldanalysisimprovesperformane byabout0\u00ad27%,withageometrimeanofabout7%. Fieldanalysisforallofthesepropertiestakesonlyabout \n10%oftheompiler'sproessingtime,whihissignifantly smallerthanthetimeforregisteralloation.Also,wean proessanaverageofabout15000linesperseondduring \n Percent 10090 80 70 60 50 40 30 20 10 0| NFCB NFCB NFCB NFCB NFCB NFCB NFCB NFCB NFCB NFCB NFCB compr \njess cst db si javac mpeg richards mtrt jack jlex |  Figure5:TimingResults feldanalysis.Theseresultsinludethetimetoreadthe \nlassflesfromthedisk.Theoverallompilationspeedis approximatelythesameasthespeedoftheplatformCom\u00adpileratitshighestlevelofoptimization. \nTheperformaneimprovementsahievedbySwiftare stronglyafetedbythedeisiontouselass\u00adhierarhyanal\u00adysis.TheuseofCHAonvertsmanyvirtualmethodalls \ntodiretallsandimprovestheefetivenessofmethodin\u00adlining.Inaddition,itsuseenhanesthepreisionofother analyses,suhasaliasanalysisandesapeanalysis.How\u00adever,insomesituations,CHAannotbeusedeitherbeause \nofitsstartupoverhead,orbeauseofthepossibilityofdy\u00adnamiallyloadedlassesthatouldinvalidatethelosed\u00adworldassumptionmadebyCHA.Figure5showsthateven \nwithoutCHA,ourheapfeldanalysisanprovidesignif\u00adantperformaneimprovements.Thefgureshowsruntimes whenusingneitherfeldanalysisnorCHA(N)withthebase \nonfguration,usingfeldanalysis(F),usingCHA(C),and usingboth(B).Thetimesarenormalizedsothatthebase ase(N)ineahappliationis100%.8Theresultsforfeld \nanalysisalone(F)fndpropertiesforpakagefelds,butnot protetedfelds,whiletheresultsusingboth(B)alsofnd propertiesforprotetedfelds,sineallthesublassesofa \nlassareknownwhenCHAisused. Weobservefromthegraphthatdb,mpeg,mtrt,andjak beneftsignifantlyfromtheoptimizationsbasedonfeld \nanalysis,intheabseneofCHA.Conversely,si,rihards, andmtrtbeneftstronglyfromCHA.Hene,feldanalysis islearlyusefulandoftenhelpstheperformaneofapplia\u00adtionsinasesinwhihCHAdoesnothelp.Thereisalso \noftensynergybetweenthetwoanalyses,sinetheombina\u00adtionisbetterthaneitheraloneinappliationssuhasst, mtrt,andjlex. \n5.3DetailedResults Table6showsthestatidistributionoffeldpropertiesin ourappliations.Thelastolumnindiatesthetotalnum\u00adberofreferenefeldsineahappliation.Thepreeding \nolumnsindiatethenumberofreferenefeldswitheah property.Thesenumbersareobtainedforthebaseonfg\u00adurationwithCHAenabled.Thenumberoffeldproperties \n8Insomeases,usingeRAorfeldanalysisinreasesruntimesby asmallamount.Theseinreasesarelikelyduetoodelayouthanges \nthatresultininreasedinstrution-aheonfits.  ompr 5 9 8 13 2 13 22    exatnon\u00ad onst fnal inline\u00ad enap\u00ad \ntotal type null size able sulated felds jess 33 23 0 32 22 30 73 st 11 5 0 6 5 16 24 db 3 3 0 4 3 \n1 6 si 8 5 3 6 3 9 19 java 45 29 9 77 13 26 271 mpeg 65 103 54 109 52 70 140 rihards 0 7 15 21 7 \n14 80 mtrt 16 11 4 27 9 12 42 jak 21 21 6 24 13 14 90 jlex 21 38 32 39 33 55 98     total 228 \n254 131 352 162 260 Table6:StatiPropertyStatistisforRefereneFields disoveredwhenCHAisdisabledisslightlysmallerthanthe \nnumberdisoveredwhenCHAisenabled.Thenumbersbe\u00adomesignifantlysmallerinmostasesifpakagefeldsare notanalyzed,sinesomeappliationsmakeminimaluseof \nprivatefelds.9Overall,thetableshowsthatusefulproper\u00adtiesanbeprovedaboutahighperentageofthereferene felds.Inpartiular,thenumberoffeldsthatareenapsu\u00adlatedwithintheirontainingobjetisquitehigh. \nFigure6showshangesindynamiountsofrun\u00adtime heks.Theheightofthebarsindiatethenumberofrun\u00adtimeheksofeahkind,andallbarsarenormalizedsothat \nthetotalheksinthebasease(C)is100%.Thebasease inludesCHA,butdoesnotinludemethodinlining,sine inliningmighthangetheountsinunexpetedways.Nu\u00admerousrun\u00adtimehekshavealreadybeeneliminatedinthe \nbaseasebeauseofSwift'sstandardoptimizationsbased onommon\u00adsubexpressionelimination,exattypeanalysis ofvalues,andindutionvariableanalysis.Theseondbar \n(B)inludesbothCHAandfeldanalysis.Weobservethat feldanalysisishighlyefetiveatremovingrun\u00adtimenull heksandboundsheks,butnotastheks.Fieldanal\u00adysisisalsoefetiveatremovingmanyofthesmallnumber \nofarraystoreexeptionheks.(Theseheksareinluded intheastheksegment,butarenevermorethan1%of thetotalheks.) \nThoughnotshowninthegraph,signifantrun\u00adtime heksareremovedintheasewhenonlyprivatefeldsare 9Thedefaultaessforfeldswithoutmodifersispakage,sopro\u00adgrammersoftendelarefeldswithpakageaess,eveniftheyould \nbeprivate.  10090 80 70 60 50 40 30 20 10 Percent |||||||||| | CB CB CB CB CB CB CB CB CB CB CB NSF \nX NSF X NSF X NSF X NSF X NSF X NSF X compr jess cst db si javac mpeg richards mtrt jack jlex cst db \nsi si-mod javac jack jlex Figure6:DynamiCountsofRun\u00adtimeCheks Figure8:DynamiSynhronizationCounts | 0 \n Weexpetedtogetanimprovementinthedbbenhmarkbe\u00adauseoftheinliningofafeldinthedatabaseentryobjets, buttheperformaneimprovementwasonlyafewperent. \nInotherappliations,wefoundlittleornoimprovement. Weexpetthattherewillbeotherappliationsthatshow signifantimprovementfromobjetinlining. \nStakalloationhasbeenfullyimplemented(inluding theasewhereamethodMalloatesanobjetOthatis returnedtooneofM'sallersandthereforethestoragefor \nOhastobealloatedinthealler).Stakalloationresults inperformaneimprovementsof4\u00ad21%onfourappliations, andminimalimprovementsforotherappliations.Wehave \nnotinludedmoredetailedresultsinthispaper,beause, eventhoughfeldanalysisanhelpidentifyextraoppor\u00adtunitiesforstakalloation,inoururrentbenhmarksit \ndoesnotatuallyfndanynewopportunities(butitdoes NFC NFC NFC NFC NFC NFC NFC NFC NFC NFC NFC identifymoreopportunitiesforsynhronizationremoval,as \ncompr jess cst db si javac mpeg richards mtrt jack jlex desribednext).Oururrentimplementationwillalloate \nStringandStringBufferobjetsonthestak,butdoesnot Figure7:DynamiCountsofUnresolvedMethodCalls allowstakalloationofvariable\u00adsizedarrays,sostakallo\u00adationofthearraysinsideStringandStringBufferobjets \nanalyzed,buttheresultsareusuallymuhbetterwhenpak\u00ad agefeldsarealsoanalyzed.Similarly,signifantheksare \nalsoeliminatedwhenfeldanalysisisusedwithoutCHA,but havingCHAhelpsintheanalysisofprotetedfelds.CHA aloneeliminatesonlyasmallnumberofheks,mostlyby \ninreasingopportunitiesforommonsubexpressionelimina\u00ad tion. Figure7showshangesindynamiountsofvirtualand \ninterfaemethodalls.Again,methodinliningisnotused. Thebarsarenormalizedsothatthetotalnumberofnon\u00adisnoturrentlypossible. \n Swiftalsoimplementssynhronizationremoval.Foreah objetwhihdoesnotesapeathread,Swiftdesendsthe allhainofmethodsthattakethatobjetasanargument \nandompilesspeialunsynhronizedversionsofthemeth\u00ad odswhereneessary.Itmayalsohavetoompilealter\u00ad nateversionsofanyintermediatemethodsintheallhain, \neveniftheydon'tsynhronize.Swiftalsoremovessynhro\u00ad nizationfromanyenapsulatedfeldsoftheobjetduring thesametraversal.Figure8showstheperentageofsyn\u00adstatimethodalls(inludingresolveddiretalls)ineah \nappliationsis100%.Asbefore,thebarlabeled'F'rep\u00ad resentsfeldanalysisonlyappliedtoprivateandpakage felds.CHAishighlyusefulforresolvingmethodallsin \nmostofthebenhmarks.However,feldanalysisisnearly asefetiveinresolvingmethodallsinst,si,andjak. Also,intheresultsfordb,java,andjak,weseethatfeld \nanalysisanbeusefulforresolvinginterfaealls,sineit anhelpindeterminingtheexatlassofanobjetwithan hronizationsthatareeliminatedbyouroptimizationsfor \n theappliationsthatatuallydosynhronization.Foreah appliation,thefrstbar('N')representsthetotalnumber \nofsynhronizationswithnooptimizations,theseondbar ('S')representsthenumberwhenthesimpleanalysisofSe\u00ad tion4.1isapplied,thethirdbar('F')representsthenumber \nwhentheadditionalinformationaboutenapsulatedfelds isused,andthelastbar('X')representsthenumberwhen theextensioninSetion4.2isused. \ninterfaetype. AsindiatedinTable6,ouranalysisfoundasignifant OurtehniquesaresometimesfoiledbyompliatedJava \n libraryode.Alargeperentageofthesynhronizationin numberoffeldswithinlineableobjets.However,theef\u00ad fetsofinliningonperformanedepend,ofourse,onwhih \nobjetsaremostheavilyused.Inoururrentsystem,weob\u00adjavaandsiisonenapsulatedflestreamhandlesthatdon't esape,butouranalysisisdefeatedbythemanysublasses \nofthestandardflestreamlasses,someofwhihhaveun\u00ad taina11%improvementinmtrtbeauseofobjetinlining. 342 usualefetsontheommonfelds.Tohandlethisase,we \nwouldneedtodoextensiveontext\u00adsensitiveanalysisand loningorhangetheappliationstousealessomplexfle streamhierarhy.Asanexperiment,wemodifedsitouse \naprivateversionofPushbaklnputStreamthatismodifed soitdoesnotinheritfromFilterlnputStream,whihisthe soureofmanyoftheanalysisproblems.Theresultsfor \nthemodifedversionofsi(whihhasnootherhanges)are labeledas'si\u00admod'. Figure8showsthatthesimpleanalysiseliminates5\u00ad20% \nofthesynhronizationsinmostoftheappliations.How\u00adever,theuseofenapsulatedfeldinformationdramatially improvesthesuessoftheanalysisforst,si\u00admod,andjlex. \nInaddition,theextensiondesribedinSetion4.2isruial foreliminatingthesynhronizationsinsi\u00admod.Thereason \nisthatmostsynhronizationsouronaByteArraylnput\u00adStreamobjet,whihisfrstreated,andthenstoredinside aPushbaklnputStreamobjet.Hene,ourextensionisim\u00adportantforhandlingtheommonstrutureofthemulti\u00adlayerinputstreamsreatedusingtheJavalibrary.Overall, \noursynhronizationremovalimprovestheperformaneof st,si\u00admod,andjlexby8\u00ad27%. 6RelatedWork Therehasbeenavarietyofreentworkthatattemptsto \nuseexattypeorfeldinformationtoimprovethee\u00c6ieny oraurayofsomekindofanalysis.Type\u00adbasedaliasanal\u00adysis[10]makesuseofthestrongtypingpropertiesoflan\u00adguageslikeJavatoeliminatepotentialaliasesbetweenref\u00aderenesbeausetheyaessdiferentfeldsorbasetypes. \nRuf[17]hasusedtypeinformationtopartitiondatafow problemsfore\u00c6ieny.However,weareunawareofany suhtype\u00adorfeld\u00adbasedanalysisthatattemptstoprove \npropertiesabouttheontentsoffelds. Diwanetal.[11]proposestheuseofaggregateanaly\u00adsistodetetwhenapolymorphidatastrutureisusedina \nmonomorphiwaybylookingatthetypesofallassignments toapartiularfeld.Forexample,theanalysisisusedto showthatalinkedlistofgeneralobjetsatuallyontains \nonlyobjetsofaertainlassoritssublasses.Thisanalysis isrelatedtoourfeldanalysisthatdeterminesexattypes, \nbutaggregateanalysisdoesnotmakeuseofanymodularity propertiesinthelanguage,orinvestigateanyotherproper\u00adtiesoffelds.DetlefsandAgesen[8]desribeauseforthe \nfinalpropertyoffelds,whihtheyall\"immutability\", whendeidingwhethertoinlinearesolvedvirtualmethod allinthepreseneofdynamiloading.Fortheirappli\u00adation,theyomputeimmutabilityforprivatefeldsonly, \nanddonotappeartodetettheasewhenthismightbe \"leaked\"inaonstrutor. ProgramhekerssuhasESC\u00adJava[9]allowannotations \nthatspeifypropertiesoffeldsthatareverifedaspartof thehekingproess.Thesepropertiesinludeaspeifa\u00adtionthatafeldisnon\u00adnullorthatamethodreturnsanew, \nunaliasedobjet.Ourompilerattemptstodisoverthese propertiesautomatially,ratherthanusingprogrammeran\u00adnotations. \nDolbyandChien[12]desribeanobjetinliningopti\u00admizationforC++programs.Theiranalysisusesafully ontext\u00adsensitiveinterproeduralframeworkandthusallows \nobjetinlininginspeifasesonafeldthatannotbein\u00adlinedingeneral.Inpartiular,theydonotrequirethat thefeldbeinitializedwithanewobjetintheonstru\u00adtor.However,theiranalysistimesaremeasuredinminutes, \nwhereasouranalysisisalwaysonlyasmallnumberofse\u00adonds.Also,weallowanobjettobeinlined(withaheader), evenifareferenetotheobjetesapestheloalontext.A \nlargeamountofrelatedworkwithrespettoobjetinlining (orunboxing)alsoexistsforfuntionallanguages[14,16,19], \nasdesribedin[12]. Therehavebeenseveralreentdesriptionsofoptimiza\u00adtionsbasedonesapeanalysis.Mostofthesehavefoused \nononvertingheapalloationstostakalloationsandre\u00admovingunneessarysynhronization.Blanhet[3]desribes atehniquewheretypeinformationissummarizedbyanin\u00adtegerheight.Interproeduralanalysisisthenusedtoom\u00adputewhatisleakedbyeahmethod.Theapproximation \noftypesbyintegersleadstosomeimpreision,butinex\u00adperiments,thislakofpreisionhasnotmadeadiferene. Theanalysisitselfisquitefastandefetive.Bogdaand \nHolzle[4]useatwo\u00adpassinterproeduralanalysistoremove unneessarysynhronization.Theirshemeextendsthesim\u00adpleanalysisofSetion4.1toonemorelevel(althoughitis \nfow\u00adinsensitive),andanprovethatanobjetOdoesnot esapeifitisonlyreahableviaapathontainingoneheap objet(notinludingitself).Theperformaneresultsare \nfairlypromising,butthepaperhasnodataonthee\u00c6ieny oftheanalysisitself.Ourapproahalsoextendsthesimple analysis,butanpotentiallyproveobjetsdon'tesapeeven \nifreahablebyapathofmultipleheapobjets. WhaleyandRinard[21]andChoiet.al.[5]performes\u00adapeanalysisbyusingavariationonthepoints\u00adtographgen\u00aderallyusedinaliasanalysis.Thepreisionoftheseshemes \nanbytunedbyhangingtheontextsensitivityoftheanal\u00adyses.Aldrih[2]fndsallgroupsofobjetsthatmightbe aessibleviaaglobalvariable(andheneesapeathread). \nTheanalysisrequirestheentireprogram,sineitproeeds bymarkingsetsofobjetsthatmightbestoredinglobal variables,thensetsofobjetsthatmightbestoredinthese \nobjets,andsoon,untilafxedpointisreahed.Only Blanhet[3]reportsonanalysise\u00c6ieny,soitishardto omparemostofthesesystemswithoursystemintermsof \nompilationtime. Asfarasweknow,noneofthepreedingsystemsusefeld aesspropertiestoaidintheiresapeanalysis.SomeJava \nompilersnodoubtperformextraoptimizationsforfinal felds,butnoneseemtohaveexploitedfeldpropertiesto thesameextentasSwift. \n7Conlusion Wehavedesribedfeldanalysis,aninterproeduralanaly\u00adsisthatdeterminesusefulpropertiesoffeldsinalow\u00adost \nmannerbyexploitingthemodularitypropertiesofalan\u00adguage.Fieldanalysisdoesnotrequireanalysisofanentire programandaneliminatenumerousrun\u00adtimeheksthat \narenoteliminatedbyotheroptimizations.Inaddition,it analsobeefetiveinresolvingvirtualmethodalls,and isusefulinsituationswherelasshierarhyanalysisisnot \nappropriate.Fieldanalysistakesonlyabout10%ofthe ompiletimeandisinexpensiveenoughtobeusefulina ompilerthatisinvokeddynamiallyduringtheexeution \nofanappliation. Wehavealsoshownthatfeldanalysisanhelpredue theanalysisburdenofoptimizationssuhasobjetinlining, \nstakalloation,andsynhronizationremoval.Bymaking useofpropertiesdisoveredviafeldanalysis,wehaveimple\u00admentedusefulversionsoftheseoptimizationsthataremuh \nlessinexpensivethanorrespondingversionswhihdofull interproeduraldatafowanalysis.Overall,speedupsforall \ntheoptimizationsenabledbyfeldanalysisaverage7%on asetofprograms,inludingtheSpeJVM98appliations, withsomeappliationtimesreduedbyupto27%. \nTherearemanyotherfeldpropertiesthatmightbeuse\u00adfultoinvestigate.Ifanalysisshowsthatanintegerfeld isalwaysassignedvalueswithinaertainrange,thenthe \nstoragesizeforthefeldanpotentiallybereduedbythe ompiler.Itwouldalsobeusefultoprovethatelementsof anarrayreferenedbyafeldarealwaysassignedobjetsof \naspeiflass.Finally,evenmoreomplexpropertiesmay beuseful.Aommonidiominobjet\u00adorientedprogramsis tohavealassthatontainsanarrayandalsoa\"urrent\" \nindexintothearray.Withfeldanalysis,theompilermay beabletoprovethattheindexfeldisalwayslessthanthe lengthofthearray.Ifso,theompilerwillbeabletoelim\u00adinateboundshekswhenevertheindexisusedtoloadan \nelementfromthearray. Aknowledgments WewouldliketothankJefDean,RaymieStata,andMark Vandevoorde,whoworkedontheearlydesignandimple\u00admentationofSwift,andGirishKumar,whoworkedonthe \nfrstimplementationofstakalloation.Wewouldalsolike tothankAmerDiwanandtheanonymousrefereesfortheir omments. \nReferenes [1]JavaMemoryModelMailingList.AtURLhttp: //www.s.umd.edu/.pugh/java/memoryModel/. [2]J.Aldrih,C.Chambers,E.G.Sirer,andS.Eggers. \nStatiAnalysesforEliminatingUnneessarySynhro\u00adnizationfromJavaPrograms.InSixthInternational StatiAnalysisSymposium,Sept.1999. \n[3]B.Blanhet.EsapeAnalysisforObjetOrientedLan\u00adguages.AppliationtoJava.In1999ACMSIGPLAN ConfereneonObjet\u00adOrientedProgrammingSystems, \nLanguages,andAppliations,Nov.1999. [4]J.BogdaandU.H6olzle.RemovingUnneessarySyn\u00adhronizationinJava.In1999ACMSIGPLANConfer\u00adeneonObjet\u00adOrientedProgrammingSystems,Lan\u00adguages,andAppliations,Nov.1999. \n[5]J.\u00adD.Choi,M.Gupta,M.Serrano,V.C.Sreedhar, andS.Midkif.EsapeAnalysisforJava.In1999 ACMSIGPLANConfereneonObjet\u00adOrientedPro\u00adgrammingSystems,Languages,andAppliations,Nov. \n1999. [6]CompaqComputerCorporation.CompaqFastVirtual MahineV1.2.2\u00ad1forAlpha.AtURLhttp://www. ompaq.om/java. \n[7]J.Dean,D.Grove,andC.Chambers.Optimization ofObjet\u00adOrientedProgramsUsingStatiClassHier\u00adarhyAnalysis.InECOOP'95,pages77.101,Aug. \n1995. [8]D.DetlefsandO.Agesen.InliningofVirtualMethods. InECOOP'99,pages258.278,June1999. [9]D.L.Detlefs,K.R.M.Leino,G.Nelson,andJ.B. \nSaxe.ExtendedStatiCheking.TehnialReport159, Compaq,1998. [10]A.Diwan,K.S.MKinley,andJ.E.B.Moss.Type\u00adBasedAliasAnalysis.In1998ACMSIGPLANCon\u00adfereneonProgrammingLanguageDesignandImple\u00admentation,June1998. \n[11]A.Diwan,J.E.B.Moss,andK.S.MKinley.Sim\u00adpleandEfetiveAnalysisofStatially\u00adTypedObjet\u00adOrientedPrograms.In1996ACMSIGPLANConfer\u00adeneonObjet\u00adOrientedProgrammingSystems,Lan\u00adguages,andAppliations,Nov.1996. \n[12]J.DolbyandA.Chien.AnEvaluationofAuto\u00admatiObjetInlineAlloationTehniques.In1998 ACMSIGPLANConfereneonObjet\u00adOrientedPro\u00adgrammingSystems,Languages,andAppliations,Nov. \n1998. [13]D.GayandB.Steensgaard.StakAlloatingObjets inJava.AtURLhttp://www.researh.mirosoft. om/apl/stakallo-abstrat.ps. \n[14]C.Hall,S.L.Peyton\u00adJones,andP.M.Sansom.Un\u00adboxingUsingSpeialization.InFuntionalProgram\u00adming,Glasgow1994.WorkshopsinComputingSiene. \nSpringer\u00adVerlag,1995. [15]T.LengauerandR.E.Tarjan.AFastAlgorithmfor FindingDominatorsinaFlowgraph.ACMTrans.Prog. \nLang.Syst.,1(1):121.141,July1979. [16]X.Leroy.UnboxedObjetsandPolymorphiTyping. In19thSymposiumonthePriniplesofProgramming \nLanguages,pages177.188,Jan.1992. [17]E.Ruf.PartitioningDatafowAnalysesUsingTypes. InACMSIGPLAN/SIGACT'97SymposiumonPrin\u00adiplesofProgrammingLanguages,Nov.1997. \n[18]D.J.Sales,K.H.Randall,S.Ghemawat,andJ.Dean. TheSwiftJavaCompiler:DesignandImplementation. TehnialReport2000/2,CompaqWesternResearh \nLaboratory,Apr.2000. [19]Z.Shao,J.H.Reppy,andA.W.Appel.UnrollingLists. InACMConfereneonLispandFuntionalProgram\u00adming,June1994. \n[20]V.C.SreedharandG.R.Gao.ALinearTimeAl\u00adgorithmforPlaingPhi\u00adnodes.In22ndAnnualACM SymposiumonPriniplesofProgrammingLanguages, \nJan.1995. [21]J.WhaleyandM.Rinard.CompositionalPointer andEsapeAnalysisforJavaPrograms.In1999 ACMSIGPLANConfereneonObjet\u00adOrientedPro\u00adgrammingSystems,Languages,andAppliations,Nov. \n1999. \n\t\t\t", "proc_id": "349299", "abstract": "<p>We present a new limited form of interprocedural analysis called  <italic> field analysis</italic> that can be used by a compiler to reduce the costs of modern language features such as object-oriented programming,automatic memory management, and run-time checks required for type safety.Unlike many previous interprocedural analyses, our analysis is cheap, and does not require access to the entire program. Field analysis exploits the declared access restrictions placed on fields in a modular language (<italic>e.g.<italic> field access modifiers in Java) in order to determine useful properties of fields of an object.</p><p> We describe our implementation of field analysis in the Swiftoptimizing compiler for Java, as well a set of optimizations thatexploit the results of field  analysis. These optimizations include removal of run-time tests, compile-time resolution of method calls, object inlining, removal of unnecessary synchronization, and stack allocation.  Our results demonstrate that field analysis is efficient and effective.  Speedups average 7% on a wide range of applications, with some times reduced by up to 27%.  Compile time overhead of field analysis is about 10%.</p>", "authors": [{"name": "Sanjay Ghemawat", "author_profile_id": "81100199690", "affiliation": "", "person_id": "P259836", "email_address": "", "orcid_id": ""}, {"name": "Keith H. Randall", "author_profile_id": "81100063247", "affiliation": "", "person_id": "P159129", "email_address": "", "orcid_id": ""}, {"name": "Daniel J. Scales", "author_profile_id": "81100175238", "affiliation": "", "person_id": "P59338", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/349299.349343", "year": "2000", "article_id": "349343", "conference": "PLDI", "title": "Field analysis: getting useful and low-cost interprocedural information", "url": "http://dl.acm.org/citation.cfm?id=349343"}