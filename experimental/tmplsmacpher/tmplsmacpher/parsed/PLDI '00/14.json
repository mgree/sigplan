{"article_publication_date": "05-01-2000", "fulltext": "\n C=AxB Cl,lCl,2 Al,lAl,2 Bl,lBl,2 =x C2,lC2,2A2,lA2,2B2,lB2,2 Cl,l=Al,lBl,l+Al,2B2,l Cl,2=Al,lBl,2+Al,2B2,2 \nC2,l=A2,lBl,l+A2,2B2,l C2,2=A2,lBl,2+A2,2B2,2 Figure1:Reursiveformulationofmatrixmultipliation. simplifytheprogrammer'stask. \nAstheprinipalontributionofthispaper,wepresent aompilertransformationthatanbeusedtoonvertor\u00addinaryloopnestsontainingintoreursiveformautomati\u00adally.Thetransformationhasseveralpotentialappliations, \nalthoughthispaperfousesonusingittoimproveunipro\u00adessoraheperformane.Thetransformationprimarilyre\u00adliesonordinarydependeneanalysis.Itanbeappliedto \narbitraryloopnestsinludingimperfetloopnests,multi\u00adpleonseutiveloopnests,andloopsontainingondition\u00adals.(Itisalsofastasdisussedfurtherbelow.)Wehave \nimplementedthistransformationintheRiedHPFom\u00adpilerinfrastruture.Thealgorithmhassuessfullytrans\u00adformedloopnestsontainingunexploitedreuseintoreur\u00adsiveforminseveralodesinludingmatrixmultipliation, \nCholeskyandLUfatorizationwithoutpivoting,andEr\u00adlebaher,animpliitfnite\u00addifereningshemeforomput\u00adingpartialderivatives.(Transformingthepivotingversions \nofLUandCholeskywouldrequireanadditionalanalysis step,asdisussedinSetion4.) Akeystepinouralgorithmisbasedonalooptrans\u00adformationtehniqueallediterationspaesliing,reently \ndesribedbyPughandRosser[27,28].Iterationspaesli\u00adingusestransitivedependeneanalysisonthedependene graphtoomputetheinstanesofapartiularstatement \nthatmustpreedeorfollowagivensetofinstanesofan\u00adotherstatement.Thisisapowerfultehniquethatwebe\u00adlieveouldhavewideappliabilityinoptimizingompilersin \nthefuture.PughandRosser'salgorithmisquiteexpensive, however,beauseitusesaverygeneraldependenerepre\u00adsentation,andbeauseitpreomputesalltransitivedepen\u00addenesintimeO(N3)foragraphwithNverties. \nAseondontributionofthispaperisanimprovedalgo\u00adrithmfortransitivedependeneanalysisthatismuhmore e\u00c6ientinpratiethantheoneusedbyPughandRosser. \nInpartiular,ouralgorithmmakestwomajorimprovements. First,itusesane\u00c6ientandunorthodoxmatrixrepresen\u00adtationofdependenediretionsthatgreatlyspeedsupop\u00aderationssuhasonatenationanduniononpairsofde\u00adpendenes(defnedinSetion3).Ourrepresentationisless \ndetailedbutitdoesnotappeartolosesignifantinforma\u00adtionforommonasesinpratie.Seond,ouralgorithm omputestransitivedependeneinformationtoasingledes\u00adtinationnodeondemand,andformanyodesitisableto \nomputealltransitivedependenesinidentonapartiular statementintimethatislosetolinearinthesizeofthe dependenegraph.(althoughitanstillrequiretimethat \nisO(N3)forworstasegraphs,asdesribedinSetion3). Together,theseimprovementsallowustotransformbenh\u00admarkswithafewthousandlinesofodeinafewminutes,and(webelieve)makeiterationspaesliing(aswellasthe \nreursiontransformation)pratialevenforlargeodes. Finally,weevaluatethebeneftsofthereursiontrans\u00adformationusingmeasurementsofseveralmatrixodes(men\u00adtionedabove)onauniproessorSGIworkstationwithatwo\u00adlevelahehierarhy.Comparedwiththeoriginalunbloked \nversionsofthesameodes,thegeneratedreursiveodes arefasterbyfatorsof3x,4xand5xinLU,Choleskyand matrix\u00admultiply.Thereursiveodesperformomparably \nwithoneandtwo\u00adlevelblokedversionsofmatrix\u00admultiply, andoutperformaone\u00adlevelblokedversionofLUfatoriza\u00adtion.Weobserve,however,thatthereursiveversionssufer \nfromsimilarproblemswithonfitmissesasdoesbloking, andrequiresimilarstrategies(e..g,buferopying)toredue \nsuhmisses[17,8,12]. Thenextsetiondesribesouralgorithmforthereur\u00adsiontransformation,assumingtransitivedependeneinfor\u00admationexists.Setion3desribesourimprovedalgorithm \nfortransitivedependeneanalysis.Thesubsequentsetions presentourexperimentalresults,ompareourresultswith \nrelatedwork,andthenonludewithabriefsummaryand desriptionoffuturework. 2ReursionTransformation Givenaodesegmentonsistingofoneormoreonseu\u00adtiveloopnests,thereursiontransformationreatesoneor \nmorereursiveproedures(forgroupsofrelatedstatements) andtransformstheoriginalodetoinludeinitialallsto \ntheseproedures.Althoughmemoryhierarhyoptimization istheprimaryfousofthispaper,thetransformationan beusedfordiferentpurposesbyreplaingfourspeifde\u00adisionstepslistedinsetion2.2.Theoreanalysisandode \ngenerationsteps,however,neednothange.Below,wefrst presentthereursiontransformationinageneralframework, \nandthendesribehowweperformthefourdeisionsteps forthespeifgoalofimprovingaheperformaneofse\u00adquentialodes. \nThegeneralstrategyofthealgorithmanbeintrodued usingtheloopnestfromLUshowninFigure3.Thef\u00adnalgeneratedodeisshowninFigure4.Thealgorithm \nfrstpiksstatement82inLUasa\"key\"statementthat willbeusedtodrivethetransformation.Thejandiloops surrounding82arehosentobeenumeratedreursively,so \nthattherearefourreursivealls.Thereursiveproedure isparameterizedbyformalparameters( bj,ubj, bd,ubd) representingtheboundsofthesereursiveloops,i.e.,repre\u00adsentingtheiterations{(i,j)I \nbj:j:ubj1 bd . :i:ubdThegoalistoexeutetheseiterationsof82withasingle representativealltotheproedure(alledthe\"urrent\" \nreursiveall).Thekeyanalysisstepinthealgorithmisto determinewhihiterationsofeverystatement(inluding82) \nintheoriginalodemustbeexeutedwithinthesameallto thereursiveproedure,inordertopreservedependenes. Thisstepdiretlyusestheresultsoftransitivedependene \nanalysis.Theresultingsymboliiterationsetsareuseddi\u00adretlytogeneratetheodeforthereursionbasease,as showninFigure4.Finally,additionalodeissynthesized \nforthereursivealls,andanIFstatementissynthesized todeidewhetherthebaseasehasbeenreahed.This loopnestwillbeusedasarunningexampletoillustratethe \ndetailsofthealgorithm. Beforedesribingthealgorithm,wefrstintroduesome notationandterminology. 2.1NotationandDefnitions \nDefnition1.Areursiveloopisaloopwhoseitera\u00adtionspaewillbeenumeratedreursively.Agener\u00adatedreursiveproedurewithNreursiveloopswill \nbeparameterizedbytheformalparametersR jormal= (lb,ub, ,lb,ubN). llN Defnition2.LetRratualdenoteanarbitraryvetorofa\u00ad \ntualvalues(symboliexpressions)fortheparameters R jormal.Inthealgorithmbelow,asinglesuhRratual maydenotearangeofiterationsexeutedoverseveral \nreursivealls. Defnition3.Foreahstatementsthathasbeeninluded inareursiveproedure,wedefnethreesymboliit\u00aderationsets: \nCurrent(s)=iterationsetofsthatmustbeexeuted inthe\"urrent\"reursiveall. Previous(s)/Future(s)=theiterationsetofsthat \nmustbeexeutedbefore/aftertheurrentreur\u00adsiveallrespetively. Alltheseiterationsetsareimpliitlyparameterized \nbytheformalparametersofthereursiveproedure, R jormal.Forsomeatual(symboli)parametervalues Rratual,weanomputespeifinstanesofthesesets, \nwhihwedenoteasCurrent(s)[Rratual]. Defnition4.Foreahpairofstatements(sl,s2),wedefne twofuntions: Before(sl,s2)[IJ=theiterationsetofslthatmust \nbeexeutedbeforetheiterationset1ofs2. After(sl,s2)[IJ=theiterationsetofslthatmustbe exeutedaftertheiterationset1ofs2. \nAfter[]istheinversefuntionofefore[].Thesetwo funtionsapturethetransitivedependenebetween statementsslands2,andareomputedondemandby \nthetransitivedependeneanalysisalgorithmdesribed insetion3. Alltheiterationsetsorfuntionsdesribedinthissetion \narerepresentedassymboliintegersetsormappingsusing theOmegalibrary[14]. 2.2OverviewofAlgorithm ThereursiontransformationalgorithmisshowninFig\u00adure2.Tosimplifythedesriptionofthealgorithm,weini\u00adtiallyignoreIFstatementsandloopswithnon\u00adunitstrides. \nSetion2.3.3desribessimpleextensionstothealgorithm tohandletheseissues. Themajorstepsofthereursiontransformationareas \nfollows.Thisdesriptionloselyfollowsthestrutureofthe top\u00adlevelproedureReursion-Transformation(C,D). (1)Chooseasetofstatementsalled\"key\"statements \ntodrivethealgorithm(KeyStmtsinFigure2).Multiple keystatementsanbeinludedinasinglereursivepro\u00adedure,allowingustoapturemorereuse.Furthermore, \nseparategroupsofindependentstatementsanbeputinto separatereursiveproeduresgeneratedfromdiferentkey statements.ForeahkeystatementskeyEKeyStmtsthat \nhasnotyetbeeninludedinanyofthealreadygenerated reursiveproedures,trytoreateareursiveproedurefor itthroughthefollowingsteps. \n(2)Chooseasubsetoftheloopssurroundingskey(Rloops inFigure2)toenumeratereursively.Thesewillbethere\u00adursiveloopswithparameterslbkandubkasinDefnition1 \nabove. (3)Deidetheorderofmakingreursivealls(Rorderin Figure2).Reursiveallsatalllevelsaremadeaordingto \nthisorder.Forexample,intheaseofLUinFigure3,loops jandiarehosenasthereursiveloops,andthereursive orderspeifessimplythatiisdividedbeforejandthetwo \nhalvesofeahloopareexeutedinforwardorder. (4)ComputeasetRstmtsthatholdsallthestatements thatshouldbeinludedinthereursiveproedure.Foreah \nstatementsERstmts,omputeCurrent(s),i.e.,thesym\u00adboliiterationsetofsthatmustbeexeutedinasingle reursiveall.BothofthesearedonebyfuntionCompute\u00adIter-Setswhihusesinformationfromtransitivedependene \nanalysis,i.e.,theeforeandAftermappingsdefnedabove. (5)Thealgorithmneverfailstoomputealegaliteration setCurrent(s)foranystatement.Thewayfailureours, \nhowever,isthattheiterationsetsmaynotbesu\u00c6ientlyre\u00addued(e.g.,intheworstase,alltheiterationswillsimplybe \nexeutedinasinglereursiveall).Therefore,weexamine Current(s)VsERstmtstodeterminewhetherthetrans\u00adformationwillbeproftable(thisisdonewithinfuntion \nBakward-Sliing).Ifthetransformationisunproftable,an emptysetofstatements,Rstmts,isreturned. (6)IfRstmts \n,wehavea =0legal,proftabletransfor\u00admation.Create-Reur-Pro(Rstmts,R jormal,Rorder)re\u00adatesareursiveproedurewithparametersR \njormalthat reursivelyexeutesCurrent(s),VsERstmts.Transform\u00adOriginal-Code(C,Rstmts,Rloops)transformstheoriginalode \nsothatallstatementinstanesinludedinthereursivepro\u00adedurearereplaedbyaninitialalltotheproedure. Theaboveproessisrepeatedforallremainingkeystate\u00adments.Allstatementinstanesinludedinapreviouslyre\u00adatedreursiveproedureareexluded(bysubtratingthem \nfromthe\"original\"iterationsets)whenproessingthenext keystatement.Thisensuresthattheabovealgorithmnever \ndupliatesanystatementinstanes.l Theoreofthealgorithmisinsteps(4)and(6),and thesearedesribedinmoredetailinSetions2.3and2.4. \nTheremainingfourstepsdependonthepartiulargoalof thetransformationandthespeifsofthesestepsforim\u00adprovingaheperformanearedesribedinSetion2.5. \n2.3ComputingIterationSets InFigure2,thefuntionCompute-Iter-Setsomputes Current(s),Previous(s)andFuture(s)foreahstatement \nsthatshouldbeinludedinthereursiveproedurefora partiularkeystatementskey.Thefuntionusesateh\u00adniquealled\"iterationspaesliing\"[28]toomputethese \niterationsets.Thistehniqueisanalogousto\"programsli\u00ading\"[26],exeptthatitoperatesoniterationsets(i.e.,in\u00adstanes)ofstatementsratherthanentirestatements.Fora \ngivensetofiterations,1o,ofastatementSo,iterationspae sliingomputesthespeifsetofiterationsofeahstate\u00admentsthatmustexeutebefore(bakwarditerationspae \nsliing)orafter(forwarditerationspaesliing)thegiven iterationsofSo.Theseanbeomputedsimplybyapplying theeforeandAfterfuntionsdefnedearlier,whihare \nobtainedfromtransitivedependeneanalysis. Forthereursiontransformation,skeyservesasSoand theiterationsetdefnedbytheparametersR \njormalis1o. Thethreeiterationsetsofskeyarefrstinitializedasfollows. Restrit-Bounds(skey,R jormal)initializesCurrent(skey)by \n.ThisdoesnotapplytoIFstatementsandDOloopheaders.Side\u00adefetsinthesestatementsarehandledasdesribedinSetion2.3.3. \ndok=1,N 1 doi=k+1,N s:A(i,k)=A(i,k)/A(k,k) J.:doj=k+1,N I: doi=k+1,N s: A(i,j)=A(i,j) A(i,k)'A(k,j) . \nInitialdeisions: skey=s. Rloops={J,I} R jormal=(lbJ,ubRorder=(lbJ,mJ, (mJ+1,u J,lbI,ubI) lbI,mI)-(lbJ,mJ,mI+1,ubI)\u00adbJ,lbI,mI)-(mJ+1,ubJ,mI+1,ubI) \nCompute-Iter-Sets: Fpars={(ubJ+1,N,2,Ppars={(2,lbJ-1,2,Ne ore(s,s)={(k,j,ie ore(s.,s.)={(k,j,i .. N),(lbJ),(lbJ,u)-(k',)-(k', \n,ubJ,ubI+1,N)} bJ,2,lbI-1)}i')Ik'<k,i'<i}j',i')Ik'<k,j'<j,i'<i} Current(s)={(k,j,i)I1<k<min(ubJ,ubI)-1,max \n(k+.1,lbJ)<j<ubJ,max(k+1,lbI)<i<ubI} Previous(s. )={(k,j,i)I1<k<lbJ-2,k+1<j<lbj -1,k+1<I<Nor1<k<min(ubJ-1,lbI\u00ad \n2),max(k+1 Bakward-Sliing: Previous(s)=e oe ore(s. ,.s .)[CurreubI)-1,k+e ore(s. ,s .)[CurreubI)-1,k+Previous(s)=e \no ,lbJ)<j<ubJ,k+1<i<lbI-1} re(s,s)[Previous(s)] ... nt(s)]={(k,j,i)I1<k<min(ubJ, 1<j.<ubJ,k+1<i<ubI} \nnt(s)]={(k,i)I1<k<min(ubJ, .... ={(k,i)I1<k<lbJ-2,k+1<i<N<min(ubJ-1,lbI-2),k+1<i<lbICurrent(s)=e ore(s,s)[Current(s)]-P \n.... ={(k,i)Imax(lbJ,lbI)-1<k<min(ubjmax(k+1,lbI)<I<ubI} 1<i.<ubI} re(s,s)[Previous(s)] or1<k -1} revious(s) \n,ubI)-1,. Figure3:ComputedIterationSetsofLU frstonstrutingtheoriginaliterationsetofskey,thenre\u00adstritingtheiterationrangeofeahreursivelooplktobe \nwithinthelowerandupperreursiveboundparameterslbk andubk.ToinitializePrevious(skey)andFuture(skey), wefrstomputetheiterationsofthereursiveloopsthat \npreedeorfollowtheiterationsR jormalinthereursiveall order(PparsandFpars).WetheninitializePrevious(skey) \nbysubstitutingeahRratualEPparsforR jormalin Current(skey)andtakingtheunionoftheresultingsets (Future(skey)isinitializedsimilarly). \nForexample,inFigure3,Current(s.)isfrstinitial\u00adizedbyrestritingtheoriginaliterationsetofswiththe R parametersinRjormal.Previous(s.)anthen.beom\u00adputedbyfrstreplainglbJ,ubJ,lbI,ubIinCurrent(s.)with \n(2,lbJ-1,2,)and(lbJ,ubJ,2,lbI-1)respetively,then takingtheunionofthetwoiterationsetsobtained. Rstmtsisinitializedwiththeemptysetinsteadofon\u00adtainingskey.Thiswillausethethreeiterationsetsof \nskeytobereomputedandexaminedforproftabilityin Bakward-Sliing.Thisisneessarytoguaranteetheor\u00adretnessandproftabilityofthehosenkeystatement. \nInFigure2,Bakward-SliingisalledfrstwithinCompute\u00adIter-Sets.Bakward-SliingandForward-Sliingthenall eahotherrepeatedlyuntilnomorestatementsshouldbe \ninludedinRtmts.Thesetwofuntionsaredesribednext. 2.3.1BakwardReursionSliing Thisstepisneessarytoguaranteetheorretnessofthe \ntransformation.Itensuresthatanyomputationthatmust exeutebeforeapartiulariterationIofstatementskeyis eitherperformedinthesamereursiveallasI(skey)or \ninpreviousreursivealls.Lateron,theodegeneration stepensuresthattheoriginalorderamongCurrent(s)VsE Rstmtsispreservedwithineahreursiveall.Takento\u00adgether,theseensurethatnosemantisoftheoriginalode \nwillbeviolated. InFigure2,Reahable-Into(D,skey)returnsallthestate\u00admentsthathavesomedependenepathsintoskeyinthe \ndependenegraph.SubtratingRstmtsgivesAddStmts, theadditionalstatementsthatneedtobeinludedinthe reursiveproedure. \nForanarbitrarystatementsEAddStmts,efore(s, skey)[Previous(skey)]givestheiterationsetofsthatmust exeutebeforetheiterationsetofskeyinpreviousreursive \nalls.Thisisexatlytheiterationsetofsthatmustexeute beforetheurrentreursiveall(i.e.,Previous(s)).Simi\u00adlarly,efore(s,skey)[Current(skey)]givestheiterationset \nofsthatmustexeutebeforeorduringtheurrentreur\u00adsiveall.Thedifereneofthesetwosetsgivestheiteration setofsthatmustexeuteduringtheurrentreursiveall \n(Current(s)).OneCurrent(s)isomputed,Future(s) anbeomputedasU\"r.....Ear Current(s)[Rratual].(This isusedlaterinForward-Sliing.) \nConsidertheodeofLUinFigure3.InitiallyRstmts= 0,AddStmts=Reahable-Into(D,s)={s.,s}.Reom\u00ad .. putingPrevious(s)=efore(s,s)[Previous(s)]and \n.... Current(s.)=efore(s,s.)[Current(s)]-Previous(s.) .. produesnohange.Previous(s)andCurrent(s.)arealso \nomputedusingexpressionefo.re(s,s.)[Previous(s)]and .. efore(s.,s)[Current(s)]-Previous(s)respetively. \n... Atthispoint,theomputediterationsetsareverifed forproftability.IfProfitable(Current(s))returnsfalse \nforanystatements,noneofthestatementsinAddStmts willbeaddedintoRstmts.Ifalltheverifationssueed, weunionRstmtswithAddStmts,andapplyforwardsliing \nfromAddStmtssothatotherstatementsthatusethevalues omputedbyAddStmtsanalsobeinluded. 2.3.2ForwardReursionSliing \nForwardsliingisnotneessaryfororretness,andis thereforeanoptionalpass.Thegoalofforwardsliingisto keeptogetheriterationsofstatementsthatusevaluesom\u00adputedbytheiterationsCurrent(s)ofallstatementsalready \ninludedinthereursiveproedure.Ifthisstepisused, however,itmustagaininvokebakwardsliingforeahad\u00additionalstatementthatisinludedinRstmtstoguarantee \nthatanypreviousvaluesrequiredfortheseadditionalstate\u00admentswillbeomputedfrst.Ifbakwardsliingfailsfor anyoftheadditionalstatements,wesimplydon'tinlude \nitinRstmts.Thisproessofforwardandbakwardsliing ouldberepeatedaslongasitterminateswithapassof bakwardsliing. \nThefuntionForward-SliingissimilartoBakward-Sliing. ItfrstusesReahable-From(D,AddStmts)toidentifyall thestatementshavingsomeinomingdependenepathsfrom \nstatementsinAddStmts,thenusesAfterfuntionsinstead ofeforefuntionstoomputetheFutureandCurrent iterationsets.Forward-Sliingstartsnotjustfromone \nstatementskeybutfromthesetofstatements,AddStmts, whenomputingtheFutureandCurrentiterationsetsfor Reursion-Transformation(C,D) \nC:originalode;D:dependenegraph KeyStmts=Choose-Key-Statements(C,D) whileKeyStmts =0do extratnextstatementskeyfromKeyStmts \nif(skeyhasbeenalreadyproessed)thenontinue //reursivelyomputingkeystatementskey Rloops=Choose-Reur-Loops(C,D,skey) \nR =Create-Reur-Params(Rloops) formaz Rorder=Deide-Reur-Order(C,D,Rloops) Rstmts=Compute-Iter-Sets(D,skey,R \n,Rorder) formaz //odetransformation if(Rstmts =0)then Create-Reur-Pro(Rstmts,R ,Rorder) formaz Transform-Orig-Code(C,Rstmts,Rloops) \nCompute-Iter-Sets(D,skey,R ,Rorder) formaz D:dependenegraph;skey:keystatement; R :reursiveparams;Rorder:reurallorder; \nformaz return:stmtstobeinludedinreursiveproedure Ppars=Previous-Reur-Calls(Rorder,R formaz) Fpars=Future-Reur-Calls(Rorder,R \nformaz) Current(skey)=Restrit-Bounds(skey,R formaz) Previous(skey)=Ur .....EPparsCurrent(skey)[Rratuaz] \nFuture(skey)=Ur .....EFparsCurrent(skey)[Rratuaz] Rstmts=0 Bakward-Sliing(D,skey,Rstmts,Ppars,Fpars) \nreturnRstmts Bakward-Sliing(D,skey,Rstmts,Ppars,Fpars) D:dependenegraph;skey:keystatement; Rstmts:statementsalreadyproessed; \nPpars,Fpars:paramsforprevious/futurereur-alls AddStmts=Reahable-into(D,skey)-Rstmts if(AddStmts==0)thenreturn \nforeahstatementsEAddStmtsdo Previous(s)=efore(s,skey)[Previous(skey)] Current(s)=efore(s,skey)[Current(skey)] \nCurrent(s)=Current(s)-Previous(s) Future(s)=Current(s)[R Ur .....EFparsratuaz] if(!Profitable[Current(s)])thenreturn0 \nRstmts=RstmtsUAddStmts Forward-Sliing(D,AddStmts,Rstmts,Ppars,Fpars) Forward-Sliing(D,AddStmts,Rstmts,Ppars,Fpars) \nAddStmts:stmtstostartforwardsliing; Rstmts:statementsalreadyproessed; Ppars,Fpars:paramsofprevious/futurereur-alls \nExtraStmts=Reahable-From(D,AddStmts)-Rstmts foreahstatementsEExtraStmtsdo if(sERstmts)thenontinue Future(s)=Current(s)=0 \nforeahstatementssEStartStmtsdo Future(s)U=After(s,ss)[Future(ss)] Current(s)U=After(s,ss)[Current(ss)] \nCurrent(s)=Current(s)-Future(s) Previous(s)=Current(s)[R Ur .....EPparsratuaz] Bakward-Sliing(D,s,Rstmts,Ppars,Fpars) \nFigure2:ReursionTransformationAlgorithm astatementsEExtraStmts.Itisthereforeimportantto uniontogetherinformationforallthetransitivedependene \npathsfromAddStmtstos. InFigure3,Thet reiterationsetsarenotshown. BeausebothsandsarealreadyinludedinRstmts, \n.. therearenoleftoverstatements.Thealgorithmterminates withoutdoinganyforwardsliing. 2.3.3ConditionalsandNon-UnitStrides \nControldependenesarealittlemoredi\u00c6ulttohandle thandatadependenes.Inpartiular,foraontroldepen\u00addenefromtos(bothwithinthesameloop),wemustkeep \nandstogetherwithinthesameloopiteration,inaddition topreservingtheirorder.Thisextrarequirementouldbe modeledintransitivedependeneanalysisbyaddingdepen\u00addeneedgesbothfromtosandsto.This,however, \nreatesastronglyonnetedomponentinvolvingallstate\u00admentsontrol\u00addependentonand,therefore,noneofthese statementswouldbetransformed. \nToavoidsuhrestritions,weidentifyfourases: 1.AnIFstatementontrollingajumpoutofoneormore loops:Theiterationsofsuhloopsannotbereordered, \nandthereforethereursiontransformationisnotlegal forsuhloops(andneitherisbloking).Fornow,we simplyignoreanyloopnestontainingsuhajump. \nTheremainingasesthereforeonlyonsiderblok\u00adstrutured ontrolfow. 2.AnIFstatementenlosingallloopsintheinputpro\u00ad \ngramfragment:SuhanIFstatementansimplybe ignoredwhiletransformingtheloopnestsintoreur\u00ad siveproedures. \n 3.AnIFstatementwithnoloopsenlosedwithinit:Suh anIFstatementanbehandledsimplybyaddingthe dependeneyleasdesribedabove.Foringallstate\u00ad \nmentsontrol\u00addependentontheIFtobeexeutedto\u00ad getherisnotasignifantrestritioninthisase. 4.AnIFstatementwithloopsinsideandoutsideit,the \nmostomplexase.Wehandlesuhstatementswith\u00ad outinludingtheminRstmtsinFigure2.Foreah datadependeneinidentonsuhanIFstatement, \nadatadependeneedgeisaddedtoeahstatements ontroldependenton,asifisanintegralpartof statements.Afterrre \nt(s)VsERstmtsareom\u00ad puted,weomputetherre titerationsetoftheIF statementasUs.-s rre t(s). ThetransformationalgorithmmaydupliateeitheranIF \nstatementoraDOstatementintwodiferentreursivepro\u00adedures.Toorretlyaountforside\u00adefetsintoontrol fowstatements,apreproessingsteppullsoutallexpres\u00adsionsfromDOloopboundsandfromIFstatements,and \nassignsthemtotemporaryvariablesjustbeforeeahDOor IFstatement.(WeassumeFortranDOloopsemantis,i.e., thatloopboundsareevaluatedbeforebeginningexeution \nofaloop,sothattherearenosideefetswhenexeuting theloopheaderitself.)Thisalsoensuresthatalldatade\u00adpendenesintotheoriginalDOorIFstatementareorretly \nhandled.Ifaontrol\u00adfowstatementisdupliatedandany oftheexpressionshaveside\u00adefets,arrayexpansionwould beneededtopre\u00adomputeandstorethevaluesofthetem\u00adporaryvariablesforarangeofloopiterations. \nFinally,loopswithnon\u00adunitstridesarestraightforwrdto handle.Whenonstrutingtheef reandAfterfuntions (seesetion3),werestritthedomainandrangeofthese \nfuntionstotheoriginaliterationsetsoftheloops.This diretlyimposestheneessarystrideonstraintonallthe iterationsetsomputedthereafter.Sinetheinitialallto \nthereursiveproedurestartswiththeorretloopbounds, onlytherequiredloopiterationsareexeuted. 2.4CodeGeneration \nOnewehavesuessfullyomputedtheiterationsets, wereateareursiveproedureinludingallthestatements inRstmts,withformalparametersrormalreatedinstep \nR (2)ofSetion2.2. Theodeforthebaseaseofthereursionisgenerated byrestritingtheiterationsetofeahstatementsERstmts \ntoUrre t(s).WeuseOmega'salgorithmforodegener\u00adationfrommultiplemappingswhih,givenavetorofit\u00aderationsetsforthestatementsinaloopnest,diretlysyn\u00adthesizesaloopnesttoenumerateexatlythoseinstanesof \nthestatementswhilepreservingthelexiographiorderof statementinstanes[15].Thetehniquesweusearesimilar tothosedesribedforodegenerationin[1]. \nTogenerateodeforthereursivealls,wedividethe rangesofallreursiveloops.Forexample,onesimplehoie istodivideeahrangebyhalf.Givenmreursiveloops \nwithboundparameterslb.Ub. lbmUbm,thismeansto m fndthemiddlepoints(lbi+Ubi)/2,andmake2deeper reursivealls.Theorderofreursiveallsisdeidedby \nfuntionDeide-Reur-OrderinFigure2. Afterreatingthereursiveproedure,weinsertanini\u00adtialalltotheproedurebeforetheoriginalodesegment, \npassingtheoriginalloopboundsofthereursiveloopsasa\u00adtualparameters(say,r original).Itisimportanttoplaethe \ninitialallbeforeallotherstatementsbeausetheforward\u00adsliingstepisnotneessarilyperformed,sothatsomestate\u00admentinstanesthatusevaluesomputedinareursivepro\u00adeduremaybeleftoutofthatproedure. \nTheoriginalodeneedstobetransformedsothatall theiterationsofstatementsalreadyexeutedintheinitial allwillnotbeexeutedagain.Wetransformtheorigi\u00adnalodebyonlyexeutingtheleftoveriterationsofeah \nstatementsERstmts,whihisomputedbysubtrating Urre t(s)[r original]fromtheoriginaliterationsetofs.We generateodefortheseleftoveriterationsetsusingthesame \ntehniqueasgeneratingodeforthebaseaseofthereur\u00adsion. Figure4showsthepseudoodeofthegeneratedreur\u00adsiveproedureforLUbasedontheomputediterationsets \ninFigure3.Beausetherearenoleftoveriterationsforei\u00adthersors,theoriginalodeisompletelyreplaedwith .. aninitialalltoLU\u00adreur. \n2.5TransformationDeisionsForLoality Inthissetion,wedesribehowwespeializesteps1, 2,3and5listedearliertoimproveaheperformanefor \nsequentialprogramsrunningonmahineswithoneormore levelsofahe. ChoosingKeyStatementsWehoosekeystatementstobe \nthosestatementsarryingreusethatisnotbeingexploited beausethedatasizesweptbetweenreusesislargerthan theahesize.Alloftheseidentifedandidatekeystate\u00admentsareputintothesetKeyStmtsinFigure2.Beause \nanystatementskeyEKeyStmtsalreadyinludedinsome reursiveproedurewillnotbeproessedagain,weanin\u00ad allLU-reur(l,N,l,N) \nsubroutineLU-reur(lbJ,ubJ,lbI,ubI) if(stopreursiveall)then dok=l,min(N-l,ubI-l,ubJ-l) if(k2max(lbJ-l,lbI-l))then \ndoi=max(k+l,lbI),min(N,ubI) s: A(i,k)=A(i,k)/A(k,k) J:. doj=max(k+l,lbJ),min(N,ubJ) s I: doi=max(k+l,lbI),min(N,ubI) \n. : A(i,j)=A(i,j)-A(i,k).A(k,j) else mJ=(lbJ+ubJ)/ mI=(lbI+ubI)/ allLU-reur(lbJ,mJ,lbI,mI) allLU-reur(lbJ,mJ,mI+l,ubI) \nallLU-reur(mJ+l,ubJ,lbI,mI) allLU-reur(mJ+l,ubJ,mI+l,ubI) Figure4:ReursiveCodeGeneratedforLU LargeLoops=0 \nUnknownLoops=loopswithlargeiterationrange foreaharrayreferenerdo foreahlEUnknownLoopssurroundingrdo ifldoesnotarryreuseofrthen \nLargeLoops=LargeLoopsl} UnknownLoops=UnknownLoopsl} if(LargeLoops==0)thenreturn0 KeyStmts=0 foreahstatementsdo \nLargeLevel(s)=deepestlevelofLargeLoopssurroundings ReuseLevel(s)=outermostlooplevelofreusearriedbys if(ReuseLevel(s) \nLargeLevel(s))then KeyStmts=KeyStmtss} returnKeyStmts Figure5:ChoosingKeyStatements luderedundantkeystatementswithoutsarifingeither \norretnessore\u00c6ieny. Figure5showsouralgorithmtoomputeKeyStmts. Weidentifyreusesimplyasdatadependenes,inluding \ninputdependenesbeausereuseonreadreferenesisim\u00adportant.Weidentifyloopsthataesslargevolumesof data(LargeLoopsinFigure5)byanalyzingthedependene \ngraph.Ifthereissomearrayrefereneinsidelooplithat doesnotarryanyreuse(true,inputoroutputdependene) atli,thismeansthattherefereneaessesadiferentdata \nelementateahiterationofli.Unlesslooplihasaknown smallrangeofiterations,weassumethatitaessesalarge volumeofdata. \nThemoreloopssurroundingakeystatement,themore reursiveloopsanbeseleted,andthereforethemorelikely Compute-Iter-Setswillsueedinreduingtheiterationspae \nforeahreursiveall.InFigure2,therefore,weextratkey statementsfromKeyStmtsindereasingorderofthenum\u00adberofloopssurroundingthekeystatements. \nChoosingReursiveLoopsThegoalhereistoreduethe sizeofdatasweptbetweenreusesofvalues.Thereforefor anykeystatementskeywithunexploiteddatareuse,we \nhoosereursiveloopstobetheloopssurroundingskeythat auseskeytoaessalargevolumeofdatabetweenreuses, i.e.,theloopsinLargeLoops(skey)thatarenesteddeeper \nthanReUseLevel(skey)inFigure5.Byreduingtheranges ofthesereursiveloopsintheiterationsetofskey,thesize \nofdataaessedbetweenreusesofskeywouldberedued. ItissometimesbenefialtoseletloopsinLargeLoops (skey)outsideReuseLevel(skey)asreursiveloopsaswell. \nThismayimproveinter\u00adreuseamongadjaentreursivepro\u00adedurealls.ForexampleinMatrixMultiply,wehoose allthethreeloopssurroundingskeyasreursiveloopsto \nahievethehierarhialworkingsetefetinFigure1.We useompileroptionstospeifywhetherornottoinlude theseadditionalouterloopswhenseletingreursiveloops. \nReursiveOrderandTerminationThehoieofreursive allordersanhavesignifantimpatoninter\u00adreuseaross adjaentreursiveproedurealls.Inoururrentimple\u00admentation,wedividetherangeofeahreursiveloopinto \napproximatelyhalf,andorderthereursiveallssothat theinnermostreursiveloop(intheoriginalloopnestor\u00adder)isdividedfrst.Thispreservestheoriginallooporder\u00adingarossreursivealls.However,thisstrategydoesnot \nalwaysproduethebestperformane.Derivingandom\u00adparingdiferentstrategiesforhoosingthereursiveorder requiresfurtherresearh. \nTostopreursion,wederiveasymboliexpressionfor theapproximatevolumeofdatatouhedbytheoutermost reursiveloopineahreursiveallasafuntionofthe \nformalparametersofthereursiveproedure,takingreuse withintheodeintoaount.Wediretlyexeutethebase odewhentheestimateddatavolumeissmallerthansome \nminimumvolumethreshold,speifedatruntime. VerifyingProftabilityForourpurposes,thereursiontrans\u00adformationwouldnotbeproftableifanystatements \nE Rstmtsontinuetoaessalargevolumeofdatawithin abase\u00adlevelreursiveall.Thisisdeidedsimilarlytoom\u00adputingLargeLoopsinFigure5.IfCurrent(s)hasalarge \niterationrangeatsomelooplevelatorwithintheouter\u00admostreursiveloop,andthereissomearrayrefereneins thatdoesnotarryanydependeneatthatlooplevel,the \nproftabilityverifationofCurrent(s)fails. TransitiveDependeneAnalysis Transitivedependeneanalysisisaoreanalysisteh\u00adniqueusedbythereursiontransformation.Itomputes \ntheeforefuntionsdefnedinsetion2,andtheAfter funtionsareomputedbyinvertingtheeforefuntions. Fortwoarbitrarystatementsslands2,efore(sl,s2) \napturesdependeneinformationforallpathsfromsltos2 inthedependenegraph.Formostappliations,werequire attributesofthesedependenepaths(suhasdiretionve\u00adtors),andthereforetransitivedependeneanalysisisapath \nsummaryprobleminsteadofsimplyareahabilityproblem ondiretedgraphs.Previousworkusedsymboliintegersets torepresentandpropagatetransitivedependenes[22],and \nanadaptedFloyd\u00adWarshallalgorithmtosolvetheall\u00adpairs pathsummaryproblemupfront.Beauseintegersetopera\u00adtionsareostly,andtheadaptedFloyd\u00adWarshallalgorithm \nhasO(N3)omplexityinallasesforagraphwithNnodes, theanalysisisveryexpensiveforrealworldprograms. Inthispaper,weuseanewdependeneattributerepre\u00adsentation \nanExtendedDiretionMatrix torepresentand propagatedependeneinformation.Theomputedtransi\u00adtivedependenesarethentranslatedintosymboliinteger \nsetstobeusedaseforefuntionsinsetion2.TheEDM representationislesspreisethanthesymboliintegerset representation,butitismuhmoree\u00c6ientandwebelieve \nitwillbesu\u00c6ientforalargelassofprogramsandanalysis problems. Wealsodevelopedanewdemand\u00addrivenalgorithmto \nomputethetransitivedependenestoasingledestination vertex(transitivedependenesfromasinglesourevertex anbeomputedsimilarly).Thealgorithmisindependent \nofanyspeifdependenerepresentation,suhasEDMor integersets.AlthoughouralgorithmalsohasO(N3)worst aseomplexitytoomputeall\u00adpairspathsummaries,om\u00adputingsingledestinationtransitivedependenesanbedone \ninlineartimeonmanydependenegraphsinpratie. Below,wefrstdesribethenewdependenerepresenta\u00adtionandhowtotranslateitintosymboliintegersets,then \npresentouralgorithmfortransitivedependeneanalysis. 3.1TransitiveDependeneRepresentation Considertwostatementsslands2inadependenegraph \n(notneessarilyinthesameloopnest).Werepresentthe transitivedependenefromsltos2usingasetofExtended DiretionMatries(EDMs),eahEDMrepresentingade\u00adpendenerelationalongsomepathsfromsltos2. \nTheExtendedDiretionMatrixAssumingthattheitera\u00adtionspaesofslands2are(Il,I2,...Im)and(Jl,J2,...Jn) respetively,anEDMrepresentingadependenerelation \nfromsltos2isanmxnmatrixDmn.EahentryD[i,j], representsadependenediretiononditionthatmusthold betweeniterationIiofslanditerationJjofs2.Eahen\u00adtryanhavethefollowingvalues:0,=,<,:,>,:,=, \n*.Thesedependenediretionvalueshavethetraditional meaning,exeptthat0meansnoonditionisrequired. ThesymboliintegersettranslatedfromDmnisamap\u00adpingfromtheiterationspaeofs2totheiterationspaeof \nsl,whihgivenaniterationsetofs2,outputsthoseitera\u00adtionsofslthatsatisfytheondition R(D)=/l.i.m(Vl.j.n(IiD[i,j]Jj))(1) \nwhereIi*Jj=true,Ii0Jj=false,otherpossiblevalues forD[i,j]saretranslateddiretlyasomparisonoperators (e.g.,Ii:Jj). \nTheEDManbeomputedsimilarlyastraditionaldata dependenes.Theonlydifereneisthatweneedtoompute dependenediretionsamongnotonlyiterationsofommon \nloops,butalsoiterationsofnon\u00adommonloops.Theextra informationisimportanttopreiselyrepresentandprop\u00adagatedependenesalongpathsinvolvingstatementsinside \nnon\u00adommonloops,eg.,thedependenebetweenthek\u00adj\u00adi iterationofs2andk\u00adiiterationofslinLUinFigure3. Thisenablesglobaltransitivedependeneanalysisaswell \nasompilertransformationsforwholeproedures. TheExtendedDiretionMatrixanrepresentdepen\u00addeneinformationforbothdataandontroldependenes. \nFordatadependenes,thediretionvalueshavethemean\u00adingdesribedabove.Foraontroldependenefromslto s2,theEDMDmnisdefnedtobe: \n' D[i,j]==',ifIi=Jj(i.e.,arethesameloop) '0' ,ifIi ,Iisaommonloop =Jji '*' ,ifIiisnotaommonloop Here,aommonloopisonethatsurroundsbothslands2. \nWealsodefneapartiularlassofEDMsalledidentity EDMs.AnidentityEDMDmmmodelsanidentitydepen\u00addenefromastatementstoitself,defnedas: \n'' D[i,j]==ifi=j;'0'ifi (2) =j,V1:i,j:m OperationsonanEDM:Thealgorithmbelowrequiresom\u00adputingtheonatenationoftwoEDMs,DmnmZ.D2, \n=D1f Zn  <// /// r / / = r r/ 0 +x x'x 0'x0' x whihisdefnedby: = r *'x*'x *+x*' =0 x > .='x x'x<+= \n: D[i,j]=(D1[i,k].D2[k,j])(3)<': < > > =+  >'> ><+> = 1:k:Z r {<'>,< '>,:'>,{=+ ,>+:, = IfD1 representsadependenepathP1from81to82,D2 \nmZZn D2 ='<, }* ='><+>} * * ()lattie dependenepathP2from82to83,D1 representsa . (a)onatenation (b)addition \nrepresentsadependenepathfrom81to83,goingthrough pathP1P2. Theonatenation(.)andaddition(+)operationson \nFigure6:OperationsonDependeneDiretions dependenediretionsusedinthisequationaredefnedin Figure6.Intheequation,D1[i,k].D2[k,j]omputesthe \ndependenediretiononditionthatmustholdbetweenloop liof81andloopLjof83,duetoadependenepathpass\u00ad Transitive-Dependene-Analysis(G,v) \nof82.Forexample,ifD1[i,k]ingthroughloopJk=< G:dependenegraph v:destinationvertex andD2[k,j]= ,thismeansthatIi<JkforeD1[i,k].D2[ \n Lj,there\u00ad k,j]=<(i.e.Ii<Lj).Theadditiononif(Ghasnotbeenpreproessed)then diretionvaluesinequation3summarizesthedependene \ndiretionsfromeahloopIiof81toloopLjof83duetoall theloopssurrounding82. RepresentingaTransitiveDependeneUsingEDMs:A \ntransitivedependeneisrepresentedbyasetofEDMs,all havingidentialnumbersofrowsandolumns.WeuseTmn todenoteatransitivedependenefromstatement81to82 \n2 onsistingofasetofmxnEDMs,{D1,D,}.The mnmnsymboliintegersetrepresentationofTmnisamappingfrom (J1,J2,Jn)to(I1,I2,Im)satisfying \nR(T)=(R(D1)) (R(D2)) (4) whereR(Di),i=1,2, isdefnedinequation1. or (81,82) issimplyR(T). Threeoperationsaredefnedforarbitrarytransitivede\u00adpendenesT1andT2: \nT1mnUTmn2 ={DmniDET1orDET2}(5) T1{D1iD1ET1 mZ.TZn2=ZnET2}(6) mZ.D2andD2 T*=TU(T.T)U(T.T.T)U(7) mm TheunionofT1andT2isusedinthealgorithmtoom\u00adbinedependeneinformationalongdiferentpathsbetween \n81and82.TheonatenationofT1andT2onatenates alldependenepathsinT1withalldependenepathsin T2.Thetransitivelosure(*)operationomputesallyles \nformedbypathsinTmm(fromastatement8toitself).The infnitenumbersofunionsandonatenationsinequation7 stopwhenafxedpointommisreahed. \nfT* Finally,ifwedefned1 d2-d1+d2=d2,whered1 andd2aredependenediretions,thesetofdiretionvalues formsalattieofdepth4,showninFigure6.Wedefne \nD1 D2ifD1[i,j] D2[i,j]\\1 i m,1 j n.If mnmn D1 D2isasubsetof mnmn,thedependenemodeledbyD1 2thatmodeledbyD2.GivenD1,DETmn,weansimplify \nTmnbyremovingD1.Inpratie,transitivedependenes usuallyonlyontainafewdiretionmatriesaftersimpli\u00adfation,enablingalloperationsontransitivedependenes \ntobedonewithinsomesmallonstanttime(assumingthe maximumloopdepthisboundedbyasmallonstant). 3.2TransitiveDependeneAnalysisAlgorithm \nFigure7showsthealgorithmthatperformstransitivede\u00adpendeneanalysisforasingledestinationvertex.Thefun\u00adtionTransitive-Dependene-Analysisfrstpreproessesthe \nPreproess-Cyles(G) Compute-Path-Summaries(G,v) Preproess-Cyles(G) G:dependenegraph //transformingGintoDAG \nFind-SCCs(G,SCC,BakEdges) foreahsESCCdo foreahvertexviEsdo if(:(p,vi)EBakEdges)then vU=Create-twin-vertex(vi) \niChangeall(p,vi)EBakEdgesto(p,viU) //omputingyleinfo. UU IILetthereatedtwinvertiesbe(v1,v),(vm,v) 1m \nif(m==0)ontinue fori=I,mdo foreahvertexpEsdo Compute-Path-Summary-On-DAG(G,p,vU) i fork=I,i-Ido foreahvertexpEsdo \n U T(p,vU)U=T(p,vU)'C(vk,v)'T(vk,viU) ikk UU C(vi,v)=(T(vi,v)U{identityEDM})* ii Compute-Path-Summaries(G,v) \nG:dependenegraph,v:destinationvertex foreahsESCCinreversetopologialorderdo UU IILettwinvertiesofsbe(,v), \n(vm,v) v 11mforeahvertexpEsdo Compute-Path-Summary-On-DAG(G,p,v) if(m==0)thenontinue fork=I,mdo foreahvertexpEsdo \nU T(p,v)U=T(p,vU)'C(vk,v)'T(vk,v) kk Compute-Path-Summary-On-DAG(G,p,v) G:aylidependenegraph p:sourevertex,v:destinationvertex \nT(p,p)={identityD } foreahself-ylee=(p,p)do T(p,p)=T(p,p)U{EDM(e)} T(p,p)=T(p,p)* if(p==v)thenreturn \nT(p,v)=0 if(pisbeforevintopologialorder)then foreahedgee=(p,q)do ifT(q,v)isnotalreadyomputedthen Compute-Path-Summary-On-DAG(G,q,v) \nT(p,v)=T(p,v)U{EDM(e)}'T(q,v) T(p,v)=T(p,p)'T(p,v) Figure7:TransitiveDependeneAnalysis d1 : {K =K; I \n=I} d1 d1 d2 : {K <K; J =K<I; I =K<I} d2 d3 d5 d3 : {K <K; J =K<I; I =I} d4 : {K <K; J =K<J; I =I} d5 \n: {K <K; J =J; I =K<I} d5d4 Figure8:DependeneGraphofLU dependenegraphbyallingPreproess-Cyles,thenom\u00adputessingledestinationtransitivedependenesondemand \nforeahgivendestinationvertexvbyallingCompute-Path\u00adSummaries.Theoverallapproahistotransformthegraph (one)intoanayligraph(aDAG)bysplittingertain \nnodes,thentoomputepathsummariesonaylipathsin theDAG,andthenpropagatepathsummariesaroundthe ylesintheoriginalgraph. \nPreproess-Cylestransformstheoriginaldependenegraph intoaDAGbybreakingallyles.ThefuntionFind\u00adSCCsusesthewell\u00adknownTarjanseealgorithmtofnd \nallthestronglyonnetedomponentsandidentifyallthe bakedges(forsimpliity,self\u00adylesarenotonsideredbak edges).Foreahvertexv;whihhasaninomingbakedge \n((p,v;)EkEddeS),wereateanewtwinvertexv;.and hangeallthebakedges(p,v;)togointov;.instead.Be\u00adauseallthebakedgesnowgotothenewtwinverties \nwhihhavenooutgoingedges,alltheoriginalylesare broken,exeptforself\u00adyles.TheseondhalfofPreproess\u00adCylessummarizesyleinformationsothattheylesan \nbereoveredlater,andwillbedesribedbelow. Transitivedependenesintoasingledestinationvertex arestraightforwardtoomputeinlineartimeonaDAG, \nasshowninfuntionCompute-Path-Summary-On-DAG.In thisfuntion,EDM(e)denotestheextendeddiretionma\u00adtrixassoiatedwithedgeeinthedependeneDAG.Essen\u00adtially,T(p,v)isomputedbyfrstomputingthetransitive \nlosureofalltheselfylesintop(T(p,p).),thenonate\u00adnatingT(p,p)withtheunionofEDM(e).T(q,v)foreah edgee:p-q. \nToomputetransitivedependenesintheoriginalde\u00adpendenegraph,weneedtofurtherpropagateinformation omputedfromthedependeneDAGthroughthebroken \nyles2.IntheseondpartofPreproess-Cyles,foreah .. SECCwithtwinverties(vl,v), (vm,vm),wepre\u00adomputetwotypesofyleinformation: \nl T(p,v;.)VnodespESrepresentsthetransitivede\u00adpendenefromptov;.,inludingalltheoriginalyles involvingvl,v;.l.ToomputeT(p,v;.),wefrst \nomputedependeneinformationforthepathsfromp tov;.onthedependeneDAG,thenomputeT(p,v;.) astheunionoverallpathsp.vk.-vk. \n.vk.\u00advk.v;.Vl:ki.Notethatvk.-vkisonep\u00adtuallyanedgewithanidentityEDMonnetingthe splitvertiesvkandvk.,andvk..vk.inludes \nallylesinvolvingvl,vk.Theorderingoftwinver\u00adtiesforeahseeisruialhere,otherwise,weannot assumethatC(vk,vk.)andT(p,vk.)havealreadybeen \n.Coneptually,thisorrespondstorestoringtheoriginalylesby addinganedgewithidentityEDMfromeahnewtwinvertexv \n. to . itsorrespondingoriginalvertexv.,thusobtainingadiretedgraph equivalenttotheoriginaldependenegraph. \nomputedorretlyforallpES,l:ki. .. C(v;,v;)(T(v;,v;)U{identityEDM}).Vl:i:m representsthetransitivedependenefromv;toitself, \ninludingalltheoriginalylesinvolvingvl,v;. FuntionCompute-Path-Summariesthenusesthisin\u00adformationtoomputetransitivedependenestoanarbi\u00adtrarydestinationvertexvontheoriginaldependenegraph. \nThisisdonebyomputingtransitivedependenesforeah SECCatatime,andpropagatingdependenesthrough brokenylesforeahvertexpES.Thissteppropagates \ntransitivedependenesthroughbrokenylesinthesame wayasintheseondpartofPreproess-Cyles,usingthe equation \nT(p,v)T(p,v)UT(p,vk)..C(vk,vk.).T(vk,v) (8) ThisequationomputestheunionofT(p,v)withdepen\u00addeneinformationforallpathsp.vk...vk.v, \nwherevk...vkinludesallylesinvolvingvl,vk, p.vk.andvk.vinludeallylesinvolvingvl,vk.l. Figure8showsthedependenegraphoftheLUodein \nFigure3bothbeforeandafterpreproessing.Theoriginal dependenegraphofLUhasonlyonesee,inludingboth vertiesSlandS2.Afterpreproessing,vertexSlissplit. \nT(Sl,S.){dl}.{d4,d5}..{d2,d3},C(Sl,S.)(T(Sl,S.l)U ll{identityEDM})..ToomputeT(Sl,S2),wefrstom\u00adputeT(Sl,S2)onthetransformedDAG,whihyields{dl}. \n{d4,d5}.,thenpropagatethepathsthroughbrokenyles, whihunionsT(Sl,S2)withC(Sl,Sl.).T(Sl,S2).Wean omputeT(S2,S2)similarly. \nLetG(V,E),whereVandEarethenumbersofver\u00adtiesandedgesindependenegraphGrespetively.Let M(M:V)denotethemaximumnumberoftwinverties \nreatedforanyseeinG.Then,theomplexityoffnding seesandreatingtwinvertiesisO(V+E),theomplex\u00adityofomputingyleinformationforeahseeisO(VM2). \nThereforetheomplexityofPreproess-CylesisO(V+E+ VM2).TheomplexityofCompute-Path-Summaries-On\u00adDAGisO(V+E),theomplexityofpropagatingpaths \nthroughylesisO(VM).Thereforetheomplexityofthe Compute-Path-SummariesisO(V+E+VM).AlthoughM isO(V)intheworstase(e.g.,foranseeofsizeO(V) \nthatisfullyonneted),inpratieseesinthedepen\u00addenegrapharenotdenselyonnetedandonlyasmall numberofnodesneedtobesplittobreakallylesineah \nsee.Insuhases,Manbeassumedtobeboundedby asmallonstant,andbothPreproessGraphandCompute\u00adPath-Summarieswouldrequiretimethatislinearinthesize \nofthegraph,i.e.,O(V+E). 4ExperimentalEvaluation Thereisalreadyasignifantbodyofexperienewithre\u00adursivealgorithmsthathasdemonstratedthevalueofthis \napproahforanumberofdiferentappliations.sinethe keyinnovationinourworkistoautomatethetransforma\u00adtionofomputationstoreursiveformwithinaompiler, \nitisneessarytoexaminetheappliability,ompile\u00adtime ost,andperformaneimpatoftheompilertransforma\u00adtion.Wepresentpreliminaryresultsaddressingtheseissues \nusingbothmeasurementsandsaledsimulationsofanex\u00adistingsystem. 4.1BenhmarksandCompilerPerformane Westudytwolassesofbenhmarkodes.First,we \nexaminethreelinearalgebraodes,matrixmultipliation Cylesinbillions 1.0 0.8 0.6 0.4 0.2 o- o- o-o- L1missesinmillions \n1.0 0.8 0.6 0.4 0.2 o- o- o-o\u00ad mmluhol e-le mmluhol e-le L2missesinmillions 4.0 1364574 .0 2.0 1.0 \n0.8 0.6 0.4 0.2 o- o- o \u00admmluhol 141 o\u00ade-le (o-originalversion;b-onelevelblokedversion;-twolevelblokedversion;r-reursiveversion) \n(mm-1025*1025;lu-1024*1024;hol-1536*1536;erle:256*256*256) Figure9:ResultsfrommeasurementsonauniproessorSGIworkstation \n(mm),LUfatorization(l ),andCholeskyfatorization (hol).Loalitytransformationssuhasblokinghavetra\u00additionallyfousedontheseodesbeauseahebehavioris \nritialinsuhodesandbeausetheyareverywellsuitedto bloking.Sofar,weareonlyabletotransformnon-pivoting versionsofLUandCholesky.Toimplementeitherbloking \norreursionforLUorCholeskywithpivoting,aompiler wouldneedtoreognizethatrowinterhangeandwholeol\u00adumnupdateareommutative[3].Weareonfdentthat,in \naompilerwiththatanalysis,onversiontoreursiveform wouldbepossibleforthepivotingversions. Wealsostudyonephysialsimulationappliation,Er\u00adlebaher(erle),whihisanimpliitfnite-difereningsheme \nforomputingpartialderivativesona3Ddisretizeddo\u00admain.OneinterestingefetshownintransformingEr\u00adlebaheristhat,whenmultiplediferentloopnestsaretrans\u00adformedintoasinglereursiveproedure,theefetisthatof \nperformingloop-fusiononthoseloopnests.Thisisbeause, atasu\u00c6ientlylowlevelinthereursiontree,thedatapro\u00adduedintheearlierloopnestsstayinahetobereusedby \nthelaterloopnestswithinthesamereursiveall. Weompiledallthebenhmarksessentiallyunmodifed. Theompilerwasabletotransformallloopsontainingun\u00adexploitedreuseinthesebenhmarks.Alltransformation \ndeisions(seesetion2.5)aremadeautomatially.Codeto estimatetheefetivedatavolumeaessedbyeahreur\u00adsiveallisalsosynthesizedautomatially.Thedatavolume \nthresholdparameterusedtoontrolthereursiondepthis speifedatruntime.Wepresentsimulationresultsfordif\u00adferentvaluesofthisparameter.Thesamegeneratedode \nforeahbenhmarkwasusedforbothmeasurementand simulationexperiments. WemeasuredtheompiletimeforErlebaher(thelargest \noftheodesforwhihwepresentresultshere)onaSun serverwith250MHz.UltraSPARC-IIproessors.Erlebaher has460lines,and10loopnestsaremadereursive.The \ntotalompiletimeforthisodewas14.7seonds,inlud\u00adingallI/O.Asignifantpartofthattimeisspentonbasi analysissuhasontrol-fowanddependeneanalysis(these \nareunfortunatelyhardtoisolatebeausetheyhappenina demand-drivenfashionintheompiler).Thesingle-loop\u00adnestodes,matrixmultiplyandLU,areeahompiledin \nunder1seond(totalompiletime).Althoughtheseodes aresmall,theresultsshowthattheompiletimeforeah individualloopnestisextremelyfast. \n4.2PerformaneMeasurements OurmeasurementswereperformedonanSGIworksta\u00adtionwitha195MHz.R10000proessor,256MBofmain \nmemory,separate32KBfrst-levelinstrutionanddataahes (L1),andaunifed1MBseond-levelahe(L2).Both ahesaretwo-wayset-assoiative.Theahelinesizeis \n32bytesinL1and128bytesinL2.WeusedSGI'sperfex tool(whihisbasedontwohardwareounters)toountthe totalnumberofylesandtheL1andL2ahemisses.We \nrepeatedeahmeasurement5ormoretimesandpresentthe averagearosstheseruns.Thevariationsarossrunswas verysmall. \nFigure9presentsperformanemeasurements(yletimes, L1andL2ahemisses)forthevariousbenhmarksonthe SGIworkstation.Inthegraphs,weomparetheperfor\u00admaneoftheompiler-generatedreursiveodewiththe \noriginalodeforeahbenhmark,withone-andtwo-level blokedversionsofmm,andwithaone-levelblokedver\u00adsionofl \nthatweadoptedfrom[5].Ineahgroupofbars, thebarsaresaledrelativetothetallestbarandtheabso\u00adlutevalueofthetallestbarisshownaboveit.(Notethat \ndiferentgroupsofbarsinthesamegraphmaybesaled diferently.) Alltheblokedversionswerewrittenbyhandbutshould \nberepresentativeofwhatasophistiatedompilerwould produe.Weusedoddmatrixsizesformatrixmultiplyto redueaheonfitmisses.Weexperimentedwithdiferent \nbloksizesandreursionbasesizesandpresenttheonesthat performedbest. Comparedwiththeoriginalunblokedodes,thereur\u00adsiontransformationprovideslargeimprovementsinexeu\u00adtiontimeinallasesexepterle.Theserangefromafator \nof1.2inerletofatorsofroughly3,4and5forl ,holand mm.Inerle,theonlybeneftsweobserveareinfatfrom loopfusionandnotfromtheblokingefetofreursion. \n(Thiswasdeterminedbydisablingtheloopfusionefet, i.e.,byforingtheompilertotransformonlyoneloopnest atatime.Thoseresultsarenotshownhere.) \nComparedwiththeblokedversions,thereursiontrans\u00adformationissimilarinperformanetoone-levelandtwo\u00adlevelblokingformm,andperformsabout25%betterthan \none-levelblokingforl . Theahemissmeasurementsshowlittleimprovement fromeitherblokingorreursionintheL1aheompared \nwiththeoriginal(andtheblokedversionofl issignif\u00adantlyworse).IntheL2ahe,however,bothblokingand reursionshowlargeimprovements,exeptforErlebaher. \nThelakofbeneftsintheL1ahearediretlyattributable toinreasedonfitmisses,asthenextsetionillustrates. Thissensitivityofonfitmissestobloksizesiswellknown \nforbloking.Inthisontext,itisinterestingtoexplorethe efetofbasereursionsizesononfitmissesandonover\u00adallperformane.Weusedahesimulationtostudythese \nissuesinmoredetail,asdesribednext. L1missesinmillions 1.0 68444455 0.8 0.6 0.4 0.2 f2f2f2f2 ob L2missesinmillions \n 1.0 8.72.00.80.5 0.8 0.6 0.4 0.2 f2f2f2f2 ob (f:fullyassoiative;2:2-wayassoiative)(o:original;b/:one/twolevelbloked;r:reursive) \n(a)diferentversionsofmm-513*513 L1missesinmillionsL2missesinmillions 1.0 68 53 3.0 9.1 8.7 2.0 0.8 1.0 \n0.6 0.8 0.6 0.4 0.4 0.2 0.2 1234567 12345671234567 1234567 ass-f ass-2 ass-f ass-2 ()blokedmmwithdiferentbloksizes(513/ifori \n1to7) L1missesinmillionsL2missesinmillions 1.0 68 58 3.0 9.1 8.7 2.0 0.8 1.0 0.6 0.8 0.6 0.4 0.4 0.2 \n0.2 1234567 12345671234567 1234567 ass-f ass-2 ass-f ass-2 (e)reursivemmwithdiferentbasesizes (513/ifori \n1to7) L1missesinmillions 1.0 1212 18 0.8 0.6 0.4 0.2 f2 f2f2 ob L2missesinmillions 1.0 3.10.1 0.4 \n0.8 0.6 0.4 0.2 f2 f2f2 ob (f:fullyassoiative;2:2-wayassoiative)(o:original;b:onelevelbloked;r:reursive) \n(b)diferentversionsoflu-512*512 L1missesinmillions L2missesinmillions 1.0 13 46 26.02.9 35 21.0 0.8 \n16.0 0.6 11.0 0.4 6.0 0.2 1.0 123456123456123456123456 ass-f ass-2 ass-f ass-2 (d)blokedluwithdiferentbloksizes(512/ifori \n1to6) L1missesinmillions L2missesinmillions 1.0 14 25 3.0 2.9 3.4 2.0 0.8 1.0 0.6 0.8 0.6 0.4 0.4 0.2 \n0.2 1234567 12345671234567 1234567 ass-f ass-2 ass-f ass-2 (f)reursiveluwithdiferentbasesizes (512/ifori \n1to7) Figure10:Resultsfromsimulationof2-wayandfully-assoiativeahes 4.3CaheSimulation WeusedtheMemoryHierarhySimulator(MHSIM)from \nRieUniversity[19]tostudytheaheperformaneofthe reursiveandblokedodes,fousingonmmand .In ordertostudyaheonfits,weomparedatwo-wayas\u00adsoiativeahewithafullyassoiativeoneofthesameto\u00adtalapaity.Inordertoreduesimulationtime,wesaled \ndownthebenhmarkproblemsizesandsaleddownahe sizesproportionately,sothatboththeL1andL2ahes were1/4ofthesizesontheSGIworkstationusedforthe \nmeasurementsabove(i.e.,8KL1and256KL2ahes).The linesizeswereunhanged. Figure10presentssimulationresults,wherefgures(a)\u00ad(b)presentdataontheefetofaheonfits,()-(d) \npresenttheefetofdiferentbloksizes,and(e)-(f)present theefetofdiferentreursionbasesizes.Thebarsare saledasinFigure10.Briefy,theprimaryobservationswe \nmakeareasfollows. First,foralltheversionsofmmandforthereursive versionof ,onfitmissesaremuhmoresevereinthe \nL1thanintheL2ahe.Thisisasexpetedbeausethe L1aheismuhsmallerthanL2.Inafewases,thefully assoiativeaheatuallyperformsworsethanthe2-way \nassoiativeahe.ThisanbeseenintheL1aheforthe originalandone-levelblokedversionsofmm.Thisphe\u00adnomenonisaknowndefetoftheLRUreplaementpol\u00ad \niy[24].IthappensbeausearowofmatrixCandarowof matrixAtogetherjustexeedtheahesize,sothateah elementofCisevitedfromthefullyassoiativeahejust \nbeforeitwouldbereused.Inthetwo-wayahe,amorere\u00adentlyusedvalueisevitedinmanyases,keepingthevalue ofCinaheforthenextuse.Thisefetisveryspeif \ntopartiularombinationsofproblemsize,ahesize,and aesspattern,anddoesnothappeninmostoftheases showninFigure10. \nSeond,theaheonfitmissefetismuhmoreseverefortheblokedandreursiveversionsthanfortheoriginal versions,exeptforbloked \n.Thisisbeausetheworking setsoftheoriginalversionsofmmand aremuhlarger thantheL1ahe,sothataheonfitmissesareover\u00adshadowedbyapaitymisses.Thesameistrueforbloked \nbeauseonlyoneloopdimensionisblokedin .The efetofL1aheonfitsonblokingandreursionare learlyseeninFigure10()-(e).Whenthebloksizesorre\u00adursionbasesizesbeomesmallenoughsothattheworking \nsetftsinL1ahe,L1ahemissesdereasedramatially inthefullyassoiativeahe,butstarttoinreasesteadily inthe2-wayassoiativeahe. \nTheaboveresultsindiatethattehniquesproposedto manageonfitmissesforblokedodes[17,8]ouldbe importantforreursionaswell.Inludingsuhtehniquesinthereursiontransformationisoutsidethesopeofthis \npaper.Reentlyhowever,GatlinandCarter[12]showed thattheperformaneofdivide\u00adand\u00adonquerprogramsan begreatlyenhanedbyhoosingwhetherornottoapply \nonfitredutiontehniques(e.g.,dataopying)ateah reursivelevel,basedonarhiteturalparameters. Alloftheseresultssuggestthatitisimportanttoexam\u00adinetheinherentbeneftsofreursionandbloking,inthe \nabseneofonfitmisses.Weanstudythisquestionfor arangeofreursionbasesizesandbloksizes,usingthe resultsforthefullyassoiativeaheinFigure11()\u00ad(e). \nTheseresultsshowthatforthereursiveversions,afterthe reursionbaseworkingsetftsinL2ahe,furtherinreas\u00adingreursiondepthleavestheL2ahemissesrelatively \nonstant.ThesameonlusionalsoholdsfortheL1ahe. Thisenablesustoinreasereursiondepthuntilthework\u00adingsetftsinthesmallestahe,thereforeahievingthebest \nperformaneformultiplelevelsofahesimultaneously.In ontrast,fortheblokedversions,aftertheworkingsetfts \ninL2ahe,furtherreduingthebloksizemakesL2misses inreasesteadily(beauseoflostinter\u00adblokreuse).There\u00adforeifwehoosethebloksizesothattheworkingsetftsin \nthesmallestahe,weannotahievethebestperformane forthelargerahes.Eithermulti\u00adlevelblokingisneeded, oraompromisemustbemadetohooseabloksizethat \nahievesthebestoverallperformanewithnon\u00adoptimalper\u00adformaneforsomelevelsofahes. 5RelatedWork Tothebestofourknowledge,nopreviousompilerwork \nexiststhatautomatiallyonvertsexistingloopsintore\u00adursiveform.Ifthatistrue,thisrepresentsanewom\u00adpilertransformationwithmultiplepotentialappliations, \ninludingloalitymanagementformemoryhierarhiesand efetiveparallelizationforsharedmemorysystems.Asde\u00adsribedintheIntrodution,researhershaveappliedreur\u00adsionbyhandforbothsingle\u00adproessorandshared\u00admemory \nmultiproessorodes[13,21,10,12,2].Thevarietyofex\u00adperimentalbeneftsthesestudieshavedemonstrated,aswell \nasthetheoretialresultsofFrigoetal.[10],providestrong motivationfordevelopingompilersupporttomakethis \ntransformationmorewidelyaessibletoappliationpro\u00adgrammers. Anumberofodetransformationshavebeenproposed \nforimprovingloalityinprograms,inludingbloking,loop fusion,loopinterhange,andloopreversal[11,30,29,17, \n,18,8,25].Thereursiontransformation(asusedhere) isessentiallyaformofbloking,withtwokeydiferenes. First,itombinestheefetofblokingatmultiplediferent \nlevelsintoasingletransformation.Seond,thereursion transformationunifesbothblokingandloopfusionwhen appliedtomultiplediferentloopnests. \nOnedisadvantageofmostompileralgorithmsforblok\u00ading(aswellastheotherontrolstruturetransformations desribedabove)isthattheyarelimitedbytheloopnest \nstrutureoftheoriginalprogram.Forexample,beforeau\u00adtomatiloopblokinganbeperformedonLU,aompiler mustfrstperformindex\u00adsetsplitting,strip\u00admining,andloop \ninterhangetoobtainaloopstrutureamenabletoblok\u00ading[5].WolfandLam[29]presentaunifedalgorithmthat seletssuhompoundsequenesoftransformationsdiretly \nusingamodelofreuseinloops.Kodukulaetal.[16]pro\u00adposedanalternativeapproahalleddatashakling,where atilingtransformationonaloop\u00adnestisdesribedinterms \nofatilingofkeyarraysintheloopnest(adatashakle). Multi\u00adlevelblokingisdesribedbyomposingmultipledata shakles.Thisapproahisindependentoftheoriginalon\u00adtrolstruture.Likethedatashaklingapproah,there\u00adursiontransformationdiretlytransformsaloopnest(e.g., \ntheoneinLUmentionedabove)intoareursivelybloked strutureinasingletransformation,usinganalgorithmthat isindependentofloopstruture. \nAkeyadvantageofblokingoverreursionisthatmuh smallerbloksizesanbeusedwithbloking(inluding blokingforregisters[6]),whereasreursionwouldinur \nhighoverheadforverysmallbloksizes.Thissuggeststhat itmightbebenefialtouseblokingwithinthebase\u00adase odetoahievesmallbloksizes,whileusingthereursive \nstruturetoahievetheefetofmulti\u00adlevelbloking. RosserandPugh[27,28]proposediterationspaesli\u00ading,whihisapowerfultehniquethatusestransitivede\u00adpendeneanalysistoahievelooptransformationsindepen\u00addentoftheoriginalloopontrolstruture.Theyapplied \niterationspaesliingforimprovingaheloality,primar\u00adilybyusingittofusediferentloopnests.Wehaveused iterationspaesliinginourreursiontransformation.The \nloopfusionefetweobtainfollowsdiretlyfromthisuseof iterationspaesliing. Finally,theautomatireursiontransformationanplay \nanimportantomplementaryroletoseveralreursivedata organizingtehniquesthathavebeenproposed[7,20].For example,Chatterjeeetal.showthatreursivereorderingof \ndataproduessignifantperformanebeneftsonmodern memoryhierarhies,andtheyarguethatreursiveontrol struturesmaybeneededtofullyexploittheirpotential. \nConversely,webelievethatourworkanspeiallybene\u00adftfromsuhdatareorganizingtehniquesbymathingthe dataorganizationarefullytotheomputationorder.This \nisarihavenueforfurtherresearh. 6SummaryandFutureWork Thispaperpresentsanewompilertransformationthat onvertsordinaryloopnestsintoreursiveformautomati\u00adally.Evidenefrompreviousresearhshowsthatsuha \ntransformationisofpotentialvalueforseveraldiferentpur\u00adposes.Weapplythistransformationtoimproveloality \nforuniproessorahehierarhies.Ourpreliminaryexperi\u00admentsindiatethatthetransformationispowerfulenough totransformomplexloopnests,andahievessubstantial \nbeneftsonseverallinearalgebraodesevenforasimple two\u00adlevelahehierarhy. Thispaperalsopresentsanew,verye\u00c6ientalgorithm \nforomputingtransitivedependeneinformationonade\u00adpendenegraph.Thenewalgorithmmakesthereursion transformationveryfastinpratie.Moreover,transitive \ndependeneanalysisisapowerfultehniquethathasmuh widerappliabilitybeyondthetransformationpresentedhere. \nThewiderpotentialofboththereursiontransformation andoftransitivedependeneanalysissuggeststhatfurther \nresearhonthesetehniquesouldbeveryfruitful.One diretionweplantopursueistoexplorethebeneftsof ombiningreursivedataorganizationswiththereursion \ntransformation,asdisussedinSetion5.Aseonddire\u00adtionwouldbetoexplorehowthereursiontransformation anbeextendedtoparallelsharedmemory(e.g.,OpenMP) \nappliations.Finally,itwouldbeinterestingtoexaminehow transitivedependeneanalysisouldbeusedtoimproveex\u00adistingompileroptimizationsorsupportnewones. \nAknowlegement WethankJohnMellor-Crummeyforprovidingandhelp\u00adinguswiththeMHSIMsimulator,EvanRosserforvaluable \nommentsonthepresentationofourtransitivedependene analysisalgorithm,andChenDingforhelpingusexplain ertainahebehaviorinthesimulations. \nReferenes [1]V.AdveandJ.Mellor-Crummey.UsingIntegerSets forData-ParallelProgramAnalysisandOptimization. \nInProeedingsoftheSIGPLAN'98ConfereneonPro\u00adgrammingLanguageDesignandImplementation,Mon\u00adtreal,Canada,June1998. \n[2]B.Alpern,L.Carter,andJ.Ferrante.Spae\u00adlimitedProedures:AMethodologyforPortableHigh\u00adPerformane.InInternationalWorkingConfereneon \nMassivelyParallelProgrammingModels,1995. [3]S.CarrandK.Kennedy.Blokinglinearalgebraodes formemoryhierarhies.InProeedingsoftheFourth \nSIAMConfereneonParallelProessingforSientif Computing,Chiago,IL,De.1989. [4]S.CarrandK.Kennedy.Improvingtheratioofmemory \noperationstofoating-pointoperationsinloops.ACM TransationsonProgrammingLanguagesandSystems, 16(6):1768.1810,1994. \n[5]S.CarrandR.Lehouq.Compilerblokabilityofdense matrixfatorizations.ACMTransationsonMathe\u00admatialSoftware,23(3),1997. \n[6]L.Carter,J.Ferrante,andS.F.Hummel.Hierarhial TilingforImprovedSupersalarPerformane.InPro. 9thInternationalParallelProessingSymposium,Santa \nBarbara,CA,Apr.1995. [7]S.Chatterjee,V.V.Jain,A.R.Lebek,S.Mundhra, andM.Thottethodi.NonlinearArrayLayoutsForHi\u00aderarhialMemorySystems.InPro.13thACMInt'l \nConfereneonSuperomputing,PhodesGreee,1999. [8]S.ColemanandK.S.MKinley.Tilesizeseletionus-ingaheorganization.InProeedingsoftheSIGPLAN \n'95ConfereneonProgrammingLanguageDesignand Implementation,LaJolla,CA,June1995. [9]E.ElmrothandF.Gustavson.ApplyingReursionto \nSerialandParallelQRFatorizationLeadstoBetter Performane.Tehnialreport,IBMT.J.WatsonRe\u00adsearhCenter. [10]M.Frigo,C.E.Leiserson,H.Prokop,andS.Ramahan\u00addran.Cahe-ObliviousAlgorithms.Submittedforpub\u00adliation. \n[11]D.Gannon,W.Jalby,andK.Gallivan.Strategiesfor aheandloalmemorymanagementbyglobalpro\u00adgramtransformation.JournalofParallelandDis\u00adtributedComputing,5(5):587.616,Ot.1988. \n[12]K.S.GatlinandL.Carter.Arhiteture-Cognizant DivideandConquerAlgorithms.InPro.SC99:High PerformaneNetworkingandComputing,Nov1999. \n[13]F.G.Gustavson.ReursionLeadsToAutomatiVari\u00adableBlokingForDenseLinear-algebraAlgorithms. IBMJ.Res.Develop,41(6),Nov1997. \n[14]W.Kelly,V.Maslov,W.Pugh,E.Rosser,T.Shpeis\u00adman,andD.Wonnaott.TheOmegaLibraryInterfae Guide.Tehnialreport,Dept.ofComputerSiene, \nUniv.ofMaryland,CollegePark,Apr.1996. [15]W.Kelly,W.Pugh,andE.Rosser.Codegeneration formultiplemappings.InFrontiers'95:The5thSym\u00adposiumontheFrontiersofMassivelyParallelCompu\u00adtation,MLean,VA,Feb.1995. \n[16]I.Kodukula,N.Ahmed,andK.Pingali.Data-entri multi-levelbloking.InProeedingsoftheSIGPLAN '97ConfereneonProgrammingLanguageDesignand \nImplementation,LasVegas,NV,June1997. [17]M.Lam,E.Rothberg,andM.E.Wolf.Theahe performaneandoptimizationsofblokedalgorithms. \nInPro.FourthInt'lConf.onArhiteturalSupport forProgrammingLanguagesandOperatingSystems (ASPLOS\u00adIV),SantaClara,CA,Apr.1991. \n[18]K.S.MKinley,S.Carr,andC.-W.Tseng.Improv\u00adingdataloalitywithlooptransformations.ACM TransationsonProgrammingLanguagesandSystems, \n18(4):424.453,July1996. [19]J.Mellor-CrummyandD.Whalley.MHSIM:ACon\u00adfgurableSimulatorforMulti-levelMemoryHierarhies. \nTehnialReportTR-00-357,RieUniversity. [20]J.Mellor-Crummy,D.Whalley,andK.Kennedy.Im\u00adprovingMemoryHierarhyPerformaneForIrregular \nAppliations.InPro.13thACMInt'lConfereneon Superomputing,Phodes,Greee.,1999. [21]RobertD.BlumofeandMatteoFrigoandChristo\u00adpherF.JoergandCharlesE.LeisersonandKeithH. \nRandall.AnAnalysisOfDag-ConsistentDistributed Shared-MemoryAlgorithms.InPro.EighthAnnual ACMSymposiumonParallelAlgorithmsandArhite\u00adtures(SPAA),Padua,Italy,June1996. \n[22]E.J.Rosser.FineGrainedAnalysisOfArrayCompu\u00adtations.PhDthesis,Dept.ofComputerSiene,Uni\u00adversityofMaryland,Sep1998. \n[23]H.Sharangpani.IntelItaniumProessorMiroarhi\u00adtetureOverview.PresentationatIntelMiroproessor Forum. \n[24]J.E.SmithandJ.R.Goodman.AStudyofInstru\u00adtionCaheOrganizationsandReplaementPoliies.In Pro.TenthAnnualSymposiumonComputerArhite\u00adture,Stokholm,Sweden,June1983. \n[25]Y.SongandZ.Li.NewTilingTehniquestoImprove CaheTemporalLoality.InPro.SIGPLAN'99Con\u00adfereneonProgrammingLanguageDesignandImple\u00admentation,Atlanta,GA,May1999. \n[26]M.Weiser.ProgramSliing.IEEETransationson SoftwareEngineering,pages352.357,July1984. [27]WilliamPughandEvanRosser.IterationSpaeSliing \nAndItsAppliationToCommuniationOptimization. In11thACMInternationalConfereneonSuperom\u00adputing,Vienna,Austria,July1997. \n[28]WilliamPughandEvanRosser.IterationSpaeSliing ForLoality.InLCPC99,July1999. [29]M.E.WolfandM.Lam.Adataloalityoptimizing \nalgorithm.InProeedingsoftheSIGPLAN'91Confer\u00adeneonProgrammingLanguageDesignandImplemen\u00adtation,Toronto,Canada,June1991. \n[30]M.J.Wolfe.Moreiterationspaetiling.InProeedings ofSuperomputing'89,Reno,NV,Nov.1989.\n\t\t\t", "proc_id": "349299", "abstract": "<p>Recently, there have been several experimental and theoretical results showing significant performance benefits of recursive algorithms on bothmulti-level memory hierarchies and on shared-memory systems.  In particular, such algorithms have the data reuse characteristics of a blocked algorithm that is simultaneously blocked at many different levels.  Most existing applications, however, are written using ordinary loops.  We present a new compiler transformation that can be used to convert loop nests into recursive form automatically.  We show that the algorithm is fast and effective, handling loop nests with arbitrary nesting and control flow.  The transformation achieves substantial performance improvements for several linear algebra codes even on a current system with a two level  cache hierarchy. As a side-effect of this work, we also develop an improved algorithm for transitive dependence analysis (a powerful technique used in the recursion transformation and other loop transformations)that is much faster than the best previously known algorithm in practice.</p>", "authors": [{"name": "Qing Yi", "author_profile_id": "81100168665", "affiliation": "Rice University, Houston, TX", "person_id": "P228765", "email_address": "", "orcid_id": ""}, {"name": "Vikram Adve", "author_profile_id": "81100524180", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL", "person_id": "P291197", "email_address": "", "orcid_id": ""}, {"name": "Ken Kennedy", "author_profile_id": "81100453545", "affiliation": "Rice University, Houston, TX", "person_id": "PP40027435", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/349299.349323", "year": "2000", "article_id": "349323", "conference": "PLDI", "title": "Transforming loops to recursion for multi-level memory hierarchies", "url": "http://dl.acm.org/citation.cfm?id=349323"}