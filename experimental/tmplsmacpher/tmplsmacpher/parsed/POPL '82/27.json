{"article_publication_date": "01-25-1982", "fulltext": "\n\t\t\t", "proc_id": "582153", "abstract": "An operational semantics of the Prolog programming language is introduced. Meta-IV is used to specify the semantics. One purpose of the work is to provide a <b><i>specification of an implementation</i></b> of a Prolog interpreter. Another one is an application of this specification to a formal description of program optimization techniques based on the principle of <b><i>partial evaluation.</i></b>Transformations which account for pruning, forward data structure propagation and opening (which also provides backward data structure propagation) are formally introduced and proved to preserve meaning of programs. The so defined transformations provide means to inference data structures in an applicative language. The theoretical investigation is then shortly related to research in rule-based systems and logic.An efficient well-integrated partial evaluation system is available in Qlog --- a Lisp programming environment for Prolog.", "authors": [{"name": "H. Jan Komorowski", "author_profile_id": "81547396956", "affiliation": "Link&#246;ping University Sweden", "person_id": "P396956", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/582153.582181", "year": "1982", "article_id": "582181", "conference": "POPL", "title": "Partial evaluation as a means for inferencing data structures in an applicative language: a theory and implementation in the case of prolog", "url": "http://dl.acm.org/citation.cfm?id=582181"}