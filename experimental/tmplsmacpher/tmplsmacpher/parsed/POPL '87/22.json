{"article_publication_date": "10-01-1987", "fulltext": "\n\t\t\t", "proc_id": "41625", "abstract": "<p>The model theory of simply typed and polymorphic (second-order) lambda calculus changes when types are allowed to be empty. For example, the &#8220;polymorphic Boolean&#8221; type really has <italic>exactly</italic> two elements in a polymorphic model only if the &#8220;absurd&#8221; type &forall;<italic>t.t</italic> is empty. The standard &#946;-&#949; axioms and equational inference rules which are complete when all types are nonempty are <italic>not complete</italic> for models with empty types. Without a little care about variable elimination, the standard rules are not even <italic>sound</italic> for empty types. We extend the standard system to obtain a complete proof system for models with empty types. The completeness proof is complicated by the fact that equational &#8220;term models&#8221; are not so easily obtained: in contrast to the nonempty case, not every theory with empty types is the theory of a single model.</p>", "authors": [{"name": "A. R. Meyer", "author_profile_id": "81100572937", "affiliation": "MIT Lab. for Computer Sci.", "person_id": "PP40036080", "email_address": "", "orcid_id": ""}, {"name": "J. C. Mitchell", "author_profile_id": "81338490160", "affiliation": "AT&T Bell Labs", "person_id": "PP39076090", "email_address": "", "orcid_id": ""}, {"name": "E. Moggi", "author_profile_id": "81100490405", "affiliation": "Univ. Edinburgh", "person_id": "PP39080674", "email_address": "", "orcid_id": ""}, {"name": "R. Statman", "author_profile_id": "81100415638", "affiliation": "Mathematics Dept., Carnegie-Mellon Univ.", "person_id": "PP31097805", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/41625.41648", "year": "1987", "article_id": "41648", "conference": "POPL", "title": "Empty types in polymorphic lambda calculus", "url": "http://dl.acm.org/citation.cfm?id=41648"}