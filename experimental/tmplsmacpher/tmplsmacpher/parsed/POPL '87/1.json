{"article_publication_date": "10-01-1987", "fulltext": "\n\t\t\t", "proc_id": "41625", "abstract": "<p>Specification and verification techniques for abstract data types that have been successful for sequential programs can be extended in a natural way to provide the same benefits for concurrent programs. We propose an approach to specifying and verifying concurrent objects based on a novel correctness condition, which we call &#8220;linearizability.&#8221; Linearizability provides the illusion that each operation takes effect instantaneously at some point between its invocation and its response, implying that the meaning of a concurrent object's operations can still be given by pre- and post-conditions. In this paper, we will define and discuss linearizability, and then give examples of how to reason about concurrent objects and verify their implementations based on their (sequential) axiomatic specifications.</p>", "authors": [{"name": "M. P. Herlihy", "author_profile_id": "81100151794", "affiliation": "Department of Computer Science, Carnegie-Mellon University, Pittsburgh, PA, USA", "person_id": "PP39073081", "email_address": "", "orcid_id": ""}, {"name": "J. M. Wing", "author_profile_id": "81339536422", "affiliation": "Department of Computer Science, Carnegie-Mellon University, Pittsburgh, PA, USA", "person_id": "PP39081243", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/41625.41627", "year": "1987", "article_id": "41627", "conference": "POPL", "title": "Axioms for concurrent objects", "url": "http://dl.acm.org/citation.cfm?id=41627"}