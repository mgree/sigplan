{"article_publication_date": "10-01-1987", "fulltext": "\n\t\t\t", "proc_id": "41625", "abstract": "<p>The parallelization of sequential programs is an adequate approach for the easy use of architectural features provided on parallel computers. We propose to enhance this technique with the notion of semantic parallelization. The principle is to consider the transformations of programs induced by parallelization as non-standard denotational semantics of the source programming language. We show how to apply this concept to detect, in a toy language ALL, parallelizable complex commands and to deal with some type of programs using indirections. Thanks to results in domain theory and abstract interpretation, we give correctness proofs for these transformations with respect to ALL standard semantic. A byproduct of our approach is that a denotational specification is also an executable   prototype ;hence, we were able to implement a semantic parallelizer in the ML functional language. Running examples are supplied.</p>", "authors": [{"name": "P. Jouvelot", "author_profile_id": "81100056957", "affiliation": "Laboratoire MASI, Universit&#233; PARIS 6, 4, Place Jussieu, 75252 PARIS Cedex 05, France", "person_id": "PP31081759", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/41625.41629", "year": "1987", "article_id": "41629", "conference": "POPL", "title": "Semantic parallelization: a practical exercise in abstract interpretation", "url": "http://dl.acm.org/citation.cfm?id=41629"}