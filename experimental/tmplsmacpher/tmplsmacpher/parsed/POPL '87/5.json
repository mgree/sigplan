{"article_publication_date": "10-01-1987", "fulltext": "\n\t\t\t", "proc_id": "41625", "abstract": "<p>An algorithm for transforming sequential programs into equivalent parallel programs is presented. The method concentrates on finding loops whose separate iterations can be run in parallel without synchronization. Although a simple version of the method can be shown to be optimal, the problem of generating optimal code when loop interchange is employed is shown to be intractable. These methods are implemented in an experimental translation system developed at Rice University.</p>", "authors": [{"name": "r. Allen", "author_profile_id": "81100652764", "affiliation": "Department of Computer Science, Rice University, Houston, Texas", "person_id": "P310680", "email_address": "", "orcid_id": ""}, {"name": "D. Callahan", "author_profile_id": "81100653612", "affiliation": "Department of Computer Science, Rice University, Houston, Texas", "person_id": "PP31071504", "email_address": "", "orcid_id": ""}, {"name": "K. Kennedy", "author_profile_id": "81100453545", "affiliation": "Department of Computer Science, Rice University, Houston, Texas", "person_id": "PP40035756", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/41625.41631", "year": "1987", "article_id": "41631", "conference": "POPL", "title": "Automatic decomposition of scientific programs for parallel execution", "url": "http://dl.acm.org/citation.cfm?id=41631"}