{"article_publication_date": "09-01-1991", "fulltext": "\n Phoenix,Arizona 6-77 October 7991 Finding Parallel Universes Report: Peter Coad Object International, \nInc. Editors note: Peter submitted a comprehensive report on the results of his activities in the Parallel \nUniverses exercise. It is quite as interesting and penetrating as Norm Kerth s Cfollowing). However, \nPeter s was not as disgestible Cfor the machine editing requirements of producing the Addendum), and \nadditionally, I was quite reluctant to attempt to publish two such lengthy reports. My apologies to Peter \nCoad. Norm Kerth s report must serve as an example of the effort that all put into this exercise. Peter \nCoad s preliminary comments on the setting for doing such work is so interesting, however, that I did \nfeel it worthwhile to pull it together for inclusion here. The main event. A first-event OOPSLA event, \ncalled the Parallel Universes session. The idea: 00 in action. The setting: a last day cliff-hanger, \nto encourage people to stay. The players: Jon Hopkins (domain expert) and participants Tony Wasserman, \nNorm Kerth, and Peter Coad. The challenge: given a problem statement, spend four hours applying analysis \nand design techniques. The place: live . . . in separate rooms . . . in front of inquisitive OOPSLA participants. \nThe wrap-up: A panel session . . . in front of a majority of the conference, on what we did and why we \ndid it . . . followed by questions and answers. Talk about a demanding experience-it was nearly an intellectual \ndecathlon. The problem statement dealt with organizing a conference and conference management; taking \nsubmissions for tutorials and papers; allocating these to reviewers; notifying authors of accepted aud \nrejected submissions; aud a few more items.  Objects: Practical Approaches 1. Investigate the topic-read, \nread, read. I began my work about a week earlier when Jon Hopkins called to say the subject matter was \nmeetings and conferences. I said Okay, that s enough. That s all I really need to know about. Please \ndon t give me any more of the problem until we actually get to the day of the competition. That week \nI located a book, The AMA Guide for Meeting and Event Planners, and brought that along with me to OOPSLA. \nOn my day off (Monday), I actually read through the book (I love to read and read quite quickly). I made \nan outline of key topics. You see, a good place to look for classes is to get key books in the field \nand see how they re organized. From a copy of that outline one could go ahead and identify many core \nclasses. This approach gave me breadth, perspective, so that I could drop into the details on the day \nof the competition and really do my best. I expected the requirements statement to be handed out at one \no clock-but it was handed out at 9:30 in that morning. I got mine closer to 11 o clock-late, but uo problem. \nAt 12 noon, I met with my team member, Jill Nicola. Jill and I are part of the Object International team. \nIn my opinion, Jill s ability in cognitive factors and system building, object-oriented design, and object-oriented \nprogramming (notably Smalltalk) are second to none, and I m thrilled to have her as part of the team. \nShe joined Object International in July and is already making a fantastic contribution. 2. Digest the \nrequirements statement. We began studying the requirements at 12 noon. I took the list of requirementss \nand summarized them in an outline format. Then I began moving them, looking for logical groupings and \ncommonality. In fact, listing the requirements in outline format and then moving them around (all done \nwith More III on the Mac) revealing gaps in the requirements-inconsistencies Addendum to the Proceedings \nOOPSLA 91 [I71 in how things were being handled. At that point, we uncovered some implicit requirements \n(ones the client had left out). We checked with the domain expert . . . who was available only on a part-time \nbasis (Note: The domain expert should be part of the team! (And other team members should listen actively) \nBut the domain expert was not always available during this exercise.) 3. Set priorities. In our first \nencounter with the domain expert we asked for: (a)the purpose of the system in twenty five words or less \n(b)the critical success factors Cc) a most-important ranking of what we might get done within the schedule \nand budget constraints (based on the critical success factors) 4. Reorganize and refine the requirements \nstutement. The domain expert s priority ranking was very important to us. Using it, we reorganized the \nrequirements. As a result, we discovered some inconsistencies in them. These were resolved by: (a) getting \nmore information from the domain expert (b) treating papers and tutorials as a single thing called submission \n(so that each would receive a more comprehensive and consistent treatment)  5. Ident@ core classes. \nHere s were the real fun started-identifying the core classes in the problem domain, the ones that really \nhad to be there in order to get the job done. This meant defining classes for submissions, as well as \nfor a person playing many roles. 6. Select tools Peter: and Jill: Norm Kerth: Mac IIcx, using More III \n(for outlining) OOAToolThl (for on-the\u00adanalysis work) Suu SparcStation 2, using Objectworks/Smalltalk \nParcPlace Systems (for fly prototyping) pencil and paper fly from ou-the- Tony Wasserman: pencil and \npaper I was shocked to find out that Tony, known for his OOSD notation and tools, didn t use any of \nthem! (Some concluded that his tools were as effective for 118 1 9-l 1 October doing 00 from a higher \nperspective than right at the code level.) 7. Prototype. As I was defining OOA classes using the graphical \nOOAToolTM, Jill Nicola was busy putting the same OOA classes into Smalltalk. Once (with the help of a \ndomain expert) the highest priority ranked classes were defined, Jill began designing the human interaction \ncomponent for the prototype, using basic visual display classes from the Smalltalk euvirouIllent. In \ntwo and one-half hours, she constructed a small working prototype. It allowed submissions to be manually \nentered, browsed, and edited. A working prototype in just two and a half hours! Wow! People watching \nwere impressed-an actual demonstration confirming that Yes!, one needs to prototype even during the analysis!-aud \nactual proof that the domain-based classes defined in OOA really do flow right into the design and implementation. \n8. Follow an over&#38; strategy. Normally, I do analysis work by going breadth-first across a problem \ndomain. Prototyping concurrently with analysis requires flushing out details sooner. So first I did breadth \nwork, identifying the core classes followed by some depth work, to give Jill enough information for prototyping. \nThen I popped back up and did more breadth work, adding another three dozen classes based upon what I \nlearned reading about conference management. (Actually, I usually let the domain expert decide whether \nto go breadth or depth first, but since our domain expert was only occasionally available ) 9. Work \nat high speed . . . with an audience. We worked fast. And with great intensity. Meanwhile, huudreds of \npeople checked and kept checking to see what we were doing. They d go to the other rooms to see what \nthe other players were doing . . and then come back and check on us again and see what was going on. \nSo invigorating, so great!  Just before five o clock, I scooped up all my papers and rau down the main \naisle of a gigantic meeting room. I ran up the steps of the stage and sat down at the panel. One minute \nlater, we began. (At the same time, Mark Mayfield and Allen Ripke of the Object International team were \nreally hustling to get the OOA results printed and made into overhead transparencies. Because of them \nI was able to show the whole audience the actual OOA model we created that afternoon.) 10. Present key \nobservations. We had a one hour panel session to talk about the results. Tony shared his overall approach \nand observations. Norm shared 1991 Phoenix, Arizona his overall approach and observations. And Pete Coad, \nnot realizing just how excited he was, got up to share his observations on OOA. a Breadth. Stretch beyond \nthe problem statement-use domain experts and do additional reading. Avoid the fallacy of a single context. \nLook for implicit requirements, often beyond the problem statement. Ask how the current system responsibilities \ncould fit within a larger context for future systems in the same domain. b. Resiliency to change. Think \nahead about reuse of the results, such as this conference management system for other conferences, not \njust OOPSLA. c Reuse in the same domain, Keep OOA results (those that are problem domain based) distinct \nfrom the human interaction classes, the task management classes, and the data management classes. This \nis very important if one is going to have reuse in the same domain. d. Team approach. Non first the analyst \nand then the designer then the programmer -that s no deal. It s so much more effective to have a team \nof people-a domain expert, an analyst, and a designer/builder, for this afternoon s session-working together \non a project. e. OOA results fit right in the midst of an OOD. The same classes continue on. The OOA \nclasses end up in the code itself. We demonstrated this with the OOA and the Smalltalk prototyping during \nthat four hour time period. Attributes and services are both significant. Object know things and do things. \nAttributes and services are both very important in comprehending the domain and a system s responsibilities. \nActivities in OOA and OOD. Yes, these exist. We can name them; we use them! But these are activities, \nnot steps. One very often moves between the differenct activities. Over time, there is a development \nof the intuitive side of finding objects, being able to do it with creativity and innovation. This is \nvery much the case of doing effective object-oriented development. (This same phenomenon has been observed \nwith facted classification in library research.) Contact information: Peter Coad Object International, \nInc. 8 140 N. MoPac Expwy., 4-200 Austin, Texas 78759 5121795-0202 F~~795-0332 coad@applelink.apple.corn \nCompuServe 71210,3642 Addendum to the Proceedings OOPSLA 91 [I91 \n\t\t\t", "proc_id": "143773", "abstract": "", "authors": [{"name": "Peter Coad", "author_profile_id": "81100276435", "affiliation": "", "person_id": "PP31074928", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/143773.143782", "year": "1991", "article_id": "143782", "conference": "OOPSLA", "title": "Finding objects: practical approaches", "url": "http://dl.acm.org/citation.cfm?id=143782"}