{"article_publication_date": "01-01-1986", "fulltext": "\n\t\t\t", "proc_id": "512644", "abstract": "Data or program flow analysis is concerned with the static analysis of programs, to obtain as much information as possible about their possible run time behavior without actually having to run the programs. Due to the unsolvability of the halting problem (and nearly any other question concerning program behavior), such analyses are necessarily only approximate whenever the analysis algorithm is guaranteed to terminate. Further, exact analysis may be impossible due to the lack of knowledge of input data values, so the analysis can at best yield information about sets of possible computations.", "authors": [{"name": "Neil D. Jones", "author_profile_id": "81452616043", "affiliation": "", "person_id": "PP95034660", "email_address": "", "orcid_id": ""}, {"name": "Alan Mycroft", "author_profile_id": "81100642901", "affiliation": "", "person_id": "PP39052140", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/512644.512672", "year": "1986", "article_id": "512672", "conference": "POPL", "title": "Data flow analysis of applicative programs using minimal function graphs", "url": "http://dl.acm.org/citation.cfm?id=512672"}