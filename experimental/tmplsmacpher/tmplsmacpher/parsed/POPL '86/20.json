{"article_publication_date": "01-01-1986", "fulltext": "\n\t\t\t", "proc_id": "512644", "abstract": "Language-specific editors for typed programming languages must contain a subsystem for semantic analysis in order to guarantee correctness of programs with respect to the context conditions of the language. As programs are usually incomplete during development, the semantic analysis must be able to cope with missing context information, e. g. incomplete variable declarations or calls to procedures imported from still missing modules. In this paper we present an algorithm for incremental semantic analysis, which guarantees immediate detection of semantic errors even in arbitrary incomplete program fragments. The algorithm is generated from the language's context conditions, which are described by inference rules. During editing, these rules are evaluated using a unification algorithm for many-sorted algebras with semi-lattice ordered subsorts and non-empty equational theories. The method has been implemented as part of the PSG system, which generates interactive programming environments from formal language definitions, and has been successfully used to generate an incremental semantic analysis for PASCAL and MODULA-2.", "authors": [{"name": "Gregor Snelting", "author_profile_id": "81100482381", "affiliation": "", "person_id": "PP43121149", "email_address": "", "orcid_id": ""}, {"name": "Wolfgang Henhapl", "author_profile_id": "81100510064", "affiliation": "", "person_id": "P300886", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/512644.512665", "year": "1986", "article_id": "512665", "conference": "POPL", "title": "Unification in many-sorted algebras as a device for incremental semantic analysis", "url": "http://dl.acm.org/citation.cfm?id=512665"}