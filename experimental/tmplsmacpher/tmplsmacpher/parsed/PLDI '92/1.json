{"article_publication_date": "07-01-1992", "fulltext": "\n\t\t\t", "proc_id": "143095", "abstract": "<p>This paper introduces program <italic>directing</italic>, a new way of program interaction. Directing enables one program, the <italic>director</italic>, to monitor and to control another program, the <italic>executor</italic>. One important application of program directing is human interaction with complex computer simulations.</p><p>The Dynascope programming environment is designed specifically to support directing in traditional, compiled languages. It provides a framework and building blocks for easy construction of sophisticated directors. Directors are regular programs that perform the directing of executors through Dynascope primitives. Dynascope is built around the concept of the <italic>execution stream</italic> which provides a complete description of the executor's computational behavior. The source code of executors requires no changes in order to be subjected to directing.</p><p>This paper gives an overview of the Dynascope system. Sample applications are presented: debugging register allocation, animation of procedure calls, and a complex artificial life simulation. The performance of Dynascope is illustrated by real time measurements.</p>", "authors": [{"name": "Rok Sosi&#269;", "author_profile_id": "81100131333", "affiliation": "", "person_id": "PP39079523", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/143095.143110", "year": "1992", "article_id": "143110", "conference": "PLDI", "title": "Dynascope: a tool for program directing", "url": "http://dl.acm.org/citation.cfm?id=143110"}