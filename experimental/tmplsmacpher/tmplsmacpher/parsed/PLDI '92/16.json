{"article_publication_date": "07-01-1992", "fulltext": "", "proc_id": "143095", "abstract": "<p>Many loop nests in scientific codes contain a parallelizable outer loop but have an inner loop for which the number of iterations varies between different iterations of the outer loop. When running this kind of loop nest on a SIMD machine, the SIMD-inherent restriction to single program counter common to all processors will cause a performance degradation relative to comparable MIMD implementations. This problem is not due to limited parallelism or bad load balance, it is merely a problem of control flow.</p><p>This paper presents a loop transformation, which we call <italic>loop flattening</italic>, that overcomes this limitation by letting each processor advance to the next loop iteration containing useful computation, if there is such an iteration for the given processor. We  study a concrete example derived from a molecular dynamics code and compare performance results for flattened and unflattened versions of this kernel on two SIMD machines, the CM-2 and the DECmpp 12000. We then evaluate loop flattening from the compiler's perspective in terms of applicability, cost, profitability, and safety. We conclude with arguing that loop flattening, whether performed by the programmer or by the compiler, introduces negligible overhead and can significantly improve the performance of scientific codes for solving irregular problems.</p>", "authors": [{"name": "Reinhard v. Hanxleden", "author_profile_id": "81100497069", "affiliation": "", "person_id": "P240541", "email_address": "", "orcid_id": ""}, {"name": "Ken Kennedy", "author_profile_id": "81100453545", "affiliation": "", "person_id": "PP40027435", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/143095.143133", "year": "1992", "article_id": "143133", "conference": "PLDI", "title": "Relaxing SIMD control flow constraints using loop transformations", "url": "http://dl.acm.org/citation.cfm?id=143133"}