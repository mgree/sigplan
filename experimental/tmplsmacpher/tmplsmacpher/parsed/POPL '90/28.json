{"article_publication_date": "12-01-1989", "fulltext": "\n\t\t\t", "proc_id": "96709", "abstract": "<p>We present a functional language featuring a form of dynamic overloading akin to message passing in object oriented languages. We give a dynamic semantics describing a non-deterministic evaluation, as well as a type discipline (static semantics) supporting type inference. The type system ensures that a well-typed program has a correct execution, unique up to a semantic equivalence relation, and allows this execution to proceed deterministically, while resolving overloading at run-time.</p>", "authors": [{"name": "Francois Rouaix", "author_profile_id": "81100620569", "affiliation": "INRIA, B.P.105 78153 Le Chesnay Cedex, France", "person_id": "P85648", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/96709.96746", "year": "1990", "article_id": "96746", "conference": "POPL", "title": "Safe run-time overloading", "url": "http://dl.acm.org/citation.cfm?id=96746"}