{"article_publication_date": "12-01-1989", "fulltext": "\n\t\t\t", "proc_id": "96709", "abstract": "<p>In earlier work, we used a typed function calculus, XML, with dependent types to analyze several aspects of the Standard ML type system. In this paper, we introduce a refinement of XML with a clear compile-time/run-time <italic>phase distinction</italic>, and a direct compile-time type checking algorithm. The calculus uses a finer separation of types into universes than XML and enforces the phase distinction using a nonstandard equational theory for module and signature expressions. While unusual from a type-theoretic point of view, the nonstandard equational theory arises naturally from the well-known Grothendieck construction on an indexed category.</p>", "authors": [{"name": "Robert Harper", "author_profile_id": "81100140064", "affiliation": "Carnegie Mellon University, Pittsburgh, PA", "person_id": "PP39029370", "email_address": "", "orcid_id": ""}, {"name": "John C. Mitchell", "author_profile_id": "81338490160", "affiliation": "Stanford University, Stanford, CA", "person_id": "PP43135972", "email_address": "", "orcid_id": ""}, {"name": "Eugenio Moggi", "author_profile_id": "81100490405", "affiliation": "University of Cambridge, Cambridge CB2 3QG, UK", "person_id": "PP43141861", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/96709.96744", "year": "1990", "article_id": "96744", "conference": "POPL", "title": "Higher-order modules and the phase distinction", "url": "http://dl.acm.org/citation.cfm?id=96744"}