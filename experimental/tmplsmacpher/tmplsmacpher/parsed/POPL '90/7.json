{"article_publication_date": "12-01-1989", "fulltext": "\n\t\t\t", "proc_id": "96709", "abstract": "<p>We propose a new kind of programming language, with the following features:</p><list><item><p>a simple graph rewriting semantics,</p></item><item><p>a complete symmetry between constructors and destructors,</p></item><item><p>a type discipline for deterministic and deadlock-free (microscopic) parallelism.</p></item></list><p><italic>Interaction nets</italic> generalize Girard's <italic>proof nets</italic> of linear logic and illustrate the advantage of an <italic>integrated logic</italic> approach, as opposed to the <italic>external</italic> one. In other words, we did not try to design a logic describing the behaviour of some given computational system, but a programming language for which the type discipline is already (almost) a logic.</p><p>In fact, we shall scarcely refer to logic, because we adopt a na&#239;ve and pragmatic style. A typical application we have in mind for this language is the design of interactive softwares such as editors or window managers.</p>", "authors": [{"name": "Yves Lafont", "author_profile_id": "81100377918", "affiliation": "Laboratoire d'Informatique de l'Ecole Normale Sup&#233;rieure, 45 rue d'Ulm, 75230 Paris Cedex 05, France", "person_id": "P308586", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/96709.96718", "year": "1990", "article_id": "96718", "conference": "POPL", "title": "Interaction nets", "url": "http://dl.acm.org/citation.cfm?id=96718"}