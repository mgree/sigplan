{"article_publication_date": "12-01-1989", "fulltext": "\n\t\t\t", "proc_id": "96709", "abstract": "<p>In this paper we study concurrent, asynchronous processes and functions on them which can be programmed using the (full) unfair or the fair merge operations. The main result is a normal form theorem for these (relatively) &#8220;computable process functions&#8221; which implies that although they can be very complex when viewed as classical set-functions, they are all &#8220;loosely implementable&#8221; in the sense of Park [7]. We also announce a variation and a substantial strengthening of the main &#8220;transfer principle&#8221; of [4] which have applications to the semantics and logic of programming languages with interactive (deterministic) or concurrent (non-deterministic) constructs.</p>", "authors": [{"name": "Yiannis N. Moschovakis", "author_profile_id": "81100468892", "affiliation": "Department of Mathematics, UCLA", "person_id": "P305580", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/96709.96716", "year": "1990", "article_id": "96716", "conference": "POPL", "title": "Computable process", "url": "http://dl.acm.org/citation.cfm?id=96716"}