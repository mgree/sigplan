{"article_publication_date": "12-01-1989", "fulltext": "\n\t\t\t", "proc_id": "96709", "abstract": "<p>Indexing Prolog clauses is an important optimization step that reduces the number of clauses on which unification will be performed and can avoid the pushing of a choice point. It is quite desirable to increase the number of functors used in indexing as this can considerably reduce the size of the filtered set. However this can cause an enormous increase in running time if indexing is done naively. This paper describes a new technique for indexing that utilizes all the functors in a clause-head. More importantly, in spite of using all the functors, this technique is still able to quickly select relevant clause-heads at run time. This is made possible primarily by a finite-state automaton that guides the indexing process. The automaton is constructed at compile time by preprocessing all the clause-heads.</p>", "authors": [{"name": "R. Ramesh", "author_profile_id": "81452609728", "affiliation": "Department of Computer Science, University of Texas at Dallas, Richardson, TX", "person_id": "PP39077609", "email_address": "", "orcid_id": ""}, {"name": "I. V. Ramakrishnan", "author_profile_id": "81452611166", "affiliation": "Department of Computer Science, State University of New York at Stony Brook, Stony Brook, NY", "person_id": "PP39054624", "email_address": "", "orcid_id": ""}, {"name": "D. S. Warren", "author_profile_id": "81452607732", "affiliation": "Department of Computer Science, State University of New York at Stony Brook, Stony Brook, NY", "person_id": "PP39080864", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/96709.96738", "year": "1990", "article_id": "96738", "conference": "POPL", "title": "Automata-driven indexing of Prolog clauses", "url": "http://dl.acm.org/citation.cfm?id=96738"}