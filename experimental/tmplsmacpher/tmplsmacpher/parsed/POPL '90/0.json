{"article_publication_date": "12-01-1989", "fulltext": "\n\t\t\t", "proc_id": "96709", "abstract": "<p>In this paper, I introduce a new formal system, ACCL, based on Curien's <italic>Categorical Combinators</italic> [Cur86a]. I show that ACCL has properties not possessed by Curien's original combinators that make it particularly appropriate as the basis for implementation and analysis of a wide range of reduction schemes using shared environments, closures, or &#955;-terms. As an example of the practical utility of this formalism, I use it to specify a simple lazy interpreter for the &#955;-calculus, whose correctness follows trivially from the properties of ACCL.</p><p>I then describe a <italic>labeled</italic> variant of ACCL, ACCL<supscrpt>L</supscrpt>, which can be used as a tool to determine the degree of &#8220;laziness&#8221; possessed by various &#955;-reduction schemes. In particular, ACCL<supscrpt>L</supscrpt> is applied to the problem of <italic>optimal</italic> reduction in the &#955;-calculus. A reduction scheme for the &#955;-calculus is optimal if the number of redex contractions that must be performed in the course of reducing any &#955;-term to a normal form (if one exists) is guaranteed to be minimal. Results of L&#233;vy [L&#233;v78,L&#233;v80] showed that for a natural class of reduction strategies allowing <italic>shared</italic> redexes, optimal reductions were, at least in principle, possible. He conjectured that an optimal reduction strategy might be realized in practice using shared closures and environments as well as shared &#955;-terms. I show, however, using ACCL<supscrpt>L</supscrpt>, a practical optimal reduction scheme for arbitrary &#955;-terms using only shared environments, closures, or terms is unlikely to exist.</p>", "authors": [{"name": "John Field", "author_profile_id": "81100419562", "affiliation": "Department of Computer Science, Cornell University, Upson Hall, Ithaca, NY", "person_id": "PP31076095", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/96709.96710", "year": "1990", "article_id": "96710", "conference": "POPL", "title": "On laziness and optimality in lambda interpreters: tools for specification and analysis", "url": "http://dl.acm.org/citation.cfm?id=96710"}