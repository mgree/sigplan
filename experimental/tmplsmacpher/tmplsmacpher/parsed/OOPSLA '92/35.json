{"article_publication_date": "12-01-1992", "fulltext": "\n Addendum A 92 to the Vancouver, British Columbia, Canada 5-10 October 1992 Proceedings An Implementation \nReport by: Stephen Chart National Research Council CaIl&#38; EXPRESS [ISO 911 is an information modeling \nlanguage being developed to describe the information content of the international standard informally \ncalled STEP lWilson 87,89,90] [Chan 901, itself designed for the exchange of product definition data \namong computer applications for manufacturing. The data types supported in EXPRESS include . basic types \n(e.g., integer, array,set), real, string, . user-defined types (e.g., EWUMERATION (red, blue, green) \n), and of . entity types. An entity consists of a set of attributes of basic, user-defined or entity \ntypes. In addition, an entity type can be defined as a subtype of another entity type (the supertype), \nin which case it inherits all the attributes of the supertype. Constraints can be placed on the values \nof attributes, and rules can be specified to relate the values of attributes within or across entities. \nFor example, a point on a curve can be defined as: ENTITY point-on-curve SUBTYPE OF (point); basis-curve \n: curve: pointgarametar : REAL; WHERE {parameter-lower-limit(basis-curve) <= pointgarameter <= parameter_upper-limit \n(basis curve) } ; END ENTITY; 510October1992 -169- Poster Submission-   of EXPRESS in Smalltalk The \nEXPRESS subtyping hierarchy resembles the subclassing mechanism in Smalltalk, and could have been implemented \nby mapping each entity type into a Smalltalk class, subtypes into subclasses, etc. There are, however, \nsome complications. Firstly, EXPRESS allows a type to have multiple supertypes, but Smalltalk does not \npresently support multiple inheritance. Secondly, the relation among subtypes of a supertype is not necessarily \nthat of ONEOF (exclusive-or). The following is a simplified model of the interface to a cell in an integrated \ncircuit: ENTITY port SUPERTYPE OF ( ONEOF (inputgort,outputgort) AND ONEOF (sixnplegort,arraygort)); \npin-number : STRING; END-ENTITY; where a port must be: (1) input and simple, (2) output and simple, \n(3) input and array, or (4) output and array. We ruled out modifying existing Smalltalk constructs such \nas single inheritance. Instead, we designed and implemented a data dictionary in Smalltalk-which captures \nthe EXPRESS typing hierarchy. Each entity type is mapped into an instance ofthe StepTypeEntitychss, whoseinstance \nvariables contain the supertype( subtype(s), subtype relation(s), and the list of attribute/type pairs. \nAn EXPRESS parser converts EXPRESS definitions into the data dictionary. Addendum to the Proceedings \n Instances of the EXPRESS entity types are currently exchanged by encoding in the STEP physical exchange \nfile format. For example, 11564 = CURVE ( #565 = PTONCV ( '#56i, i,b' ); where PTONCV is ashort form \nof point on-curve. A STEP file parser translates entity i%ances in the file format into a collection \nof Smalltalk objects, called a STEP working form, which consists of mainly two classes: Each entity instance \nis mapped into an instance of the StepValueEntity class, which contains the set of components of that \ninstance. For example, an instance of port that is both an inputgort and an arraygort would have three \ncomponents: the attributes sets of port, inputgort, and arraygort. Each instance component is mapped \ninto an instance of the EntityInstanceCornponent class, which contains the list of (values of) attributes \ndefined for that component (type). The SchemaBrowser class allows the user to examine the data dictionary, \nwhile the InstanceBrowser classallowstheusersto invoke the STEP file parser to translate a data file \ninto the working form, to examine the working form, and to output the data in a relational format, which \ncan then be loaded into a relational database management system. In the mean time, we are also using \nEXPRESS to model the data contents of other data exchange formats such as Initial Graphics Exchange Specification \n(IGES), and Electronic Data Interchange Format (EDIF), and extending our implementation to integrate \ndata from these formats. In conclusion, we have designed and implemented a basic environment to support \nthe use of EXPRESS in manufacturing data exchange via the emerging international standard STEP. Although \nthere are similarities between the subtyping hierarchy of EXPRESS and subclassing in an object-oriented \nlanguage such as Smalltalk, there are significant differences such that the intuitive mapping of type \n= class is not appropriate. We have instead designed generic classes to map the concept of an entity \ninstance having multiple components corresponding to the related entity types, with the legal combination \nof components governed by the typing hierarchy. References [Ghan 901 S. Chan &#38; K. Garbuchev, What \nis PDES/STEP? Proceedings, The 9th Canadian Integrated Manufacturing I Design Conference, 5-7 June, 1990, \nToronto, Ontario, Canada, pp. 169- 174. [ISO 911 IS0 CD 10303-l 1 Product Data Representation and Exchange \n- Part 11: The EXPRESS Language Reference Manual. International Organization for Standardization, TC \n184/SC4 N83,31 May, 1991. Wilson 871 P. Wilson, Information Modeling, IEEE CC&#38;A, Vol. 7, No. 3, Dec. \n87, pp. 65-67. Wilson 891 P. Wilson, PDES STEPS Forward, IEEE CC&#38;A, Vol. 9. No. 2, Mar. 89, pp. 79-80. \n[Wilson 901 P. Wilson, STEP Ballot Results , Vol. 10, No. 3, May 90, pp. 79-82. Contact information: \nStephen Chart National Research Council Montreal Road, M-50 Ottawa, Canada KlA OR6 E-mail: s-chan@syslab.nrc.ca \nOOPSLA !XZ -170-Vancouver, British Columbia  \n\t\t\t", "proc_id": "157709", "abstract": "", "authors": [{"name": "Stephen Chan", "author_profile_id": "81332492453", "affiliation": "", "person_id": "PP37037053", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/157709.157744", "year": "1992", "article_id": "157744", "conference": "OOPSLA", "title": "An implementation of EXPRESS in Smalltalk", "url": "http://dl.acm.org/citation.cfm?id=157744"}