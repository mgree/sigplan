{"article_publication_date": "12-01-1992", "fulltext": "\n Addendum A 92 to the Vancouver, British Columbia, Canada 5-10 October 1992 Proceedings Workshop Report- \n Patterns Organizers: Peter Coad Mark Mayfield Object International, Inc. Workshop Participants: something \nregarded as a normative example to be copied; archetype; exemplar. Bruce Anderson, Ken Auer, Kent Beck, \nJohn From Christopher Alexander s work in architecture: Burmaster, Richard Cullom, Ward Cunningham, Dick \nFelsinger, John Gilbert, Jerry Hamilton, Ralph A pattern is a solution to a problem in a Johnson, Ralph \nKolewe, Giseppe Menga, Wolfgang context. Pree, Rik Smoody, Bob Wilhelm, Rebecca Wirfs- Brock Every \npattern is a solution to a problem in a context. A pattern has three parts:  Exploring Patterns for \n. Problem, context, solution  Object-Oriented Development . A pattern offers workable solutions Together, \nwe wrestled with these core issues: Patterns are rules of thumbs that can be used again 9 What is a pattern? \nand again-useful, practical how to guidelines. 9 Where can we look to understand more about Patterns \ntend not to be domain-specific. patterns? Patterns are one of the primary mechanisms that How do we describe \na pattern? . people use for passing on expertise to others. What are some examples of what might be \nconsidered patterns? And how can we catalog Where can we look to understand more about them? patterns? \n. How does one interpret Alexander s work? How far What s the process of discovering patterns? should \none go with it? It s not a holy work, what are 9 What s the potential impact of patterns? its strengths \nand its weaknesses? Are there different or opposing views within architecture? What is a pattern? We \nneed to look at patterns, their description, and From Webster s: their use in perhaps a half a dozen \ndifferent fields. Pattern. A fully realized form, original, or model accepted or proposed for imitation; \n 5-10 October 1992 -93-Addendum to the Proceedings How do we describe a pattern? In this workshop, we \nspent quite a bit of time on Alexander s work on patterns (one that many were at least somewhat familiar \nwith). Based upon his work, we worked out a basic template for describing a pattern: - Name the pattern \n- Explain the problem(s), the need . . . and the solution - Problem - Alternatives . . . with respective \nproblems - Solution - A story-telling sense of tension (oh, what a problem) and release (oh, what a relief) \n - Give context for its usage. - If you see this, then do this. - If you see this, then don t do this. \n - Describe when to use it. - Describe how to use it, step-by-step. - The overall pattern . . . the \nbig picture - Navigate around the pattern. - Include things to watch out for. - Include how one might \nuse a part of a pattern.  - Examples - Same pattern . . . applied in a variety of ways - Examples that \nshow what happens when the pattern is not applied (points to why the pattern is needed). - Plus . . \n. - A path for learning . . . and a path for reference . . . - Audience-specific paths through a description \n- Use pictures, diagrams What are some examples of what might be considered patterns? And how can we \ncatalog them? At the workshop, we informally explored a wide- range of potential patterns, including: \n- Delegation - Roles played - Filters/converter - Wrapping - Masquerading - Type adaptation - Active \nmonitor - Producer/consumer . . . - Broadcaster/receiver (provider/dependent) - Event-response OOPSLA \n92 - Subscription/notification (subscriber/event detector &#38; notifier) - Model-view-controller - Sequential \nanalyzer - Window per task - Behavior across a collection - Time association - Strategy object - The \nfiler - Interpreter - Draganddrop - Request queuing - Simple view of a complex object - Complex view \nof a simple object - Item/item description - Thing/group thing - Object community - Minions - Aggregation \n- Subtypes Wow! What a wide range of things that might be considered a pattern. The conclusion to all \nof this? We need to develop a template for describing patterns. Then we can develop a small number of \ncarefully constructed patterns. Later, we can work on cataloging patterns and prioritizing their relative \nusefulness. What s the process of discovering patterns? Another area we discussed-and another area for \nfuture consideration-is the discovery process. How do we find new patterns? - Experience - Build things-and \nwatch yourself as you build them - Catalog what you ve done - Teach-and learn/improve how to communicate \nthem Pattern discovery includes developing a collection of patterns, building a pattern language, and \ncheck that language for completeness by applying the patterns to some specific systems. Better understanding \nof pattern discovery may lead to pattern discovery tools, ones that empower others in discovering, thinking \nabout, and cataloging their own patterns. Vancouver, British Columbia What s the potential impact of \npatterns? We explored the potential impact of patterns. We believe that the impact is HUGE. Why?-Patterns \nprovide: - A basis for architectural consistency - A higher-level approach for software methods - A \nhigher-level style convention - A teaching vehicle . . . to get a large number of people up to speed \nin a hurry   For the 1993 Patterns Workshop The 1992 workshop organizers propose the following approach \nfor a 1993 patterns workshop. Everyone who submits a paper for the workshop is entering a friendly competition. \nEach participant must make his or her best efforts at coming up with: (1) his/her ultimate pattern description \ntemplate  (2) two pattern descriptions, using that template   At the workshop, participants will work \nin a very much hands-on, practical way to come up with: (1) the workshop s ultimate pattern description \ntemplate-ready for application (2) several pattern descriptions, using that refined template   Contact \ninformation: Peter Coad Object International, Inc. 8140 N. MoPac Expwy., 4-200 Austin, Texas 78759 USA \n(512) 795-0202 FAX 7950332 coad@applelink.apple.com CompuServe 712103642 (toad) S-10 October 1992 Addendum \nto the Proceedings  \n\t\t\t", "proc_id": "157709", "abstract": "", "authors": [{"name": "Peter Coad", "author_profile_id": "81100276435", "affiliation": "", "person_id": "PP31035145", "email_address": "", "orcid_id": ""}, {"name": "Mark Mayfield", "author_profile_id": "81100350240", "affiliation": "", "person_id": "P190686", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/157709.157727", "year": "1992", "article_id": "157727", "conference": "OOPSLA", "title": "Patterns", "url": "http://dl.acm.org/citation.cfm?id=157727"}