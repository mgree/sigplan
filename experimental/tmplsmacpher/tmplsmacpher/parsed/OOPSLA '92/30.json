{"article_publication_date": "12-01-1992", "fulltext": "\n Addendum A 92 fo fhe Vancouver, British Columbia, Canada 5-IO October 1992 Proceedings Poster Submission- \n Which Paradigm Can Improve the Reliability of Next-Generation Measurement System Software Report by: \nSatoshi Imai Takahiro Yamaguchi Advantest Sendai Laboratories, Ltd. Givargis A. Danialy Advansoft Research \nCorporation Introduction The cost of software. which has become an important element in measurement \nsystems, is on the increase. Experience has shown that with traditional procedural programming, 85% of \nsoftware development cost is incurred in implementation [ 11, Object-oriented programming (OOP) , by \nenabling reuse of program modules and using natural expressions, offers hope of reduced costs. The authors \nused reliability models to evaluate the potential of OOP in the development of new measurement systems, \nthe results indicating the OOP techniques can improve software reliability and shorten software testing \ntimes. Object-Oriented Programming Concept Object-oriented programming is characterized by (1) abstract \ndata type, which distinguishes external behavior from internal implementation by separating data, procedures, \nand message-passing functions, and (2) inheritance, in which abstract data is treated as a special from \nof a more general data type. Reliability in Procedural and Object- Oriented Programming Software reliability \ncan be defined as the probability that software or a constituent element thereof will operate without \nfailures in the prescribed environment for the intended period of time. The total system reliability, \n~~~~~~ can be defined in terms of the individual reliabilities Ri of each module. This approach was used \nto compare the reliability of procedure-based programming with that of OOP. In a procedure-based system, \nwhen the kfh module is modified, since it is not possible to specify the limit of the side effects and \nerror propagation felt by other modules, the testing time increases faster than the total number of modules. \nIn an object-based system, however, the utilization of encapsulation and inheritance creates an inheritance \ntree which inherently limits the side effects due to modification of class k to the descendant classes, \nwith classes that arc not descendants of class k having the same reliability as before the modification. \n 5-10 October 1992 - 1.53 -Addendum to the Proceedings This behavior dictates that the testing time is \nproportional, not to the total number of classes, but only to the number of descendant classes. Summary \nof Theoretical Results The theoretical results indicate that the reliability immediately after completion \nof a programming project would be the same whether object-oriented programming or procedural programming \ntechniques are used [3]. When reusing OOP software, it is necessary to achieve a clean, well-balanced \ninheritance tree, which makes the number of descendants very small compared with the total number of \nmodules, in order to achieve an advantage over procedural programming. Case Studies For a system of 100 \nmodules, with an assumed individual module reliability of 99.99 percent, assuming an average module reliability \nof 99.00 percent after module k is modified, the overall reliability of a procedure-based system would \ndrop to 90.56 percent. In an object-oriented system, however, becauseof the modules affected by the modification, \nif there are 30 descendants of the modified module, the overall system reliability is still 96.37 percent, \nrepresenting significantly less deterioration in reliability than for procedure-based programming. An \nexamination of the process of software enhancement after original implementation reveals that OOP offers \na significant improvement over procedural programming in this area as well. 10 Numkr of Descendants Reliability \nversus number of descendants Conclusion The results of this preliminary report show that OOP can provide \nimproved reliability and shortened test time compared with procedural programming, indicating that OOP \nis suitable for implementation of large-scale systems. Such applications, however, will first requires \nobject- oriented analysis of current measurement system hardware and software. At present, OOP lacks \na procedure to verify the optimum modeling method for measurement systems, and applying it to such systems \nwill require re-engineering of the systems. In short, GOP alone cannot provide all the answers. Acknowledgements \nWe would like to thank the staff of the Sendai Laboratories, and Hiroshi Ohura, president of ADVANTEST \nCorp. for his encouragement. Technical discussions with Mr. Hira Ranga and Mr. Gordon Padwick are gratefully \nacknowledged, as is the assistance from Ms.Alice Salpeter and Ms.Anne Faveur in checking the technical \ntranslation. OOPSLAW Vancouver, British Columbia References 1. Robert B. Grady and Deborah L. Caswell, \nSoftware Metrics: Establishing a Company- Wide Program, Prentice-Hall Inc., 1987. Hajime Makabe, Reliability \nData Analysis, lwanami Shoten, 1987 (in Japanese). 3. John A. Lewis, Sailie M. Henry, Dennis G. Kafura \nand Robert S, Schulman, An Empirical Study of the Object-Oriented Paradigm and Software Reuse, Conference \non OOPSLA 91, Phoenix, Arizona,USA, October 1991. Contact information: Satoshi Imai Takahiro Yamaguchi \nAdvantest Sendai Laboratories, Ltd. 48-2 Mats&#38;am, Kamiayashi, Aoba-ku Send&#38; Miyagi, Zip 989-3 \n1, Japan Givargis A. Danialy Advansoft Research Corporation 4301 Great America Parkway Santa Clara, CA \n95054, USA  Addendum to the Proceedings 5-10 October 1992  \n\t\t\t", "proc_id": "157709", "abstract": "", "authors": [{"name": "Satoshi Imai", "author_profile_id": "81545788856", "affiliation": "", "person_id": "PP14105642", "email_address": "", "orcid_id": ""}, {"name": "Takahiro Yamaguchi", "author_profile_id": "81332536780", "affiliation": "", "person_id": "PP14158124", "email_address": "", "orcid_id": ""}, {"name": "Givargis A. Danialy", "author_profile_id": "81100321044", "affiliation": "", "person_id": "P98271", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/157709.157739", "year": "1992", "article_id": "157739", "conference": "OOPSLA", "title": "Which paradigm can improve the reliability of next-generation measurement system software", "url": "http://dl.acm.org/citation.cfm?id=157739"}