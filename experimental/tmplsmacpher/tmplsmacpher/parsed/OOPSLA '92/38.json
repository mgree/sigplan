{"article_publication_date": "12-01-1992", "fulltext": "\n Addendum A 92 to the Vancouver, British Columbia, Canada 5-10 October 1992 Proceedings Poster Submission- \n Integration of Molecular Biology Data Collections Using Object Oriented Report by: Patrick Herde Peter \nR. Sibbald European Molecular Biology Laboratory Molecular biology is the study of the molecules that \nmake up living things. These molecules include DNA, RNA, proteins, carbohydrates, lipids etc. Biologists \nseek to understand the function, structure, location, synthesis, regulation, dynamics, interaction and \norigin of these molecules. Such a discipline is motivated not only by practical problems in fields like \nmedicine and biotechnology but also by curiosity about life itself. There are a number of data collections \nin molecular biology that would be much more powerful if they could be used in concert. Our ultimate \naim is to be able to make arbitrarily complex queries across these data collections. Ultimately the computer \nnaive user who is an expert biologist should be able to readily make any query without having to know \nwhere the data reside, how they are accessed or what programs are used In other words, the biologist \nshould be able to work in an extremely high level way. There are some imposing barriers to achieving \nsuch a goal. Living things are incredibly complex and heterogeneous and this tends to be reflected in \nthe data. For example, a human contains about 1013 cells, each one different. The human genome contains \non the order of 109 nucleotides, subdivided into chromosomes, genes and various functional entities. \nAnd humans are just one of the millions of organisms of interest to biologists. Any attempt to use biological \ndata in a meaningful way must cope S-10 October 199 2  Databases and Programming with complexity inherent \nin the data. Most of the facts have exceptions. Molecular biologists are generally not near the leading \nedge of computing. The result is a few hundred data collections quite often lacking in structure. These \ncollections are valuable but difficult to use optimally. When many biological data collections were initiated \ndecisions were made about the formats and structure that have not facilitated change. In particular, \nquite a lot of code has been written that relies on particular ways of storing data. There is a strong \nresistance to change since it would require recoding. Biology is theory impoverished. Unlike physics \nwhere there is a strong theoretical tradition to provide a framework on which to organize data, in biology \nthere are few theories (evolution, cell theory) and therefore no agreed upon way that the information \nshould be naturally structured. This results in each biologist having a different view of the biological \ndata. Any model for data representation must recognize this. There is also the autonomy problem that \noccurs in other areas of database research. The access to a database may be restricted, for example \nit can only be accessed via one particular piece of software. There may be restrictions on redistributing \nor reformatting the data. It is now common that data may be accessed via telnet but that the number of \n -177 - Addendum to the Proceedings users who can have access at one time is limited or the speed of \nthe network problematic. Other data can be accessed via mail servers which by definition are asynchronous. \nEven when data are freely available they may be updated at a rate that renders impractical the idea of \nhaving local copies of the data. An Approach This work is in progress and one of the purposes is to describe \nthe current direction with the aim of attracting criticism and input. There are several categories of \ndata collection, each requiring somewhat different treatment. Some data collections are presently more \nor less static flat files. We are forming an OODB for each of these collections. Some data collections \nare already under DBMS, typically relational (we are unaware of any collections in a network model). \nWe plan two experimental approaches for these: some we shall convert to OODBs and some we shall attempt \nto access under their present models. This will allow us to compare the two methods as well as ensuring \nthat in cases where conversion is impractical there is another option. A third category is those data \ncollections that can only be accessed via remote access through other people s software. These shall \nrequire another type of accessor as well as special consideration of the networking problems. The problems \nbeing faced appear to fit very well into the 00 paradigm since many biological entities are already objects \nand can exploit inheritance and encapsulation. From a user s viewpoint there a number of steps to make \nthis a reality. The query must be interpreted. The correct items must be accessed in the appropriate \ndatabases. The items must be processed in such a way as to answer the query. We concentrate on the last \ntwo problems. Briefly, our model is: for each data collection there is an accessor. A request (message) \nto an accessor results in the item requested or news that the item cannot be accessed A list of the items \naccessible by each accessor is kept up to date. The request router responds to higher level requests \n(messages) by (a) decomposing them into sub-requests and (b) routing them to the correct accessor based \non the list of accessible items. If a data collection leaves the system then the list of accessible items \nis shortened accordingly. If a new data collection enters the system, an accessor must be put in place \nand the list of accessible items updated. At the top end there is a user interface which obtains queries \nfrom the user and details about how the results of these queries are to be processed. The query interpreter \nresolves ambiguities and results in high level requests to the router. A logical unit assembles the items \n(the messages from the accessors) into a response to the query. In particular it will remove redundancies, \nresolve or report conflicts, and make connections between the items as dictated by the wry. The logical \nunit is necessarily sophisticated and the subject of current research. One of the main motivations in \nthis work is to be able pose queries where the answer consists of parts that reside in different databases. \nTo do this kind of synthesis a number of problems must be solved. One of the hard problems is that nomenclature \nis often not standard. For example, human might be termed man, Mann, 9, hornme, Homo sapiens, man-kind \nin different collections (or misspelt). Abbreviations are often used: cyt instead of cytochrome. So that \na request for information about human cytochrome c must deal with the items returned and (minimally) \nbe able to recognize information about identical biological entities from different databases. Despite \nour optimism, there remain non-trivial problems to solve. Biological data are globally distributed and \noften poorly formatted. Putting data where possible into an object oriented database may in itself require \nsome effort, especially where those data are presently in flat files (e.g., there are frequently format \nviolations that must be correctly handled by the parser software). Biological data remain complex and \nwill defy rigid formats. One of the real tests of the proposed model will be how well it can cope with \nchange and exceptions as they emerge. Perhaps the most challenging problem is how to design a system \nwhen the only sure constant is further major change.  Contact information: Patrick Herde Peter R. Sibbald \nEMBL Datalibrary European Molecular Biology Laboratory Meyerhofstrasse 1, Postfach 10.2209 6900 Heidelberg, \nFederal Republic of Germany Herde@EMBL-Heidelberg.DE Sibbald@EMBL-HeidelbergDE OOPSLA 92 -178 - Vancouver, \nBritish Columbia  \n\t\t\t", "proc_id": "157709", "abstract": "", "authors": [{"name": "Patrick Herde", "author_profile_id": "81385599446", "affiliation": "", "person_id": "P220388", "email_address": "", "orcid_id": ""}, {"name": "Peter R. Sibbald", "author_profile_id": "81100303796", "affiliation": "", "person_id": "P225248", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/157709.157747", "year": "1992", "article_id": "157747", "conference": "OOPSLA", "title": "Integration of molecular biology data collections using object oriented databases and programming", "url": "http://dl.acm.org/citation.cfm?id=157747"}