{"article_publication_date": "12-01-1992", "fulltext": "", "proc_id": "157709", "abstract": "<p>Testing Object-Oriented Software<br>Edward Berard, Berard Software Engineering</p><p>Testing of object-oriented software is just as important astesting non-object-oriented software, but the process isfundamentally different because of such factors as informationhiding, encapsulation, and inheritance. This tutorial teaches youthe terms and concepts of testing software in general, andobject-oriented software in particular; how to apply a number ofdifferent testing techniques to object-oriented software; how toconstruct test cases; and an appreciation of what is involved inplanning a successful software testing effort. The testingtechniques that are covered include both white-box testing such asbasis path testing and coverage testing, and black-box testingtechniques such as equivalence class partitioning and boundaryvalue analysis.</p><p>This course is designed for those with experience inobject-oriented software engineering who would like to follow amore rigorous approach to testing.</p>", "authors": [{"name": "Edward Berard", "author_profile_id": "81410594978", "affiliation": "", "person_id": "P75057", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/157709.157790", "year": "1992", "article_id": "157790", "conference": "OOPSLA", "title": "Testing object-oriented software (abstract)", "url": "http://dl.acm.org/citation.cfm?id=157790"}