{"article_publication_date": "01-01-2000", "fulltext": "\n AspectJT: the Language and Support Tools* Erik Hilsdale, Jim Hugunin, Mik Kersten, Gregor Kiczales, \nCristina Lopes, Jeffrey Palm aspectj.org Computer Science Laboratory Xerox Palo Alto Research Center \n3333 Coyote Hill Rd. Palo Alto, CA 94304, USA {hilsdale, hugunin, mkersten, gregor, lopes, palm}@parc.xerox.com \n ABSTRACT Complex systems usually contain design units that are logically related to several objects \nin the system. Some examples include: tracing, propagation of interrupts, multi\u00adobject protocols, security \nenforcement etc. This crosscutting between those design units and the objects is a natural phenomenon. \nBut, using traditional implementation techniques, the source code i.e. the classes becomes tangled \nwith the implementation of the crosscutting concerns. AspectJ is an aspect-oriented extension to the \nJava programming language that enables the clean modularization of crosscutting concerns. Using AspectJ \nwe can encapsulate in program modules (aspects) the implementation of those design units that would otherwise \nbe spread across the classes. This demo illustrates what the AspectJ language can do and it shows the \ntools that support developing programs with this language. We present an example program, and demonstrate \nthe edit-compile-debug cycle in an IDE that supports AspectJ. * This work was supported in part by the \nDefense Advanced Research Projects Agency under contract number F30602-97-C\u00ad0246. Permission to make \ndigital or hard copies of all or part of this work for personal or classroom use is granted without fee \nprovided that copies are not made or distributed for profit or commercial advantage and that copies bear \nthis notice and the full citation on the first page. To copy otherwise, to republish, to post on servers \nor to redistribute to lists, requires prior specific permission and/or a fee. OOPSLA 2000 Companion Minneapolis, \nMinnesota (c) Copyright ACM 2000 1-58113-307-3/00/10...$5.00  \n\t\t\t", "proc_id": "367845", "abstract": "<p>Complex systems usually contain design units that are logically related to several objects in the system. Some examples include: tracing, propagation of interrupts, multi-object protocols, security enforcement etc. This crosscutting between those design units and the objects is a natural phenomenon. But, using traditional implementation techniques, the source code &#8212; i.e. the classes &#8212; becomes tangled with the implementation of the crosscutting concerns.</p><p>AspectJ is an aspect-oriented extension to the Java#8482; programming language that enables the clean modularization of crosscutting concerns. Using AspectJ we can encapsulate in program modules (aspects) the implementation of those design units that would otherwise be spread across the classes.</p><p>This demo illustrates what the AspectJ language can do and it shows the tools that support developing programs with this language. We present an example program, and demonstrate the edit-compile-debug cycle in an IDE that supports AspectJ.</p>", "authors": [{"name": "Erik Hilsdale", "author_profile_id": "81100644876", "affiliation": "Computer Science Laboratory, Xerox Palo Alto Research Center, 3333 Coyote Hill Rd., Palo Alto, CA", "person_id": "P78792", "email_address": "", "orcid_id": ""}, {"name": "Jim Hugunin", "author_profile_id": "81100442943", "affiliation": "Computer Science Laboratory, Xerox Palo Alto Research Center, 3333 Coyote Hill Rd., Palo Alto, CA", "person_id": "PP39042999", "email_address": "", "orcid_id": ""}, {"name": "Mik Kersten", "author_profile_id": "81341492451", "affiliation": "Computer Science Laboratory, Xerox Palo Alto Research Center, 3333 Coyote Hill Rd., Palo Alto, CA", "person_id": "PP31082366", "email_address": "", "orcid_id": ""}, {"name": "Gregor Kiczales", "author_profile_id": "81100495415", "affiliation": "Computer Science Laboratory, Xerox Palo Alto Research Center, 3333 Coyote Hill Rd., Palo Alto, CA", "person_id": "PP14173163", "email_address": "", "orcid_id": ""}, {"name": "Cristina Lopes", "author_profile_id": "81100368185", "affiliation": "Computer Science Laboratory, Xerox Palo Alto Research Center, 3333 Coyote Hill Rd., Palo Alto, CA", "person_id": "PP39075409", "email_address": "", "orcid_id": ""}, {"name": "Jeffrey Palm", "author_profile_id": "81100058117", "affiliation": "Computer Science Laboratory, Xerox Palo Alto Research Center, 3333 Coyote Hill Rd., Palo Alto, CA", "person_id": "PP14031336", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/367845.368070", "year": "2000", "article_id": "368070", "conference": "OOPSLA", "title": "AspectJ: the language and support tools", "url": "http://dl.acm.org/citation.cfm?id=368070"}