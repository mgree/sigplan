{"article_publication_date": "09-09-2012", "fulltext": "\n Tales from the Jungle Peter Sewell University of Cambridge Peter.Sewell@cl.cam.ac.uk Abstract We rely \non a computational infrastructure that is a densely inter\u00adwined mass of software and hardware: programming \nlanguages, network protocols, operating systems, and processors. It has accu\u00admulated great complexity, \nfrom a combination of engineering de\u00adsign decisions, contingent historical choices, and sheer scale, \nyet it is de.ned at best by prose speci.cations, or, all too often, just by the common implementations. \nCan we do better? More speci.cally, can we apply rigorous methods to this mainstream infrastructure, \ntaking the accumulated complexity seriously, and if we do, does it help? My colleagues and I have looked \nat these questions in sev\u00aderal contexts: the TCP/IP network protocols with their Sockets API; programming \nlanguage design, including the Java module system and the C11/C++11 concurrency model; the hardware concurrency \nbehaviour of x86, IBM POWER, and ARM multiprocessors; and compilation of concurrent code. In this talk \nI will draw some lessons from what did and did not succeed, looking especially at the empirical nature \nof some of the work, at the social process of engagement with the various differ\u00adent communities, and \nat the mathematical and software tools we used. Domain-speci.c modelling languages (based on functional \nprogramming ideas) and proof assistants were invaluable for work\u00ading with the large and loose speci.cations \ninvolved: idioms within HOL4 for TCP, our Ott tool for programming language speci.ca\u00adtion, and Owens \ns Lem tool for portable semantic de.nitions, with HOL4, Isabelle, and Coq, for the relaxed-memory concurrency \nse\u00admantics work. Our experience with these suggests something of what is needed to make full-scale rigorous \nsemantics a common\u00adplace reality. Categories and Subject Descriptors F.3.1 [LOGICS AND MEAN-INGS OF PROGRAMS]: \nSpecifying and Verifying and Reasoning about Programs; D.3.1 [PROGRAMMING LANGUAGES]: For\u00admal De.nitions \nand Theory General Terms Design, Languages, Reliability, Standardization, Veri.cation Keywords Mainstream \nsystems  Acknowledgments I acknowledge funding from EPSRC grants EP/F036345 and EP/H005633. Copyright \nis held by the author/owner(s). ICFP 12, September 9 15, 2012, Copenhagen, Denmark. ACM 978-1-4503-1054-3/12/09. \n  \n\t\t\t", "proc_id": "2364527", "abstract": "<p>We rely on a computational infrastructure that is a densely interwined mass of software and hardware: programming languages, network protocols, operating systems, and processors. It has accumulated great complexity, from a combination of engineering design decisions, contingent historical choices, and sheer scale, yet it is defined at best by prose specifications, or, all too often, just by the common implementations. Can we do better? More specifically, can we apply rigorous methods to this mainstream infrastructure, taking the accumulated complexity seriously, and if we do, does it help? My colleagues and I have looked at these questions in several contexts: the TCP/IP network protocols with their Sockets API; programming language design, including the Java module system and the C11/C++11 concurrency model; the hardware concurrency behaviour of x86, IBM POWER, and ARM multiprocessors; and compilation of concurrent code.</p> <p>In this talk I will draw some lessons from what did and did not succeed, looking especially at the empirical nature of some of the work, at the social process of engagement with the various different communities, and at the mathematical and software tools we used. Domain-specific modelling languages (based on functional programming ideas) and proof assistants were invaluable for working with the large and loose specifications involved: idioms within HOL4 for TCP, our Ott tool for programming language specification, and Owens's Lem tool for portable semantic definitions, with HOL4, Isabelle, and Coq, for the relaxed-memory concurrency semantics work. Our experience with these suggests something of what is needed to make full-scale rigorous semantics a commonplace reality.</p>", "authors": [{"name": "Peter Sewell", "author_profile_id": "81548018672", "affiliation": "University of Cambridge, Cambridge, United Kingdom", "person_id": "P3804366", "email_address": "Peter.Sewell@cl.cam.ac.uk", "orcid_id": ""}], "doi_number": "10.1145/2364527.2364566", "year": "2012", "article_id": "2364566", "conference": "ICFP", "title": "Tales from the jungle", "url": "http://dl.acm.org/citation.cfm?id=2364566"}