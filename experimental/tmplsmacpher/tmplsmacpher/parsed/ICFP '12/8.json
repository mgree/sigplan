{"article_publication_date": "09-09-2012", "fulltext": "\n\t\t\t", "proc_id": "2364527", "abstract": "<p>This paper presents a new functional programming model for graph structures called <i>structured graphs</i>. Structured graphs extend conventional algebraic datatypes with explicit definition and manipulation of cycles and/or sharing, and offer a practical and convenient way to program graphs in functional programming languages like Haskell. The representation of sharing and cycles (edges) employs recursive binders and uses an encoding inspired by <i>parametric higher-order abstract syntax</i>. Unlike traditional approaches based on mutable references or node/edge lists, <i>well-formedness</i> of the graph structure is ensured statically and reasoning can be done with standard functional programming techniques. Since the binding structure is generic, we can define many useful generic combinators for manipulating structured graphs. We give applications and show how to reason about structured graphs.</p>", "authors": [{"name": "Bruno C.d.S. Oliveira", "author_profile_id": "81310493622", "affiliation": "National University of Singapore, Singapore, Singapore", "person_id": "P3804311", "email_address": "oliveira@comp.nus.edu.sg", "orcid_id": ""}, {"name": "William R. Cook", "author_profile_id": "81548008095", "affiliation": "University of Texas, Austin, Austin, USA", "person_id": "P3804312", "email_address": "wcook@cs.utexas.edu", "orcid_id": ""}], "doi_number": "10.1145/2364527.2364541", "year": "2012", "article_id": "2364541", "conference": "ICFP", "title": "Functional programming with structured graphs", "url": "http://dl.acm.org/citation.cfm?id=2364541"}