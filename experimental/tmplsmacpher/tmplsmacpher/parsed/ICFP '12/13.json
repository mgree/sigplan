{"article_publication_date": "09-09-2012", "fulltext": "\n High Performance Embedded Domain Speci.c Languages Kunle Olukotun Standford University kunle@stanford.edu \nToday, all high-performance computer architectures are paral\u00adlel and heterogeneous; a combination of \nmultiple CPUs, GPUs and specialized processors. This creates a complex programming prob\u00adlem for application \ndevelopers. Domain-speci.c languages (DSLs) are a promising solution to this problem because they provide \nan avenue for application-speci.c abstractions to be mapped directly to low level architecture-speci.c \nprogramming models providing high programmer productivity and high execution performance. Categories \nand Subject Descriptors D.1.3 [Concurrent Pro\u00adgramming]: Parallel Programming; D.3.2 [Language Classi.ca\u00adtions]: \nSpecialized application languages Keywords DSLs, Scala, Delite In this talk I will describe our approach \nto building high perfor\u00admance DSLs, which is based on embedding in Scala, light-weight modular staging \nand a DSL infrastructure called Delite. I will de\u00adscribe how we transform impure functional programs \ninto ef.cient .rst-order low-level code using domain speci.c optimization, par\u00adallelism optimization, \nlocality optimization, scalar optimization, and architecture-speci.c code generation. All optimizations \nand transformations are implemented in an extensible DSL compiler architecture that minimizes the programmer \neffort required to de\u00advelop a new DSL. Copyright is held by the author/owner(s). ICFP 12, September 9 \n15, 2012, Copenhagen, Denmark. ACM 978-1-4503-1054-3/12/09.  \n\t\t\t", "proc_id": "2364527", "abstract": "<p>Today, all high-performance computer architectures are parallel and heterogeneous; a combination of multiple CPUs, GPUs and specialized processors. This creates a complex programming problem for application developers. Domain-specific languages (DSLs) are a promising solution to this problem because they provide an avenue for application-specific abstractions to be mapped directly to low level architecture-specific programming models providing high programmer productivity and high execution performance.</p> <p>In this talk I will describe our approach to building high performance DSLs, which is based on embedding in Scala, light-wieght modular staging and a DSL infrastructure called Delite. I will describe how we transform impure functional programs into efficient first-order low-level code using domain specific optimization, parallelism optimization, locality optimization, scalar optimization, and architecture-specific code generation. All optimizations and transformations are implemented in an extensible DSL compiler architecture that minimizes the programmer effort required to develop a new DSL.</p>", "authors": [{"name": "Kunle Olukotun", "author_profile_id": "81474681074", "affiliation": "Stanford University, Stanford, CA, USA", "person_id": "P3804320", "email_address": "kunle@stanford.edu", "orcid_id": ""}], "doi_number": "10.1145/2364527.2364548", "year": "2012", "article_id": "2364548", "conference": "ICFP", "title": "High performance embedded domain specific languages", "url": "http://dl.acm.org/citation.cfm?id=2364548"}