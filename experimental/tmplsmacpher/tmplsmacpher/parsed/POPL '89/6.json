{"article_publication_date": "01-03-1989", "fulltext": "\n\t\t\t", "proc_id": "75277", "abstract": "<p>Strongly typed languages with records may have inclusion rules so that records with more fields can be used instead of records with less fields. But these rules lead to a global treatment of record types as a special case. We solve this problem by giving an ordinary status to records without any <italic>ad hoc</italic> assertions, replacing inclusion rules by extra information in record types. With this encoding ML naturally extends its polymorphism to records but any other host language will also transmit its power.</p>", "authors": [{"name": "D. R&#233;my", "author_profile_id": "81100311096", "affiliation": "INRIA, Rocquencourt, France", "person_id": "P55811", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/75277.75284", "year": "1989", "article_id": "75284", "conference": "POPL", "title": "Type checking records and variants in a natural extension of ML", "url": "http://dl.acm.org/citation.cfm?id=75284"}