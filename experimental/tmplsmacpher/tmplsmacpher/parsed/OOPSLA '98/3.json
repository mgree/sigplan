{"article_publication_date": "10-01-1998", "fulltext": "\n Object-Oriented practice in 1998: Does it help or hinder collaboration? Panel Discussion John Artim \n(Moderator), Charlie Bridgeford, Lillian Christman, James Coplien, Mary Beth Rosson, Stanley Taylor \nand Rebecca Wirfs-Brock OOCL (IJSA), Inc., Employer s Reinsurance Corporation, OOCL (USA), Inc., Bell \nLaboratories, Virginia Polytechnic Institute and State University, Apple Computer, Wirfs-Brock Associates \nABSTRACT Groups of people working in concert perform most commercial, industrial or in-house software \ndevelopment. These groups are often quite diverse. This panel brings together object-oriented consultants \nand developers as well as practitioners and researchers interested in human factors and user-centered \ndesign, project management and technical writing. The panel will address the question, To successfully \ncomplete today s projects, does object-oriented development as practiced today do an adequate job of \nsupporting ALL of the participants who must collaborate? Keywords Collaboration, object models, development \npractice PANELIST POSITIONS Lillian Christman When we work together in groups we always (1) divide up \nthe work and (2) develop some mechanism for coordinating across this division of work. As an innovative \nactivity, software development groups are best supported by an organizational structure dubbed adhocracy \nby organizational theorists. The division of labor in an adhocracy is highly specialized. Coordination \nis primarily achieved through mutual adjustment. Under mutual adjustment, control of the work rests in \nthe hands of the doers. The knowledge of what is needed develops as the work unfolds. (1) Project success \ndepends on the ability of the specialists to adapt their work to each other. The tug-and-pull between \nlabor specialization and the need to dynamically adjust to one angther s work raises issues for those \nin software development. Chief among these issues are (1) a low tolerance for ambiguity and (2) extremely \nhigh communication costs. Is it possible that an 00 approach can help address these issues? Ambiguity \nBeing primarily concerned with software usability, I ve noted the often ambiguous reference to the user. \nIs this person the domain expert, the task expert, or the company executive who sponsors the project? \nGenerally we stuff all of these people and the information they give us into the same user cubbyhole. \nWhat can we do to be more precise in our use of user information? At the project level: clearly distinguish \nbetween team members who are domain/business process experts (business users) and those who are task \nexperts (end-users); align these users with the appropriate development staff. At the artifact level: \nin use cases, clearly distinguish task-specific (end-user) requirements from business process (business \nuser) requirements; explicitly model the end-user as well as the domain; in addition to business scenarios, \ndevelop task scenarios to support end-user requirements. At the process level: conduct domain requirements \nreviews with business users; conduct usability reviews and tests with end-users. Communication Many of \nthe problems that need to be solved during the development of a software system only become apparent \nas the work unfolds. It can take a great deal of time for project team members to talk through the issues \nraised and reach decisions. As a consequence, a software development unit can appear to be highly inefficient. \nAgain, as someone concerned primarily with usability I would make a few suggestions for streamlining \ncommunication. At the project level: include both business and end-users as full-time members of the \nteam. At the process level: provide an opportunity for all team members to observe end-users in their \nwork context; disseminate task requirements and scenarios to domain modelers, domain developers, database \ndesigners and quality assurance team members in addition to the UI designers/developers. Mutual adjustment \nis achieved primarily through informal communication. Nurture these channels as enthusiastically as you \ndo the formal development process. It s easy to see how the pressures to reduce ambiguity and to make \ncommunication more efficient can push a software 45 development group into standardizing as much of the \nwork as possible. These pressures are especially intense at the beginning of a project. But be careful \nof imposing standards before the work has had some time to evolve. Standardization tends to push the \norganization in the direction of bureaucracy, an organizational structure not particularly supportive \nof innovative work. At conferences like OOPSLA we spend a lot of time discussing the merits of various \ntechnical approaches to our work. I think it s useful to take some time to understand how we can use \nan understanding of organizational behavior to support our work. [see Mintzberg, 19791 Biographic Sketch \nLillian Christman is Manager of User-Centered Design for OOCL, a global shipping company. For the last \nseven years she has lead the user-centered design activities of large business information and niche \nmarket software development teams. A devoted observer of organizational behavior, she has a PhD in industrial \nsociology from Vanderbilt University. James Coplien It takes several paradigms in concert to meet a typical \ncustomer need. Many customers need databases, and few of those need to be object-oriented in any way. \nThe term object-oriented user interface is thrown around a lot, but really has little or nothing to do \nwith objects, and probably shouldn t have if it did. Those who limit themselves to objects are limiting \ntheir ability to communicate needs and to implement effectively. To a first order, even the design paradigm \ndoesn t matter. The primary issues of software development are organizational, logistic, and social. \nMany have to do with communication flow. There are techniques like CRC cards that have come from the \nobject milieu, and those help. Refactoring has come into its own under object-oriented banners. But these \nhave little to do with objects, are not new, but are just widely ignored. It s not their object-ness \nthat makes them useful: JAD or SCRUM would be just as good. To a first order, good communication comes \nfrom good organization, including good staffing, proper sizing, and strong role identification. If we \nare to seek improvements in software development, it s time to start looking away from the languages \nand methods associated with objects and to start looking at the social and organizational factors. Doing \nthat is a matter of will, as is much of the success of our discipline. It takes will to not be a sheep \nlooking to methods, objects, or process to get them through. It s about simple basics. Biographic Sketch \nJim Coplien is a Distinguished Member of the Software Production Research Department in Bell Laboratories. \nHe is currently studying organization communication patterns to help guide process evolution, as well \nas multi-paradigm design and architectural patterns of telecommunication software. He is author or co-editor \nof several books on C++, objects and software patterns. When he grows up, he wants to be an anthropologist. \nMary Beth Rosson As a researcher in human-computer interaction (HCI), a key interest for me is how object \ntechnology can contribute to the development of useful and usable systems. Our work on HCI design methods \nrelies centrally on scenarios of use (Carroll, 1995), and object-oriented analysis and design tit well \ninto scenario-based development methods (Rosson &#38; Carroll, 1995). We have used object analyses of \nproposed usage scenarios (i.e., a set of objects that could collaborate to implement a concrete scenario) \nto convey initial design specifications to programmers and to discuss and document the rationale for \nspecific design decisions; we have used similar scenario-based analyses to explore proposed designs with \npotential users. Recently we have begun to explore the role of object-oriented analysis in participatory \ndesign settings. Participatory design is founded on direct involvement of prospective users in the analysis \nand design process; participatory engagements may involve shared observation and analysis of existing \nwork processes, brainstorming sessions about new ways to apply technology, or more specific design sessions \nin which the details of proposed human-computer interactions are refined. An important goal of such methods \nis mutual education-software experts learn more about the users and their tasks, and users learn more \nabout current technology. With respect to the latter, we are investigating the effectiveness of an object-oriented \nconception of tasks (e.g., computational entities with specific responsibilities and collaborations) \nin extending users views of their current goals and activities. Although end-users are initially skeptical \nabout their abilities to reason about such models, we have found that once we help them identify and \ndiscuss a few objects they are able to extend these analyses in interesting and useful ways. Biographic \nSketch Mary Beth Rosson is an Associate Professor of Computer Science at Virginia Polytechnic Institute \nand State University, where she has been since January 1994. Prior to that time, she was a Research Staff \nMember and Manager at the IBM T. J. Watson Research Center. She received a PhD in Experimental Psychology \nin 1982 from the University of Texas at Austin. She has been very active in both SIGCHI and SIGPLAN, \nserving in numerous Technical Program roles for the CHI and OOPSLA annual conferences, and as a member-at-large \non the executive 46 committee of SIGPLAN. She is on the editorial board of Interacting with Computers. \nDr. Rosson s research interests include the development of new paradigms for research in human-computer \ninteraction, the use of network technology to support collaboration, especially in learning contexts, \nand psychological issues in the learning and use of the object-oriented design paradigm. She is author \nof Instructor s Guide to Object-Oriented Analysis and Design with Applications, has developed and taught \na number of professional short courses in HCI design methods and in object-oriented design, and has authored \nnumerous journal articles, conference papers, and book chapters. Rebecca Witis-Brock Object developers \nface two challenges: correctly interpreting stakeholders concerns and requirements in their designs, \nand presenting their analysis and design work in terms understood by a wide audience. Consider if we \ninsisted on teaching our stakeholders basic object-oriented terms and forced them to only speak objectese \n. Pidgin- objects, would by necessity be a simplified language. Like all pidgin languages, object-pidgin \ncould only expresses basic ideas. Some stakeholders complex usability requirements, specific needs and \nconcerns simply could not be expressed. How absurdly object-centric this view is! You may think I m going \noverboard. Of course you don t insist on objects being the center of the universe! However, I have encountered \nteams where CRC that cards were touted as the being the only necessary bridge to programming. If users \nwere taught to model classes, responsibilities and collaborations, then the programmers jobs sure would \nbe easier. All they d have to do would be to translate and fix up objects to make their software work. \nIt wasn t clear whether it was a priority that the software function as the users wanted. I ve been in \nmeetings where object technologists (we had an affectionate name for them at my former company- propeller \nheads ) would discount other stakeholders as being stupid, clueless, and obviously misinformed. Since \nthey didn t know objects, and couldn t understand our object technology deeply, they obviously didn t \nknow anything. While an object-oriented slant is useful, it is not complete. I happen to believe that \nexpressing software designs with objects is very effective. However, each stakeholder in our object development \nprocess has differing needs and values. A lot of them know more about what they want their application \nto do than they can easily convey to us in object terms. With objects, we can capture high-level responsibilities \nof important concepts/aspects embodied by our software. Additionally, use case descriptions and scenarios \ncan describe how our software should respond to its environment. Yet, both these models leaves unspoken \nthe needs, intentions and day to day concerns of our system s users, production support staff, database \nadministrators, network administrators, user interface designers, etc. We must recognize that descriptions \nof what we are to build can be much more expressive and encompassing. don t advocate that every project \nshould rush out to generate lots and lots of new models. Instead, we need to gather and interpret appropriate \ndescriptions in the native languages spoken by our stakeholders. Our job as object technologists is to \nreflect these descriptions in our object analysis and design work. Object technology is only one small \npart of a development context. We ll support collaborative work better as we become comfortable integrating \nour work into a process that adopts a variety of descriptions and models. Biographic Sketch Rebecca Wirfs-Brock \nis president of Wirfs-Brock Associates, a firm specializing in the transfer of object analysis and design \nexpertise to organizations and individuals through training, mentoring, and consulting. Rebecca has been \ninvolved in object technology since 1984. Rebecca once spent several weeks with a client on a task force \nthat attempted to integrate the techniques and practices of several analysis areas including workflow \nmodeling, data modeling, human factors engineering, and object analysis. This experience revealed that \neach discipline uses similar names for very different concepts, and that even getting eager, attentive \nexperts to understand each other can be difficult. Rebecca is co-inventor of the Responsibility-Driven \nDesign method and co-author of the classic, Designing Object-Oriented Software. Rebecca s is currently \nwriting a new book on object design with her colleague, Alan McKean. REFERENCES 1. Carroll, J. M. 1995. \nThe Scenario Perspective on System Development. In (J. M. Carroll, Ed.), Scenario-Based Design: Envisioning \nWork and Technology in System Development (pp. 1-17). New York: John Wiley &#38; Sons. 2. Mintzberg, \nHenry, The Structuring of Organizations, Prentice-Hall, Englewood Cliffs, NJ, 1979. 3. Rosson, M. B. \n&#38; Carroll, J. M. 1995. Narrowing the Specification-Implementation Gap in Scenario-Based Design. In \n(J. M. Carroll, Ed.),Scenario-Based Design: Envisioning Work and Technology in System Development (pp. \n247-278). New York: John Wiley &#38; Sons.  47\n\t\t\t", "proc_id": "286936", "abstract": "Groups of people working in concert perform most commercial, industrial or in-house software development. These groups are often quite diverse. This panel brings together object-oriented consultants and developers as well as practitioners and researchers interested in human factors and user-centered design, project management and technical writing. The panel will address the question, \"To successfully complete today's projects, does object-oriented development as practiced today do an adequate job of supporting ALL of the participants who must collaborate?\"", "authors": [{"name": "John Artim", "author_profile_id": "81100593795", "affiliation": "OOCL (USA), Inc.,", "person_id": "P142753", "email_address": "", "orcid_id": ""}, {"name": "Charlie Bridgeford", "author_profile_id": "81100025531", "affiliation": "Employer's Reinsurance Corporation", "person_id": "P44195", "email_address": "", "orcid_id": ""}, {"name": "Lillian Christman", "author_profile_id": "81100219899", "affiliation": "OOCL (USA), Inc.", "person_id": "P171749", "email_address": "", "orcid_id": ""}, {"name": "James Coplien", "author_profile_id": "81100241805", "affiliation": "Bell Laboratories", "person_id": "PP14093301", "email_address": "", "orcid_id": ""}, {"name": "Mary Beth Rosson", "author_profile_id": "81335496622", "affiliation": "Virginia Polytechnic Institute and State University", "person_id": "P193400", "email_address": "", "orcid_id": ""}, {"name": "Stanley Taylor", "author_profile_id": "81100517586", "affiliation": "Apple Computer", "person_id": "P267119", "email_address": "", "orcid_id": ""}, {"name": "Rebecca Wirfs-Brock", "author_profile_id": "81100400353", "affiliation": "Wirfs-Brock Associates", "person_id": "PP17001255", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/286936.286946", "year": "1998", "article_id": "286946", "conference": "OOPSLA", "title": "Object-oriented practice in 1998 (panel): does it help or hinder collaboration?", "url": "http://dl.acm.org/citation.cfm?id=286946"}