{"article_publication_date": "10-25-2009", "fulltext": "\n ModelTalk: A DSL Workbench in Action Atzmon Hen-Tov David H. Lorenz Lior Schachter Pontis Open University \nof Israel Pontis Glil Yam 46905 Israel Raanana 43107 Israel Glil Yam 46905 Israel atzmon@ieee.org lorenz@openu.ac.il \nliors@ieee.org Abstract ModelTalk s language workbench is an IDE for DSL based development with Java. \nModelTalk provides programmers and language designers with a DSL programming experi\u00adence that has a Java-like \nlook-and-feel and a short edit\u00adexecute cycle. The workbench exhibits a seamless integra\u00adtion of the DSLs \nwith Java and with each other. Categories and Subject Descriptors D.2.6[Programming Environments]: Programmerworkbench; \nD.3.2[Language Classi.cations]: Domain speci.c languages. General Terms Languages, Design. Keywords Domain \nSpeci.c Languages, Language Work\u00adbench. 1. Introduction A languageworkbenchfacilitates DSL baseddevelopment \nwithout overwhelming developers with DSL related tech\u00adnologies and tools. Reducing the learning curve \nand the development overhead associated with de.ning and us\u00ading DSLs is one challenge. Maintaining agility, \nshort edit\u00adexecutecycles,andthefamiliaritywiththe toolingis another challenge. The language workbench \nin ModelTalk meets these chal\u00adlenges by providing a completely integrated Java and DSL development environment \n(IDE). The language workbench has a re.ective architecture, which enables tools to adapt automaticallytonewly \nde.ned DSLs.Takingonan interpre\u00adtive approach, rather than a generative one, eliminates code generation \naltogether. After a short overview of DSL based development, we will give a hands-on demonstration of \nModelTalk in action. The demo will include a walk-through the process of de.n\u00ading, using, implementing \n(in Java) and evolving DSLs. The audience will learn how DSLs are used in a real industrial setting. \n2. Motivating Example In the .rst part of the demo we will present a simple model in UML and then graduallybuild \nthis UML model in Mod\u00adelTalk.We willexplainhow DSLs are composed andhow theJava codeexecutes them.Topics \nthat willbe covered in\u00adclude: the concrete syntax for DSLs; the mapping scheme between DSLs and Java; \ntool support for de.ning/using DSLs (auto-completion feature, navigation views, etc.); the guidance provided \nwhen implementing the DSL semantics in Java; extending the generic tool validations with cus\u00adtom DSL \nvalidations; tool assistance in DSL evolution; and more. 3. Real-life Example In the second part we will \nshow a component of an actual enterprise application (an online-marketing-system), which was developed \nentirely with ModelTalk. To demonstrate how an interpretive approach supports a very fast and ag\u00adile \nedit-execute cycle, we will present a real-life develop\u00adment scenario. The scenario will include editing \nsources in the workbench and applying them to a working application server, thereby affecting the behavior \nof a running applica\u00adtion. 4. Summary In this demo, developers will be able to get an impression of whatDSL \nbaseddevelopment entails.Weexpect thatfor researchers and tool vendors the interpretive nature of the \ntool and the execution engine will be of special interest. References Atzmon Hen-Tov, David H. Lorenz, \nAssaf Pinhasi, and Lior Schachter. ModelTalk: When everything is a domain-speci.c language. IEEE Software, \n26(4):39 46, 2009. ISSN 0740-7459. doi: http://doi.ieeecomputersociety.org/10.1109/MS.2009.97. Copyright \nis held by the author/owner(s). OOPSLA 2009, October 25 29, 2009, Orlando, Florida, USA. ACM 978-1-60558-768-4/09/10. \n  \n\t\t\t", "proc_id": "1639950", "abstract": "<p>ModelTalk's language workbench is an IDE for DSL based development with Java. ModelTalk provides programmers and language designers with a DSL programming experience that has a Java-like look-and-feel and a short edit-execute cycle. The workbench exhibits a seamless integration of the DSLs with Java and with each other.</p>", "authors": [{"name": "Atzmon Hen-Tov", "author_profile_id": "81440622847", "affiliation": "Pontis, Glil Yam, Israel", "person_id": "P1728634", "email_address": "", "orcid_id": ""}, {"name": "David H. Lorenz", "author_profile_id": "81100540418", "affiliation": "Open University of Israel, Raanana, Israel", "person_id": "P1728635", "email_address": "", "orcid_id": ""}, {"name": "Lior Schachter", "author_profile_id": "81440596926", "affiliation": "Pontis, Glil Yam, Israel", "person_id": "P1728636", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/1639950.1640021", "year": "2009", "article_id": "1640021", "conference": "OOPSLA", "title": "ModelTalk: a DSL workbench in action", "url": "http://dl.acm.org/citation.cfm?id=1640021"}