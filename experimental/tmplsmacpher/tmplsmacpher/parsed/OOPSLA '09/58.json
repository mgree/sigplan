{"article_publication_date": "10-25-2009", "fulltext": "\n TROPIC A Framework for Model Transformations on Petri Nets in Color * Manuel Wimmer, Gerti Kappel, \nAngelika Kusel, Werner Retschitzegger, Johannes Schoenboeck Wieland Schwinger Vienna University of Technology, \nAustria Johannes Kepler University Linz, Austria lastname@big.tuwien.ac.at .rstname.lastname@jku.at \nAbstract Model transformation languages, the cornerstone of Model-Driven Engineering, often lack mechanisms \nfor abstraction, reuse and debugging. We propose a model transformation framework providing different \nabstraction levels together with an extensible library of prede.ned transformations and a dedicated runtime \nmodel in terms of Coloured Petri Nets for transformation execution and debugging. Categories and Subject \nDescriptors D.2.6 [Software En\u00adgineering]: Programming Environments Graphical env. General Terms Design, \nLanguages Keywords Model Transformation, Colored Petri Nets 1. Introduction Model-Driven Engineering \n(MDE) places models as .rst\u00adclass artifacts throughout the software lifecycle, leading to a change from \nthe everything is an object paradigm to the everything is a model paradigm [B\u00b4ezivin 2005]. The availability \nof proper model transformation languages is thereby the crucial factor, since transformation languages \nare for MDE as important as compilers are for high-level programming languages. Several kinds of dedicated \nmodel transformation languages have emerged (see e.g., [Czarnecki and Helsen 2006] for a comparison), \nwhich allow, in a .rst phase, the speci.cation of transformations, from elements of a source metamodel \nto elements of a target metamodel, and, in a second phase, the automatic execution thereof on the underlying \nmodels. None of these languages, however, * This work has been partly funded by the Austrian Science \nFund (FWF) under grant P21374-N13. Copyright is held by the author/owner(s). OOPSLA 2009, October 25 \n29, 2009, Orlando, Florida, USA. ACM 978-1-60558-768-4/09/10. not even the QVT standard proposed by \nthe OMG, became generally accepted as state-of-the-art approach in practice, which seems to be, among \nothers, due to the following rea\u00adsons. Concerning the speci.cation phase, .rstly, existing model transformation \nlanguages do not provide appropriate abstraction mechanisms to deal with the complexity of over\u00adcoming \nstructural heterogeneities between different meta\u00admodels, a form of heterogeneity well known in the area \nof database systems (cf., e.g., [Kashyap and Sheth 1996]), when specifying mappings between different \nschemata. Sec\u00adondly, current approaches lack suitable reuse mechanisms in order to reduce the high and \nerror-prone effort of specifying recurring transformations. Concerning the execution phase, .rstly, transformation \nengines used for executing model transformations operate on a considerably lower level of ab\u00adstraction \nthan the speci.ed mapping leading to an impedance mismatch between speci.cation and execution. Secondly, \ncurrent transformation languages provide a limited view on the execution of model transformations, since \nmetamodels, models, transformation speci.cation, and trace information are scattered across different \nartifacts, all of them hamper\u00ading understandability and debuggabilty of model transfor\u00admations. 2. Goals \nOur overall goal is to provide a framework for developing model transformations, in order to resolve \nstructural hetero\u00adgeneities between metamodels which tackles the aforemen\u00adtioned limitations of existing \napproaches. This overall goal can be further divided into three subgoals. Firstly, the spec\u00adi.cation \nphase should be supported by appropriate abstrac\u00adtion mechanisms and reuse facilities to increase productiv\u00adity \nof transformation development and to ensure the qual\u00adity of the resulting transformations. Secondly, \nthe execution phase should be facilitated by a suitable representation of the runtime characteristics \nof a transformation together with debugging services to enhance understandability of transfor\u00admations \nand to improve their correctness. Thirdly, the con\u00adcepts developed for both phases should be applicable \nto cer\u00adtain selected existing model transformation languages such as the QVT standard.  3. Approach \nTo realize our goals, a dedicated framework called TROPIC (Transformations on Petri Nets in Color) is \nprovided allow\u00ading the speci.cation and usage of mapping operators for cer\u00adtain model transformation \nscenarios as well as the actual ex\u00adecution and debugging of transformations, either in a stan\u00addalone \nmanner or as a front-end for other model transforma\u00adtion languages. In particular, TROPIC provides two \nviews on a transformation problem, namely an abstract mapping view which declaratively describes the \nsemantic correspon\u00addences on a high level of abstraction and a transformation view which reveals all \nthe details of the transformation logic being immediately executable. Mapping View. The mapping view \ncomprises mapping op\u00aderators which connect source metamodel elements to tar\u00adget metamodel elements [Kappel \net al. 2008]. These map\u00adping operators encapsulate recurring transformation logic and are offered to \na transformation designer by means of an extensible library. For de.ning the reusable mapping opera\u00adtors, \nwe use a subset of the UML 2 component diagram con\u00adcepts, since they are declarative in nature, provide \na black\u00adbox mechanism to hide transformation logic details and sup\u00adport an interface concept allowing \nfor the composition of mapping operators. Transformation View. An executable transformation view is generated \non basis of the mapping view. For this, each mapping operator of the mapping view must be provided with \na well de.ned operational semantics in the form of some executable piece of transformation logic. For \nrealizing the transformation view, we are using a modi.ed form of Colored Petri Nets [Jensen 1992], denoted \nas Transforma\u00adtion Nets [Reiter et al. 2007, Wimmer et al. 2009a,b,c] due to the following reasons. Firstly, \nTransformation Nets en\u00adable a process-oriented execution of transformations, each mapping operator being \nrealized by an independent set of transitions and places without the need for specifying an ex\u00adplicit \ncontrol .ow, thus preventing any impedance mismatch between mapping view and transformation view. Secondly, \nTransformation Nets allow for a homogenous representation of all artifacts involved in a model transformation, \nthus be\u00ading especially suited for gaining an understanding of the in\u00adtricacies of a speci.c model transformation. \nFinally, Trans\u00adformation Nets inherently form an explicit runtime model be\u00ading immediately executable, \nthus facilitating the debugging of model transformations. 4. Implementation A .rst prototype to build \nup the mapping view and the trans\u00adformation view as well as to execute a certain transformation is already \noperational which will be applied in several case studies to verify our approach. This prototype is built \non the Eclipse Modeling Framework (EMF) in combination with the Graphical Modeling Framework (GMF) and \nis realized as Eclipse plugin. 5. Evaluation In the course of evaluating our approach it should be tested, \nwhether productivity, quality, understanding and debugga\u00adbility of model transformations are increased \nthrough the application of metrics as e.g. proposed in [van Amstel et al. 2009]. For this purpose, we \nintend to conduct case studies with a representative selection of metamodels de.ning struc\u00adtural and \nbehavioral languages as well as empirical studies with 200 master students of our MDE courses. Furthermore, \nwe intend to arrange collaborative studies with three inter\u00adnational project partners, being the inventors \nof other model transformation languages (Prof. Dr. Jean Bzivin, Prof. Dr. Andy Sch\u00a8urr) as well as of \nColored Petri Nets (Prof. Dr. Kurt Jensen) in the form of dedicated workshops. References J. Bezivin. \n\u00b4On the Uni.cation Power of Models. Journal on Software and Systems Modeling, 4(2):171 188, 2005. K. \nCzarnecki and S. Helsen. Feature-based survey of model trans\u00adformation approaches. IBM Systems Journal, \n45(3):621 645, 2006. K. Jensen. Coloured Petri nets: basic concepts, analysis methods, and practical \nuse. Springer, 1992. Gerti Kappel, Horst Kargl, Thomas Reiter, Werner Retschitzegger, Wieland Schwinger, \nMichael Strommer, and Manuel Wimmer. A Framework for Building Mapping Operators Resolving Struc\u00adtural \nHeterogeneities. In Proc. of Information Systems and e-Business Technologies (UNISCON 08), Klagenfurt, \n2008. Vipul Kashyap and Amit Sheth. Semantic and Schematic Similari\u00adties between Database Objects: A \nContext-based approach. The VLDB Journal, 5(4):276 304, 1996. T. Reiter, M. Wimmer, and H. Kargl. Towards \na runtime model based on Colored Petri Nets for the execution of model transfor\u00admations. In Proc. of \n3rd Workshop on Models and Aspects @ ECOOP 07, Berlin, 2007. Marcel van Amstel, Christian Lange, and \nMark van den Brand. Using Metrics for Assessing the Quality of ASF+SDF Model Transformations. In Proc. \nof ICMT2009 -Int. Conf. on Model Transformation Theory and Practice of Model Transformations, Zurich, \n2009. Springer. Manuel Wimmer, Angelika Kusel, Thomas Reiter, Werner Rets\u00adchitzegger, and Wieland Schwinger. \nLost in Translation? Trans\u00adformation Nets to the Rescue! In Proc. of 8th Int. Conf. on Information Systems \nTechnology and its Applications (UNIS\u00adCON 09), pages 315 327, Sydney, 2009a. Springer. Manuel Wimmer, \nAngelika Kusel, Johannes Schoenboeck, Gerti Kappel, Werner Retschitzegger, and Wieland Schwinger. Re\u00adviving \nQVT Relations: Model-based Debugging using Colored Petri Nets. In MoDELS 09: Proc. of the 12th Int. Conf. \non Model Driven Engineering Languages and Systems, Denver, USA, 2009b. Springer. Short Paper. Manuel \nWimmer, Angelika Kusel, Johannes Schoenboeck, Thomas Reiter, Werner Retschitzegger, and Wieland Schwinger. \nLet s Play the Token Game Model Transformations Powered By Transformation Nets. In Proc. of Int. Workshop \non Petri Nets and Software Engineering, pages 35 50, Paris, 2009c.  \n\t\t\t", "proc_id": "1639950", "abstract": "<p>Model transformation languages, the cornerstone of Model-Driven Engineering, often lack mechanisms for abstraction, reuse and debugging. We propose a model transformation framework providing different abstraction levels together with an extensible library of predefined transformations and a dedicated runtime model in terms of Coloured Petri Nets for transformation execution and debugging.</p>", "authors": [{"name": "Manuel Wimmer", "author_profile_id": "81317490231", "affiliation": "Vienna University of Technology, Vienna, Austria", "person_id": "P1728597", "email_address": "", "orcid_id": ""}, {"name": "Gerti Kappel", "author_profile_id": "81100135805", "affiliation": "Vienna University of Technology, Vienna, Austria", "person_id": "P1728598", "email_address": "", "orcid_id": ""}, {"name": "Johannes Schoenboeck", "author_profile_id": "81444602734", "affiliation": "Vienna University of Technology, Vienna, Austria", "person_id": "P1728599", "email_address": "", "orcid_id": ""}, {"name": "Angelika Kusel", "author_profile_id": "81440622578", "affiliation": "Johannes Kepler University, Linz, Austria", "person_id": "P1728600", "email_address": "", "orcid_id": ""}, {"name": "Werner Retschitzegger", "author_profile_id": "81100073871", "affiliation": "Johannes Kepler University, Linz, Austria", "person_id": "P1728601", "email_address": "", "orcid_id": ""}, {"name": "Wieland Schwinger", "author_profile_id": "81100393327", "affiliation": "Johannes Kepler University, Linz, Austria", "person_id": "P1728602", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/1639950.1640013", "year": "2009", "article_id": "1640013", "conference": "OOPSLA", "title": "TROPIC: a framework for model transformations on petri nets in color", "url": "http://dl.acm.org/citation.cfm?id=1640013"}