{"article_publication_date": "10-25-2009", "fulltext": "\n Evaluation and Usability of Programming Languages and Tools (PLATEAU) Craig Anslow Shane Markstrum \nEmerson Murphy-Hill School of Engineering and Computer Department of Computer Science Department of Computer \nScience Science Bucknell University University of British Columbia Victoria University of Wellington \nUSA Canada New Zealand smarkstr@acm.org emhill@cs.ubc.ca craig@ecs.vuw.ac.nz Abstract Programming languages \nexist to enable programmers to develop software effectively. But how ef.ciently programmers can write \nsoftware depends on the usability of the languages and tools that they develop with. The aim of this \nworkshop is to discuss methods, metrics and techniques for evaluating the usability of languages and \nlanguage tools. The supposed bene.ts of such languages and tools cover a large space, including making \nprograms easier to read, write, and maintain; allowing programmers to write more .exible and powerful \nprograms; and restricting programs to make them more safe and secure. We plan to gather the intersection \nof re\u00adsearchers in the programming language, programming tool, and human-computer interaction communities \nto share their research and discuss the future of evaluation and usability of programming languages and \ntools. We are also interested in the input of other members of the programming research community working \non re\u00adlated areas, such as refactoring, design patterns, program analysis, program comprehension, software \nvisualization, end-user program\u00adming, and other programming language paradigms. Categories and Subject \nDescriptors D.3.0 [Programming Lan\u00adguages]: Standards; H.1.2 [User/Machine Systems]: Human Fac\u00adtors General \nTerms Human Factors, Languages Keywords Evaluation, Programming Languages, Tools, Usability 1. Main Themes \nand Goals At the Programming Languages Grand Challenges panel at POPL 2009, Greg Morrisett claimed that \none of the great neglected areas in programming languages research is the bridge between program\u00adming \nlanguages and human-computer interaction: the evaluation of the usability of programming languages and \ntools. This is evident by the recent research programs of major languages conferences such as POPL, PLDI, \nOOPSLA, and ECOOP. The object-oriented conferences tend to have at least one or two papers in the areas \nof corpus analysis or evaluation methodologies, but the authors of the Copyright is held by the author/owner(s). \nOOPSLA 2009, October 25 29, 2009, Orlando, Florida, USA. ACM 978-1-60558-768-4/09/10. papers seem to \navoid using the results of their studies to make con\u00adclusions about the languages or tools themselves. \nSoftware engi\u00adneering and human-computer interaction conferences tend to have better support of language \nusability analysis (CHI 2009 has three tracks that showcase research in this direction), but have limited \nvisibility to the programming languages community. This workshop aims to be a .rst step in .lling that \nvoid by developing and stimulating discussion of usability and evaluation of programming languages and \ntools with respect to language de\u00adsign and related areas. We will consider: empirical studies of pro\u00adgramming \nlanguages; methodologies and philosophies behind lan\u00adguage and tool evaluation; software design metrics \nand their rela\u00adtions to the underlying language; user studies of language features and software engineering \ntools; visual techniques for understand\u00ading programming languages; critical comparisons of programming \nparadigms, such as object-oriented vs. functional; and tools to sup\u00adport evaluating programming languages. \nWe have two goals: 1. Develop a research community that shares ideas and collabo\u00adrates on research related \nto the evaluation and usability of lan\u00adguages and tools. 2. Encourage the languages and tools communities \nto think more critically about how usability affects language and tool design and adoption.  2. Organizers \nThe logistical organisation of this workshop will be done by the following organizers. Craig Anslow \nis a PhD student in the School of Engineering and Computer Science, Victoria University of Wellington, \nNew Zealand. His PhD topic is Visual Software Analytics for Soft\u00adware Design Quality and is supervised \nby James Noble and Stuart Marshall. Craig has experience in building applications to support the evaluation \nof programming languages using in\u00adformation visualization techniques.  Shane Markstrum recently defended \nhis PhD in the Depart\u00adment of Computer Science, University of California, Los Ange\u00adles, USA. His PhD \ndissertation is titled Enforcing and Validat\u00ading User-Extensible Type Systems and was supervised by Todd \nMillstein. Shane has extensive experience in building domain\u00adspeci.c languages for type systems and building \nplugins for Eclipse that focus on language-oriented features. Shane has now joined the faculty of Bucknell \nUniversity as an assistant professor of Computer Science.   Emerson Murphy-Hill recently defended his \nPhD in the De\u00adpartment of Computer Science, Portland State University, USA. His dissertation is titled \nProgrammer Friendly Refactoring Tools and was supervised by Andrew P. Black. Emerson is currently a postdoctoral \nfellow at the University of British Columbia in the Software Practices Lab with Gail Murphy. Emerson \nis currently researching software tool adoption and high-performance software developers. 3. Program \nCommittee Along with the organizers, the following people will form the Program Committee (PC) for the \nworkshop and will help promote the workshop in the programming languages and human-computer interaction \ncommunities. Andrew P. Black is a Professor of Computer Science, Portland State University, USA. His \nresearch interests are in the area of programming languages, operating systems, object-oriented systems \nand distributed computing, and more speci.cally in the region where they overlap (such as language design \nfor distributed object-oriented computing). Andrew has been on the PC of OOPSLA ( 08, 05) and Chair of \nECOOP ( 05) and PC member ( 07, 06, 05, 03).  Larry Constantine is a Professor in the Department of \nMath\u00adematics and Engineering at the University of Madeira where he teaches in the dual-degree program \nthat he helped organize with Carnegie-Mellon University in the United States. He heads the Laboratory \nfor Usage-centered Software Engineering, a re\u00adsearch and development group dedicated to making technology \nmore useful and usable. He is an award-winning designer and author, recipient of the 2009 Stevens Award \nfor his contribu\u00adtions to design and design methods, and a Fellow of the Asso\u00adciation for Computing Machinery. \n Jeff Foster is an Assistant Professor in the Computer Science Department and UMIACS at the University \nof Maryland, Col\u00adlege Park. The goal of his research is to develop practical tools and techniques to \nimprove software quality. His research in\u00adterests are programming languages, software engineering, ad\u00advanced \nstatic type systems, scalable constraint-based analysis, and building tools that implement his ideas. \n Bob Fuhrer is a Research Staff Member at the IBM T.J. Wat\u00adson Research Center in Hawthorne, NY, USA. \nHe currently works in the Program Analysis and Transformation group on advanced refactoring and static \nanalysis. Robert leads the SA-FARI project, whose goal is to develop a meta-tooling platform for creating \nfull-featured language-speci.c IDEs for Eclipse, including editing, navigation, analysis and refactoring. \nRobert is also a member of the team creating the X10 programming language.  Donna Malayeri is a PhD \nstudent in the Computer Science Department, Carnegie Mellon University, USA. Her PhD topic is Retroactive \nAbstraction, Extensibility and Inheritance in Object-Oriented Languages and is supervised by Jonathan \nAldrich. Donna s research interests include programming lan\u00adguages, including usability, tools, and environments; \nstatic anal\u00adysis; and human-computer interaction.  Stuart Marshall is an Assistant Professor in the \nSchool of Engineering and Computer Science, Victoria University of Wellington, New Zealand. His research \ninterests are in the area of mobile user interfaces, software reuse, and software visual\u00adization.  Todd \nMillstein is an Assistant Professor in the Department of Computer Science, University of California, \nLos Angeles,  USA. His research areas include advanced language mecha\u00adnisms and static type systems \nfor object-oriented programming, object-oriented extensibility idioms, and language and tool sup\u00adport \nfor sensor network applications. Todd has been on the PC of OOPSLA ( 06 and 09) and ECOOP ( 08) and was \nco-chair of the PC of PLPV ( 09). James Noble is a Professor of Computer Science and Soft\u00adware Engineering \nwithin the School of Engineering and Com\u00adputer Science, Victoria University of Wellington, New Zealand. \nHis research areas include Software Design, Programming Lan\u00adguages, Design Patterns; Human-Computer Interaction; \nSoft\u00adware Visualisation and Visual Languages; and the philosophy of Computer Science and Software Engineering. \nJames has been on the PC of OOPSLA ( 09, 06, 05, 02, 01) and ECOOP ( 09, 08, 07, 05, 01).  Ewan Tempero \nis an Associate Professor in the Department of Computer Science, University of Auckland, New Zealand. \nThe main goal of his research is to make programmers more produc\u00adtive, that is, help the people who actually \nproduce code to do so faster, with less effort, fewer errors, and with more enjoyment than currently. \nHis research interests are in the area of object\u00adoriented programming languages, software reuse, tool \nsupport for programmers, software visualization, and the software de\u00advelopment process.  4. Anticipated \nAttendance We anticipate the following number of attendees: Minimum: 10  Ideal: 25  Maximum: 40  \n 5. Advertisement We will advertise this workshop by inviting participants of work\u00adshops in the areas \nof language design, tools, and general usability directly; as well as by emailing related mailing lists, \nposting on blogs such as Lambda the Ultimate, and contacting speci.c people known to be working in this \narea directly. In addition we will main\u00adtain a website (http://ecs.victoria.ac.nz/Events/PLATEAU/) for \npre\u00adsenting position papers and organizational information. 6. Participant Preparation Workshop participants \nshould submit a position paper prior to one month before the workshop. Position papers will be made available \nthrough the workshop website and participants are encouraged to have read the position papers before \nattending the workshop. Participants are also asked to prepare a presentation to support their position \npaper. We will accept papers (from 4 to 6 pages) that describe work-in-progress or recently completed \nwork based on the themes and goals of the workshop or related topics, report on experiences gained, question \naccepted wisdom, raise challenging open problems, or propose speculative new approaches. 7. Activities \nand Format This workshop will be run as a full-day workshop at Onward! 2009. We will have an introduction \nand keynote session in the morning followed by the presentation of workshop papers. The last session \nof the day will include some workshop papers followed by a panel on Bridging the Gap Between Programming \nLanguages and Human-Computer Interaction . If we have time we will prepare a poster for the OOPSLA Welcome \nReception. \n\t\t\t", "proc_id": "1639950", "abstract": "<p>Programming languages exist to enable programmers to develop software effectively. But how <i>efficiently</i> programmers can write software depends on the usability of the languages and tools that they develop with. The aim of this workshop is to discuss methods, metrics and techniques for evaluating the usability of languages and language tools. The supposed benefits of such languages and tools cover a large space, including making programs easier to read, write, and maintain; allowing programmers to write more flexible and powerful programs; and restricting programs to make them more safe and secure. We plan to gather the intersection of researchers in the programming language, programming tool, and human-computer interaction communities to share their research and discuss the future of evaluation and usability of programming languages and tools. We are also interested in the input of other members of the programming research community working on related areas, such as refactoring, design patterns, program analysis, program comprehension, software visualization, end-user programming, and other programming language paradigms.</p>", "authors": [{"name": "Craig Anslow", "author_profile_id": "81100069183", "affiliation": "Victoria University of Wellington, Wellington, New Zealand", "person_id": "P1728406", "email_address": "", "orcid_id": ""}, {"name": "Shane Markstrum", "author_profile_id": "81100292142", "affiliation": "Bucknell University, Lewisburg, PA, USA", "person_id": "P1728407", "email_address": "", "orcid_id": ""}, {"name": "Emerson Murphy-Hill", "author_profile_id": "81100523838", "affiliation": "University of British Columbia, Vancouver, BC, Canada", "person_id": "P1728408", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/1639950.1640085", "year": "2009", "article_id": "1640085", "conference": "OOPSLA", "title": "Evaluation and usability of programming languages and tools (plateau)", "url": "http://dl.acm.org/citation.cfm?id=1640085"}