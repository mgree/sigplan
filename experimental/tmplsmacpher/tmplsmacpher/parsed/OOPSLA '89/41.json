{"article_publication_date": "09-01-1989", "fulltext": "\n\t\t\t", "proc_id": "74877", "abstract": "<p>The arrangement of classes in a specialization hierarchy has proved to be a useful abstraction mechanism in class-based object oriented programming languages. The success of the mechanism is based on the high degree of code reuse that is offered, along with simple type conformance rules.</p><p>The opposite of specialization is generalization. We will argue that support of generalization in addition to specialization will improve class reusability. A language that only supports specialization requires the class hierarchy to be constructed in a top down fashion. Support for generalization will make it possible to create super-classes for already existing classes, hereby enabling exclusion of methods and creation of classes that describe commonalties among already existing ones.</p><p>We will show how generalization can coexist with specialization in class-based object oriented programming languages. Furthermore, we will verify that this can be achieved without changing the simple conformance rules or introducing new problems with name conflicts.</p>", "authors": [{"name": "C. H. Pedersen", "author_profile_id": "81332520431", "affiliation": "Hewlett Packard Laboratories, Filton Road, Stoke Gifford, Bristol BS12 6QZ, England", "person_id": "P38101", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/74877.74920", "year": "1989", "article_id": "74920", "conference": "OOPSLA", "title": "Extending ordinary inheritance schemes to include generalization", "url": "http://dl.acm.org/citation.cfm?id=74920"}