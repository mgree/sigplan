{"article_publication_date": "09-01-1989", "fulltext": "\n\t\t\t", "proc_id": "74877", "abstract": "<p>ThingLab II, a rewrite of ThingLab, provides two representations of objects: fully-exposed and interpreted Things, or hidden and compiled Modules. Both representations provide the full power of the ThingLab II constraint hierarchy (an ordering of constraint preferences), and both can be manipulated by the graphical user-interface. This paper briefly describes Modules and their environmental support in ThingLab II. It also describes the process by which the ModuleCompiler translates a collection of objects (a ThingLab II <italic>Thing</italic>) into a single object with compiled and optimized Smalltalk-80 methods (a <italic>Module</italic>).</p>", "authors": [{"name": "B. N. Freeman-Benson", "author_profile_id": "81100123282", "affiliation": "University of Washington, Department of Computer Science and Engineering, FR-35, Seattle, WA", "person_id": "P24874", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/74877.74918", "year": "1989", "article_id": "74918", "conference": "OOPSLA", "title": "A module mechanism for constraints in Smalltalk", "url": "http://dl.acm.org/citation.cfm?id=74918"}