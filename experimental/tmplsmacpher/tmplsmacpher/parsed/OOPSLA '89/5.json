{"article_publication_date": "09-01-1989", "fulltext": "\n\t\t\t", "proc_id": "74877", "abstract": "<p>We have developed and implemented techniques that double the performance of dynamically-typed object-oriented languages. Our SELF implementation runs twice as fast as the fastest Smalltalk implementation, despite SELF's lack of classes and explicit variables.</p><p>To compensate for the absence of classes, our system uses implementation-level <italic>maps</italic> to transparently group objects cloned from the same prototype, providing data type information and eliminating the apparent space overhead for prototype-based systems. To compensate for dynamic typing, user-defined control structures, and the lack of explicit variables, our system dynamically compiles <italic>multiple versions</italic> of a source method, each <italic>customized</italic> according to its receiver's map. Within each version the type of the receiver is fixed, and thus the compiler can statically bind and <italic>inline</italic> all messages sent to self. <italic>Message splitting</italic> and <italic>type prediction</italic> extract and preserve even more static type information, allowing the compiler to inline many other messages. Inlining dramatically improves performance and eliminates the need to hard-wire low-level methods such as +,==, and ifTrue:.</p><p>Despite inlining and other optimizations, our system still supports interactive programming environments. The system traverses internal dependency lists to invalidate all compiled methods affected by a programming change. The debugger reconstructs inlined stack frames from compiler-generated debugging information, making inlining invisible to the SELF programmer.</p>", "authors": [{"name": "C. Chambers", "author_profile_id": "81100528252", "affiliation": "Center for Integrated Systems, Stanford University", "person_id": "PP31073982", "email_address": "", "orcid_id": ""}, {"name": "D. Ungar", "author_profile_id": "81100365263", "affiliation": "Center for Integrated Systems, Stanford University", "person_id": "PP31098134", "email_address": "", "orcid_id": ""}, {"name": "E. Lee", "author_profile_id": "81100385766", "affiliation": "Center for Integrated Systems, Stanford University", "person_id": "PP14136616", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/74877.74884", "year": "1989", "article_id": "74884", "conference": "OOPSLA", "title": "An efficient implementation of SELF a dynamically-typed object-oriented language based on prototypes", "url": "http://dl.acm.org/citation.cfm?id=74884"}