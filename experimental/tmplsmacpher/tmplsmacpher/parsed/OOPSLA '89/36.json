{"article_publication_date": "09-01-1989", "fulltext": "\n\t\t\t", "proc_id": "74877", "abstract": "<p>Arguments have been given recently for providing the functionality of prototypes in object-oriented languages. Prototypes allow more flexible sharing of code and data by delegating messages to parent objects without the rigid structure of a class hierarchy. Prototypes can implement classes, and delegation can be used to model both single and multiple inheritance. However, one drawback with delegation is the difficulty in enforcing the semantics that delegation is used to model. This paper proposes a novel mechanism to control the delegation of messages with rules. In this system, the delegation of messages is governed by a set of rules possessed by each object. Rules can be used to implement classical single inheritance and can implement various solutions to multiple inheritance. In addition, rules can be created dynamically to model application-specific semantics. This paper describes how rule-based delegation works and illustrates various rules for rule-based delegation that have been implemented.</p>", "authors": [{"name": "J. Almarode", "author_profile_id": "81100049353", "affiliation": "Oregon Graduate Center", "person_id": "P119894", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/74877.74915", "year": "1989", "article_id": "74915", "conference": "OOPSLA", "title": "Rule-based delegation for prototypes", "url": "http://dl.acm.org/citation.cfm?id=74915"}