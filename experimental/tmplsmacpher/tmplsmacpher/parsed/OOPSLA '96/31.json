{"article_publication_date": "10-01-1996", "fulltext": "\n Components on the Internet Panel Session Jeffery Bonar, Nancy Lehrer, Kelly Looney, Stewart Nickolas, \nJames Russell, Randy Schnier, Ted Selker Abstract: The explosive emergence of the Internet forces us \nto rethink the traditional roles for client, server, and objects. Component technology has emerged as \nthe way objects and frameworks are packaged for flexible object integration. In particular, components \nallow users who are not programmers to do their own integration. Up until now, components have mainly \nfocused on object integration on end- users desktops and on a client: compound documents, application \nassembly, etc. Existing component models like OpenDoc and Microsoft s OLE/OCX/COM provide function for \ncompound documents, persistence, scripting, inking, and code management (registration). A series of Internet \nscenarios are emerging that demand new kinds of components. These scenarios are thin clients (Internet \nterminals), virtual reality/rich multimedia clients, collaboration, and business data access. Each panelist \nwill explore one of these scenarios for it s requirements on an Internet component model. Nancy Lehrer \nThe DARPA Sponsored Intelligent Integration of Information (13) research initiative is concerned with \naccessing information from multiple heterogeneous sources and gathering this information into high-value \nend-user information products. The WWW is a natural medium as both an information resource and a means \nfor packaging and organizing these hyper-linked information products. A distinguishing factor for high-value \ninformation products will not only be the types and sources of information with can be accessed, but \nbe their ability to customize information products not only by consumer type, but also by consumer preference \nand consumer specifics. Consider information packages modeled as complex object oriented queries such \nas Get the catalogs for all diamond retailers in my state which offer settings valued more than $1000. \nIt should contain their diamond setting catalogs for rings and pendants . In this query catalog is a \ncomplex object which includes certain attributes which also may be objects such as setting information, \nprice structures etc. Additionally, each complex object is a mix of media types; text, images, video. \nModeling a domain in terms of these objects is key to providing flexible information product capabilities. \nWe model information as object queries that can be tailored to typical sets of information consumers \nsuch as large jewelry retailer, small jeweler retailer or hobbyist based on the domain model. Each object \nquery may have a default set of attributes which are interesting for that specific consumer group and \na set of parameters which support customization based on user specifics. Local context query terms such \nas located in my state and user specific contexts such as preferred currency and distance units must \nsupported. By combining advanced information integration techniques with the capability to model information \nqueries based on a set of useful domain terms, information packages become significantly more useful. \nNancy Lehrer is a Senior Scientist at ZSX Corporation, a small company specializing in associate systems. \nAf ISX, Ms. Lehrer leads the Information Integration technology group developing tools and advanced technologies \nfor accessing and integrating information from multiple heterogeneous sources and is very active in the \nDARPA sponsored research initiative Intelligent Infegrafion of Information (13). Ms. Lehrer has been \ninvolved in a range qf activities relating object oriented representations to the issues of information \naccess. She has conducted basic research in mapping object oriented domain representations to native \ndata source representations andpackaging information for speci$c types of users. Ms. Lehrer earned her \nMasters degree in Computer Science at the University of Massachusetts at Amherst in 1987.  Kelly Looney \nAfter years of waiting, the Internet is providing the mainstream populace with it s second real dose \nof object technology. The first, of course, was the graphical user interface model of a desktop. We spent \nyears with desktop trash cans as the object community s chief contribution to peoples understanding of \ncomputers. Now millions of computer users will be introduced to a new type of object, quite unlike the \niconic folders and disks to which they have become accustomed. These objects represent code and data \nthat has migrated across the Internet to land on their own computers. It has been estimated that over \nten million computer users will have Netscape 2 on their desktops this year, every one containing a Java \nvirtual machine. Microsoft has OLE on millions of desktops already. Truly, the Internet has finally brought \nobject technology firmly into the mainstream, but once again mostly as a user interface technology. The \nWorld Wide Web is currently, in many ways, a Back to the Future phenomena. Currently Web browsers have \nthe distinctive feel of dressed-up 3270 block mode terminals. The corporate world will move to Web Applications \nin droves partly due to the fact that Web applications will feel familiar to this mainframe- oriented \ncrowd, Many new applications built over the next few years will use the Web as a user interface. And \nthe Web interfaces will become increasingly sophisticated over time due to things like Java and OLE. \nIn part the applet or component is our new UI goodie, but it is also interesting in that it is portable. \nThe object concept of modeling computer hardware to make software instantly portable has been floating \naround the object technology world for some time. Modeling is the real point. But too much of today s \ndiscussion seems to be centered of new UI goodies. Objects need not be just the window dressing for this \nnext generation of computer software. The Internet browser is our new way to interact with the world. \nBut, what will we see? Objects can model the many domains that developers need to surface to users. The \nInternet can help bring objects back to their original simulation roots. We can show people new worlds \nto explore. There will be a tremendous demand over the next few years for ways to make legacy database \ninformation available. But these databases were typically designed by and for computer professionals. \nTo make them comprehensible we need to build models that people understand. The real potential for objects \nto change peoples lives is in the way that objects can bring new worlds to our computer from anywhere \nand make these new worlds understandable. In over three years with ParcPlace Mr. Looney has performed \na variety of roles. He has been a consultant, an object methodology instructor and mentor, and most \nrecently the Project Manager for the Visual Works 2.5 release and the Release Manager for the Visual \nWave project. He is currently the product manager for the Visual Wave product line, ParePlace-Digitalk \ns Smalltalk-for-the-Internet development environment. Mr. Looney has a ten year background managing \ndevelopment efforts in the Simulation and Object arena.  Stewart Nickolas Component scripting on the \nInternet and corporate Intranets will be a vital success factor for distributed applications. Object-oriented \ntechnologies have been employed by developers to decentralize large legacy systems into more manageable \ncomponent based applications. This change in development methodology was necessitated by several factors. \nThe life-cycle of an application has grown much shorter, measured in months not years. The fast pace \nof emerging and changing technologies creates difficult design and implementation considerations for \ndevelopment teams. Customers requirements have become much more demanding for applications. Customers \nhave also become more willing to craft a final solution by integrating application components. This \nmove to components will be an evolution. Corporate customers will remain focused on forms based work-flow \nbusiness applications using component technology to augment new generations of existing applications. \nComponent technologies such as OpenDoc, OLE/OCX and Java applets will continue to facilitate the change \nfrom large applications to the more flexible component based applications. Component based applications \nprovide a level of integration and flexibility previously not available to the domain expert (i.e. someone \nwho is not a programming expert, but an expert in their actual work domain). As component re-use 445 \n becomes more of a reality, users will integrate and customize components to deliver dynamic applications. \nScripting is an important part of customizing and extending components. Scripting enables users to combine \ncomponents in ways which provide tailored solutions. The ability to customize components via scripting \nwill be pervasive on both client and server. For example, the management of distributed object systems \nmight be automated using scripts. Automated tasks include such things as deploying, monitoring, updating \nand load balancing distributed applications. Key to the success of an effective scripting strategy is \nstandards. Standards have been introduced as guidelines in component scripting and the user community \nwill continue to evolve these initial guidelines. These standards are intended to maximize component \ninteroperability and provide a consistent user experience. The role of scripting component based software \nwill continue to expand providing a productive and efficient mechanism for programmer and user alike \nto craft the optimal solution for the task at hand. Stewart Nickolas is a Senior Programmer at IBM Stewart \ns main area focus over the past ten years has been component based visual builder environments. Stewart \nhas spent the last year as an architect for the OpenDoc technology spec$cally focused on scripting. Prior \nto joining the OpenDoc team Stewart spent two years as the technical lead on a project creating a platform \nindependent component based visual builder. In his eight years prior to joining IBM Stewart worked on \nvisual programming environments and intelligent tutoring systems built using component based technologies \nwhich modeled knowledge acquisition for children learning rational number arithmetic. James Russell \nTraditionally, the dominant forms of distributed applications were developed with tools and technologies \ndesigned and marketed specifically for that purpose, such as OSF DCE, OMG CORBA, or (coming soon) Network \nOLE. However, recently the realm of distributed computing has changed dramatically with the rapid expansion \nof the Internet and World Wide Web. Now, literally tens of millions of people are engaging in distributed \ncomputing every day, simply by clicking their mouse in a Web browser. The ubiquity of this technology \nnaturally leads to the realization that shortly all distributed computing will be done in this context. \nVery soon, we will see technologies integrated with the Web that will support the same function that \nwe have in CORBA today, with CORBA and Network OLE existing only as special-purpose legacy components \nwithin this broader environment. To some degree, this is possible today, but the tools are still crude. \nTo facilitate this advance we need (and will see) application development tools and technologies that \nsimplify the development of Web-based clients for interaction with both standard HTTP servers and legacy \ntechnologies. We will also see expanded, heterogeneous, Web servers that similarly support the function \nthat today is associated with distributed object systems -combining HTTP access to objects as well as \nOMG (or other protocol) access. The result will be a World Wide Web that allows users to create, and \ninter-operate with, distributed applications with ease, in a much more open environment than we have \nseen before. James Russell is a Research StaffMember at IBM s T. J. Watson Research Center, and is Senior \nManager of the Object and Distributed Technology group there. His main area of research over the past \nseveral years has been in tools for developing distributed applications. Major projects include the Concert/C \nresearch prototype and IBM s DSOMproduct, for which he was one of the architects. Most recently, he has \nbeen focusing on the problem of developing applications exploiting Internet technologies. James holds \na Ph.D. in Computer Science from Cornell Universitv.  Randy Schnier When client/server computing arrived \non the scene, it held out the promise of reduced costs, better response time, and greater flexibility \nto respond to changing business needs. But today s two-tier client/server systems often come up short \nin delivering on these characteristics. Performance and response time degrade as more and more fat clients \nare connected to database servers, and the demands on client machine capabilities keep growing as more \nand larger applications are installed on each client. Maintaining synchronized images of operating systems \nand business operations applications on all these clients is costly and complex, and it is difficult \nto construct architectures that work across a heterogeneous, multi-vendor environment, tending to lock \ncustomers into proprietary and inflexible single-vendor solutions. The emergence of network-centric computing, \nincorporating the Internet and company Intranets , has made it possible to more fully realize the benefits \nof client/server. By using a three-tier architecture with database servers in the top tier, business \napplication servers in the middle tier, and lightweight clients in the bottom tier, customers can avoid \nthe fat client syndrome and its associated problems. The business logic tier and client tier are ideal \napplications for the use of web objects, with objects that encapsulate business logic on the middle tier, \nand user interface/presentation objects dynamically downloaded to clients in the bottom tier. By combining \nplatform-independent client technologies such as Java and web browsers with CORBA technology on the application \nserver, it becomes much easier to deploy powerful, flexible, high-performance client/server systems. \nRandy Schnier is an advisory software engineer at IBM s lab in Rochester, Minnesota. He has been a member \nand leader of a variety of software projects during his I2 years with the company, including design automation \ntools (EDA and CAD/CAM), IC fabrication process tracking, and commercial object-oriented middleware products. \nHis current work involves developing lightweight 00 client technologies for multi-tier client/server \nenvironments. Randy holds a Bachelor of Science degree in electrical engineering from the University \nof Wisconsin- Madison. Ted Selker I will present a number of rich user interface paradigms and describe \nthe objects and components necessary to realize them over the Internet. First, a user s components need \na richer model of how public they are. A wonderful cooperative work paradigm would allow a person like \nme to tell you everything 1 want to share -all the people I know, all the places I have been, all the \nthings I can think of --and I want them to be in front of you as we are having a conversation. What would \nthat do -to have such a visualization available as people are making new computer and programming environments? \nWhat it would do is focus on access --browsing and searching, and working towards having scenarios where \nthe task is more showing and testing than searching and constructing. Next, components much have a way \nto show peripheral context. The Room With a View (RWAV) is a room-mounted rather than head-mounted virtual-reality \nsystem, allowing an office worker to go back to using their peripheral vision to orient them as they \ndo work on a separate focus screen. Although computer users rarely have large enough monitors to show \nan orienting amount of text on their screens, or bandwidth enough to download all the background information, \nthey typically leave a backdrop of icons visible as an orienting context. Other orienting imagery of \nshelves with books and folders are projected on an office wall. Pointing at one of these books or other \nicons on the wall opens it for manipulation. This paradigm allows one to use their peripheral vision \nto orient and fovea1 vision to concentrate, consistent with how the eyes are designed. Finally, components \nneed to have structures that allow them to be adaptive far beyond the simple caching now employed to \nspeed Internet access. The Cognitive Adaptive Computer Help (COACH) is a system which records user experience \nto create personalized user help. It is an interface agent which teaches a user rather than acting in \nthat user s behalf. For example, example information demonstrating how to perform a procedure is often \nvaluable until the procedure is mastered. The COACH system records a user s experience and expertise \nfor learnable things (syntactic and conceptual) as they are being used. COACH is an architecture for \nexperimenting with adaptive user models. The content coached, the way COACH adapts, and the pedagogical \nparadigm can be changed by content definition tables, courseware facts, and learning rules. Dr. TedSelker \nis Manager of User System Ergonomics Research (USER) at IBM Almaden Research Center. Ted s group works \non cognitive graphical and physical interface. Ted teaches at Stanford, and previously worked at Xerox \nPARC, at Atari Sunnyvale Research Center. His recent successes include the design of the TrackPoint II \nin keyboard pointing device performance advantages derivedfrom a special behavioral/motor match algorithm \navailable in IBM computers and creating COACH , an adaptive agent improves user performance.  Jeffery \nBonar Jeflrey Bonar is the technical leadfor IBM s Object Technology Products group in Austin, Texas. \nThis group develops SOM, DSOM CORBA Object Services and OpenDoc. He has been involved with a range of \nobject technoIogV through his career. He did basic research on application of objects to graphic and \ndirect manipulation user interfaces. Based on that research, he founded a company that developed and \nshipped an object-oriented tool for corporate application development. Since joining IBM, he has focused \non components, scripting, and general mainstreaming of object technology. He received his doctorate in \ncomputer and information science from the University of Massachusetts in 1985.  \n\t\t\t", "proc_id": "236337", "abstract": "The explosive emergence of the Internet forces us to rethink the traditional roles for client, server, and objects. Component technology has emerged as the way objects and frameworks are packaged for flexible object integration. In particular, components allow users who are not programmers to do their own integration. Up until now, components have mainly focused on object integration on end-users desktops and on a client: compound documents, application assembly, etc.Existing component models like OpenDoc and Microsoft's OLE/OCX/COM provide function for compound documents, persistence, scripting, inking, and code management (registration). A series of Internet scenarios are emerging that demand new kinds of components. These scenarios are thin clients (Internet terminals), virtual reality/rich multimedia clients, collaboration, and business data access. Each panelist will explore one of these scenarios for it's requirements on an Internet component model.", "authors": [{"name": "Jeffrey Bonar", "author_profile_id": "81100062334", "affiliation": "IBM's, Object Technology, Austin, Texas", "person_id": "PP39073955", "email_address": "", "orcid_id": ""}, {"name": "Nancy Lehrer", "author_profile_id": "81543934456", "affiliation": "Senior Scientist, ISX Corporation", "person_id": "P206963", "email_address": "", "orcid_id": ""}, {"name": "Kelly Looney", "author_profile_id": "81332513237", "affiliation": "VisualWave Product Line, ParcPlace-digitaik's Smalltalk-for-the-Internet development Environment", "person_id": "P159285", "email_address": "", "orcid_id": ""}, {"name": "Randy Schnier", "author_profile_id": "81100376862", "affiliation": "Software engineer, IBMss lab in Rochester, Minnesota", "person_id": "P239263", "email_address": "", "orcid_id": ""}, {"name": "James Russel", "author_profile_id": "81100324766", "affiliation": "IBM's T.J. Watson Research Center", "person_id": "P133416", "email_address": "", "orcid_id": ""}, {"name": "Ted Selker", "author_profile_id": "81100525482", "affiliation": "User System Ergonomics Research (USER), IBM Almaden Research Center", "person_id": "PP31046142", "email_address": "", "orcid_id": ""}, {"name": "Stewart Nickolas", "author_profile_id": "81100319133", "affiliation": "IBM", "person_id": "P270547", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/236337.236386", "year": "1996", "article_id": "236386", "conference": "OOPSLA", "title": "Components on the Internet (panel)", "url": "http://dl.acm.org/citation.cfm?id=236386"}