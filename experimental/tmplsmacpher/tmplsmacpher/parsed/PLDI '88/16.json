{"article_publication_date": "06-01-1988", "fulltext": "\n\t\t\t", "proc_id": "53990", "abstract": "<p>Traditional flow analysis techniques, such as the ones typically employed by optimizing Fortran compilers, do not work for Scheme-like languages. This paper presents a flow analysis technique &#8212; <italic>control flow analysis</italic> &#8212; which is applicable to Scheme-like languages. As a demonstration application, the information gathered by control flow analysis is used to perform a traditional flow analysis problem, induction variable elimination. Extensions and limitations are discussed.</p><p>The techniques presented in this paper are backed up by working code. They are applicable not only to Scheme, but also to related languages, such as Common Lisp and ML.</p>", "authors": [{"name": "O. Shivers", "author_profile_id": "81100129912", "affiliation": "Carnegie Mellon Univ.", "person_id": "PP15023678", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/53990.54007", "year": "1988", "article_id": "54007", "conference": "PLDI", "title": "Control flow analysis in scheme", "url": "http://dl.acm.org/citation.cfm?id=54007"}