{"article_publication_date": "06-01-1988", "fulltext": "\n\t\t\t", "proc_id": "53990", "abstract": "<p>Synchronous message passing via channels is an interprocess communication (IPC) mechanism found in several concurrent languages, such as CSP, occam, and Amber. Such languages provide a powerful selective I/O operation, which plays a vital role in managing communication with multiple processes. Because the channel IPC mechanism is &#8220;operation-oriented,&#8221; only procedural abstraction techniques can be used in structuring the communication/synchronization aspects of a system. This has the unfortunate effect of restricting the use of selective I/O, which in turn limits the communication structure. We propose a new, &#8220;value-oriented&#8221; approach to channel-based synchronization. We make synchronous operations first-class values, called <italic>events</italic>, in much the same way that functions are first-class values in functional programming languages. Our approach allows the use of data abstraction techniques for structuring IPC. We have incorporated events into PML, a concurrent functional programming language, and have implemented run-time support for them as part of the Pegasus system.</p>", "authors": [{"name": "J. H. Reppy", "author_profile_id": "81100590527", "affiliation": "AT&T Bell Laboratories, Murray Hill, NJ", "person_id": "PP39082284", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/53990.54015", "year": "1988", "article_id": "54015", "conference": "PLDI", "title": "Synchronous operations as first-class values", "url": "http://dl.acm.org/citation.cfm?id=54015"}