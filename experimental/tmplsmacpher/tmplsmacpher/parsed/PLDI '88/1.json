{"article_publication_date": "06-01-1988", "fulltext": "\n\t\t\t", "proc_id": "53990", "abstract": "<p>We've designed and implemented a copying garbage-collection algorithm that is efficient, real-time, concurrent, runs on commercial uniprocessors and shared-memory multiprocessors, and requires no change to compilers. The algorithm uses standard virtual-memory hardware to detect references to &#8220;from space&#8221; objects and to synchronize the collector and mutator threads. We've implemented and measured a prototype running on SRC's 5-processor Firefly. It will be straightforward to merge our techniques with generational collection. An incremental, non-concurrent version could be implemented easily on many versions of Unix.</p>", "authors": [{"name": "A. W. Appel", "author_profile_id": "81100498630", "affiliation": "Princeton Univ., Princeton, NJ", "person_id": "PP31059696", "email_address": "", "orcid_id": ""}, {"name": "J. R. Ellis", "author_profile_id": "81339498182", "affiliation": "Systems Research Center, Palo Alto, CA", "person_id": "P122205", "email_address": "", "orcid_id": ""}, {"name": "K. Li", "author_profile_id": "81100475927", "affiliation": "Princeton Univ., Princeton, NJ", "person_id": "PP39079556", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/53990.53992", "year": "1988", "article_id": "53992", "conference": "PLDI", "title": "Real-time concurrent collection on stock multiprocessors", "url": "http://dl.acm.org/citation.cfm?id=53992"}