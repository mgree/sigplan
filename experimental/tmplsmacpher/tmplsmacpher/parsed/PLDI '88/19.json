{"article_publication_date": "06-01-1988", "fulltext": "\n\t\t\t", "proc_id": "53990", "abstract": "<p>We describe motivation, design, use, and implementation of <italic>higher-order abstract syntax</italic> as a central representation for programs, formulas, rules, and other syntactic objects in program manipulation and other formal systems where matching and substitution or unification are central operations. Higher-order abstract syntax incorporates name binding information in a uniform and language generic way. Thus it acts as a powerful link integrating diverse tools in such formal environments. We have implemented higher-order abstract syntax, a supporting matching and unification algorithm, and some clients in Common Lisp in the framework of the Ergo project at Carnegie Mellon University.</p>", "authors": [{"name": "F. Pfenning", "author_profile_id": "81100157780", "affiliation": "Carnegie Mellon Univ., Pittsburgh, PA", "person_id": "PP39077234", "email_address": "", "orcid_id": ""}, {"name": "C. Elliot", "author_profile_id": "81332497303", "affiliation": "Carnegie Mellon Univ., Pittsburgh, PA", "person_id": "P36190", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/53990.54010", "year": "1988", "article_id": "54010", "conference": "PLDI", "title": "Higher-order abstract syntax", "url": "http://dl.acm.org/citation.cfm?id=54010"}