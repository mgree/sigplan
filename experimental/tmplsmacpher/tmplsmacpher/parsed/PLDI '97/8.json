{"article_publication_date": "05-01-1997", "fulltext": "\n Generational Garbage Collection and the Radioactive Decay Model William D Clinger and Lars T Hansen \nNortheastern University {will, lth}@ccs . neu. edu Abstract If a fixed exponentially decreasing probability \ndistribu-tion function is used to model every object s lifetime, then the age of an object gives no information \nabout its future life expectancy. This radioactive decay model implies there can be no rational basis \nfor deciding which live objects should be promoted to another generation. Yet there remains a rational \nbasis for deciding how many objects to promote, when to collect garbage, and which generations to collect. \n Analysis of the model leads to a new kind of gen- erational garbage collector whose effectiveness does \nnot depend upon heuristics that predict which objects will live longer than others. This result provides \ninsight into the computational advantages of generational garbage collection, with im-plications for \nthe management of objects whose life ex-pectancies are difficult t,o predict. 1 Introduction The computational \nadvantages of generational garbage collection over non-generational collection are generally attributed \nto heuristic prediction of object lifetimes and to improved caching and paging behavior [5, 391. This \nhypothesis can be tested by considering a uniform mem-ory system and a model of object lifetimes for \nwhich no heuristic predictor can do better or worse than chance. The radioactive decay model is a model \nof object lifetimes that defeats all heuristics that attempt to pre diet which objects will live longer \nthan others, including heuristics that are tuned to a specific model and its pa-rameters. This model \nhas the remarkable property that the age of a live object, together with the time at which Permission \nto make digital/hard copy of part or all this work for personal or classroom use is granted without fee \nprovided that copies are not made or distributed for profit or commercial advan-tage,the copyright notice, \nthe title of the publication and its date appear, and notice is given that copying is by permission of \nACM. Inc. TO copy otherwise, to republish, to post on servers. or to redistribute to lists, requires \nprior specific permission and/or a fee. PLDI 97 Las Vegas, NV, USA Q 1997 ACM 0-89791-907-6/97/0006...$3.50 \nthe object was allocated, gives absolutely no informa-tion about the probability that the object will \nsurvive to any future time. The model is also simple and easy to analyze. Thii paper describes and analyzes \na new kind of generational garbage collector, the non-predictive col-lectors. A calculation shows that \nnon-predictive collec-tors can outperform non-generational collectors for the radioactive decay model. \nThis result proves that gener-ational garbage collection has an advantage in computa- tional complexity \nthat cannot be attributed to heuristic prediction of object lifetimes, to locality effects, or to the \nbenefit of retaining a large part of its state from one collection to the next. Although the radioactive \ndecay model does not de-scribe the overall behavior of objects in most real pro-grams, it may be a useful \nmodel for long-lived objects. Experimental studies have thus far found few regulari-ties in the behavior \nof long-lived objects that could be used to predict which of them are likely to live longer than others \n[24, 33, 32, 391. A total absence of such information is the defining characteristic of the radioac-tive \ndecay model. Non-predictive collectors appear suitable for manag- ing the oldest generations of an otherwise \nconventional multi-generation garbage collector. We have designed a prototype of such a collector for \nthe Larceny implemen-tation of Scheme [14, 21, 271. This prototype began to work as this paper went to \npress. On most programs the new collector performs the same as the generational collector it replaces, \nbut we expect the newcollector to improve the performance of some programs that present a challenge to \nour conventional generational collector. Our main conclusion is that research effort directed toward \nheuristic prediction of object lifetimes is slightly misplaced. What really matters is the heuristic \nselec- tion of generations to collect. These two problems are not equivalent. 97 2 The radioactive \ndecay model In the radioactive decay model, a single probability dis-tribution function describes the \nlife expectancy of every object. There is but one parameter of the model, the half-life h. For every \nobject that is live at time to, the probability that the object will still be alive at time to + t is \n2-t/h. The probability that the object will be dead at that time is 1 - 2-tlh. The derivative of this \nis the probability density function log 2 2-t/h Ph(t) = h The radioactive decay model is characterized \nby two as-sumptions. The first assumption ensures that the age of a live object can never provide any \nclue to its fu-ture prospects. The second assumption ensures that no other clues are available either. \nAssumption 1 There exists h > 0 such that, for each live object o, the life expectancy of o is described \nby Ph(t). Assumption 2 Live objects have no other distinguish- ing characteristics that might be exploited \nby a genem- tional garbage collector. With these assumptions, there is no rational basis for any policy \nthat could be used by a generational garbage collector to decide which live objects should be kept in \nwhich generation. The collector might as well make all such decisions randomly. If the time t is measured \nby the number of objects that have been allocated, then the radioactive decay model implies that an equilibrium \nwill be approached after several half-lives of time have passed. At equilib-rium one object can be expected \nto die per unit time. The expected number n of live objects at equilibrium is therefore related to the \nhalf-life h by 1 = n(1 -2- lh). Let T = 2- jh. By L Hospital s Rule, for large h (1,34). Small values \nof h imply a small num-ber of live objects, which makes garbage collection too easy to be interesting, \nso this approximation can safely be used to calculate that the live storage at equilibrium is n = lpr)z&#38;= \n 1.4427h (1) If most objects die young, then there must be few live objects. The radioactive decay model \nis useful only as a model for long-lived objects. 3 Generational garbage collection Generational garbage \ncollectors work by dividing heap storage into generations. They have policies that deter-mine the generation \nin which a new object will be allo-cated, when and how to move objects from one genera-tion to another, \nand when and how to collect garbage. There are three distinct properties of generational collectors that \nallow them to reduce the overhead of garbage collection for some programs: By limiting the region in \nwhich new objects are allocated, and to a lesser extent by controlling the regions in which objects reside \nafter alloca- tion, generational collectors improve the caching and paging behavior of a program [37]. \nBy retaining a remembewd set of cross-generational pointers from one collection to the next, and by maintaining \nthat set in cooperation with the mu- tator, generational collectors do not have to start from scratch \non every collection [35, 391. By collecting a cleverly selected subset of the gen- erations, generational \ncollectors can reduce the am- ortized overhead of garbage collection. A first approximation to the amortized \noverhead of garbage collection can be estimated by dividing the number of objects that have been marked \n(or copied, or whatever) by the number of objects that have been allocated. This is the mark/cons ratio. \nA generational collector attempts to lower the mark/ cons ratio by collecting generations that contain \na higher percentage of garbage than the average for all genera-tions. Such generations require less marking \nand re-claim more storage than the average. Clearly the collector s choice of generations to col-lect \nis critical. If the selected generations actually con-tain an unusually low percentage of garbage,then \nthe mark/cons ratio will rise instead of fall. That is what happens when a conventional gener-ational \ngarbage collector is used for a program whose object lifetimes resemble the radioactive decay model. \nThe collector simply assumes that young objects have a shorter life expectancy than old objects, and \nconcen-trates its effort on collecting the generations that con-tain the most recently allocated objects. \nIn the radioac-tive decay model, these are the objects that have had the least amount of time in which \nto decay, so the gen-erations in which they reside contain an unusually low percentage of garbage. For \nthe radioactive decay model, therefore, a conventional generational collector will per-form worse than \na similar non-generational collector. This is remarkable because the radioactive decay model ensures \nthat no heuristic predictor of object life-times can do worse than chance. Heuristic selection 98 live \nstorage in each step t step 1 step 2 step 3 step 4 step 5 step 6 step 7 0 0 0 0 0 0 1024 1024 1024 0 \n0 0 0 1024 512 512 2048 0 0 0 1024 512 256 256 3072 0 0 1024 512 256 128 128 4096 0 1024 512 256 128 \n64 64 5120 *lo24 512 256 128 64 32 32 gc I 0 0 0 0 0 1024 * 1024 These two steps are exchanged, notcollected. \n Table 1: Live storage in a non-predictive generational collector. of generations to collect must therefore \nbe a different problem from heuristic prediction of object lifetimes. Furthermore the fact that a poor \nchoice of gener-ations to collect can cause a generational collector to perform worse than a non-generational \ncollector for the radioactive decay model suggests that a better choice of generations might allow it \nto perform better. The main theoretical result of this paper is that not even the radioactive decay model \ncan prevent a gener-ational collector from organizing its generations to ob-tain a lower mark/cons ratio \nthan a non-generational collector. Non-predictive generational collectors A non-predictive generational \ngarbage collector does not attempt to predict the lifetimes of objects. Nei-ther does it keep track of \nthe ages of objects. It does, however, keep track of how much allocation has been performed since an \nobject was allocated or last consid-ered for collection. Just as a conventional generational collector \ncan use a mark/sweep, compacting mark/sweep, or a stop-and- copy collector to collect its generations, \nso can a non-predictive generational collector use any of those basic algorithms. This section describes \na specific 2-generation non-predictive collector. Thii collector divides heap stor-age into k steps of \nequal size. Step 1 is considered the youngest, and step k is the oldest. A dynamic tuning parameter j \n> 0 determines how many of these steps are allocated to the young generation, which consists of steps \n1 through j. The old generation consists of steps j + 1 through k. All allocation occurs in the highest-numbered \nstep that has free space. When it becomes full, the next highest-numbered step becomes the allocation \narea, and so on until step 1 fills. The tuning parameter j de-termines how many of the youngest steps \nwill not be collected during the next collection. The collector es-sentially assumes that all objects \nin steps1 through j are live. When all steps become full: . Steps j+l through k are collected as a single \ngener-ation, promoting objects to the highest-numbered step that contains free space. . Following collection, \nsteps j + 1 through k become the new steps 1 through k -j; the original steps 1 through j become steps \nk -j + 1 through k. . Then a new value of the tuning parameter j can be chosen. For technical reasons \ndescribed in Section 8, the implementation of this algorithm becomes simpler if j is always chosen so \nthat steps 1 through j are empty. An example of a non-predictive generational collec-tor at work is shown \nin Table 1, which assumes j is 6xed at 1. The numbers shown in this table are close to but nicer than \nthe numbers that would be expected from the radioactive decay model with a half-life of 1024 and an inverse \nload factor of 3.5. The mark/cons ratio for Table 1 is 1024/5120 = 0.2. For a non-generational mark/sweep \ncollector, the mark/cons ratio would be 2048/5120 = 0.4. The non-predictive collector has almost as much \noverhead for sweeping as the non-generational collector, and has at least as much overhead for scanning \nroots, so the non-predictive collector s advantage is not quite so large as the mark/cons ratios would \nsuggest. 5 Mathematical analysis The garbage collection problem for the radioactive de-cay model has \ntwo degrees of freedom: the half-life h and the load factor, defined as the amount of live storage divided \nby the total size of the heap. Let L be the inverse of the load factor. The live storage 99     \n  \n\t\t\t", "proc_id": "258915", "abstract": "If a fixed exponentially decreasing probability distribution function is used to model every object's lifetime, then the age of an object gives no information about its future life expectancy. This <i>radioactive decay</i> model implies there can be no rational basis for deciding which live objects should be promoted to another generation. Yet there remains a rational basis for deciding how many objects to promote, when to collect garbage, and which generations to collect.Analysis of the model leads to a new kind of generational garbage collector whose effectiveness does not depend upon heuristics that predict which objects will live longer than others.This result provides insight into the computational advantages of generational garbage collection, with implications for the management of objects whose life expectancies are difficult to predict.", "authors": [{"name": "William D. Clinger", "author_profile_id": "81100543143", "affiliation": "Northeastern University", "person_id": "P298778", "email_address": "", "orcid_id": ""}, {"name": "Lars T. Hansen", "author_profile_id": "81100463673", "affiliation": "Northeastern University", "person_id": "P168837", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/258915.258925", "year": "1997", "article_id": "258925", "conference": "PLDI", "title": "Generational garbage collection and the radioactive decay model", "url": "http://dl.acm.org/citation.cfm?id=258925"}