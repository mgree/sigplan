{"article_publication_date": "09-19-2011", "fulltext": "\n Towards a Comprehensive Theory of Monadic Effects Andrzej Filinski DIKU, University of Copenhagen andrzej@diku.dk \nAbstract It has been more than 20 years since monads were proposed as a unifying concept for computational \neffects, in both formal seman\u00adtics and functional programs. Over that period, there has been sub\u00adstantial \nincremental progress on several fronts within the ensuing research area, including denotational, operational, \nand axiomatic characterizations of effects; principles and frameworks for combin\u00ading effects; prescriptive \nvs. descriptive effect-type systems; speci\u00ad.cation vs. implementation of effects; and realizations of \neffect\u00adrelated theoretical constructions in practical functional languages, both eager and lazy. Yet \nfew would con.dently claim that programs with computational effects are by now as well understood, and \nas thoroughly supported by formal reasoning techniques, as types and terms in purely functional settings. \nThis talk outlines (one view of) the landscape of effectful func\u00adtional programming, and attempts to \nassess our collective progress towards the goal of a broad yet coherent theory of monadic effects. We \nare not quite there yet, but intriguingly, many potential ingre\u00addients of such a theory have been repeatedly \ndiscovered and devel\u00adoped, with only minor variations, in seemingly unrelated contexts. Some stronger-than-expected \nties between the research topics men\u00adtioned above also instill hope that there is indeed a natural, compre\u00adhensive \ntheory of monadic effects, waiting to be fully explicated. Categories and Subject Descriptors F.3.2 [Logics \nand Meanings of Programs]: Semantics of Programming Languages Denotational semantics, Operational Semantics, \nProgram Analysis General Terms Languages, Theory Keywords Monads, Computational Effects Copyright is \nheld by the author/owner(s). ICFP 11, September 19 21, 2011, Tokyo, Japan. ACM 978-1-4503-0865-6/11/09. \n \n\t\t\t", "proc_id": "2034773", "abstract": "<p>It has been more than 20 years since monads were proposed as a unifying concept for computational effects, in both formal semantics and functional programs. Over that period, there has been substantial incremental progress on several fronts within the ensuing research area, including denotational, operational, and axiomatic characterizations of effects; principles and frameworks for combining effects; prescriptive vs. descriptive effect-type systems; specification vs. implementation of effects; and realizations of effect-related theoretical constructions in practical functional languages, both eager and lazy. Yet few would confidently claim that programs with computational effects are by now as well understood, and as thoroughly supported by formal reasoning techniques, as types and terms in purely functional settings.</p> <p>This talk outlines (one view of) the landscape of effectful functional programming, and attempts to assess our collective progress towards the goal of a broad yet coherent theory of monadic effects. We are not quite there yet, but intriguingly, many potential ingredients of such a theory have been repeatedly discovered and developed, with only minor variations, in seemingly unrelated contexts. Some stronger-than-expected ties between the research topics mentioned above also instill hope that there is indeed a natural, comprehensive theory of monadic effects, waiting to be fully explicated.</p>", "authors": [{"name": "Andrzej Filinski", "author_profile_id": "81100252096", "affiliation": "University of Copenhagen, Copenhagen, Denmark", "person_id": "P2801360", "email_address": "andrzej@diku.dk", "orcid_id": ""}], "doi_number": "10.1145/2034773.2034775", "year": "2011", "article_id": "2034775", "conference": "ICFP", "title": "Towards a comprehensive theory of monadic effects", "url": "http://dl.acm.org/citation.cfm?id=2034775"}