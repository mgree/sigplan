{"article_publication_date": "01-01-2001", "fulltext": "\n Verifying Safety Properties of Concurrent Java Programs Some text in this electronic article is rendered \nin Type 3 or bitmapped fonts, and may display poorly on screen in Adobe Acrobat v. 4.0 and later. However, \nprintouts of this file are unaffected by this problem. We recommend that you print the file for best \nlegibility. Using 3-Valued Logic Eran Yahav School of Computer Science Tel-Aviv University, Tel-Aviv \n69978 yahave@math.tau.ac.il ABSTRACT r a o e o m e o a o o o e o o a n e e n r e o o a b o e m r o e \nm a e e r d e e d a o r a n d o e o o ha e n e a a o r n o e n o e e a e neu o m oro e o d e o o a fea \nd atr e o o a b o e mbn o o h ae e a a n d e a o o h a n d a o o e e e d e e r o e oeo n e o e b e n \nd e e r o e oeo n e o eeoao o nn d aea d o o aeo r n d a d a o o f a d e ace a o o aen o a e e o e h \no a n a n n e o ebo e d o he e n d o a n d o n o e aoo o e a o e a n e a a n d o ega y e a n e e d n \na n d e e o o a a f a d ar e o o a b o e mto e a o o e o m e o a a n d a o o a n o e a n e a a a d o \no a h o e o e d a e a o e hd o e e n d o r o etn o e n o e e a e neo e o d e o o a fbs emn o e n e o \na ntn o a y e a n e e dm a e e b n o n e o ean a n d e e o o a a n b a o ore o n o o n oao o e o o etn \nd aee o o h aa e o r o e e o n o n a ohoa a n n a fea d aer e o o a b o e m a m a edo e o o o n a a e \ne hn a e a a n e e doe a a o e n a b d a eso e o e d b e e dru o m o o e o d e o o a b e n dao eeo e \nh ao o e o a o e o oaa e o r n d e a o o a fga d a r e o o a b o e m e aro o o e e a o n oa o n n a a \na r o e e dom a e e r d n d a r o e e o b e e dho e o o a e n e a aco r ogn o e n o e e a e n o e o d \ne o ogu bCo e n o e e a e n oeo e e o o e o n e o e o r e e e m a o h e e a nao a a o t m ado e a ha \na e m a a n d a t m abo o n o n d o a e e m o e e o e nosb f a d aso e o d e o o o o a aee o neo a e \nr o e o e e n o e a e a n a e neo oao o n a ao o aen o e e n a e r a e a e n a f a d a o e o d e o o \no o a a e o n e a o n d oro a o o e o n m f a d aeo e o d e o o o o a a e o n o e o o o n a e o e h n \ne o a a e e o e a o o a n oe e e a d o e n d e a o oae e n a e o n n e o e a f r a o e a o b e oao d \na e e a e e o e a o o a m a e a e o e ayo raa o n d e o o e a o a e hn o n e o e a f tbo e o n o n d \no a o r o o e r e o o a b o e mtd o aaa a ege o o e a o a e n a o f 1. INTRODUCTION u o m o o e o m e \no a a e o b h e a m a e n o e n o e e a e n d h n o e n e o e n o e a n e o n n a n d o n a e oae aon \nd a o e o d e o o o a e n o n e a o n aen o o o e e n o n a ogo e oso o b a e r o ea d e n d e o e e \nb o n e o ega n d a o a a fba d adu o m o e o e d o o d ado e o m e o a aee o o a o e a o r n o o o e \ne a h n e o a o e e o e h n e o a n d a n m e e der o e n d a n o e e a n n he a a aeo ron o e n o e \ne a e naa d o m e o e f-a d e atoeo m a a n o e n o e e a e neo e o hd e o o o e e dce e u o m oro o \ne n a a e e o e h o e o e a m a fd f n b d f a d a n d a o a o r n d e a o o o a e e a n oeo a m a e \no ogn o o o e e a h n e o a n a n d he e o o a a r o e m a e e r d e e dta o r a n ddo e o o a e n e \na aad o a n a n n e e dao e o d e o on o e b d o e o n e o e a n d o n oeo dtm e o e o n aoo a a e e \na oao e o o a e n e a a f Permission to make digital or hard copies of all or part of this work for personal \nor classroom use is granted without fee provided that copies are not made or distributed for profit or \ncommercial advantage and that copies bear this notice and the full citation on the first page. To copy \notherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission \nand/or a fee. POPL '01 1/01 Londo, UK Copyright 2001 ACM 1-58113-336-7/01/0001 ... $5.00 1.1 Main Results \nand Related Work s e n d e a o o o a e n b aeo e a a a e n o r e o o a b o e m r o e m a e e r d e e \ndca o r a n d o e o o a e n e a aso ron o e n o e e a e nsu o m oto e o d e o o a foa d e aer e o o a \nb o e md o e o e a a o d e o o e neo e e o n o n e o edo r oa a n n a o e ote a r a e a e n a a n o oah \na n n a fla d e a o e e o b aho asn oro e o e d b aho e o d e o o agn d o ngo d e o o e hn o e e deo \ne e o n o n a n d e a o ocoa a n n a n o e o a m a e o e o d e o o a n d o nyn e a o n a o eeo eao o \ne o a ote o oaa e o r n d e a o o a femed e o o e nao e e o n o n e o eeo rn d e a o o aoe aon o o o \no erb d a ete o o e a o a e n e e daa a e m e n a aee e n d e a o o am a fd f n b b n n d fd fo e n d \na a a o e o d e o o a nab a n o ehm a e e r ddo e o o ha e n e a a a o n dao a n d aeoaa a e n a o r \ne e n a e r a e a e n a fo e o e e e dro d e o o he n o e e doo e e o n o n a otoa a n n aco e a odo \ne e o b aro a n ogo o o a e n o e n o e e a e n o e o d e o o a n d o neoeo e e o o e o n ase e e m \na o h e e a n ate emn d aso o a neo e a n e a a m e o b eab o d f  1.1.1 A Parametric Framework for \nVerifying Safety Properties rtato e o m e o aao o o e o o a n e e nar e o o a b o e m r o e m a e e r \nd e e dha o r a n do e o o a e n e a a o ren o e n o e e a e n u o m oro e o d e o o a for aso a ago \neaa e a e ne e a n o e n a aeo r n d e a r e o o a b o e mbm a a ara n n e o eden otoan o e e 1.1.2 a \nn o n e n h o e o e d a e a o e d o e e n d o ayn d o n d o m a n d a oae e e n drn ocm a e e r deo e \nr hr a e a e n a o r a n dso e o o a e n e a a f a d a a a oeo e n e n ayo r u o m o n o eaa o a a n \ne eaa o o a e e dco a n e o n n o e o eo o a e o n e o e o e a a oeo e n e n acm a fd f n b b b d e e \nn a e o aeo r s a f y r m e t e a f lm o e a n o n a a d f s ego o e r e o o a b o e m n n d a o o a \ne o n e o e o e a a oeo e n e n a o ru o m o a n o n a o a e n aom o e ogn o e o e n e o e a d e a a \no a n e b a ogo a e e deo o a n o h e o e d o o d aao a a omo ebb e a n h o e o a ere o d e nsb e n dbn \ne o e a e n e m a h n e o a o e a fa d aea o o a o a n o h e o e d o o d a e a o e a o o a a otn ocm \na e e r d n d o n oca o r a n d o e o o a e n ded o e o a e eeo d e m a e n o e b d o e o n e o e f veo \ne r e o o a b o e men d a en o o o o n a aeoea o r a o o o e o y e oeo n e o e n o n d atm o a o o e \ne d e e b e e n a d a a n o r m a e se n a a s a f yr m e t e a f l n e fa f n n o e b d o e o n e o \ne a n d o n n o e o e e a ao o e e e dgo e o d e o ona y a n o n e o e faa d e aon o eaa r o e oro e \no n a orb e n d e en d atn d a o e doo r oaa n e o n n e e n a e o e a n o n e o ebs s b fra d aaoeo \ne ebe o a oe arn odn o e a a e m o n e m a e d e a o e a a a e nroeo e d n o e b d o e o n e o e a o \na e e droa e e d e ase n l t m e s t s a f yr m e t e a f fea d aeaaa n neo rya m a e dsa n o n a o a \ne nm o e oen o e o e n e o e dro ero eroaa n e o n ntn o e b d o e o n e o ege a n d a een o e ha a e \nm o n e m a e d n o o o o n a oan d e a e o e e ddo e o n d a e oaa n e o n n n o e b d o e o hn e o \ne ftt e a o n n d a r e o o a b o e mmn o e a a e m o n e m a e drm a e e b a a n d o nso e e n d abe \na o n d oae agoaa n e o n n n o e b d o e o n e o e a vra o n e a r don d ato a a e e a oa o r a n dro \ne o o a e n d f a d o a n b a oeo dgr o e a a e dre a o o e n n d o neoaa o r a n d o e o o a e n dgoeo \ndaaem e o e o n a obme al a e a e m ltdao n n o ede a m a eeo e a a orm e o e o n e o e f veo ear e \no o a b o e m n o eaa m e a b a o o a o e h n d a hd o o o a e h n d a n m e e d b r o e m a e e r d \ne e dha o r a n dbo e o o a e n e a a o r o e o d e o o a fevee h n d a hdo o o a e n d a n m e e dao \no a a e o n e a o o e e a oen o e a n e o n n e o e o r oed e oao ea n o n asd e o o dro a odo e a e \na o o e a e n asr o e o e o o a e n dbm a e e b n o n e o e fbs e o e o a e n ord o e o e a o d e o \no e nen e a o n e o eso e oee a r a e a e n a a n oroa a n n a nb a o a arb e a n h o e o a e e o d e \nn o e a n e o n n o e a a n oae a o e a a a e non o e b d o e o hn e o e aro r n d aeo e o d e o ogfdtll \nt e t a t l r e s ahar a a m e t e a fgo e d o e e n d o          \n\t\t\t", "proc_id": "360204", "abstract": "We provide a parametric framework for verifying safety properties of concurrent Java programs. The framework combines thread-scheduling information with information about the shape of the heap. This leads to error-detection algorithms that are more precise than existing techniques. The framework also provides the most precise shape-analysis algorithm for concurrent programs. In contrast to existing verification techniques, we do not put a bound on the number of allocated objects. The framework even produces interesting results when analyzing Java programs with an unbounded number of threads. The framework is applied to successfully verify the following properties of a concurrent program: &amp;bull;Concurrent manipulation of linked-list based ADT preserves the ADT datatype invariant [19]. &amp;bull;The program does not perform inconsistent updates due to interference. &amp;bull;The program does not reach a deadlock. &amp;bull;The program does not produce run-time errors due to illegal thread interactions. We also find bugs in erroneous versions of such implementations. A prototype of our framework has been implemented.", "authors": [{"name": "Eran Yahav", "author_profile_id": "81100285431", "affiliation": "School of Computer Science, Tel-Aviv University, Tel-Aviv", "person_id": "PP35027073", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/360204.360206", "year": "2001", "article_id": "360206", "conference": "POPL", "title": "Verifying safety properties of concurrent Java programs using 3-valued logic", "url": "http://dl.acm.org/citation.cfm?id=360206"}