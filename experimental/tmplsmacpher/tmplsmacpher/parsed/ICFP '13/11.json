{"article_publication_date": "09-25-2013", "fulltext": "\n Functional Geometry and the Trait \u00b4e de Lutherie [Functional Pearl] Harry Mairson Brandeis University \nmairson@brandeis.edu Abstract We describe a functional programming approach to the design of outlines \nof eighteenth-century string instruments. The approach is based on the research described in Franc\u00b8ois \nDenis s book, Trait\u00b4e de lutherie. The programming vernacular for Denis s instructions, which we call \nfunctional geometry, is meant to reiterate the histor\u00adically justi.ed language and techniques of this \nmusical instrument design. The programming metaphor is entirely Euclidean, involv\u00ading straightedge and \ncompass constructions, with few (if any) num\u00adbers, and no Cartesian equations or grid. As such, it is \nalso an inter\u00adesting approach to teaching programming and mathematics without numerical calculation or \nequational reasoning. The advantage of this language-based, functional approach to lutherie is founded \nin the abstract characterization of common pat\u00adterns in instrument design. These patterns include not \nonly the ab\u00adstraction of common straightedge and compass constructions, but of higher-order conceptualization \nof the instrument design process. We also discuss the role of arithmetic, geometric, harmonic, and subharmonic \nproportions, and the use of their rational approxi\u00admants. Categories and Subject Descriptors D.3.3 [Programming \nLan\u00adguages]: Language Constructs and Features Control structures General Terms Languages Keywords Euclidean \ngeometry, ruler and compass constructions, vesica piscis, proportion and measurement, Pythagorean approxi\u00admation, \nchisels, hand planes, animal glue, maple, spruce, ebony, varnish. 1. Introduction Programming languages \ndon t exist simply to tell machines what to do. Well recognized as the engineering vernacular of software, \nthey are more importantly the collective mother tongue of algorithmic ideas. This point of view is a \nvirtual credo among computer scientists. That credo has only recently been reiterated in public emphases \non computational thinking as a way of understanding complex, constructional processes. In other words, \nprogramming languages Permission to make digital or hard copies of all or part of this work for personal \nor classroom use is granted without fee provided that copies are not made or distributed for pro.t or \ncommercial advantage and that copies bear this notice and the full citation on the .rst page. Copyrights \nfor components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. \nTo copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior speci.c \npermission and/or a fee. Request permissions from permissions@acm.org. ICFP 13, September 25 27, 2013, \nBoston, MA, USA. Copyright c &#38;#169; 2013 ACM 978-1-4503-2326-0/13/09. . . $15.00. http://dx.doi.org/10.1145/2500365.2500617 \n provide a way for us to describe to each other what we know how to do. We immediately assume, quite \nnaturally, that modern technolo\u00adgies are the ones where this computational thinking is most appro\u00adpriate \nand relevant. But people have been building things for a long time. In what way can computational thinking \nbe an intellectual or\u00adganizing principle for understanding and describing the past, and making sense \nof the kinds of expertise that .ourished and came to maturity? To that end, we ve designed a programming \nlanguage ( lan\u00adguage may be overblown in any case, a set of graphics primi\u00adtives, and more signi.cant, \na programming idiom) for realizing out\u00adlines of string instruments. The goal of this approach is to mimic \naccurately the accepted historical traditions for this design, while automating and facilitating the \ndesign and the construction process. 1.1 Historical background Modern luthiers (string instrument makers) \ninherit a tradition em\u00adbodied in the famous instruments of even more famous histori\u00adcal colleagues: renowned \nmakers include, among others, Andrea Amati recognized as the father of the violin and distinguished members \nof his family, Andrea Guarneri and his family (especially son Giuseppe, and Giuseppe del Ges `u ), Matteo \nGofriller, Do\u00adminico Montagnana, and the ubiquitous primus inter pares, Anto\u00adnio Stradivari. It is typical \nfor modern makers to copy and mod\u00adify the canonical designs of these makers. But where did their de\u00adsigns \ncome from? Surely not from an in.nite chain of copyists a non-well founded induction that violates the \nwell-ordering princi\u00adple. What are the underlying geometric, computational ideas from which these designs \noriginate? It is misleading to think that these instruments evolved simply from an amorphous, creative, \nartistic sense. The crude design of string instruments is a fairly inevitable consequence of ergonomics: \na resonating box, with rounded corners to avoid bumping and blocking, and a concave middle waist to allow \nbow access to the strings. But the further re.nement of this basic form came from an interaction both \nmusicians and their performance needs, and with the scienti.c perspective that was emerging simultaneously. \nChanging peformance requirements (for example, the evolution of the violoncello from a continuo to a \nvirtuoso, solo instrument) caused changes in design. In addition, these string instruments took form \nduring an age of scienti.c revolution the era of Copernicus, Kepler, Galileo, Newton where the experimental \nmindset, with its associated scienti.c insights, likely had an impact on instrument designers and makers \n(Schleske 2004). In 2006, a French luthier named Franc\u00b8ois Denis published Trait\u00b4e de lutherie (Denis \n2006), a comprehensive and seminal treatise which attempted to lay out the manner in which string instrument \noutlines were constructed. There are few, if any, written works on construction technique written at \nthe time these instruments emerged on the historical, musical scene: Denis contribution was a historically \ninspired and a priori reconstruction of what some of those techniques likely were. The most striking \nthing about De\u00adnis s book is that the construction methods are entirely Euclidean, when we are used to \nthinking in a Cartesian way about most ev\u00aderything. The designs are realized without graph paper, without \nVernier calipers, protractors, or just about anything having to do with measurement.1 Instead, virtually \neverything is done with an (unmarked) ruler, and a compass, save one .xed dimension. That dimension determines, \nvia entirely proportional constructions, all the other ones. It s worth saying, without reverting to \na commutative diagram, that a great majority of our reasoning about a great deal of subjects is Cartesian. \nWe typically learn Euclidean geometry to introduce the notion of proof, but by the time we want to calculate \nanything, we ve usually moved on to Cartesian, analytic geometry. In other words, a circle isn t a curve: \nit s an equation. And the same goes for physics, for economics. Even philosophy think of the word problems \nsolved by translation into propositional logic the ut\u00adterly Cartesian construction of analytic philosophy, \nwhich gave rise as well to computer science. The big Cartesian idea is this: to solve your problem, turn \nit into equations. Then solve your equations instead (whence the com\u00admutative diagram?), and when you \nre done, translate your solution back to your problem domain. Instead, the Euclidean solution and that \nof Denis for instrument design is this: it s a geometric problem. So you solve it in the geometric world \nwith geometric constructs. It deserves mentioning that all string instruments are not alike. Of course, \nthere are tonal variations, as a consequence of wood quality, workmanship, and aspects of design. But \nit should be em\u00adphasized that every maker had a signature not the label inside the instrument as much \nas the shape of scrolls, pegboxes, necks, cor\u00adners, pur.ing, ff-holes and instrument outline. Professional \nap\u00adpraisers can identify the makers of famous instruments by these virtual .ngerprints, just as program \ncommittees of programming language conferences could identify the authors of conference sub\u00admissions \neven under double-blind conditions. Almost everything we know about how to do this still con\u00adsidered \nas a re.ned, even mysterious, knowledge was understood virtually a half-millenium ago.2 But how, and \nin what way?  1.2 Some comments on Denis s Trait\u00b4e Learning how to carry out Denis s constructions with \npencil and pa\u00adper leads to two immediate conclusions. One is that the descriptions of the constructions \nare, in effect, a kind of do-this-then-do-that informal straight-line code. They would bene.t by a restatement \nas a functional program, where notions of hierarchy and abstrac\u00adtion have the potential to make greater \nsense out of many details. A well-structured description can illuminate the big picture of the forest, \nand the detail of the trees, with no loss of implementation focus at either end. 1 This should be contrasted \nwith the exegesis in Edward Heron-Allen s famous Violin Making, as it was and is (Heron-Allen 1885), \nwhich was for many years virtually the only go-to book on instrument making, where the design methods \nare founded on a rectilinearly-based treatise of Antonio Bagatella, Regole per la costruzione de violini, \nviole, violoncelli e violoni (Bagatella 1782). 2 Simone Sacconi titled his famous monograph The Secrets \nof Stradivari to emphasize that there were no secrets, but rather re.ned technique (Sac\u00ad coni 1979). \nBut the cause and effect re.ected in that technique is not really analytically understood instead, luthiers \nwork within a highly functional and successful envelope and venture out, experimentally, in search of \nfur\u00adther optimization. A second conclusion is that the learning process itself is facil\u00aditated by such \na development. Not only does this process require the understanding of the big picture and the little \ndetails, the in\u00adevitable errors encountered in learning how to do this can be made faster, and can be \nrecovered from faster and easier. A mechani\u00adcal graphics engine attached to this functional description \nensures accuracy, rectilinearity, without the accumulated error of physical drafting methods (though \nsimilar issues of numerical analysis may arise and need careful treatment).3 That speed and accuracy \nis of no small consequence if the analytic methods are to be used also as an experimental, investigative \nmechanism. Brie.y, a programming characterization of these outlines would serve the following additional \ngoals. First, we can focus on the pu\u00adtative design process (program) itself, in an appropriate vernacu\u00adlar, \nrather than its output. Second, designs of famous instruments could be made public, where they could \nbe downloaded and mod\u00adi.ed by modern makers. (Their modi.cations, of proprietary inter\u00adest, would most \nlikely not be public.) Third, the ease of producing instrument outlines could be a construction prosthetic, \naiding the building of molds, around which rib assemblies are constructed. Finally and most interestingly, \nthese programs might be the foun\u00addation of a kind of computational art history, where evolution of instruments \ncould be studied more carefully by the more informed evolution of designs. If nothing else, a result \nwould be an effec\u00adtively automated version of Denis s book. We are no longer building catapults or pillars \nor even .lm cam\u00aderas. But we are still making violins a Renaissance technology that was worked out a \nhalf-millenium ago. Making them is surely an art, but in every artistic practice, there is method. Scrolls \nand archings and outlines and all the details of lutherie are not simply a consequence of artistic temperament. \nThere is a method for every\u00adthing. The point of this undertaking is to make some of that method explicit \nin a contemporary vernacular, while showing the great\u00adest respect for the underlying method itself. In \nother words, don t change the method as much as .nd a better way of describing it. In preserving this \nEuclidean perspective, the goal is to take all of the Cartesian, equational calculation inevitable in \nprogramming and push it all to the effectively invisible back end, so that the inter\u00adface used is just \nthe Euclidean part. Building a WYSIWYG graph\u00adics engine is a canonical entry point to learning about \ngraphics pro\u00adgramming, but our real interest here is as much the language as the output. All of a sudden, \nthe seemingly static things you learned in high-school geometry become a dynamic programming language. \nA virtue of the language is its record of the construction the opaqueness of WYSIWYG, resolved by a markup \nlanguage, is that the latter allows you to see what you did to get what you got. The challenge is to \n.nd appropriate abstraction primitives. Re\u00adcursion is noticably absent it doesn t seem particularly relevant. \nBut that doesn t mean that programming is pointless. Recall the principle underlined in (Abelson and \nSussman 1996) that to under\u00ad stand a programming language is to identify its primitive opera\u00adtions, means \nof combination, and means of abstraction. They are all apparent here. 2. Geometric prelude: point, line, \ncircle, and the pentagon Rather than describe all the bits and pieces of our primitive graphics language, \nwhich is just some fairly straightforward graphics prim\u00ad 3 Most of all I would like to advise the maker \nthat the greatest care be taken in using the compass to adapt and calculate the measurements because \nthe slightest movement of the position of the hand is capable of causing an error. (Antonio Bagatella, \nRegole per la costruzione dei violini-viole, violoncelli e violoni, Padova, 1782.)  Figure 1. Constructing \na pentagon itives on top of Scheme4, we ll just get on with it. Our demonstra\u00ad tion toy problem is how \nto draw a pentagon with a straightedge and compass. (define (pentagon a s) (let ((b (label \"b\" (xshift \na s)))) (let ((c (label \"c\" (intersect (apply line (intersect (circle a s) (circle b s))) (line a b))))) \n(let ((d (label \"d\" (top (intersect (vertical c) (circle c s)))))) (let ((f (label \"f\" (top (intersect \n(line b d) (circle d (distance a c))))))) (let ((g (label \"g\" (top (intersect (vertical c) (circle b \n(distance b f))))))) (let ((p (left (intersect (circle g s) (circle a s)))) (q (right (intersect (circle \ng s) (circle b s))))) (list (label \"a\" a) b c d f g p q (makeseg b f) (circle a s) (circle c s) (circle \nd (distance d f)) (circle b (distance b f)) (segments (list g p a b q g)) )))))))) Some brief comments \non the construction: (pentagon a s) Pentagon at point a with base length s. (xshift p d) Point p shifted \nd in the x-direction. (line a b) Line through points a, b. (horizontal p), (vertical p) Horizontal, vertical \nlines through point p. (circle p r) Circle with center at p and radius r. (intersect o1 o2) Intersection \nof circles, lines, with possible multiple solutions.5 4 This situation is deliberately meant to evoke \nmemory of Peter Henderson s functional geometry from the 1980s (Abelson and Sussman 1996; Hender\u00ad son \n2002). 5 To underline the Cartesian and its departure from the Euclidean: re.ect on the intersection \nof two circles, both with equations having x2 and y2 terms (top S), (bottom S), (left S), (right S) \nChoosing among multiple solutions to an intersection. (north C), (south C), etc. Quadrants of a circle. \n(label e p) Mark point p on the plane with the label e, returning value p. The overall idea is to specify, \nthen draw. Recall that given a unit length, with a straightedge and compass, the constructable point\u00adto-point \ndistances are those points closed over the unit length and +, -, \u00d7, \u00f7, v i.e., over radicals .6 (As a \nconsequence, a straightedge and compass serve as a primitive analog computer.) A pentagon is constructible \nbecause with a unit edge, its diameter v (distance b-f in Figure 1) is the golden mean f = 1 2 (1 + \n5). With this example in mind, there s an overwhelming temptation to start programming up every geometric \nconstruction you can .nd and there are lots of them, of considerable subtlety (Sutton 2009). We mention, \nfor example, Malfatti s problem (Martin 1998): given a triangle, inscribe three circles that are tangent \nto each other and to the sides of the circle. This problem wasn t solved until the late nineteenth century \n(see Steiner s synthetic, geometric construction (Steiner)), though draftsman may well have known the \nsolution long before (Denis, personal communication). 3. Musical prelude: the lute of Arnault of Zwolle \nRoughly comparable in detail of the pentagon is the lute design of Henri Arnault of Zwolle, from a manuscript \ndating from 1440 (Harwood 1960; Zwolle 1440). Arnault was a cleric in the court of French king Louis \nIX, a polymath prototype of Leonardo da Vinci, only who designed musical instruments instead of instruments \nof war. His manuscript of 1440 describes the construction of a lute. This lute is the toy problem of \nstring instrument metrology: what goes for the lute, goes for the violin and violoncello, only more so. \n(define (lute rad) (let ((c (circle origin rad)) (d (* 2 rad))) (let ((p (label \"p\" (west c))) (q (label \n\"q\" (north c))) (qprime (label \"q \" (south c)))) (let ((r (label \"r\" (left (intersect (circle (mirror \np) d) (line (mirror p) q)))))) (let ((s (label \"s\" (yshift q (distance q r))))) (let ((rose (circle (point \n0 (/ rad 2)) (* (/ 3 10) rad)))) (list (map (lambda (t) (list (label \"\" (pointfrom origin q t)) (label \n\"\" (pointfrom origin (transpose q) t)))) (list 0 .2 .4 .6 .8 1.0)) (circle origin rad) (circle q (distance \nq r)) ;draw the rose: (makearc (center rose) (north rose) (west rose)) (makearc (center rose) (west rose) \n(south rose)) (makearc origin p qprime) (makearc (mirror p) p r) (makearc q r s)))))))) Note that (mirror \np) produces a point re.ected around the y\u00adaxis, so arc drawing is only (explicitly) on the left-hand \nside of the with coef.cient 1. When you subtract one equation from the other, you re left with a linear \nterm of what? The line that is the bisector of the vesica piscis, the .sh bladder marking their intersection \nsee, e.g. (Wikipedia). 6 See (Stewart 1973), pp. 57-67.  Figure 2. Lute by Arnault of Zwolle (from a \nmanuscript from 1440), with an approximate soundhole placement plane, and mirrored on the right. It s \nan obvious symmetry that we should take advantage of. 4. Rational approximations We can make a virtually \nindistinguishable pentagon by dispensing with the compass almost entirely (or at least, use a rusty compass \nthat cannot change dimension), as long as we can draw perpindicu\u00adlar lines. Then, common carpenter s \ntricks let us code the pentagon y 14 with rational, Pythagorean approximants. We use 9 to approxi\u00ad mate \nthe height f2 - 1 , 3 for the additional width (beyond the 4 10 y f-1 2 base) f-1 , and 20 for the height \n1 -of the leftmost and 2 21 2 rightmost corners: (define (approximate-pentagon a s) (let ((b (label \"b\" \n(xshift a s)))) (let ((t (yshift (midpoint a b) (* s (/ 14 9))))) (let ((d (yshift (xshift b (* s (/ \n3 10))) (* s (/ 20 21)))) (c (yshift (xshift a (* s (/ -3 10))) (* s (/ 20 21))))) (segments (list a \nb d t c a)))))) What works for pentagons works, by extension, for Arnault s lute construction, and describes \nin greater detail the underlying ge\u00adometric symmetries of its design. Figure 4 shows a re.ned analysis \nof Arnault s lute construction, which is (as Denis points out) not so much the de.nition of a real lute \nas much as it is a prototype, an examplar, of a generic recipe for synthesizing lute designs. This construction \nmethod makes the length of the instrument a critical dimension for tuning and structural stability a \nconse\u00adquence of the design process, rather than a parameter of it. To de\u00adsign the instrument ab initio \nfrom its length, we need to think a bit  Figure 3. Harmonic, subharmonic, and geometric sections more \ncarefully about the geometry of the underlying construction, in particular its use of harmonic and subharmonic \nsections. Notice that the length of the lute is 3m + 2s, where m and s are the radii of circles derived \nfrom carefully constructed geometric sections. The geometric constructions of these sections are shown \nin Figures 3 and 4. The highlighted box to the left of the vertical axis of the lute contains a harmonic \nsection, and that to the right, a subharmonic section. Notice the geometric demonstration that the larger \npart of a harmonic section equals the smaller part of a subharmonic section that is twice as big. Now \nconsider the rational approximation of the subharmonic section. Let s + m = 1 where s and m are an approximation \nof this ' ' section: then a better approximation is s= m and m= s + 2m. s s1 Solving m = m. gives s \n= 1 - v 2 , the smaller part of the section. Beginning with s = m = 1, we get the series of approximants \n13 7 , , ; luthiers would use initial terms from this series (and those 3 7 17 like it) as approximations \nof its limit. Such constants are mentioned in Arnault s manuscript.7 (define (approximate-lute s m L) \n(let ((N (+ (* 2 s) (* 3 m)))) (let ((r (* L (/ (+ m s) N)))) (let ((q (label \"q\" (yshift origin (minus \nr))))) (let ((p (label \"p\" (yshift q L)))) (let ((cmain (circle (yshift q r) r))) (let ((ctop (circle \n(north cmain) (distance (north cmain) p))) (cright (circle (east cmain) (* r 2)))) (list (apply makeseg \n; bridge (intersect cmain (horizontal (yshift q (* L (/ s N)))))) ; sound hole (let ((s (yshift p (* \n(minus L) (/ (+ s (* 3 m)) (* 2 N)))))) (let ((rs (/ (distance s (left (intersect (horizontal s) cright))) \n3))) (let ((sh (circle s rs))) (list sh (make-curve q p (list cmain cright ctop)) )))))))))))) (Note \nthat make-curve above speci.es a curve from q to p, following the arcs given by circles cmain, cright, \nand ctop.) We redraw the lute using this revised code, above, with param\u00adeters s = 3 and m = 4 note 3/7 \n= .4285 . . . is a respectable v approximation of 2 - 1 = .4142 . . .. The length of the lute is now \ndivided into 3m + 2s = 18 parts, and Arnault s written direc\u00ad 7 Recurrences, familiar to students of \ndiscrete mathematics, provide the x+1 foundation of these proportional sections. Recall f(x) = as de.ning \nx 1 x+2 the geometric section (with initial value x0 = ), g(x) = as de.ning 1 x+1 the harmonic section \n(also with initial value x0), etc.  Figure 4. Geometry of Arnault s lute. The subharmonic section is \nhighlighted on the right, the harmonic section on the left. tions that the bridge placement is one-sixth \nof the instrument length makes rational sense. v Even without this rational approximation, note with \ns = 2-1 v v and m = 2 - 2, we have s = 1 (3 2 - 2) 0.1602, 2m+3s 14 realizing Arnault s one-sixth measurement. \nFurther, the location and size of the soundhole is rationalized through the following argument, a rather \nstriking prestidigitation (see Denis, p. 54 ff.). Its location is said in the manuscript to be halfway \nfrom the bridge to the top of the instrument. The length of 3m + 2s can be rearranged as S = m + s and \nM = 2m + s. v s 2-1 Given the ratio = v from the harmonic section, we have m 2- 2 M-S S S .5858 and \nM .6306, while the ratio of the geometric section is 2-f = f - 1 .6180, right between the two. f-1 \nAs a consequence, we can consider the length of the instru\u00adment, to suf.cient accuracy, as a geometric \nsequence of over\u00adall length s ' + m ', where the ratio s ' /m ' can be approximated by Fibonacci numbers \nof moderate size. Take s ' = 5, m ' = 8 (m ' /s ' = 1.625 f). If the bridge is distance s from the bot\u00adtom \nof the instrument, then the center of the soundhole is distance 1 2 (3m +s) from the top of the lute. \nAn exact calculation, following Arnault s speci.cation that the soundhole diameter be one-third of v \nthe width, gives a diameter of ( 15-2)/3 .6243. Using the ap\u00ad '' ' proximate geometric section (m , \ns ) above gives s /m ' = .625. The point of this rational reconstruction is that layout with carefully \nchosen approximations comes remarkably close to the analytic cal\u00adculations. 5. Anatomy of an outline: \nthe Amati violin. Geometric problems and their solutions. With the preamble of the Arnault lute in mind, \nwe can go on to look at the .rst outline of a violin in the book by Denis: a canonical violin by Andrea \nAmati. The outline has four essential parts: the framework, which blocks out the regions, and the upper, \nlower, and middle bouts. A key feature of the outline is that it is parameterized by only one .xed dimension: \nthe distance XQ from the top of the outline to the top of the lower bout. All the other dimensions are \nproportional. The code appears in the Appendix. It needs emphasis that the code is almost a verbatim \ntranslation of Denis s construction description. The do-this-then-do-that of straight line code is not \nvery in\u00adteresting. But a signi.cant number of low-level details can be abstracted. The curves of all \nthe outlines are made by follow\u00ading sequentially a series of arcs de.ned by circles, with end\u00adpoints, \nvia (make-curve p q (list C1 C2 \u00b7 \u00b7 \u00b7 Ck)). There are distances that are partitioned by a series of straightedge \nand compass sections constructing, for example, a geometric section (geometric-section p q). Then there \nare more interesting constructions associated with curious geometric puzzles. For example, given two \ncircles C1 and C2 on the plane, and a radius r, .nd the circle C of radius r that is tangent to both \nC1 and C2. An example of this construction is in the lower bouts of the Amati violin, where the curve \nis made up of three principal arcs: the middle one is from a circle tangent to others as described here. \nSolving the equations is a middle-school headache, but the geometric construction is fun. Similarly, \nthere is a geometric problem in computing reverse curves at the corners of the upper and lower bouts. \nGiven a large circle C that de.nes the curve at the upper bout, a radius r, and a point p, where is the \ncircle of radius r located that is tangent to the outer side of C, and also tangent to p? Luthiers solved \nthese kinds of problems by construction and without math. With appropriate software, we do the same thing. \n (define (reverse-curve inner-circle outer pt) (let ((outer-radius (-outer (radius inner-circle)))) (let \n((pts (intersect (circle pt (abs outer-radius)) (circle (center inner-circle) (+ outer-radius (radius \ninner-circle)))))) (map (lambda (p) (circle p (abs outer-radius))) pts)))) (define (inscribe c1 c2 r) \n; circles tangent to insides of c1, c2 of radius r (let ((c1p (circle (center c1) (-(radius c1) r))) \n(c2p (circle (center c2) (-(radius c2) r)))) (map (lambda (pt) (circle pt r)) (intersect c1p c2p)))) \nAnother example comes from the design of a Montagnana vi\u00adoloncello, where a signature characteristic \nof that maker is found: the principal curve of the upper bout and the reverse curve are not tangent, \nor mediated by another curve, but instead connected by a straight line. This construction is easy enough \nby eye, but what is the exact construction? Again, these straightedge and compass con\u00adstructions have \ndetail, but we can abstract away from them with no loss of detail. (define (tangent small big) ; finds \nthe two lines tangent to (nonintersecting) small, ; big, where the lines are intersecting between them \n (let ((d (line (center small) (center big)))) (let ((p1 (perpendicular d (center small))) (p2 (perpendicular \nd (center big)))) (let ((a (top (intersect small p1))) (b (bottom (intersect big p2)))) (let ((i (intersect \nd (line a b)))) (let ((j (midpoint i (center big)))) (let ((pts (intersect big (circle j (distance i \nj))))) (map (lambda (pt) (line i pt)) pts)))))))) 6. Abstraction of construction, and of design. Towards \na computational art history. One of the most important tasks which the new science of art could set for \nitself would be a through analysis of the history of art; to determine the elements, construction and \ncomposition in various periods. . . [the analysis] borders on the problems of the positive sciences, \nthe second part... touches the problems of philosophy. Wassily Kandinsky, Point and Line to Plane (Kandinsky \n1926)8 8 It s worth noting that this book was written in 1928, clearly affected by the logical positivists \nof the Vienna circle and the analytic philosophy movement before it (see, for example, (Galison 1990) \nfor the working out of this striking but somewhat obvious connection). Analytic philosophy is Figure \n5. Detail of Montagnana violoncello, giving upper bout construction using a tangent line between two \ncircles The code for the Amati violin describes various computational dependencies. Changing some of \nthe integer ratios in the code changes the design, while maintaining the coherence of the form. At some \npoint, the implied constraints may become unsatis.able (say, a line that must be to the left and to the \nright of some critical point, causing an intersection that no longer has a solution), and then the implementation \ncannot draw the outline. For the most part, this breakdown should be regarded as a feature, not a bug \nit s an error message in itself. That the instrument is de.ned as a set of proportional relations, as \nopposed to curves that must be set to some .xed set of points, lends a certain plasticity to the speci.cation \nthat probably facilitates the satisfaction of these constraints. A bit more subtle than strictly computational \nconstraints are design constraints. These don t come from the mechanics of layout, but from dimensions \nthat must be satis.ed in a .nal product. For example, the body stop of a violincello, measured from the \ntop of the front plate abutting the neck, to the inner nick at the middle of the ff-hole, is typically \n400mm. Few modern instruments diverge widely from that dimension, while some old instruments do. It s \nnot clear to me in what way these kinds of constraints should be built into the automated design process. \nA clear advantage of this automated drafting is that we can make hypotheses and check them out faster, \nmake mistakes and recover from them faster, than what might be possible with pencil and paper. One question \nI am looking at is Denis s thesis that Stradivari marks a turning point where the proportional approach \nis no longer fully explanatory, and that use of metric measurement is necessary. In order to test this \nassertion, I ve been trying to reverse engineer the outline of the 1707 Countess of Stanlein Stradivarius \nvioloncello (see (Reuning 2012)), in order to determine whether it could have an effectively proportional \ndescription. I ve got a .rst cut at this outline done, and I expect to give more details on this in the \nfull paper. Abstraction mechanisms give a higher-order representation to the low-level business of straightedge \nand compass construction. We ve given some examples of this abstraction at the more me\u00adchanical level, \nbut I would like to be able to raise this abstraction to a more conceptual level, if we could characterize \nthe kind of computing with shapes that is inherent in instrument design. The also a signi.cant intellectual \nprecursor of the development of programming languages.   Arnault lute gives some hints in this direction, \nas its outline is a consequence of quadrature, rotation, proportion, and approxima\u00adtion. Bluntly put, \nif a martini is six parts gin to one part vermouth, what is a Gofriller violoncello? By a familiar analogy: \nwe re used to programming language constructions (say, continuation-passing style) as a basic form, with \nparticular variants (G \u00a8 odel, Kuroda, Kol\u00admogorov, etc.) derivative from double-negation embeddings; \nwhy can t instrument forms be computational variants on a basic theme? What s needed is a kind of grammar \nof relevant shape and how to compute with it. The thematic homilies of Kandinsky (Kandinsky 1926) given \nmuch greater detail in a recent book by George Stiny (Stiny 2008), provide some suggestions of how this \nwork could evolve. In particular, Stiny describes grammars for the evolution of shapes how I stopped \ncounting, he says, and started to see. Good artists know how to see. In this particular example, can \ntheir insight, and how it changed, be characterized formally? 7. Historical evidence and the a priori \nHow did luthiers draw outlines? Like many historical and scienti.c questions, this one has empirical \nanswers, and a priori answers. We can look for evidence, as well as analyze from .rst princi\u00adples. In \nhis 2010 book on Stradivari, Stewart Pollens writes that he does not appear to have employed a rigid \nsystem of geometry and proportion in designing his violins and takes a questionable view of such explanations \nsince (and including) the 1782 manuscript of Bagatella (Pollens 2010). The solution of Denis is, on the \ncontrary, heavily a priori, with evidence supplied by the 15th-century Ar\u00adnault manuscript, but not by \nhistorical evidence from 18th-century luthiers. To think that each generation of luthiers has simply \ncopied what came before, perhaps with small modi.cations, strikes me as the historical equivalent of \na non well-founded induction. There has to be a base case. Amati is generally regarded as the .rst mover \nin the design of string instruments, as we know them. The solution of De\u00adnis is from .rst principles, \neffectively contemporaneous with Am\u00adati, but also in the spirit of ideas of proportion and symmetry that \ndate from the era of Vitruvius9, and went on to animate the work of architects, artists, furniture makers, \nand as Denis persuasively argues instrument makers. Nonetheless, it is natural to seek the assurance \nof empirical con.rmation as well. (Such a dissent from Pollens s critique is expressed by Andrew Dipper, \nthe translator of an 18th c. luthier s construction notebook (Dipper 2013), and a cat\u00ad aloguer of items \nfrom the Museo Stradivariano in Cremona.) The situation is analogous to an irreverent remark about the \ndif\u00adference between geology and geophysics: geology is the observa\u00adtion of physical phenomena that can \nt be explained, but geophysics is the explanation of physical phenomena that can t be observed. 8. Conclusions \nand perspective A natural and obvious criticism of what I ve described here is this: it just using a \ncomputer to draw pretty pictures. The pictures are beautiful and of historical and cultural interest, \nbut the programs are not. In response to this point of view, I think that the way we repre\u00adsent what \nwe know is important, and a program clari.es meaning, more than any natural language directions. Moreover, \nthere are in\u00adevitably levels of such informal description, from detailed ( do this, then do that ) to \nhigh-level (literally, big picture ), and higher\u00adorder procedures, well-written, can explain both with \nno loss of accuracy. There may be better ways of drawing things (for example, with splines), but that \ndoesn t interest me here. What matters is the representation of knowledge that was already known. If \nresearch is, 9 See (Gordon Smith 2003), especially Book III. literally, the re-searching for things \nthat were already found, then a good justi.cation for it is that in rediscovery, we say it better, or \nin ways that are more compelling to us. It is a natural progression not only in our understanding of \nthis particular subject, but, more generally, how we represent what we know. Acknowledgements: In the \npast half-dozen years, I ve become very interested in building string instruments, and in particular, \nvi\u00adolincellos. I am grateful to Olin Shivers, whose enthusiasm for this project has been a big motivation \nto me. Franc\u00b8ois Denis has been generous with his time and his advice. Curtis Bryant, a Boston luthier \nand restorer, has given me a great amount of guidance over several years. Marilyn Wallin taught me a \nlot about instru\u00adment making, varnishing, and setup. George Stiny has been a very helpful guide to relevant \nliterature relating theories of proportion and classical architecture. Thanks also to an inspired reviewer \nwho made many helpful comments. The mistakes I ve made and mis\u00adunderstandings I ve had in construction, \ndesign, or explanation, are my responsibility and not theirs. Finally, David Van Horn, the POPL workshops \nco-chair, persuaded me to make a submission to the OBT ( Off the beaten track New directions in programming \nlanguage research ) workshop; the encouragement I received from him and from workshop participants have \nmotivated this paper. References Harold Abelson and Gerald J. Sussman. Structure and Interpretation of \nComputer Programs. MIT Press, Cambridge, Massachusetts, USA, 1996. Antonio Bagatella. Regole per la costruzione \nde violini viole violoncelli e violoni. Turris, Cremona, 1782. Franc\u00b8 ois Denis. Trait \u00b4 e de lutherie: \nThe violin and the art of measurement. ALADFI: Association des Luthiers et Archetiers pour le D\u00b4eveloppement \nde la Facture Instrumentale, Nice, France, 2006. Andrew Dipper. Librem Segreti de Buttegha: The violin \nand its fabrication, a book of workshop secrets . Dipper Publications, 2013. Peter Galison. Aufbau/Bauhaus: \nLogical positivism and architectural mod\u00adernism. Critical Inquiry, 16(4):709 752, 1990. Thomas Gordon \nSmith. Vitruvius on Architecture. Monacelli Press, 2003. Ian Harwood. A .fteenth-century lute design. \nLute Society Journal, 2, 1960. Peter Henderson. Functional geometry. Higher Order Symbol. Comput., 15(4):349 \n365, December 2002. ISSN 1388-3690. . URL http: //dx.doi.org/10.1023/A:1022986521797. Edward Heron-Allen. \nThe Violin, as it was and is. Ward-Lock, 1885. Wassily Kandinsky. Point and Line to Plane. Dover, New \nYork, 1926. George Martin. Geometric Constructions. Springer, 1998. Stewart Pollens. Stradivari. Cambridge \nUniversity Press, 2010. Christopher Reuning. The Paganini, Countess of Stanlein Stradivari Violoncello \nof 1707. 2012. Simone Sacconi. The Secrets of Stradivari. Eric Blot (Cremona), 1979. Martin Schleske. \nZeitgeist and violinmaking: Milestones of art and science, a brief journey through time. 2004. Jakob \nSteiner. Synthetic solution to a problem of Malfatti. URL http: //en.wikipedia.org/wiki/Malfatti_circles. \nIan Stewart. Galois Theory. Chapman and Hall, 1973. George Stiny. Shape: Talking about Seeing and Doing. \nMIT Press, 2008. Andrew Sutton. Ruler and Compass: practical geometric constructions. Wooden Books, 2009. \nWikipedia. Vesica Piscis. URL http://en.wikipedia.org/wiki/ Vesica_piscis. Henri Arnault of Zwolle. Treatise. \nBiblioth` eque Nationale, Paris, ms Lat. 7295, 1440. Appendix: Violin by Andrea Amati (define Amati \n(let ((xq 400)) ;; should be 208mm in the Amati---this is just a screen fit... ; LAYOUT OF THE AREA on \nwhich the curves are drawn... (let ((X (label \"X\" (point 0 000)))) ; this could be anywhere---just to \ncenter it on the output screen (let ((A (label \"A\" (xshift X (-(/ xq 2))))) (Q (label \"Q\" (yshift X xq)))) \n(let ((N (label \"N\" (pointfrom X Q (/ 1 4))))) (let ((q (label \"q\" (xshift (intersect (horizontal Q) \n(vertical A)) (/ (distance X N) 2)))) (vv (xshift A (/ (distance X N) 8))) (O (label \"O\" (yshift Q (-(* \n(distance X N) (/ 5 4)))))) (Z (label \"Z\" (yshift N (* (distance X N) (/ 2 3))))) (P (label \"P\" (yshift \nX (-(* (distance X N) (/ 8 3))))))) (let ((p (label \"p\" (intersect (horizontal P) (vertical vv)))) (M \n(label \"M\" (pointfrom X P (/ 1 2)))) (a (label \"a\" (xshift A (/ (distance X Z) 2))))) (let ((b (label \n\"b\" (xshift Z (-(/ (distance A a) 2)))))) (let ((ee (label \"e\" (xshift (intersect (vertical b) (horizontal \nN)) (-(* (xdistance b p) (/ 3 8))))))) (let ((c (label \"c\" (xshift (intersect (vertical p) (horizontal \nX)) (/ (xdistance ee p) 4)))) (d (label \"d\" (xshift (intersect (vertical p) (horizontal X)) (/ (xdistance \nee p) 2)))) (h (label \"h\" (xshift (intersect (vertical ee) (horizontal Z)) (-(/ (xdistance ee p) 4))))) \n(g (label \"g\" (xshift (intersect (vertical ee) (horizontal Z)) (-(/ (xdistance ee p) 2)))))) (list X \nA Q N q O Z P p M a b ee c d h g (horizontal N) (horizontal O) (horizontal Z) (horizontal P) (horizontal \nX) (horizontal M) (vertical p) (vertical q) (vertical b) (vertical ee) ; THE LOWER BOUTS... (let ((ZMcircle \n(circle Z (distance Z M))) (ZPcircle (circle Z (distance Z P)))) (let ((m (label \"m\" (bottom (intersect \nZMcircle (make-line 1 p) ; line w/slope 1 through p ))))) (let ((mcircle (circle m (distance M P)))) \n(let ((n (label \"n\" (xshift m (-(distance X Z) (distance M P)))))) (let ((ncircle (circle n (+ (distance \nM P) (distance X Z) (-(distance M P))))) (reverse-lower-left (lower-circle (reverse-curve (circle n (distance \nX Z)) (+ (distance X Z) (/ (distance X N) 2)) c)))) (list m n (circle n (distance n (center reverse-lower-left))) \nZPcircle mcircle ncircle reverse-lower-left (make-curve P c (list ZPcircle mcircle ncircle reverse-lower-left)) \n)))))) ; THE UPPER BOUTS... (let ((Ncircle (circle N (distance N Q)))  (o (label \"o\" (top (intersect \n(circle N (distance N O)) (make-line -1 q) ; line w/slope -1 through q ))))) (let ((ocircle (circle \no (distance O Q)))) (let ((reverse-upper-left (upper-circle (reverse-curve ocircle (distance N O) g)))) \n (list o (circle o (distance o (center reverse-upper-left))) Ncircle ocircle reverse-upper-left (make-curve \nQ g (list Ncircle ocircle reverse-upper-left)) )))) ; THE MIDDLE BOUTS... (let ((f (label \"f\" (xshift \nee (-(distance X Z))))) (v (label \"v\" (xshift ee (-(/ (distance X N) 2))))) (s (label \"s\" (xshift ee \n(-(/ (distance N Z) 2)))))) (let ((ecircle (circle f (distance f ee))) (vcircle (circle f (distance f \nv))) (scircle (circle f (distance f s))))  (let ((reverse-lower-middle (upper-circle (reverse-curve \necircle (distance f v) d))) (reverse-upper-middle (lower-circle (reverse-curve ecircle (distance f s) \nh)))) (list f v s (circle f (distance f ee)) reverse-upper-middle reverse-lower-middle (make-curve g \nc (list reverse-upper-middle (circle f (distance f ee)) reverse-lower-middle)) )))))))))))))))   \n\t\t\t", "proc_id": "2500365", "abstract": "<p>We describe a functional programming approach to the design of outlines of eighteenth-century string instruments. The approach is based on the research described in Fran&#231;ois Denis's book, <i>Trait&#233; de lutherie</i>. The programming vernacular for Denis's instructions, which we call <i>functional geometry</i>, is meant to reiterate the historically justified language and techniques of this musical instrument design. The programming metaphor is entirely Euclidean, involving straightedge and compass constructions, with few (if any) numbers, and no Cartesian equations or grid. As such, it is also an interesting approach to teaching programming and mathematics without numerical calculation or equational reasoning.</p> <p>The advantage of this language-based, functional approach to <i>lutherie</i> is founded in the abstract characterization of common patterns in instrument design. These patterns include not only the abstraction of common straightedge and compass constructions, but of higher-order conceptualization of the instrument design process. We also discuss the role of arithmetic, geometric, harmonic, and subharmonic proportions, and the use of their rational approximants.</p>", "authors": [{"name": "Harry George Mairson", "author_profile_id": "81100061196", "affiliation": "Brandeis University, Waltham, MA, USA", "person_id": "P4261231", "email_address": "mairson@brandeis.edu", "orcid_id": ""}], "doi_number": "10.1145/2500365.2500617", "year": "2013", "article_id": "2500617", "conference": "ICFP", "title": "Functional geometry and the Trait&#233; de Lutherie: functional pearl", "url": "http://dl.acm.org/citation.cfm?id=2500617"}