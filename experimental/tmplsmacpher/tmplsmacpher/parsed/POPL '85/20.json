{"article_publication_date": "01-01-1985", "fulltext": "\n\t\t\t", "proc_id": "318593", "abstract": "<p>With current compiler technology, changing a single line in a large software system may trigger massive recompilations. If the change occurs in a file with shared definitions, all compilation units depending upon that file must be recompiled to assure consistency. However, many of those recompilations may be redundant, because the change may actually affect only a small fraction of the overall system.</p><p>This paper presents an efficient method for significantly reducing the set of modules that must be recompiled after a change. The method is based on reference sets and the isolation of differences. The cost of determining whether recompilation is necessary is negligible compared to the cost of compilation. The method is easily added to existing compilers, and can be extended to provide guidance to programmers if the change requires software updates.</p>", "authors": [{"name": "Walter F. Tichy", "author_profile_id": "81100152021", "affiliation": "Purdue University, Department of Computer Sciences, West Lafayette, IN", "person_id": "PP14063047", "email_address": "", "orcid_id": ""}, {"name": "Mark C. Baker", "author_profile_id": "81100251933", "affiliation": "AT&T Tochnoiogios, Inc., 2600 Warrenvilla Road, Lisle, IL", "person_id": "P189896", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/318593.318648", "year": "1985", "article_id": "318648", "conference": "POPL", "title": "Smart recompilation", "url": "http://dl.acm.org/citation.cfm?id=318648"}