{"article_publication_date": "01-01-1985", "fulltext": "\n\t\t\t", "proc_id": "318593", "abstract": "<p>A constraint is a relation among program variables that is maintained throughout execution. Type declarations and a very general form of aliasing can be expressed as constraints. A proof system based upon the interpretation of Hoare triples as temporal logic formulas is given for reasoning about programs with constraints. The proof system is shown to be sound and relatively complete, and example program proofs are given.</p>", "authors": [{"name": "Leslie Lamport", "author_profile_id": "81100244989", "affiliation": "SRI International", "person_id": "PP39034239", "email_address": "", "orcid_id": ""}, {"name": "Fred B. Schneider", "author_profile_id": "81100157339", "affiliation": "Cornell University", "person_id": "PP14064873", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/318593.318640", "year": "1985", "article_id": "318640", "conference": "POPL", "title": "Constraints: a uniform approach to aliasing and typing", "url": "http://dl.acm.org/citation.cfm?id=318640"}