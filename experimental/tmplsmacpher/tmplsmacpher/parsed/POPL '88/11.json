{"article_publication_date": "01-13-1988", "fulltext": "\n\t\t\t", "proc_id": "73560", "abstract": "<p>The need to integrate several versions of a program into a common one arises frequently, but it is a tedious and time consuming task to integrate programs by hand. The main contribution of this paper is an algorithm, called <italic>integrate</italic>, that takes as input three programs <italic>A, B</italic>, and <italic>Base</italic>, where <italic>A</italic> and <italic>B</italic> are two variants of <italic>Base</italic>. Whenever the changes made to <italic>Base</italic> to create <italic>A</italic> and <italic>B</italic> do not &#8220;interfere&#8221; (in a sense defined in the paper), Integrate produces a program <italic>M</italic> that integrates <italic>A</italic> and <italic>B</italic>.</p>", "authors": [{"name": "S. Horwitz", "author_profile_id": "81100357689", "affiliation": "University of Wisconsin - Madison", "person_id": "P254094", "email_address": "", "orcid_id": ""}, {"name": "J. Prins", "author_profile_id": "81407592542", "affiliation": "University of Wisconsin - Madison", "person_id": "PP39077509", "email_address": "", "orcid_id": ""}, {"name": "T. Reps", "author_profile_id": "81100117392", "affiliation": "University of Wisconsin - Madison", "person_id": "PP40036453", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/73560.73572", "year": "1988", "article_id": "73572", "conference": "POPL", "title": "Integrating non-intering versions of programs", "url": "http://dl.acm.org/citation.cfm?id=73572"}