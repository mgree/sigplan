{"article_publication_date": "01-13-1988", "fulltext": "\n\t\t\t", "proc_id": "73560", "abstract": "<p>We present a new approach to programming languages for parallel computers that uses an <italic>effect system</italic> to discover expression scheduling constraints. This effect system is part of a 'kinded' type system with three base kinds: <italic>types</italic>, which describe the value that an expression may return; <italic>effects</italic>, which describe the side-effects that an expression may have; and <italic>regions</italic>, which describe the area of the store in which side-effects may occur. Types, effects and regions are collectively called <italic>descriptions</italic>.</p><p>Expressions can be abstracted over any kind of description variable -- this permits type, effect and region polymorphism. Unobservable side-effects can be <italic>masked</italic> by the effect system; an effect soundness property guarantees that the effects computed statically by the effect system are a conservative approximation of the actual side-effects that a given expression may have.</p><p>The effect system we describe performs certain kinds of side-effect analysis that were not previously feasible. Experimental data from the programming language <italic>FX</italic> indicate that an effect system can be used effectively to compile programs for parallel computers.</p>", "authors": [{"name": "J. M. Lucassen", "author_profile_id": "81341493327", "affiliation": "MIT Laboratory for Computer Science, 545 Technology Square, Cambridge, Massachusetts", "person_id": "PP31087808", "email_address": "", "orcid_id": ""}, {"name": "D. K. Gifford", "author_profile_id": "81100151844", "affiliation": "MIT Laboratory for Computer Science, 545 Technology Square, Cambridge, Massachusetts", "person_id": "PP39029894", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/73560.73564", "year": "1988", "article_id": "73564", "conference": "POPL", "title": "Polymorphic effect systems", "url": "http://dl.acm.org/citation.cfm?id=73564"}