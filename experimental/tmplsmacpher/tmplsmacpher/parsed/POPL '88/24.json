{"article_publication_date": "01-13-1988", "fulltext": "\n\t\t\t", "proc_id": "73560", "abstract": "<p>The choice of binding time disciplines has major consequences for both the run-time efficiency of programs and the convenience of the language expressing algorithms. Late storage binding time, dynamic allocation, provides the flexibility necessary to implement the complex data structures common in today's object oriented style of programming. In this paper we show that compile-time lifetime analysis can be applied to programs written in languages with static type systems and dynamically allocated objects, to provide earlier storage binding time for objects, while maintaining all the advantages of dynamic allocation.</p>", "authors": [{"name": "C. Ruggieri", "author_profile_id": "81332525011", "affiliation": "Department of Computer Sciences, Purdue University, West Lafayette, IN", "person_id": "P38515", "email_address": "", "orcid_id": ""}, {"name": "T. P. Murtagh", "author_profile_id": "81100029912", "affiliation": "Department of Computer Science, Williams College, Williamstown, MA", "person_id": "PP39076426", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/73560.73585", "year": "1988", "article_id": "73585", "conference": "POPL", "title": "Lifetime analysis of dynamically allocated objects", "url": "http://dl.acm.org/citation.cfm?id=73585"}