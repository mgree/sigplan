{"article_publication_date": "12-01-1987", "fulltext": "\n\t\t\t", "proc_id": "38765", "abstract": "<p>Most object-oriented languages are strong on reusability or on strong-typing, but weak on concurrency. In response to this gap, we are developing <italic>Hybrid</italic>, an object-oriented language in which objects are the active entities. Objects in Hybrid are organized into <italic>domains</italic>, and concurrent executions into <italic>activities</italic>. All object communications are based on remote procedure-calls. Unstructured <italic>sends</italic> and <italic>accepts</italic> are forbidden. To this the mechanisms of <italic>delegation</italic> and <italic>delay queues</italic> are added to enable switching and triggering of activities. Concurrent subactivities and atomic actions provided for compactness and simplicity. We show how solutions to many important concurrent problems, such a pipelining, constraint management and &#8220;administration&#8221; can be compactly expressed using these mechanisms.</p>", "authors": [{"name": "O. M. Nierstrasz", "author_profile_id": "81100134506", "affiliation": "Univ. de Geneve", "person_id": "PP39081205", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/38765.38829", "year": "1987", "article_id": "38829", "conference": "OOPSLA", "title": "Active objects in hybrid", "url": "http://dl.acm.org/citation.cfm?id=38829"}