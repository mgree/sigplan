{"article_publication_date": "12-01-1987", "fulltext": "\n\t\t\t", "proc_id": "38765", "abstract": "<p>The type system of a programming language system PL/LL is described. PL is a simple object oriented programming language and LL is a language for composing PL modules into programs. The goals of the PL/LL system are to enable the programming of efficient object-oriented computations and to provide the powerful linking language LL for facilitating the construction of large programs. The goal of the type system is to ensure efficient and secure object handling through a combination of static and dynamic type checking, and to preserve this property across module boundaries. The solution is based on (i) the module and linking concepts of LL, (ii) a language construct in PL for the safe creation of linked data structures, and (iii) a limited form of type polymorphism and type unification.</p>", "authors": [{"name": "Lars-Erik Thorelli", "author_profile_id": "81100544798", "affiliation": "Royal Institute of Technology", "person_id": "P168922", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/38765.38831", "year": "1987", "article_id": "38831", "conference": "OOPSLA", "title": "Modules and type checking in PL/LL", "url": "http://dl.acm.org/citation.cfm?id=38831"}