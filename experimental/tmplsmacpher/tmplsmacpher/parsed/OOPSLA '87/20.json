{"article_publication_date": "12-01-1987", "fulltext": "\n\t\t\t", "proc_id": "38765", "abstract": "<p>Self is a new object-oriented language for exploratory programming based on a small number of simple and concrete ideas: prototypes, slots, and behavior. Prototypes combine inheritance and instantiation to provide a framework that is simpler and more flexible than most object-oriented languages. Slots unite variables and procedures into a single construct. This permits the inheritance hierarchy to take over the function of lexical scoping in conventional languages. Finally, because Self does not distinguish state from behavior, it narrows the gaps between ordinary objects, procedures, and closures. Self's simplicity and expressiveness offer new insights into object-oriented computation.</p>", "authors": [{"name": "David Ungar", "author_profile_id": "81100365263", "affiliation": "Stanford Univ.", "person_id": "P64183", "email_address": "", "orcid_id": ""}, {"name": "Randall B. Smith", "author_profile_id": "81406594842", "affiliation": "Xerox Palo Alto Research Center", "person_id": "P239102", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/38765.38828", "year": "1987", "article_id": "38828", "conference": "OOPSLA", "title": "Self: The power of simplicity", "url": "http://dl.acm.org/citation.cfm?id=38828"}