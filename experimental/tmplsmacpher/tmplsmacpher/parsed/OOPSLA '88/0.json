{"article_publication_date": "01-01-1988", "fulltext": "\n\t\t\t", "proc_id": "62083", "abstract": "<p>One of the most promising automatic storage reclamation techniques, generation-based storage reclamation, suffers poor performance if many objects live for a fairly long time and then die. We have investigated the severity of this problem by simulating Generation Scavenging automatic storage reclamation from traces of actual four-hour sessions. There was a wide variation in the sample runs, with garbage-collection overhead ranging from insignificant, during the interactive runs, to severe, during a single non-interactive run. All runs demonstrated that performance could be improved with two techniques: segregating large bitmaps and strings, and mediating tenuring with demographic feedback. These two improvements deserve consideration for any generation-based storage reclamation strategy.</p>", "authors": [{"name": "David Ungar", "author_profile_id": "81100365263", "affiliation": "CIS, Room 209, Stanford University, Stanford, CA", "person_id": "P64183", "email_address": "", "orcid_id": ""}, {"name": "Frank Jackson", "author_profile_id": "81100095966", "affiliation": "ParcPlace Systems, 2400 Geng Road, Palo Alto, CA", "person_id": "P85936", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/62083.62085", "year": "1988", "article_id": "62085", "conference": "OOPSLA", "title": "Tenuring policies for generation-based storage reclamation", "url": "http://dl.acm.org/citation.cfm?id=62085"}