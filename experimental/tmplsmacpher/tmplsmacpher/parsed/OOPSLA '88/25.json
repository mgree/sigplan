{"article_publication_date": "01-01-1988", "fulltext": "\n\t\t\t", "proc_id": "62083", "abstract": "<p>A design and verification technique for implementation schemes of distributed software is presented. In this technique, first, the specification is modelled by a concurrent object system, that is, one which is constituted of computational agents with capability of concurrent execution and message passing. Then, such a concurrent object system is transformed into another concurrent object system, which models a sophisticated implementation scheme.</p><p>Our transformation technique is mainly based on fusing and splitting concurrent objects. The correctness of transformation rules can be proven formally.</p>", "authors": [{"name": "Etsuya Shibayama", "author_profile_id": "81100462474", "affiliation": "Department of Information Science, Tokyo Institute of Technology, Oh-Okayama, Meguro-ku, Tokyo, Japan, 152", "person_id": "P79452", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/62083.62110", "year": "1988", "article_id": "62110", "conference": "OOPSLA", "title": "How to invent distributed implementation schemes of an object-based concurrent language: a transformational approach", "url": "http://dl.acm.org/citation.cfm?id=62110"}