{"article_publication_date": "01-24-1983", "fulltext": "\n\t\t\t", "proc_id": "567067", "abstract": "An abstract temporal proof system is presented whose program-dependent part has a high-level interface with the programming language actually studied. Given a new language, it is sufficient to deline the interface notions of atomic transitions, justice, and fairness in order to obtain a full temporal proof system for this language. This construction is particularly useful for the analysis of concurrent systems. We illustrate the construction on the shared-variable model and on CSP. The generic proof system is shown to be relatively complete with respect to pure first-order temporal logic.", "authors": [{"name": "Zohar Manna", "author_profile_id": "81100089034", "affiliation": "Standford University, Standford, CA and The Weizmann Institute, Rehobot, Israel", "person_id": "PP15021756", "email_address": "", "orcid_id": ""}, {"name": "Amir Pnueli", "author_profile_id": "81100648459", "affiliation": "The Weizmann Institute, Rehobot, Israel", "person_id": "PP15038449", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/567067.567082", "year": "1983", "article_id": "567082", "conference": "POPL", "title": "How to cook a temporal proof system for your pet language", "url": "http://dl.acm.org/citation.cfm?id=567082"}