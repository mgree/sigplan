{"article_publication_date": "09-01-2000", "fulltext": "\n Invited Talk: Combining Functional Programming and Hardware Verification Carl Seger Intel The Forte \nformal hardware verification system grew out of the Voss verification system, developed at University \nof British Columbia from 1990-1995, and forms the basis of all new formal equivalence and property verification \ntools at Intel today. It is used by hundreds of designers and is a critical component in the tool chain \nused to design future microprocessors. The core of Forte, consists of a strongly typed lazy functional \nlanguage, called fl, tightly integrated with a BDD package and a symbolic circuit simulator. This combination \nof high-performance infrastructure and flexible user interface have proven extremely successful in this \napplication domain. In this talk we will begin by briefly outline the Forte system and its application \ndomains. We will then focus on the use of fl in formal property verification. In this domain, the language \nserves several purposes: specification language, proof script language, term language for a theorem prover, \nand finally implementation language for the model checkers, theorem prover, and proof infrastructure. \nFinally, we will conclude with some comments on our experience in introducing a lazy functional language \nin the production environment of a chip design company. 244 \n\t\t\t", "proc_id": "351240", "abstract": "", "authors": [{"name": "Carl Seger", "author_profile_id": "81405594021", "affiliation": "Intel", "person_id": "PP39078663", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/351240.351263", "year": "2000", "article_id": "351263", "conference": "ICFP", "title": "Combining functional programming and hardware verification (invited talk)", "url": "http://dl.acm.org/citation.cfm?id=351263"}