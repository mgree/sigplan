{"article_publication_date": "09-01-2000", "fulltext": "\n eano bet be ykyfunc\u00ad yw tt ydriv canbecustomizedbydiferentrulesandstrategies. WhenaqueryissubmittedtoKleisli,itisfrstprocessed \nbytheCPLModulewhichtranslatesitintoanequivalent expressioninNRC.TheabstractcalculusNRCisbasedon thatdescribedin[8],andischosenastheinternalqueryrep\u00adresentationbecauseitiseasytomanipulateandamenable \ntomachineanalysis.TheNRCexpressionisthenanalyzed bytheTypeModuletoinferthemostgeneralvalidtype fortheexpression,andispassedtotheOptimizerModule. \nOnceoptimized,theNRCexpressionisthencompiledbythe NRCModuleintocallstotheComplexObjectLibrary.The resultingcompiledcodeisthenexecuted,accessingdrivers \nandexternalprimitivesasneededthroughpipesorshared memory.TheDriverandPrimitiveManagerskeepinfor\u00admationonexternalsourcesandprimitivesandthewrap\u00adper/interfacecodestothem.TheComplexObjectLibrary \ncontainsroutinesformanipulatingcomplexobjectssuchas codesforsetintersectionandcodesforiteratingoveraset. \n2.2 Complex Object Types ThedatamodelunderlyingKleisliisacomplexobjecttype systemthatgoesbeyondthe\\setsofrecords\"or\\fatre\u00adlations\"typesystemofrelationaldatabases[13].Itallows \narbitrarilynestedrecords,sets,lists,bags,andvariants.A variantisalsocalledataggeduniontypeandrepresentsa \ntypethatis\\eitherthisorthat\".Oursets,bags,andlists arehomogeneous.Inordertomixobjectsofdiferenttypes \ninaset,bag,orlist,itisnecessarytoinjecttheseobjects intoavarianttype. Thesimultaneousavailabilityofsets,bags,andlistsinKleisli \ndeservessomecomments.Inarelationaldatabase,thesole \\bulk\"datatypeistheset.Inafunctionalprogramming language,theusual\\bulk\"datatypeisthelist.Having \nonlyonebulkdatatypepresentsatleasttwoproblemsin reallifeapplications.Firstly,theparticularbulkdatatype \nmaynotbeanaturalmodelofrealdata.Forexample,ifwe aremodelingtheauthorlistofapaperandtheorderingof authorsisimportant,itisconvenientlymodeledasalist.If \nitismodeledasaset,thenitisnecessarytomodelitasa setofauthor-positionpairs,toavoidlosinginformationon \ntheorderingofauthors.Secondly,theparticularbulkdata typemaynotbeanefcientmodelofrealdata.Forexam\u00adple,ifwearemodelingtheauthorlistofapaperandthe \norderingofauthorsisunimportantfortheparticularappli\u00adcationwehaveinmind,itisconvenientlymodeledasaset. \nIfitismodeledasalist,thenwell-knowndatabasequery optimizationssuchasre-orderingofjoins[32]cannolonger \nbeapplied,astheynormallydonotpreservepositionalor\u00addering. Example2.1.TheGenPeptreportistheformatchosen \nbytheUSNationalCentreforBiotechnologyInformationto presentaminoacidsequenceinformation.Whileanamino acidsequenceisastringofletters,certainregionsandposi\u00adtionsofthestringareofspecialbiologicalinterest,suchas \nbindingsites,domains,andsoon.Thefeaturetableofa GenPeptreportisthepartoftheGenPeptreportthatdocu\u00admentsthepositionsoftheseregionsofspecialbiologicalin\u00adterest,aswellasannotationsorcommentsontheseregions. \nThefollowingtyperepresentsthefeaturetableofaGenPept reportfromEntrez[28]. (#uid:num,#title:string, #accession:string,#feature:{( \n#name:string,#start:num,#end:num, #anno:[(#anno_name:string,#descr:string)])}) Itisaninterestingtypebecauseitisarecordofsetoflists \nofrecords.Hereisthedetail.Itisarecordoffourfelds #uid,#title,#accession,and#feature.Thefrstthreeof thesestorevaluesoftypesnum,string,andstringrespec\u00adtively.The#uidfelduniquelyidentifestheGenPeptreport. \nThe#featurefeldisasetofrecords,whichtogetherform thefeaturetableofthecorrespondingGenPeptreport.Each \noftheserecordshasfourfelds#name,#start,#end,and #anno.Thefrstthreeofthesehavetypesstring,num,and numrespectively.Theyrepresentrespectivelythename,start \nposition,andendpositionofaparticularfeatureinthefea\u00adturetable.The#annofeldisalistofrecords.Eachofthese \nrecordshastwofelds#anno_nameand#descr,bothoftype string.Theserecordstogetherrepresentallannotationson \nthecorrespondingfeature. 2 Ingeneral,thetypesarefreelyformedbythesyntax: t::=numjstringjbool j{t}j{|t|}j[t] \nj(l1:t1,...,ln:tn) j<l1:t1,...,ln:tn> Herenum,string,andboolarethebasetypes.Theother typesareconstructorsandbuildnewtypesfromexisting \ntypes.Thetypes{t},{|t|},and[t]respectivelyconstruct set,bag,andlisttypesfromtypet.Thetype(l1:t1, ...,ln:tn)constructsrecordtypesfromtypest1,...,tn. \nThetype<l1:t1,...,ln:tn>constructsvarianttypesfrom typest1,...,tn.Thefatrelationsofrelationaldatabasesare \nbasicallysetsofrecords,whereeachfeldoftherecordsisa basetype;inotherwords,relationaldatabaseshavenobags, \nnolists,novariants,nonestedsets,andnonestedrecords. ValuesofthesetypescanbeexplicitlyconstructedinCPL \nasfollows,assumingthee'sarevaluesofappropriatetypes: (l1:e1,...,ln:en)forrecords;<l:e>forvariants;{e1, \n...,en}forsets;{|e1,...,en|}forbags;and[e1,...,en]for lists. Example2.2.HereisthefeaturetableofGenPeptreport \n131470,atyrosinephosphatase1Csequence. (#uid:131470,#accession:\"131470\", #title:\"...(PTP-1C)...\",#feature:{( \n#name:\"source\",#start:0,#end:594,#anno:[ (#anno_name:\"organism\",#descr:\"Musmusculus\"), (#anno_name:\"db_xref\",#descr:\"taxon:10090\")]), \n...}) Theparticularfeaturedisplayedaboveisfromaminoacid 0toaminoacid594,whichisactuallytheentiresequence. \nThefeatureentrydisplayedabovehastwoannotations.The frstindicatesthatthisaminoacidsequenceisderivedfrom \nmouseDNAsequence.Thesecondisacrossreferenceto theUSNationalCenterforBiotechnologyInformationtax\u00adonomydatabase. \n2 Theschemasandstructuresofallpopularbioinformatics databases,fatfles,andsoftwaresareeasilymappedinto \nthisdatamodel.Attheextremeofdatastructurecomplex\u00adityareEntrez[28]andACEDB[34],whichcontaindeeply nestedmixturesofsets,bags,lists,records,andvariants. \nAttheotherextremeofdatastructurecomplexityarethe relationaldatabasesystems[13]suchasSybaseandOra\u00adcle,whichcontainfatsetsofrecords.Currently,Kleisli \ngivesaccesstooversixtyoftheseandotherbioinformatics sources.Thereasonforthiseaseofmappingbioinformatics \nsourcestoKleisli'sdatamodelisthattheyareallinherently composedofcombinationsofsets,bags,lists,records,and \nvariants.Sowecandirectlyandnaturallymapsetstosets, bagstobags,liststolists,recordstorecords,andvariantsto \nvariantsintoKleisli'sdatamodel,withouthavingtomake any(type)declarationbeforehand. Itwouldnotbepossibletomapthesesourcessoeasilyontoa \nrelationaldatabasesystemoradeductivedatabasesystem, asallrelationalanddeductivedatabasesystemsimposethe \nfrstnormalformrequirement.Thefrstnormalformisan importantconceptofrelationaldatabasesandisthebasisof \ntheirpracticalimplementation.Itisalsoakeyingredientin guaranteeingterminationofqueriesindeductivedatabases. \nAvalueisinfrstnormalformifitis\\fat\",thatis,itcon\u00adtainsnonestedrecords,nestedsets,orother\\bulk\"types. \nRelationaldatabasesystemsandtheirdeductiveextensions aredesignedtoonlymanipulatedatainfrstnormalform \noritsfurtherrestrictionsandtheirimplementationsexploit thisfrstnormalformassumptiontoachievegreatefciency. \nThenumberoftypeconstructorsmayseemspartancom\u00adparedtothoseofpopularfunctionalprogramminglanguages, wherearbitrarynumberoffreshtypesandtypeconstructors \ncanbeintroducedbyaprogrammer.Thereseemstobe adiferentattitudetowardstypesbetweenthetwoworlds. Inadatabasequerylanguage,itisnotnecessarytointro\u00adduceanewrelationtypeexplicitly.Almosteveryqueryin \nadatabasequerylanguageresultsina\\new\"type.Forex\u00adample,aprojectionquerythatextractstwofeldsfroman existingrelationhavingthreefeldsinprincipleintroduces \na\\new\"recordtypehavingonlythosetwonamedfelds. InafunctionalprogramminglanguagesuchasHaskell,new recordtypescannotbecreatedeasily,astheymustbeex\u00adplicitlyintroducedbeforehand.Sotoimplementthesame \nquery,theHaskellprogrammerwouldhavetofrstintro\u00adduceanewtypewithatypeconstructorhavingthetwo namedfelds.Eveninafunctionalprogramminglanguage \nlikeSML/NJ,wherenewrecordtypescanbeusedwithout priortypedeclaration,itisoftenthecasethatvarianttypes \nmustbedeclaredbeforehand. Thediferenceisthattherichnessoftypesindatabasepro\u00adgrammingishiddenbytheirbeingimplicit,whiletherich\u00adnessoftypesinfunctionalprogrammingishighlightedby \ntheirbeingexplicit.Thefactthatalmostalldatabasequeries introduce\\new\"typesmakesacompellingreasonfordata\u00adbaseprogramminglanguagestofavourmorefexibletype \nconstructorsandtypesthatarecompletely,conveniently, andanonymouslydefnedintermsoftheirstructures.In\u00adterestingly,moreexperimentalortheoreticalinvestigations \noffunctionalprogramminglanguagessuchas[25],alsoex\u00adploredtheseideasandfavouredsimilarspartanbutmore fexibletypeconstructions. \n 2.3 Collection Programming Language ThesyntaxofCPLissimilartothatoftheODMGstan\u00addardforobject-orienteddatabaselanguages[10].Anin\u00adterestingfeatureofthesyntaxofCPListheheavyuse \nofthecomprehensionsyntax,whichshoweduplongago infunctionalprogramminglanguagesandlaterformalized byWadler[33].AtypicalcomprehensioninCPLsyntaxis \n{x*x|\\x<-S,odd(x)}whichreturnsasetconsisting ofthesquaresofalloddnumbersinthesetS.Thisissimilar tothenotationfoundinfunctionallanguages,themaindif\u00adferencebeingthatthebindingoccurrenceofxisindicated \nbyprecedingitwithabackslash,andthattheexpression returnsasetratherthanalist.Asinfunctionallanguages, \n\\x<-Siscalleda\\generator\",andodd(x)iscalleda\\fl\u00adter.\"Ratherthangivingthecompletesyntax,weillustrate CPLbyafewexamplesonasetoffeaturetablesDB. \nExample2.3.Thisqueryextractsthetitlesandfeatures ofthoseelementsofDBwhosetitlescontaintyrosineasa substring. \n{(#title:x.#title,#feature:x.#feature) |\\x<-DB,x.#titlestring-islike\"%tyrosine%\"}. Thisqueryisasimpleproject-selectquery.Aproject-select \nqueryisaquerythatoperatesonone(fat)relationorset. Thusthetransformationthatsuchaquerycanperformis limitedtoselectingsomeelementsoftherelationandex\u00adtractingorprojectingsomefeldsfromtheseelements.Ex\u00adceptforthefactthatthesourcedataandtheresultmaynot \nbeinfrstnormalform,thesequeriescanbeexpressedina relationalquerylanguage.However,CPLcanperformmore complexrestructuringssuchasnestingandunnestingnot \nfoundincommonrelationaldatabaselanguageslikeSQL, asshowninthefollowingexamples. Example2.4.ThisqueryfattensDBcompletely.The \n\\a<---f.#annohassimilarmeaningto\\x<-DB,butit worksonlistinsteadofset.Thusitbindsatoeachitemin thelistf.#anno. \n{(#title:x.#title,#feature:f.#name, #start:f.#start,#end:f.#end, #anno-name:a.#anno_name,#anno-descr:a.#descr) \n|\\x <-DB,\\f<-x.#feature,\\a<---f.#anno}; 2 Example2.5.Thisquerydemonstrateshowtodonest\u00adinginCPL.ThesubqueryDB'istherestructuringofDB \nbypairingeachentrywithitssourceorganism.Thesub\u00adqueryORGthenextractsallorganismnames.Themainquery groupsentriesinDB'byorganismnames.Italsosortsthe \noutputlistbyalphabeticalorderoforganismnames,because [u|\\u<-ORG]convertsthesetORGintoaduplicate-free \nsortedlist. let \\DB'=={(#entry:x,#organism:a.#descr) |\\x<-DB,\\f<-x.#feature,\\a<---f.#anno, a.#anno_name=\"organism\"}in \nlet \\ORG=={y.#organism|\\y<-DB'} in[(#organism:z,#entries:{v.#entry |\\v <-DB',v.#organism=z}) |\\z <---[u|\\u<-ORG]]; \n2 TheinspirationforCPLcameprimarilyfrom[6]thatpre\u00adsentedstructuralrecursionasaquerylanguage.However, \nstructuralrecursionhastwodifculties.Thefrstisthatnot everysyntacticallyacceptablestructuralrecursionprogram \nislogicallywelldefned[7].Thesecondisthatstructural recursionhastoomuchexpressivepowerbecauseitcanex\u00adpressqueriesthatrequireexponentialtimeandspace. \nWhileprogramminglanguagesalwaystakeTuringcomplete\u00adnessforgranted,theattitudeindatabaseprogrammingis radicallydiferent.Inthecontextofqueryingdatabases, \nduetotheirimmensesize,queriesarerestrictedtothose whicharepracticalinthesensethattheyshouldbewithina \nlowcomplexityclasssuchasLOGSPACE,PTIME,orTC0 . Infact,onemayevenwanttopreventanyquerythathas worsethanO(nQlogn)complexity,unlessoneisconfdent \nthatthequeryoptimizerhashighprobabilityofoptimizing thequerytonomorethanO(nQlogn)complexity.Thus databasequerylanguagessuchasSQLaredesignedinsuch \nawaythatjoinsareeasilyrecognized,asjoinsaretheonly operationsinatypicaldatabasequerylanguagethatrequire \nO(n 2)complexityifevaluatednaively. ThusTannenandBunemansuggestedanaturalrestriction onstructuralrecursiontoreduceitsexpressivepowerandto \nguaranteeitswell-defnedness.Theirrestrictioncutsstruc\u00adturalrecursiondowntohomomorphismsonthecommuta\u00adtiveidempotentmonoidofsets,revealingatellingcorrespon\u00addencetomonads[33].Anestedrelationalcalculus,which \nisdenotedherebyNRC,wasthendesignedaroundthisre\u00adstriction[8].NRCisessentiallythesimply-typedlambda calculusextendedbyaconstructforbuildingrecords,acon\u00adstructfordecomposingrecordsbyfeldselection,aconstruct \nforbuildingsets,aconstructfordecomposingsetsbymeans oftherestrictiononstructuralrecursion.Specifcally,the \nS constructfordecomposingsetsisfe1jx2e2g,which formsasetbytakingthebigunionofe1[o/x]overeacho inthesete2.NRC(suitablyextended)isimplementedby \ntheNRCModuleofKleisliandistheabstractcounterpart ofCPL,alaWadler'sequationsrelatingmonadsandcom\u00adprehensions[33]. \nInordertoshowthatNRCisagoodbasisforaquery language,itsrelationshiptoexistingquerylanguagesmust beinvestigated.Furthermore,ithastoenablesolutionto \nexistingopenproblemsinquerylanguagetheory,ithasto enablegeneralizationofexistingresultsinquerylanguage \ntheory,ithastofacilitatepracticalimplementation,ithas toallowforgoodqueryoptimization,andithastoenable \nnewapplications. TheexpressivepowerofNRCanditsextensionsarestud\u00adiedin[30,15,18,8,31].Thesepaperspresentedsolutions \ntoseveralopenproblemsinquerylanguagetheory.The mostimportantoftheseresultsaredirectedatNRC(=) P :Qaugmentedwithequalitytest.ThelatterisNRC(=)fur\u00adtheraugmentedwithrationalnumbers,linearorderonratio\u00adnalnumbers,arithmeticoperations,andasummationcon\u00adstruct.NRC(=)wasshowntohaveexactlythepowerasthe \nandNRC(Q,+,Q,;,+,,Q=).TheformerisNRC P usualnestedrelationalalgebra[8].NRC(Q,+,Q,;,+,, :Q =)wasshowntocapturethepowerofSQL,including \naggregatefunctionsandgroup-byconstructions[18].These languagesaremucheasiertoanalysethanexistingnestedre\u00adlationalalgebrasandSQL,andtherebyarelikelytobeeas\u00adiertoimplementandoptimize.Forexample,Libkinandthe \nauthor[18]beganaseriesofpowerfulanalysesonNRC(Q, P :Q +,Q,;,+,,Q=)thatfruitfullyresolvedseveralopen questionsonSQL,includingthefollowinglonganticipated \nP :Q resultsonunorderedgraphs:NRC(Q,+,Q,;,+,,Q=) andthusSQLcannottestifagraphisachain,nortestifa graphisconnected,nortestifagraphhasanevennumber \nofedges,norcomputethetransitiveclosureofagraph. Theimpactoftheseandothertheoreticalresultsonthede-signofCPLandKleisliisthatCPLadoptsNRC(Q,+,Q,;, \nP P +,,:QQ=)asitscore.NRC(Q,+,Q,;,+,,:QQ=) capturesallstandardnestedrelationalqueriesinahigh\u00adlevelmannerthatiseasyforautomatedoptimizeranalysis \n(aprimaryreasonthatwewereabletouseittoprovemany difculttheoremsonSQL.)Itisalsoeasytotranslatemore user-friendlysurfacesyntaxsuchasthecomprehensionsyn\u00adtaxortheSQLselect-from-wheresyntaxintoNRC(Q,+, \nP Q,;,+,,:QItisthusaverysuitablecore. Q=). 3. INFLUENCE OF FUNCTIONAL PROG-RAMMING FunctionalprogramminghasasignifcantinfuenceonKleisli \nandCPL.Thisinfuenceismostvisibleatthelanguagelevel ofCPL.CPLhashigher-orderfunctionsandaML-style polymorphictypesystem.Itstypesystemisfurtheraug\u00admentedwithanotherinventionfromthefunctionalprogram\u00admingcommunity:parametricrecordpolymorphism[21,25]. \nAlthoughCPL'sviewofrecordtypevariablesiscloserto thatinMachiavelli[21],thantherowvariablesofRemy[25], \ntheimplementation[36]ofpolymorphicrecordsinKleisliis basedonacleverideaofRemy[26].Themostnoticeable featureofCPL,thecomprehensionsyntax,madeitsappear\u00adancemanyyearsagointheprogramminglanguageworldin \nlanguagessuchasMiranda.Itwasalsodiscussedearlierand elsewhere[8]thatthecoreofCPLisfoundedonstructural \nrecursion[6]andmonad[33]. Itismoreinterestingtodiscusstheinfuenceoffunctional programmingoncomponentsoftheKleislisystemthatare \nlessvisible.Inparticular,wediscusstheself-describingex\u00adchangeformatofKleisliinSubsection3.1,theabstractin\u00adternalrepresentationofqueriesinSubsection3.2,andthe \noptimizerinSubsection3.3. 3.1 Type Inference and Self-Describing Ex\u00adchange Format Ofthemanydiscoveriesbythefunctionalprogrammingcom\u00admunity,ourfavouriteisparametricpolymorphismandtype \ninference.CPLusessuchatypesystemandKleisli'sself\u00addescribingdataexchangeformatisalsoadirectderivative \nofsuchatypesystem.Thebeneftsarediscussedinthis subsection. Inadynamicheterogeneousenvironmentsuchasthatof \nbioinformatics,manydatabasesandsoftwaresareused. Worsestill,theyoftendonothaveanythingthatcanbe thoughtofasanexplicitdatabaseschema.Furthercom\u00adpoundingtheprobemisthatresearchbiologistsdemand \nfexibleaccessandqueriesinveryad-hoccombinations.Thus, aquerysystemthataimstobeageneralintegrationmech\u00adanisminsuchanenvironment,mustsatisfyfourconditions. \nFirst,itmustnotcountontheavailabilityofschemas.It mustbeabletocompileanyquerysubmittedbasedcom\u00adpletelyonthestructureofthatquery.Second,itmusthave \nadatamodelthattheseexternaldatabasesandsoftwares caneasilytranslateto,withoutdoingalotoftypedecla\u00adrationsandsoon.Third,itmustshieldexistingqueries \nfromevolutionoftheseexternaldatabasesandsoftwaresas muchaspossible.Forexample,anextrafeldappearingin \nanexternaldatabasetablemustnotmakeitnecessaryto recompile/rewriteanexistingquery.Fourth,itmusthavea dataexchangeformatthatisstraightforwardtouse,sothat \nitdoesnotdemandtoomuchprogrammingefortorcon\u00adtortiontocapturethevarietyofstructuresofoutputfrom fromexternaldatabasesandsoftwares. \nThreeoftheserequirementsareaddressedbyfeaturesof CPL'stypesystem.CPLhaspolymorphicrecordtypesthat allow,forexample, \n\\R=>{x.#name|\\x<-R,x.#salary>1000} whichdefnesafunctionthatreturnsnamesofpeopleinR earningmorethanathousanddollars.Thisfunctionisap\u00adplicabletoanyRthathasatleastthe#nameandthe#salary \nfelds,thusallowingtheinputsourcesomefreedomtoevolve. CPLalsohasvarianttypesthatallow,forexample, {<#name:\"John\">,<#zip-code:119613>} \nwhichisasetcontainingobjectsofverydiferentstructures; inthiscase,astringcarryinga#nametagandanumber carryinga#zip-codetag.Thisfeatureisparticularlyuse\u00adfulinhandlingASN.1-formatted[17]datafromEntrez,one \nofthemostimportantandmostcomplexsourcesofDNA sequences,asitcontainsaprofusionofvarianttypes. NotethatfunctionalprogramminglanguageslikeHaskell \nandSMLrequirevarianttypestobedeclaredinadvance, andHaskelldoesnotevenhavefrstclassrecordtypes.In contrast,CPLdoesnotrequireanytypetobedeclaredat \nall.ThetypeandmeaningofanyCPLprogramcanalways becompletelyinferredfromitsstructurewithouttheuseof anyschemaortypedeclaration.Thismakesitpossibleto \nlogicallypluginanydatasourcewithoutdoinganyformof schemadeclaration,atasmallacceptableriskofrun-time \nerrorsiftheinferredtypeandtheactualstructurearenot compatible.Thisisanimportantfeaturebecausemostof ourdatasourcesdonothaveexplicitschemas,whileafew \nhaveextremelybigexplicitschemasthatrunintotensof pages|anexamplebigcomplexschemaistheASN.1schema ofEntrez[20]|makingitimpracticaltohaveanyformof \ndeclaration. Wenowcometothefourthrequirement.Adataexchange formatisanagreementonhowtolayoutdatainadata \nstreamormessagewhenthedataisexchangedbetween twosystems.Inourcase,itistheformatforexchang\u00adingdatabetweenKleisliandallthebioinformaticssources. \nThedataexchangeformatofKleislicorrespondsone-to-one toKleisli'sdatamodel.Itprovidesforrecords,variants, \nsets,bags,andlists;anditallowsthesedatatypestobe freelycomposed.Infact,thedataexchangeformatcom\u00adpletelyadoptsthesyntaxofvalueconstructioninCPL,as \ndescribedinSubsection2.2.RecallthatCPLprogramscon\u00adtainnotypedeclaration.ACPLcompilerhastofgureout ifaCPLprogramhasaprincipletypingscheme.Thiskind \noftypeinferenceispossiblebecauseeveryconstructinCPL hasanunambiguousmostgeneraltype.Inparticular,the \nvalueconstructionsyntaxissuchthatitispossibletoin\u00adspectonlythefrstseveralsymbolstofgureoutlocaltype constraintsonthecorrespondingvalue,aseachvaluecon\u00adstructorisunambiguous.Forexample,ifa{|bracketis \nseen,itisimmediatelyclearthatitisabag;andifa( bracketisseen,itisimmediatelyclearthatitisarecord. Thus,byadoptingthevalueconstructionsyntaxofCPLas \nthedataexchangeformat,thelatterbecomesselfdescribing. Aself-describingexchangeformatisoneinwhichthereis \nnoneedtodefneinadvancethestructureoftheobjects beingexchanged.Indatabaseterminology,itmeansthere isnofxedschema.Inprogramminglanguageterminology, \nitmeansthereisnotypedeclaration.Inasense,eachob\u00adjectbeingexchangedcarriesitsowndescription.Aself\u00addescribingformathastheimportantpropertythat,nomat\u00ad \nterhowcomplextheobjectbeingexchangedis,itcanbeeas\u00adilyparsedandreconstructedwithoutanyschemainforma\u00adtion.Tounderstandthisadvantage,oneshouldlookatthe \nISOASN.1standard[17]opensystemsinterconnection.It isnoteasytoexchangeASN.1objectsbecausebeforewecan parseanyASN.1object,weneedtoparsetheschemathat \ndescribesitsstructurefrst|makingitnecessarytowrite twocomplicatedparsersinsteadofasimpleone. Itshouldbementionedthatself-describingdataexchange \nformatsexistinseveralformsinearlierwork[22,19].How\u00adever,Kleisli'sisprobablythefrstself-describingexchange \nformatthatisconsciouslyderivedfromtypeinference! 3.2 Kleisli Triples and Abstract Syntax Letusbriefyrecalltherestrictedformofstructuralrecur\u00adsionwhichcorrespondstothepresentationofmonadsby \nKleisli[33,8].Itisthecombinatorext(Q)(Q)obeyingthese threeequations: ext(f)fgext(f)fogext(f)(A[B) === \nfg f(o) ext(f)(A) [ ext(f)(B) S ff(x)j2 Thus,ext(f)(R)isequaltothexRgconstruct ofNRC.ThedirectcorrespondenceinCPLis:ext{e1|\\x \n<-e2},whichisinterpretedasext(f)(e2),wheref(x)=e1. ThiscombinatorisakeyoperatorintheComplexObject LibraryofKleisliandisattheheartoftheNRC,theabstract \nrepresentationofqueriesintheimplementationofCPL.It earnsitscentralpositionintheKleislisystembecauseit \noferstremendouspracticalandtheoreticalconvenience. Itspracticalconvenienceisbestseenintheissueofabstract \nsyntaxintheimplementationofadatabasequerylanguage. Theabstractsyntaxistheinternalrepresentationofaquery \nandisusuallymanipulatedbycodegenerators;thebetter abstractsynaxistheonethatiseasiertoanalyse.Itmust notbeconfusedwiththesurfacesyntax,whichiswhatthe \nusualdatabaseprogrammerprogramsin;thebettersur\u00adfacesyntaxistheonethatiseasiertoread.Itisworth contrastingtheextconstructtothecomprehensionsynax \nhere.Withregardtosurfacesyntax,CPLadoptsthecom\u00adprehensionsyntaxbecauseitiseasiertoreadthantheext construct.Forexample,theCartesianproductoftwosets \nisexpressedusingthecomprehensionsyntaxas {(x,y)|\\x<-R,\\y<-S} Incontrast,itisexpressedusingtheextconstructas \next{ext{{(x,y)}|\\y<-S}|\\x<-R} whichismoreconvoluted.However,theadvantageofthe comprehensionsyntaxmoreorlessendshere.Withregard \ntoabstractsyntax,thesituationisexactlytheopposite! Comprehensionsareeasyforthehumanprogrammertoread andunderstand.However,theyareinfactextremelyincon\u00advenientforautomaticanalysisandisthusapoorcandidate \nasanabstractrepresentationofqueries.Thisdiferenceis illustratedbelowbyapairofcontrastingexamplesinimple\u00admentingoptimizationrules. \nAwell-knownoptimizationruleisverticalloopfusion[16], whichcorrespondstotheideaofgettingridofintermediate \ndata.Suchanoptimizationonqueriesinthecomprehension syntaxcanbeexpressedinformallyas fejG1,...,Gn,nx<-fe \n0 jH1,...,Hmg,J1,...,Jkg. fe[e 0/x]jG1,...,Gn,H1,...,Hm,J1[e 0/x],...,Jk[e 0/x]g Sucharuleincomprehensionformisverysimpletograsp. \nBasicallytheintermediatesetbuiltbythecomprehension fe 0 jH1,...,Hmghasbeeneliminated,infavourofgenerat\u00adingthexonthefy.Inpracticeitisquitemessytoimple\u00admenttheruleabove.Inwritingthatrule,theinformal\\...\" \ndenotesanynumberofgenerator-fltersinacomprehension. Whenitcomestoactuallyimplementingit,anastytraver\u00adsalroutinemustbewrittentoskipoverthenon-applicable \nGiinordertolocatetheapplicablenx<-fe 0 jH1,...,Hmg andJi. Letusnowconsidertheextconstruct.Aspointedoutby \nWadler[33],anycomprehensioncanbetranslatedintothis contruct.Itsefectontheoptimizationruleforverticalloop \nfusionisdramatic.Thisoptimizationisnowexpressedas extfe1jnx<-extfe2jny<-e3gg. extfextfe1jnx<-e2gjny<-e3g \nTheinformalandtroublesome\\...\"nolongerappears.Such arulecanbecodedupstraightforwardlyinalmostanyim\u00adplementationlanguage.Asimilarsimplicationisalsoob\u00adservedinproofsusingstructuralinduction.Forcomprehen\u00adsionsyntax,whenonecomestothecaseforcomprehension, \nonemustintroduceasecondaryinductionproofbasedon thenumberofgeneratorsandfltersinthecomprehension, whereastheextconstructdoesnotgiverisetosuchcompli\u00adcation.Arelatedsavingisthatcomprehensionsrequiretwo \nkindsofterms,expressionsandqualifers,whereastheext formulationrequiresonlyonekindofterms,expressions. \nInordertoillustratethispointmoreconcretely,itisneces\u00adsarytointroducesomedetailfromtheimplementationofthe \nKleislisystem.ThetypeSYNofMLobjectsthatrepresent queriesinKleisliisdeclaredintheNRCModulementioned inSubsection2.1.Thedataconstructorsthatarerelevant \ntoourdiscussionare: datatypeSYN=... |EmptySet |SngSetofSYN |UnionSetofSYN*SYN |ExtSetofSYN*VAR*SYN |IfThenElseofSYN*SYN*SYN \nAllMLobjectsthatrepresentoptimizationrulesinKleisli arefunctionsandtheyhavetypeRULE: typeRULE=SYN->SYNoption \nIfanoptimizationrulercanbesuccessfullyappliedtorewrite anexpressionetoanexpressione 0 ,thenr(e)=SOME(e \n0).If itcannotbesuccessfullyapplied,thenr(e)=NONE. Wenowreturntotheoptimizationruleonverticalloop fusion.Aspromisedearlier,wearerewardedbyasimple \nimplementation: Example3.1.Verticalloopfusion. funVertfusion(ExtSet(E1,x,ExtSet(E2,y,E3))) =SOME(ExtSet(ExtSet(E1,xE2),y,E3)) \n|Vertfusion_=NONE 2 TheKleislioptimizeralsoperformsmanyotheroptimiza\u00adtions.Theseoptimizationsincludeageneralformofcode \nmotion;parallelismtoexploitnetworklatency;selectivein\u00adtroductionoflazinesstoreducememoryconsumptionand \ntoimproveresponsetime;migrationofselection,projection, andjoinstoexternalrelationaldatabaseservers;reordering \nofjoinsacrosstablesfromdistinctdatabaseservers;etc.See [37]formoredetails. 3.3 Higher-Order Functions \nand Optimization Thereisanotherverypleasantexperienceinimplementing theoptimizerfortheKleislisystemthatillustratesverywell \nthemanyadvantagesandconveniencesofhigher-orderfunc\u00adtions,besidesallowingtheexpressionofbetteralgorithms \nasdiscussedin[31].Theoptimizerconsistsofanextensible numberofphases.Eachphaseisassociatedwitharule-base \nandaruleapplicationstrategy.Alargenumberofruleappli\u00adcationstrategiesaresupported.Themorefamiliarinclude \nBottomUpOnce,whichappliesrulestorewriteanexpression treefromleavestorootinasinglepass;TopDownOnce,which \nappliesrulestorewriteanexpressiontreefromroottoleaves inasinglepass;MaxOnce,whichappliesrulestothelargest \nredicesinasinglepass;andsoon,togetherwiththeirmulti\u00adpassversions. Byexploitinghigher-orderfunctionsalloftheseruleappli\u00adcationstrategiescanbedecomposedintoa\\traversal\"com\u00adponentthatiscommontoallstrategiesandaverysimple \n\\control\"componentthatisspecialforeachstrategy.In short,higher-orderfunctionscangenerateallthesestrate\u00adgiesextremelysimply,resultinginaverysmalloptimizer \ncore.Togivesomeideasonhowthisisdone,somecode fragmentsfromtheoptimizermodulementionedinSubsec\u00adtion2.1arepresentedbelow. \nThe\\traversal\"componentisahigher-orderfunctionthat issharedbyallstrategies: valDecompose:(SYN->SYN)->SYN->SYN \nRecallthatSYNisthetypeofMLobjectsthatrepresent queryexpressions.TheDecomposefunctionacceptsarewrite rulerandaqueryexpressionQ.Thenitappliesrtoallim\u00admediatesubtreesofQtorewritetheseimmediatesubtrees. \nNotethatitdoesnottouchtherootofQanditdoesnot traverseQ|itjustnonrecursivelyrewritesimmediatesub\u00adtreesusingr.Itisthereforeverystraightforwardandlooks \nlikethis: funDecomposef(SngSetN)=SngSet(fN) |Decomposef(UnionSet(N,M))=UnionSet(fN,fM) |Decomposef(ExtSet(N,x,M))=ExtSet(fN,x,fM) \n|... AruleapplicationstrategySisafunctionhavingthefol\u00adlowingtype valS:RULEDB->SYN->SYN TheprecisedefnitionofthetypeRULEDBisnotimportantto \nourdiscussionatthispointandisdeferreduntillater.Such afunctiontakesinarulebaseRandaqueryexpressionQ andoptimizesittoanewqueryexpressionQ0 \nbyapplying rulesinRaccordingtothestrategyS. AssumethatPick:RULEDB->RULEisaMLfunctionthat takesarulebaseRandaqueryexpressionQandreturns \nNONEifnoruleisapplicable,andSOME(Q0)ifsomerulein RcanbeappliedtorewriteQtoQ0 .Thenthe\\control\" componentsofallthestrategiesmentionedearliercanbe \ngeneratedinaverysimpleway. Example3.2.TheMaxOncestrategyappliesrulestomax\u00adimalsubtrees.Itstartstryingtherulesontherootofthe \nqueryexpression.Ifnorulecanbeapplied,itmovesdown onelevelalongallpathsandtriesagain.Butassoonasa rulecanbeappliedalongapath,itstopsatthatlevelforthat \npath.Inotherwords,itapplieseachruleatmostoncealong eachpathfromtheroottotheleaves.Hereisits\\control\" \ncomponent: funMaxOnceRDBQry= casePickRDBQry ofSOMEImprovedQry=>ImprovedQry |NONE=>Decompose(MaxOnceRDB)Qry \n2 Example3.3.TheBottomUpOncestrategyapplies rulesinaleaves-to-rootpass.Ittriestorewriteeachnode atmostonceasitmovestowardstherootofthequeryex\u00adpression.Hereisits\\control\"component: \nfunBottomUpOnceRDBQry= letfunPassSubQry= letvalBetterSubQry=DecomposePassSubQry incasePickRDBBetterSubQry \nofSOMEEvenBetterSubQry=>EvenBetterSubQry |NONE=>BetterSubQryend inPassQryend 2 Letusnowpresentaninterestingclassofrulesthatrequires \ntheuseofmultipleruleapplicationstrategies.Thescopeof rulesliketheverticalloopfusionintheprevioussubsection \nisovertheentirequery.Incontrast,thisclassofruleshas twoparts.Theinnerpartis\\contextsensitive\"anditsscope \nislimitedtocertaincomponentofthequery.Theouterpart scopesovertheentirequerytoidentifycontextswherethe \ninnerpartcanbeapplied.Thetwopartsoftherulecanbe appliedusingcompletelydiferentstrategies. ArulebaseRDBisrepresentedinoursystemasaML \nrecordoftype typeRULEDB={ DoTrace:boolref, Trace:(rulename->SYN->SYN->unit)ref, Rules:(rulename*RULE)listref} \nTheRulesfeldofRDBstoresthelistofrulesinRDB togetherwiththeirnames.TheTracefeldofRDBstoresa functionfthatistobeusedfortracingtheusageoftherules \ninRDB.TheDoTracefeldofRDBstoresafagtoindicate whethertracingistobedone.Iftracingisindicated,then wheneveraruleofnameNinRDBisappliedsuccessfully \ntotransformaqueryQtoQ0 ,thetracefunctionisinvoked asfNQQ0 torecordatrace.Normally,thissimplymeans amessagelike\\QisrewrittentoQ0 \nusingtheruleN\"is printed.However,thetracefunctionfisallowedtocarry outconsiderablymorecomplicatedactivities. \nItispossibletoexploittracefunctionstoachievesophisti\u00adcatedtransformationinasimpleway.Anexampleisthe rulethatrewritesife1then...e1...elsee3toife1then \n...true...elsee3.Theinnerpartofthisrulerewritese 1 totrue.Theouterpartofthisruleidentifesthecontext andscopeoftheinnerpartofthisrule:limitedtothethen\u00adbranch.Thisexampleisveryintuitivetoahumanbeing. \nInthethen-branchofaconditional,allsubexpressionsthat areidenticaltothetestpredicateoftheconditionalmust \neventuallyevaluatetotrue.However,sucharuleisnot sostraightforwardtoexpresstoamachine.Theinformal \\...\"areagainintheway.Fortunately,rulesofthiskind \narestraightforwardtoimplementinoursystem. Example3.4.TheIf-then-elseabsorptionruleisexpressed bytheAborbThenrulebelow.Therulehasthreeclauses.The \nfrstclausesaysthattheruleshouldnotbeappliedtoan IfThenElsewhosetestpredicateisalreadyaBooleancon\u00adstant,becauseitwouldleadtonon-terminationotherwise. \nThesecondclausesaysthattheruleshouldbeappliedtoall otherformsofIfThenElse.Thethirdclausesaysthatthe ruleisnotapplicableinanyothersituation. \nfunAbsorbThen(IfThenElse(Bool_,_,_))=NONE |AbsorbThen(IfThenElse(E1,E2,E3))= letfunThenE= ifSyntaxTools.EquivE1E \nthenSOME(Booltrue) elseNONE incaseContextSensitiveThenTopDownOnceE2 ofSOMEE2'=>IfThenElse(E1,E2',E3) \n|NONE=>NONEend |AbsorbThen_=NONE Thesecondclauseisthemeatoftheimplementation.The innerpartoftherewriteife1then...e1...elseeto \nife1then...true...elsee3iscapturedbythefunction Thenwhichrewritesanyeidenticaltoetotrue.This 1 functionisthensuppliedastheruletobeappliedusingthe \nTopDownOncestrategywithinthescopeofthethen-branch ...e...usingtheContextSensitiverulegeneratorgiven 1 \nbelow. funContextSensitiveRuleStrategyQry= let(*ThisflagissetifRuleisapplied*) valChanged=reffalse (*Setupacontext-sensitiverulebase*) \nvalRDB={ DoTrace=reftrue, Trace=ref(fn_=>fn_=>fn_=> (*ChangedistrueifRuleisused*) Changed:=true) Rules=ref[(\"\",Rule)]} \n(*ApplyRuleusingStrategy.*) valOptimizedQry=StrategyRDBQry inif!ChangedthenSOMEOptimizedQryelseNONEend \nThisContextSensitiverulegeneratorisreusedformany othercontext-sensitiveoptimizationrules,suchasthoseused \nformigratingselection,projections,andjoinstoexternal relationaldatabasesystems. Thustheuseofhigher-orderfunctionsgreatlysimplifes \ntheimplementationofthecurrentKleislioptimizer,com\u00adparedtotheoriginaloptimizerfrom[35].Theauthorisnot \nthefrsttodiscoverthisparticularmethodofimplementing rewritestrategies;Paulson[23]andSpivey[29]presented \nsimilarideas.  4. IMPACT ON BIOINFORMATICS \\Untilrecently,biologicalsequencedatabaseswerebuiltby biologists.Whensequencedatabaseswerefrstcreatedthe \namountofdatawassmallanditwasimportantthatthe databaseentrieswerehumanreadable.Databaseentries wereconstructed,therefore,asfatfles,thatis,textentries \nwiththeinformationorderedinaspecifcway.Indeed,itis probablymoreaccuratetodescribethesedatabasesasdata \nrepositories.Asnewtypesofdatawerecapturedorcreated, newdatarepositorieswerecreatedusingavarietyoffat \nfleformats.Theresultofthiseforthasbeentocreatea largenumberofdiferentdatabases,allindiferentformats, \ntypicallyusingnon-standarddataquerysoftware,andonly reallyproperlyaccessibletobioinformaticsexperts\"[3]. \nItisasignifcantchallengeifthesepieceshavetobeusedto\u00adgetherincomplexwaystoanswernewquestionsinbiology. \nClearly,simpleretrievalofdataisnotsufcientformodern bioinformatics.Thechallengeishowtomanipulatethere\u00adtrieveddataderivedfromvariousdatabasesandre-structure \nthedatainsuchawaytoinvestigatespecifcbiologicalprob\u00adlems.Thismayrequirefeedingtheretrieveddataintovar\u00adiousapplicationprograms,suchasmultiplesequencealign\u00admentprograms,3Dstructuremodelingprograms,andsoon, \nwhichrequirespecifcinputdatasetsandformats. ItisnowwidelyagreedthatKleislihassignifcantlyreduced thedifcultyofintegratingbiologydata[5,3].Togeta \nsenseofKleisli'simpactonbioinformatics,letusdescribe theveryfrstbioinformaticsqueryimplementedinKleisliin \n1994[14].Itwasoneoftheso-called\\impossible\"queriesof aUSDepartmentofEnergyBioinformaticsSummitReport \n(www.gdb.org/Dan/DOE/whitepaper/contents.html.)That querywastofndforeachgenelocatedonaparticularcy\u00adtogeneticbandofaparticularhumanchromosome,asmany \nofitsnon-humanhomologsaspossible.Basically,thequery meansthatforeachgeneinaparticularpositioninthehu\u00admangenome,fndDNAsequencesfromnon-humanorgan\u00adismsthataresimilartoit. \nIn1994,themaindatabasecontainingcytogeneticbandin\u00adformationwastheGDB[24],whichwasaSybaserelational database.Inordertofndhomologs,theactualDNAse\u00adquenceswereneededandtheabilitytocomparethemwas \nalsoneeded.Unfortunately,thatdatabasedidnotkeepac\u00adtualDNAsequences.TheactualDNAsequenceswerekept inanotherdatabasecalledGenBank[9].Atthetime,access \ntoGenBankwasprovidedthroughtheASN.1versionofEn\u00adtrez[28],whichwasanextremelycomplicatedretrievalsys\u00adtem.EntrezalsokeptprecomputedhomologsofGenBank \nsequences. SothisqueryneededtheintegrationofGDB(arelational databaselocatedinBaltimore)andEntrez(anon-relational \n\\database\"locatedinBethesda)thatfrstextractednames ofgenesonthedesiredcytogeneticbandandaccessedEn\u00adtrezforhomologsofthesegenesandfnallyflteredthese \nhomologstoretainthenon-humanones.Thisquerywas considered\\impossible\"astherewasatthattimenosystem thatcouldworkacrossthebioinformaticssourcesinvolved \nduetotheirheterogeneity,complexity,andgeographicallo-cations.Giventhecomplexityofthisquery,theCPLquery \ngivenin[14]wasremarkablyshort.SincethenKleislihas beenusedtopowermanybioinformaticsapplications[4;12; \n11,etc.] Example4.1.Thequerymentionedisshownbelow.1 sybase-add(#name:\"gdb\",...); readfilelocusfrom\"locus_cyto_location\"usinggdb; \nreadfileereffrom\"object_genbank_eref\"usinggdb; {(#accn:g.#genbank_ref,#nonhuman-homologs:H) |\\c<-locus,c.#chrom_num=\"22\", \n\\g<-eref,g.#object_id=c.#locus_id, \\H=={u |\\u<-na-get-homolog-summary(g.#genbank_ref), not(u.#titlestring-islike\"%Human%\"), \nnot(u.#titlestring-islike\"%H.sapien%\")}, not(H={})} ThefrstthreelinesconnectedtoGDBandmappedtwota\u00adblesinGDBtoKleisli.Afterthat,thesetwotablescouldbe \nreferencedwithinKleisliasiftheyweretwolocallydefned 1Thosewhohaveread[14]wouldnoticethattheSQLfavor intheoriginalimplementation[14]hascompletelyvanished. \nThisisbecausethecurrentversionofKleislihasmadesig\u00adnifcantadvancementininterfacingrelationaldatabases. \nsets,locusanderef.Thenext9linesextractedfromthese tablestheaccessionnumbersofthosegenesonChromosome 22andusedtheEntrezfunctionna-get-homolog-summary \ntoobtaintheirhomologsandflteredthesehomologsfornon\u00adhumanones. Besidestheobvioussmoothnessofintegrationofthetwodata \nsources,thisquerywasalsoremarkablyefcient.Onthe surface,itseemedtofetchthelocustableinitsentirety onceandtheereftableinitsentiretyntimesfromGDB, \nasanaiveevaluationofthecomprehensionwouldbetwo nestedloopsiteratingoverthesetwotables.Fortunately,in \nreality,theKleislioptimizerwasabletomigratethejoinand projectionsonthesetwotablesintoasingleefcientaccess \ntoGDB. 2 Sincethequeryabove,Kleislianditscomponentshavebeen usedinanumberofbioinformaticsprojectssuchasGAIAat \ntheUniversityofPennsylvania(www.cis.upenn.edu/gaia2), TAMBISattheUniversityofManchester[4],andFIMMat \nKentRidgeDigitalLabs[27].Ithasalsobeenusedincon\u00adstructingsomedatabasesinpharmaceuticalcompaniessuch asSmithKlineBeecham,Schering-Plough,andGlaxoWell\u00adcome.KleisliisalsothebackboneofKRISInformaticsInc. \n(www.kris-inc.com).  5. CONCLUSION TheKleislisystemanditshigh-levelquerylanguageCPL embodymanyadvancesmadeindatabasequerylanguages \nandinfunctionalprogramming.Itrepresentsasignifcant deploymentoffunctionalprogramminginanindustrial strengthprototypethathasmadesignifcantimpactondata \nintegrationinbioinformatics.Indeed,sincetheearlyKleisli prototypewasappliedtobioinformatics,ithasbeenusedto \nefcientlysolvemanyreal-lifedataintegrationproblemsin bioinformatics.Todate,thankstotheuseofCPL,wedo notknowofanothersystemthatcanexpressgeneralbioin\u00adformaticsqueriesassuccintlyasKleisli. \nThereareseveralkeyideasbehindthesuccessofthesys\u00adtem.Thefrstisitsuseofcomplexobjectdatamodel wheresets,bags,lists,records,andvariantscanbefexi\u00adblycombined.Thesecondisitsuseofahigh-levelquery \nlanguageCPLwhichallowstheseobjectstobemanipulated easily.Thethirdisitsuseaself-describingdataexchange \nformat,whichservesasasimpleconduittoexternaldata sources.Thefourthisitsqueryoptimizer,whichiscapable \nofmanypowerfuloptimizations.Theinfuenceoffunctional programmingresearchontheseideaswasalreadydescribed. \nThereisonelastreasonbehindthesuccessofthesystem. InspiteofthesophisticationoftheKleislisystem,ithas aremarkablycompactimplementation,consistingofabout \n45000ofcodesinStandardMLofNewJersey.Thiscom\u00adpareswelltothe1000000linesofCcodesforatypicalfull\u00adblowncommercialdatabasesystemsuchasOracle,evenaf\u00adtertakingintoconsiderationthatalargeproportionofthese \n1000000linesaredevotedtotransactioncontrol,diskman\u00adagement,anduserinterfaces.Theimplementor(thisau\u00adthor)hasnodoubtthatwithoutthisrobustplatformoffunc\u00adtionalprogramming,itwouldhavedemandedmuchmore \nefortinimplementingKleisli. 6. ACKNOWLEDGEMENTS [19]W.Litwinet.al.Interoperabilityofmultiple PeterBuneman,ValTannen,andLeonidLibkin|formany \nautonomousdatabases.ACMComput.Surveys, yearsoffruitfulcollaboration. 22(3):267{293,1990. 7. REFERENCES \n[1]S.F.AltschulandW.Gish.Localalignmentstatistics. MethodsEnzymology,266:460{480,1996. [2]S.F.Altschulet.al.GappedBLASTand \nPSI-BLAST:Anewgenerationofproteindatabase searchprograms.NAR,25(17):3389{3402,1997. [3]P.G.BakerandA.Brass.Recentdevelopmentin \nbiologicalsequencedatabases.Curr.Op.Biotech., 9:54{58,1998. [4]P.G.Bakeretal.TAMBIS|transparentaccessto \nmultiplebioinformaticsinformationsources.ISMB, 6:25{34,1998. [5]D.Benton.Bioinformatics|principlesandpotential \nofanewmultidisciplinarytool.TIBTECH, 14:261{272,1996. [6]V.Breazu-Tannenet.al.Structuralrecursionasa \nquerylanguage.DBPL,3:9{19,1991. [7]V.Breazu-TannenandR.Subrahmanyam.Logical andcomputationalaspectsofprogrammingwith \nSets/Bags/Lists.ICALP,18:60{75,1991. [8]P.Bunemanet.al.Principlesofprogrammingwith complexobjectsandcollectiontypes.TCS, \n149(1):3{48,1995. [9]C.Burkset.al.GenBank.NAR,20 Supplement:2065{9,1992. [10]R.G.G.Cattell,editor.TheObjectDatabase \nStandard:ODMG-93.MorganKaufmann,1996. [11]J.Chenet.al.UsingKleislitobringoutfeaturesin BLASTPresults.GenomeInformatics,9:102{111, \n1998. [12]J.Chenet.al.Aproteinpatentquerysystempowered byKleisli.ACMSIGMODRecord,27(2):593{595, 1998. \n[13]E.F.Codd.Arelationalmodelforlargeshareddata bank.CACM,13(6):377{387,1970. [14]S.Davidsonet.al.BioKleisli:Adigitallibraryfor \nbiomedicalresearchers.Int.J.DigitalLibraries, 1(1):36{53,1997. [15]G.Donget.al.Localpropertiesofquerylanguages. \nICDT,6:140{154,1997. [16]A.GoldbergandR.Paige.Streamprocessing.In Proc.ACMSymposiumonLISPandFunctional \nProgramming,pages53{62,1984. [17]ISO.Standard8824.InformationProcessingSystems. OpenSystemsInterconnection.Specifcationof \nAbstractionSyntaxNotationOne(ASN.1),1987. [18]L.LibkinandL.Wong.Querylanguagesforbagsand aggregatefunctions.JCSS,55(2):241{272,1997. \n[20]NationalCenterforBiotechnologyInformation, NationalLibraryofMedicine,Bethesda,MD.NCBI ASN.1Specifcation,1992.Revision2.0. \n[21]A.Ohoriet.al.DatabaseprogramminginMachiavelli, apolymorphiclanguagewithstatictypeinference. ACMSIGMODRecord,18(2):46{57,1989. \n[22]Y.Papakonstantinouet.al.Objectexchangeacross heterogenousinformationsources.ICDE,11:251{260, 1995. \n[23]L.C.Paulson.Ahigher-orderimplementationof rewriting.Sci.Comput.Prog.,3:119{49,1983. [24]P.Pearsonet.al.TheGDBhumangenomedatabase \nanno1992.NAR,20:2201{2206,1992. [25]D.Remy.Typecheckingrecordsandvariantsina naturalextensionofML.POPL,16:77{88,1989. \n[26]D.Remy.Efcientrepresentationofextensible records.InProc.ofACMSIGPLANWorkshoponML anditsApplications,pages12{16,1992. \n[27]C.Schoenbachet.al.FIMM,adatabaseoffunctional molecularimmunology.NAR,28(1):222{224,2000. [28]G.D.Schuleret.al.Entrez:Molecularbiology \ndatabaseandretrievalsystem.MethodsEnzymology, 266:141{162,1996. [29]M.Spivey.Afunctionaltheoryofexceptions.Sci. \nComput.Prog.,14:25{42,1990. [30]D.Suciu.Boundedfxpointsforcomplexobjects. TCS,176(1{2):283{328,1997. \n[31]D.SuciuandL.Wong.Ontwoformsofstructural recursion.ICDT,5:111{124,1995. [32]J.D.Ullman.PrinciplesofDatabaseand \nKnowledgebaseSystemsII:TheNewTechnologies. ComputerSciencePress,1989. [33]P.Wadler.Comprehendingmonads.Math.Struct. \nComput.Sci.,2:461{493,1992. [34]S.Walshet.al.ACEDB:Adatabaseforgenome information.MethodsBiochem.Anal.,39:299{318, \n1998. [35]L.Wong.QueryingNestedCollections.PhDthesis, DepartmentofComputerandInformationScience, UniversityofPennsylvania,Philadelphia,PA19104, \nAugust1994. [36]L.Wong.AnintroductiontoRemy'sfastpolymorphic projection.ACMSIGMODRecord,24(3):34{39,1995. \n [37]L.Wong.Kleisli,afunctionalquerysystem.J.Funct.Prog., 10(1):19{56,2000. \n\t\t\t", "proc_id": "351240", "abstract": "Kleisli is a modern data integration system that has made a significant impact on bioinformatics data integration. The primary query language provided by Kleisli is called CPL, which is a functional query language whose surface syntax is based on the comprehension syntax. Kleisli is itself implemented using the functional language SML. This paper describes the influence of functional programming research that benefits the Kleisli system, especially the less obvious ones at the implementation level.", "authors": [{"name": "Limsoon Wong", "author_profile_id": "81452618356", "affiliation": "Kent Ridge Digital Labs, 21 Heng Mui Keng Terrace, Singapore 119613", "person_id": "PP39081399", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/351240.351241", "year": "2000", "article_id": "351241", "conference": "ICFP", "title": "The functional guts of the Kleisli query system", "url": "http://dl.acm.org/citation.cfm?id=351241"}