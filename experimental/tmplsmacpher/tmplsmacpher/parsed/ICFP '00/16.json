{"article_publication_date": "09-01-2000", "fulltext": "\n e t sett ew de ysea edydg m estmotv de ageae e dg W a o ta sa ta g . sdo . eo a sw eo tt e egw e: eo \nnlnn=i ev e nsaw r e[ ,z)<-[(y, ,(y-2 z s.F ,m H o g n et IC FP 00, Montr\u00e9al, Canada. , a d Copyright \n2000 ACM 1-58113-202-6/00/0009 $5.00. Howanweimplementasortingnetworksothatwenotonly getthevaluessorted,butalsoatransriptoftheoperations \nperformedduringsortingWewanteahomparatorunit toreportontheoperationitperformedwhilesortingtook plae.Theoutputmonadspringstomind.Wetranslate \nthesortingnetworkinFigure1almostliterallyintoHaskell odeofFigure2. newtypeOuta=Out(a,String) instaneMonadOutwhere \nreturnx =Out(x,UU) Out-(x,s)))=\u00a3=letOut(y,s')=\u00a3x inOut(y,s++s') instaneShowa=)Show(Outa)where show(Out(v,s))=UValue \nU++showv ++U\\nTrae U++s omp lnt-)(lnt,lnt)-)Out(lnt,lnt) ompi(a,b)=Out((maxab,minab),msg) where =U swapU++show(a,b) \n2=U passU++show(a,b) msg=U\\nUnitU++showi++ (i\u00a3a<bthen else2) typeQuadlnts=(lnt,lnt,lnt,lnt) sort4 Quadlnts-)OutQuadlnts \nsort4(a,b,,d)= do(e,\u00a3)<-omp (a,b)--unit (g,h)<-omp2(,d)--unit2 (n,i)<-omp3(e,g)--unit3 (j,k)<-omp4(\u00a3,h)--unit4 \n(m,l)<-omp5(i,j)--unit5 return(k,l,m,n) Figure2:H skello eforthenetworkinFigure1 Hereisasamplerun: Main)sort4(23,2,-,2) \nValue(- ,2, 2,23) Trae Unit pass (23, 2) Unit2swap (- ,2) Unit3pass (23,2) Unit4pass (2,-) Unit5swap \n(2, 2) Aquiklookatthetraerevealsthatitisonsistentwith theoperationofthenetworkforthispartiularinput. \nInthedefnitionofsort4,wearefullyseletedtheexeution orderoftheunitssuhthatallvalueswereavailablebefore \ntheywereused.Whatifitwasinonvenienttoarrangefor this Inourexample,forinstane,whatifwewanttosee theoutputofunitafterunit5Notiethatunit5uses \nthevaluei,whihisproduedbyunit.Ideally,wewould liketobeabletohangethefuntionsort4to: sort4(a,b,,d)= do(e,\u00a3)<-omp \n(a,b)--unit (g,h)<-omp2(,d)--unit2 (j,k)<-omp4(\u00a3,h)--unit4 (m,l)<-omp5(i,j)--unit5 (n,i)<-omp3(e,g)--unit3 \nreturn(k,l,m,n) Thatis,wemovethelineorrespondingtounitafterthat ofunit5.Althoughthisisthemostintuitivethingtodo, \ntheresultingodeisnolongervalid:Thevariableiisnot insopewhenit'sused. Howshouldwefxthis Inthissimplease,theobvious \nsolutionwouldbetopostproesstheoutputoftheorigi\u00adnalprogramtoobtaintherequiredordering.Butthisis notaverysatisfatoryapproah.Inpartiular,thefailed \nattemptofreorderinglinesinthedo\u00adexpressionisquiteap\u00adpealing.Afterall,thevaluethatisomputedbysort4(i.e. \nthequadruplerepresentingthesortedpermutation doesnot dependontheorderweobservetheoutput.Theattempt wouldhavebeensuessful,ifonlywehadawaytobind \nvariablesreursivelyinthedo\u00adnotation. 2.2 Resettable counter Thepreviousexampledidn'tabsolutelyrequirereursive \nbindingsbeausethevaluesboundbythedo\u00adnotationould besequentiallydefned.Thisisnotalwaysthease.Our seondexampleomesfromthehardware\u00admodelingdomain. \nMiroarhiteturaldesignlanguageshavebeenthetargetof programminglanguageresearhinreentyearsbeauseof theomplexityofsuhdesigns.Lava[1]andHawk[11, \n16]aretworeentsystemsdesignedtoaddressthisneed. Lavausesmonadsintensivelyinmodelingvariousiruit elements.Originally,Hawkusedasimilarmonad\u00adbased \napproahaswell.Thistehniqueprovidesaveryfexible frameworkfortranslatingspeifationstoVHDLorVerilog desriptionsthatouldbeusedinproduingrealiruits. \nByjustplugging\u00adin\"theappropriatemonad,theverysame desriptionanbeusedinsimulationorinobtainingdesrip\u00adtionsoftheiruitinotherlanguages.Butthisomesata \nertainost,asweexplorehere. reset zero out 0 MUX +1 next DELAY 0 inc Figure3:Resett bleounteriruit Hawkuseslazyliststomodelsignalsfowingthroughir\u00aduits.Theearlymonad\u00adbasedimplementationofHawkused \naCiruitmonad,whihisbasiallyaombinationofthe stateandoutputmonads.Withoutgoingintodetails,we onsidertheiruitofFigureasmodeledinHawk.Using \ntheCiruitmonad,wewouldliketomodelthisiruitby: ounter Signalool-)iruit(Signallnt) ounterreset=donext<-delay0in \nin<-li\u00a3t (+)out out<-muxresetzeronext zero<-li\u00a3t00 returnout Notiethatthedesriptionfollowstheiruitalmostliter\u00adally,butagain,theprogrampresentedisnotvalidHaskell. \nThevariablesin,outandzeroareusedbeforetheyarede\u00adfned.Furthermore,beausethedefnitionsareyli,there isnowaytoserializethisprogram.Thefeedbakpresentin \ntheiruitausestheproblem.Again,weneedtobeableto bindvariablesreursivelyinthedo\u00adnotation.Thisproblem isthemainreasonwhytheurrentimplementationofHawk \ndoesnotuseexpliitmonadistyle. 3. RECURSIVE BINDINGS FOR DO Currently,ado\u00adexpressioninHaskellbehaveslikethelet* \nofSheme:theboundvariablesareavailableonlyinthe textuallyfollowingexpressions.Weneedthedo\u00adnotationto behavemoreliketheletofHaskell,whihallowreursive \nbindings.Ofourse,itisnotneessarilytheasethatall monadswillallowforsuhreursivebindings.Wealla monadreursive,ifthereisasensible\"waytoallowforthis \nkindofreursion.Weodifywhat sensible\"shouldmean inSetion4.Inthissetion,welookatasyntatiextension toHaskellthatallowsreursivebindingsinthedo\u00adnotation. \nThisextensionisavariantofthedo\u00adnotation,alledthe pdo\u00adnotation.Justlikethedo\u00adnotationisavailableforany \nmonad,thepdo\u00adnotationwillbeautomatiallyavailablefor anyreursive\u00admonad. 3.1 The new translation Reallthatado\u00adexpressionistranslatedintoaseriesofap\u00adpliationsof>=[10].Similarly,weneedpdototranslate \nintomoreprimitiveomponents.Weuseafxed\u00adpointop\u00aderator,alledmfx,whosetypeisVV(--, whereistheunderlyingmonad.Thetranslationis: \nmfix()- .doP. fe. pdoP. fe. ... ... = P.fe. P.fe. vfe e return) >=) .returnv wherestandsforthe\u00adtupleonsistingofallthevari\u00adablesourringinallthebindingpatternsplusthebrand \nnewvariablev.NotiethateahoneofP.VVVP.,thebinding patterns,anbeanyvalidHaskellpattern,notjustsimple variables.Thevariablesthatareboundbythesepatterns \nmayappearanywhereine.VVVe.ande.Avariablemay notbemultiplybound:neitherinthesamepattern,norin diferentpatterns. \nAsanexample,onsiderthefollowingpdoexpressionwhih implementsasortingnetworkforthreenumbers: mdo(d,e)<-omp \n(a,b) (i,h)<-omp3(d,\u00a3) (\u00a3,g)<-omp2(e,) return(g,h,i) Afterthetranslation,itbeomes: m\u00a3ix(\\-(d,e,i,h,\u00a3,g,v)-) \ndo(d,e)<-omp (a,b) (i,h)<-omp3(d,\u00a3) (\u00a3,g)<-omp2(e,) v <-return(g,h,i) return(d,e,i,h,\u00a3,g,v)) ))=\\(d,e,i,h,\u00a3,g,v)-)returnv \nTheinstaneofmfxusedinthetranslationisautomatially deduedbytheHaskelltypesystemtobetheinstaneat theoutputmonad. \nAlthoughthetranslationofpdousingdoissimilartothe translationofletreusingletandtheusualfxed\u00adpoint operatorfx,thereisanimportantissue.Languagessuhas \nHaskellprovideageneridefnitionoffxthatworksforall types.Butthereseemstobenoappropriategeneridefni\u00adtionofmfxthatwillworkforallmonads.Instead,wehave \ntofndanappropriatedefnitionofmfxforeahmonad.To ahievesomelevelofofuniformity,westipulatesomeaxioms thatmfxmustsatisfy,andattempttodisoversatisfatory \ndefnitionsforindividualmonads.Wesaythatamonadis reursivewhenthereisadefnitionofmfxsatisfyingour axioms.Apdo\u00adexpressioniswell\u00adtypediftheunderlying \nmonadisreursiveandthetranslationiswell\u00adtyped. 3.2 Repeated variables and let-bindings Inthetranslationofthepdo\u00adnotation,weexpliitlyprohib\u00aditedavariablefrombeingrepeatedindiferentpatterns(rep\u00adetitionwithinthesamepatternisdisallowedfollowingthe \nusualHaskellonvention .Inthedo\u00adnotation,arepeated variablehasnothingtodowithitspreviousbinding:anew bindingusingthesamenameshadowstheearlierone.Ifwe \nallowrepetitionsinthepdo\u00adnotation,however,thetransla\u00adtionwouldnottreatthemasindependent.Furthermore,a \nrepeatedvariablemighthangeitstypeinthedo\u00adnotation, butthiswillfailtotypehekforthepdo\u00adnotation.More importantly,onemightexpetthatrepeatedvariableswill \nprovideawayofonstrainingthevaluesthattheymight takeinthepdo\u00adnotation,whihisnotwhatthetranslation implies.Hene,evenifthetranslationgoesthrough,this \nmightleadtomisunderstandings.. Allowingletbindingsinthepdo\u00adnotationisanotherissue. Inthedo\u00adnotation,letbindingsallowgivingnamestonon\u00admonadiomputationsinaonvenientmanner.Canweal\u00adlowtheminthepdo\u00adnotationaswell \nAnobviousextension istotreatthemasreursivebindingsthatarevalidthrough\u00adoutthewholebody,suggestingthefollowingtranslation: \nmfix()-.do...1... pdo...1... letP. =e. letP. =e. ... ... = P.=e. P.=e. ...2... ...2... vfe e return) \n>=) Vreturnv Thetranslationissimilartowhatwehadbefore,exeptnow thevariablesboundinP.VVVP.appearinaswell.How\u00adever,thisposessomeproblems.InHaskell,letboundvari\u00adablesarepolymorphi,while)\u00adboundonesaremonomor\u00adphi.ThisimpliesthatthevariablesboundinP.VVVP.are \nmonomorphiintheodeblokmarkedby...1...but polymorphiine.VVVe.,...2...,andine.Thisisnot .Inasimilarvein,theusualdo\u00adnotationshouldnotal\u00adlowrepetitionseither.Listomprehensionsbeomeespe\u00adiallyhorrible:fx=xx \nx..4],x x..8]]is aonfusing(yetlegalHaskellfuntion. adesirablesituation.Asaonreteexampleonsiderthe followingtranslation: \nm\u00a3ix(\\(-(z,y,\u00a3,v))-) mdo doz<-return(\u00a32) z<-return(\u00a32) y<-return(\u00a3'a') y<-return(\u00a3'a') let\u00a3x=x let\u00a3x=x \n===) v<-return() return() return(z,y,\u00a3,v)) ))=\\(z,y,\u00a3,v)-)returnv Thetranslationfailstotypehekforobviousreasons:The \nfuntionfisnolongerpolymorphi. Thesolutionweadoptistorequireletbindingstobemono\u00admorphiinapdo.Thatis,letbeomesjustasyntati \nsugarwithinpdo,translatedas:. letP. =e. P. freturne. ... =... P.=e. P.freturne. Thisgivesusauniformdesign.Ifapolymorphivaluedefni\u00adtionisrequired,oneshouldusethestandardletexpressions \nofHaskell,ratherthantheletgenerator,whihwillreate itsownsopewithpolymorphinames.(Thetranslation andtherelatedissuesaredisussedindetailinaompanion \nimplementationpaper[4]. 3.3 Implementation WehaveamodifedversionofHugssupportingthepdo\u00adnotation.. Thisimplementationatsasapreproessor,i.e. \nitperformsthetranslationatthesourelevel,andhenethe amountofmodifationswemadeintheHugssoureode isfairlysmall.Weexpetthesametoholdwhenthetrans\u00adlationisdoneinsidetheompiler.Basially,therequired \nhangeswillbeloalizedtotypehekingandde\u00adsugaring routines. Therelatedlassdelarationforreursivemonadsis: \nlassMonadm=)MonadRemwhere m\u00a3ix (a-)ma)-)ma Inthissimpleimplementation,ourrenesofletexpres\u00adsionsaretranslatedblindly,withoutrequiringthemtobe \nmonomorphi.Theassoiatedtypingproblemsareignored.  4. RECURSIVE MONADS Theprevioussetionaddressedsyntax.Nowweturnto \nthemeatoftheissueandstudymfxdiretly.Westartby lookingforagenerimfx. .Thisextendstofuntionsaswell,basiallyletfy=z \nxwillbeomeffreturn()xV)yVz). .Moreinformationanddownloadinginstrutionsare availableathttp://www.se.ogi.edu/PaSoft/projets/ \nmuHugs. 4.1 The generic m.x Thefxedpointoperator,fx,whihhastypeVV(-\u00ad ,hasageneridefnitionthatworksforalltypes. \n. Fora lazylanguagelikeHaskell,thedefnitionisjust: fx::(-\u00ad fxf=f(fxf IsthereageneridefnitionformfxaswellInspiredby \nthegeneridefnitionoffx,weonsiderthefollowing(all equivalent defnitionsformfx: mfx::Monad(-\u00ad mfxf=mfxf>=f \nmfxf=do{xfmfxf;fx} mfxf=fx(join\u00b7mapf Unfortunately,thisdefnitionissimplynotappropriate.To seewhy,weshouldspeifywhatsortofpropertieswewant \nmfxtohave.Firstofall,wewouldexpetaonstantfun\u00adtion,onethatignoresitsargumentandalwaysreturnsthe sameresult,shouldhavethatresultasitsfxedpoint.This \nertainlyholdsforfx.Weillustratethatthispropertydoes notholdfortheMaybemonadwiththisdefnition.Hereis thesimplesttest: \nMain)m\u00a3ix(onst(Just3)) ERROR ontrolstakover\u00a3low Itisnothardtoseewhythisdefnitionfailstosatisfythere\u00adquiredproperty:Considerthethirdversionoftheattempted \ndefnition.Sinebothjoinandmapfarestrit,soistheir omposition:Sinetheleastfxed\u00adpointofanystritfun\u00adtionis.,theresultis.aswell. \nLookingloselyatthedefaultdefnition,weseethefollow\u00ading:Toomputethemfxofafuntionoftype-,we frstonstrutafuntion-. \n,andthenompute theusualfxed\u00adpointofit.Inotherwords,thefxed\u00adpointis omputednotonlyforthevaluesthataremanipulated,but \nalsofortheefetsthattakeplaeduringtheexeution. Now,reallingtheoriginalintuitionbehindpdo\u00adnotation, weseethatthisisnotwhatwewanted.Wewantthe \nfxed\u00adpointomputationtotakeplaeonlyoverthevaluesof monadiations,whiletheefetsandotheromputations remainuntouhed. \n 4.2 Axiomatizing m.x Sofar,wehavebeenusingphraseslikeasuitabledefnition ofmfx\"somewhatloosely.Thetimehasometomake \nsuitable\"preise.Wegivethreeaxiomsthatmfxmust satisfy,summarizedinFigure4. Axiom1isaboutpureomputations: \nmfx(return\u00b7h=return(fxh .Tehnially,theunderlyingtypeneedstobeapointed CPO,butthisrequirementisvauouslysatisfedinHaskell \nasalltypesarepointed,i.e.non\u00adterminationanhappenat anytype. . Thisistheso\u00adalledextensionofafuntionfromvaluesto \nomputationstoafuntionfromomputationstoomputa\u00adtions,see[17]fordetails. mfx()-(x mfx(return\u00b7hmfx()xV>=fxVmfx()-(yVf(xy \n=== return(fxh >=)yVmfx()xVfxy mfxf (1 (2 ( Figure4: Axiomsformfx. n x io m 2 xisnotfreein .  Figure5:mfx(return\u00b7h=return(fxh \n Figure6:mfx()xV>=fx=>=)yVmfx()xVfxy Figure7:mfx().(x Vmfx().( yVf(xy=mfxf Iftheatualomputationtakesplaeinthepureworldand \ntheresultisliftedintothemonadusingreturn,thefxed\u00adpointshouldbethefxed\u00adpointinthepureworldliftedinto themonad.Figure5isapitorialrepresentationofthis \naxiom.Thedashedboxrepresentswherethemfxompu\u00adtationtakesplae.Inthisfgure,theloopontherighthand siderepresentsfx,whiletheoneontheleftorrespondsto \nmfx.Thethinlinerepresentsthevaluebeingproessed throughtheomputation.Thethiklineinthelowerpart ofthediagramrepresentstheomputationalefet(sideef\u00adfets,otherhangesinthemonadidata,et.Notiethat \nthefxed\u00adpointisomputedonlyoverthevaluepart. Axiom2showshowtopullatermthatdoesn'tontribute tothefxed\u00adpointomputationfromtheleft\u00adhand\u00adsideofa \n>=.Providedxdoesnotappearfreein: mfx()xV>=fx=>=)yVmfx()xVfxy Notiethatthevalueofisonstantthroughouttheom\u00adputation.Hene,weshouldbeabletoomputeitonlyone \n(ifneedbeandputitintothefxed\u00adpointloop.Figure6 isapitorialrepresentationofthisaxiom.Notiethatboth handsidesareessentiallythesame. \nAxiom,depitedinFigure7,statesausefulfatabout fxed\u00adpointomputationsinvolvingmorethanonevariable: mfx()-(x \nVmfx()-( yVf(xy=mfxf Thefuntionfhastype:VV(-(.Onthe righthandside,weomputethefxedpointsimultaneously \noverbothvariables.Onthelefthandside,weperforma twostepomputation,wherethefxed\u00adpointisomputed usingonlyonevariableatatime.Thisaxiomorresponds \ntoBekiC'stheoremforusualfxed\u00adpointomputations[22]. Notiethat,again,bothhandsidesofFigure7areessen\u00adtiallythesame.Itanbeshownthatthesymmetrilaw: \nmfx()-( yVmfx()-(x Vf(xy=mfxf holdswheneveraxiomdoes. Now,weanpreiselydefnewhatitmeansforamonadto bereursive: \nDefnition. eursivemonads.Amonadisreursive ifthereisafuntionmfx::VV(--satisfying themfxaxioms.  4.3 Derived \nequivalences Adiretorollarytofrsttwomfxaxiomsguaranteesan expetedpropertyofonstantfuntions: .........1.mfx()xV=,providedxdoesnotap\u00adpearfreein. \nWealsohave: .........2.f..mfxf Notiethatorollary2statesmorethanarudimentaryfat: fyieldsvaluableinformationonthestrutureofthefxed\u00adpoint.(Forinstane,iff::-[],andiffisaons\u00adell, \nthensoismfxf.Inpartiular,iffisafnitelistof length,thenthelengthofthefxed\u00adpointisaswell. Thepolymorphinatureofmfxprovidesfurtherproperties. \nBytheparametriitytheorem[20],wehave: .......1.Vs:A-f:A-Ag:-, ifg\u00b7s=maps\u00b7fthenmaps(mfxf=mfxg,provideds \nisstrit. Asspeifinstanesofthistheorem,weobtainthefollowing twoorollaries: ..........Thefolloinequationholdsforanyre\u00adursivemonad: \nmfx().(xyVfy>=return\u00b7sphid =mfxf>=return\u00b7sphid(4 here sphgz=seqz(hzgz Notiethatspisstritinitsthirdargument.Ignoringthe \nstritnessrequirementforamoment,equation4beomes: mfx()-(xyVfy>=)zVreturn(hzz =mfxf>=)zVreturn(hzz (5 Thefuntionfonlyreferstoyanditisfedbakexatlyits \nownresult.However,thefxed\u00adpointvaluealsogetsated uponbyapurefuntionh,whoseresultisignoredbyf. Figure8depitsthesituation.(Thesymmetriasewhenh \natsontheseondomponentofthepairwhilefusesonly thefrstomponentholdsaswell. Thisequationisimpor\u00adtantbeauseittellsusthat \npure\"omputationsthatdo notinterferewiththefxedpointomputationanbeper\u00adformedafterwards.Thestritnessrequirementonspseems \ntobeanunfortunateartifatoftheorem1;allmonadsthat wehaveworkedonsatisfyequation5withnosideondi\u00adtions.(Unfortunately,inaframeworkwhereeverytypehas \naelement,theparametriitytheoremisweakenedbythe stritnessrequirement[12]. Finally,weanmovepureomputationsaround: \n.........4.Providedhisstrit,thefolloinequa\u00adtionholdsforanyreursive\u00admonad: mfx()xVfx>=return\u00b7h =mfx()xVreturn(hx>=f>=return\u00b7h(6 \nheref::-andh:-.Equivalently: mfx(maph\u00b7f=maph(mfx(f\u00b7h Figure9depitsthesituation.Thepurityrequirementon \nhisessential:weannotreorderanyefets,asorderdoes matterinperformingthem.Thestritnessrequirementon hisquiteimportantaswell.Intuitively,thefxed\u00adpoint \nomputationonthelhswillstartofbyfeedingtof,while theomputationontherhswillstartofbyfeedingh. Unlessh=,thiswillprovidemoreinformationtofon \ntherhs.Hene,wemightgetaonthelhs,whileanon\u00advalueontheright.(WewillseeanexampleinSetion6.2. However,therearemonadsforwhihtheequalityholdseven \nwhenhisnon\u00adstrit.Thestatemonadissuhanexample (Setion6.4 . Theinspirationfororollary4omesfromaverywellknown \nlawforfxed\u00adpointomputations: fx(f\u00b7g=f(fx(g\u00b7f Oneanseetheorrespondenemorelearlybyusing leisli omposition,defnedas:f0g=)xVfx>=g,wherexdoes \nnotourfreeinforg.Now,equation6beomes(0binds lesstightlythan\u00b7: mfx(f0return\u00b7h=mfx(return\u00b7h0f>=return\u00b7h \n 4.4 Shrinking from right Corollarystatesexatlywhenweareallowedtopullapure omputationoutfromtheright\u00adhand\u00adsideofa>=.Can \nwepulloutomputationsinvolvingefetsaswell Con\u00adsiderFigure10whihdepitstheasewhengisallowedto makeomputationalefets.Sinethevalueproduedby \ngisignoredinthefxed\u00adpointomputation,onemightex\u00adpetpullinggoutoftheloopnottohangethevalueofthe omputation.Indeed,ourearlyaxiomatizationstipulated \nthisproperty.However,itturnsoutthattheequalityis toostrongformanymonads.Aproblemarisesbeausethe monadipartoftheomputationingmightinterferewith \nthefxed\u00adpointomputation,possiblyhangingthetermina\u00adtionbehavior.Therefore,thebestweouldhopeforisan inequalityinthegeneralase,thatis: \nmfx()-(xyVfx>=)zVgz>=) Vreturn(z .mfxf>=)zVgz>=)Vreturn(z (7 Wewillnotetheexamplesinwhihtheequalityholdsor \nfailsinSetion6.  4.5 A re.ection on m.x axioms Wehavetriedtoaxiomatizehowreursionoverthevalues ofmonadiationsshouldbehave.Allthreeaxiomsemerge \nfromourintuitionsforreursivemonadiomputations.At thispoint,however,ourapproahismoredefnitivethan explanatoryinitsnature,andwehavefeltfreetowork \nwithinthestandardmodelforHaskellinwhihalltheCPO's possessaelement. Theextenttowhihouraxiomatizationissuessfulwill \nbedeterminedbypratie.Ouraxiomsouldbedeemed appropriateiftheyruleoutuselessdefnitionsofmfxand admitonlythosethataremeaningfulinpratie.Notie \nthatwedonotrequireauniquedefnitionofmfx(ifany foragivenmonad:diferentappliationsusingthesame monadmightoneivablybeneftfromdiferentdefnitions \nofmfx.Ouronernisintryingtospeifytheommonore ofmonadifxed\u00adpointomputations.Themajorpointsare:  Figure8:mfx()(xyVfy>=)zVreturn(hzz=mfxf>=)zVreturn(hzz \n Figure9:mfx()xVfx>=return\u00b7h=mfx()xVreturn(hx>=f>=return\u00b7h z x z g w y f  x f g w z   Figure10:mfx()(xyVfx>=)zVgz>=)Vreturn(z.mfxf>=)zVgz>=)Vreturn(z \n Thefxed\u00adpointomputationshouldbeperformedonly overthevalues.  Efetsofmonadifuntionsshouldneitherbedupli\u00adatednorlostinafxed\u00adpointomputation.Theusual \nlawsof demanddriven\"evaluationandthestruture oftheunderlyingmonadwilldeterminewhen,ifever, theseefetswillbeperformed. \n Intheasewhentherearenoreursivelyboundvari\u00adables,apdo\u00adexpressionshouldbehaveexatlylikean ordinarydo\u00adexpression. \n Ouraxiomstrytoapturethesepointsformally.Somemon\u00adadsmight,ofourse,satisfymorelaws(suhasshrinking fromright \n,andusersmightexploitthesefatsinprograms. Ontheotherhand,webelievethatouraxiomatizationap\u00adturestheminimalommonorethatshouldbesatisfedby \nanymonadinordertoperformreursiveomputationsover theresultsofmonadiations.  5. EMBEDDING MONADS Wheneverwewanttoestablishthatamonadisreursive, \nweneedtoprovethattheaxiomsaresatisfedbythepro\u00adposeddefnitionofmfx.Inpratie,wehavefoundourselves repeatingessentiallythesameproofformanydiferentmon\u00adads.Reursive\u00admonadembeddingsletsuseliminatemuhof \nthedupliatedwork.Wefrstreallthedefnitionofmonad homomorphismsandembeddings: Defnition.onadhomomorphisms/embeddin \ns.Let andnbetwomonads.Amonadhomomorphism,C:-n, isafamilyoffuntions(oneforeahtype,C.:-n suhthat: C\u00b7return.=return. \n(8 C.(P>=.h=C.P>=.C.\u00b7h (9 whereP:andh:-.Anembeddingisamoni (i.e.injetive monad\u00adhomomorphism. Weextendthedefnitiontooverthereursivease: \nDefnition.eursive\u00admonadhomomorphismsandem\u00adbeddin s.Letandnbetworeursive\u00admonadsandlet C:-nbeamonadhomomorphism.WeallCareursive\u00admonadhomomorphismifitalsosatisfes: \nC(mfx.h=mfx.(C\u00b7h (10 Similarly,areursive\u00admonadembeddingisamonireursive\u00admonadhomomorphism. Wewillseeonreteexamplesofreursive\u00admonadembed\u00addingsinthenextsetion. \n.......2.LetC:-nbeanembeddinofamonad intoareursive\u00admonadn.Toonludethatisreur\u00adsive,itissu\u00c6ienttosho thatthereexistsafuntionmfx. \nsuhthatCisareursive\u00admonadembeddin . Theproofisbysimpleequationalreasoning.Wealsonote thatequations4,5,6,and7arepreservedthroughmonad\u00adembeddingsaswell.Furthermore,ompositionoftwoem\u00adbeddingsisstillanembedding. \nThistheoremnotonlyprovidesamethodforobtainingproofs formfxaxiomsautomatiallyforertainmonads,butit alsoprovidesadditionalassuranethattheaxiomsrepre\u00adsentharateristipropertiesofmonadifxed\u00adpoints. \n 6. EXAMPLES OF RECURSIVE MONADS Inthissetionweexamineanumberofmonadsthatare frequentlyusedinprogramming. \n6.1 Identity Theidentitymonadisthemonadofpurevalues.TheHaskell delarationsare: newtypelda=ldunld a} instaneMonadldwhere \nreturnx =ldx ldx))=\u00a3=\u00a3x instaneMonadReldwhere m\u00a3ix\u00a3=\u00a3ix(\u00a3 unld) Notiethatweuseanewtypedelarationratherthanadata. \nThishoieisnotarbitrary.SineallHaskelldatatypes arelifted(i.e.andId arediferent,wewouldintro\u00addueanunwantedelementifwehaduseddata.Itisa \nsimplemattertohekthatmfxaxiomsaresatisfed.One partiularwayofdoingsoisbyembeddingtheIdmonad intoanotherreursive\u00admonad,forinstanetheStatemonad \n(Setion6.4 .Inaddition,equation5issatisfed,equation6 holdsevenifhisnon\u00adstrit,andequation7holdsasan equality. \n 6.2 Maybe TheMaybemonad,themonadofexeptions,hasthefollow\u00adingMonadRedelaration: instaneMonadReMaybewhere \nm\u00a3ix\u00a3=\u00a3ix(\u00a3 unJust) whereunJust(Justx)=x TheproofthattheMaybemonadisreursivefollowsfromthe fatthatitanbeembeddedintotheListmonad.Before \nstudyingtheListmonad,westatealemmalassifyingmfx offuntionsfortheMaybemonad. .....1.TheMaybeinstaneofmfxsatisfesJabbre\u00adviatesJust,NabbreviatesNothing): \nmfxf=f-f= mfxf=Nf-f=N mfxf=J f-f=J unjust(mfxf=fx(unjust\u00b7f Thefrstthreeequivalenesexatlydeterminewhenthefxed\u00adpointis,NothingorJust \n.Thelastequalityisaon\u00adsequeneofthedefnitionofmfx.Animpliationofthese equationsisthatmfxofafuntionfoftype-Maybe \nisf,wheneverisafatdomain. Equation5willholdfortheMaybemonad,butastrithis neededforequation6.Toseewhy,onsiderthefollowing \nexample: \u00a3 [lnt]-)Maybe[lnt] \u00a3(x )=Just[x] h [lnt]-)[lnt] hxs= xs Onthelhsofequation6,weget,whilerhsyieldsJust[11]. \nThisisduetothefatthatfperformsaaseanalysistosee ifitsargumentisanon\u00ademptylist.Whenthefxed\u00adpoint omputationstarts,ffrstreeivesastheargumentand \nprodues.Sine>=fortheMaybemonadisstritinits frstargument,thewholeomputationfails.Ontherhs, however,ffrstreeives1:,andproduesJust[1],and \ntheomputationproeeds. Wealsorevisittherightshrinkinglaw(Setion4.4within theontextoftheMaybemonad.Consider: \n\u00a3 [lnt]-)Maybe[lnt] \u00a3xs=Just( xs) g [lnt]-)Maybelnt g[x]= othing g = othing Forthisexample,lhsofinequation7yields,whilethe \nrhsyieldsNothing.Lookinglosely,weseethattheright handsidefrstproduesthefxedpointoff,whihisof theformJustxswherexsistheinfnitelistonsistingof \nall1's.Then,outsidethemfxloop,gignoresthisvalue andreturnsNothing.Withinthemfxloop,thefxed\u00adpoint isonstrutedasthelimitofthehain:{.1:1: \n1:VVV}.Whenwelookatthelefthandside,weseea diferentsituation.Thefuntiongatsoneahvalueinthis hain,andityieldsfortheseondelement.(Mathing \n1:against[x]leadstonontermination. Now,thefxed pointisomputedoverandoverstartingfrom,yielding astheresult.Ingeneral,theMaybemonadwillsatisfy \nproperty7asaninequality.Ifwelookmorelosely,wesee thattheproblemlieswithinthefatthat>=fortheMaybe monadisstritinitsfrstargument.Unfortunately,there \nisnowaytoalleviatethisproblem.Weonludethatthis propertyannotbesatisfedaslongasthe>=ofthemonad isstritinitsfrstargument.Thisrequirementpratially \nrulesoutanydatatypethathasmorethanoneonstrutor fromsatisfyingproperty7asanequality. 6.3 List TheMonadRedelarationfortheListmonadis: \ninstane MonadRe[] w here m\u00a3ix \u00a3 = a se \u00a3ix (\u00a3 head) o\u00a3 [] -) [] (x ) -) x m \u00a3ix (tail \u00a3) Theintuitionbehindthisdefnitionofmfxisthefollowing: \nForafuntionoftype-[],thefxedpointisoftype[], i.e.it'salist.Eahelementofthisfxed\u00adpointshouldbe thefxedpointofthefuntionrestritedtothatpartiular \nposition.Thatis,theithentryofthefxedpointofafun\u00adtionwithtype-[],sayf,shouldbethefxedpointof thefuntion:head\u00b7tail. \n\u00b7f.Inotherwords, mfx()xV[h.xVVVh.x]=[fxh. VVVfxh.] or,moregenerally: mfxf=fx(head\u00b7f:mfx(tail\u00b7f Thisdefnitionwillworkwellaslongasthefxed\u00adpointis \naninfnitelist.However,itfailstoapturethefnitease. Notiethatweareomputingthefxedpointsofthefun\u00adtionsoftheformhead\u00b7f.Iffeverreturns],wewantto \nstoptheomputation,ratherthantakingthehead(whih willyield.Hene,reallingthat fx(head\u00b7f=head(fx(f\u00b7head weanomputethefxedpointsofthefuntionsoftheform \nf\u00b7head(whoseresultswillbelists ,andstopwhenweget anemptylist.Puttingtheseideastogether,wearriveatthe \ndefnitionwehavegivenabove. AnalogoustoLemma1,wehave: .....2.TheListinstaneofmfxsatisfes: mfxf=f-f= mfxf=[]f-f=[] \nmfxf=[]f-f=[] head(mfxf=fx(head\u00b7f tail(mfxf=mfx(tail\u00b7f mfx()xVfx:gx=fxf:mfxg mfx()xVfx++gx=mfxf++mfxg \nThefrsttwoequivalenesimplythatwhenfisaons\u00adell (i.e.oftheform(x:xs,thenmfxfisalsoaons\u00adell. Usingthislemma,provingthatmfxaxiomsholdisatedious \nbutstraightforwardexerise. TheembeddingoftheMaybemonadintotheListmonad simplytakesNothingto]andJustxto[x].Bythedis\u00adussiononembeddings,wedonotexpettheListmonad \ntosatisfyequation6whenhisnon\u00adstritandequation7as anequalitysineweknowthattheMaybemonaddoesnot havetheseproperties.Indeed,itispossibletoonstrut \nounterexamplesfortheListmonadaswell.Equation5, aswithallotherases,holdsfortheListmonad. Weanfnallysolvethepuzzleposedintheintrodution. \nFirst,usingourintuitionfortheListmonadandreursive bindings,wetrytoderivethesolution.Itiswellknown thatthedo\u00adnotationandtheusuallistomprehensionsof \nHaskelloinidefortheListmonad.Hene,weanthink ofthepuzzleasthefollowinglistomprehension: [x+y (x,z)<-[(y,),(y-2,2),(y-3,3)], \nJusty<-mapisEven[z+ 2 z]] NotiethatthislistomprehensionisstillnotvalidHaskell: Thevariableyisusedbeforeitsvalueisgenerated.Never\u00adtheless,weapplytheusualrulesfordeomposinglistom\u00adprehensions[21].Weobtain: \nonat[[x+y Justy<-mapisEven[z+ 2 z]](x,z)<-[(y, ),(y-2,2),(y-3,3)]] Notiethatwehaveanestedomprehensionnow.Atthis \npoint,weanexpandtheouteromprehensionforeahas\u00adsignmentto(xz.Thisstepiswhereweuseourintuition forthereursivebindingsforinterpretingthefreevariable \ny:Wesubstituteitforxsymbolially.Thisyields: onat[[y+y Justy<-mapisEven[2 2]], [y-2+y Justy<-mapisEven[3 \n4]], [y-3+y Justy<-mapisEven[4 6]]] Now,routinealulationsyield:[4,20,68,222]. Whenwerunthepuzzleusingthepdomodifedversionof \nHugs(afterreplaingthekeyworddowithmdo,wegetex\u00adatlythesameanswer. 6.4 State TheStatemonadisusedtoaptureomputationsthatin\u00advolvemutablevariables[1,14].Herearethedefnitions: \nnewtypeStatesa=STunST (s-)(a,s))} instaneMonad(States)where returnx =ST(\\s-)(x,s)) ST\u00a3))=g=ST(\\s-)let(a,s')=\u00a3s \ninunST(ga)s') instaneMonadRe(States)where m\u00a3ix\u00a3=ST(\\s-)let(a,s')=unST(\u00a3a)s in(a,s')) Withouttags,thedefnitionofmfxissimply: \n.. mfxf=)sVlet(s=fsin(s TheStatemonadsatisfesallmfxaxioms,heneitisre\u00adursive.Thedefnitionofmfxlearlyshowsthatthefxed\u00adpointomputationisperformedonlyonvalues,thestate \nomponentisleftuntouhed.Furthermore,equation5holds, equation6doesnotrequireastrithandproperty7issat\u00adisfedasanequality. \n 6.5 State with exceptions Oftentheomputationsthathavesideefetsfailtoyielda value.Thisoneptisgenerallymodeledwithaombination \nofthestateandexeptionmonads.Inthissetionwelook attwoexamples. Thefrstversiononsiderstheasewhenneitheravaluenor \nanupdatedstatemightbeavailableafteraomputation. Thedelarationsare(again,wedropexpliittags : newtypeSTEsa=s-)Maybe(a,s) \ninstaneMonad(STEs)where returnx=\\s-)Just(x,s) instaneMonadRe(STEs)where \u00a3 ) )= g = \\ s -) a se \u00a3 s o\u00a3 \nothing -) othing Just(a, s ') -) ga s' m\u00a3ix \u00a3=\\s-)leta=\u00a3bs b=\u00a3st(unJusta) ina Nowweonsiderwhentheomputationmightfailbutan \nupdatedstateisstillavailable.Thedelarationsare: newtypeSTE2sa=s-)(Maybea,s) instaneMonad(STE2s)where \nreturnx=\\s-)(Justx,s) \u00a3))=g=\\s-)ase\u00a3so\u00a3 (othing,s')-)(othing,s') (Justa,s')-)gas' instaneMonadRe(STE2s)where \nm\u00a3ix \u00a3=\\s-)leta=\u00a3bs b=unJust(\u00a3sta) ina Inbothases,theomputationofthefxed\u00adpointissimilar tothoseofStateandMaybemonads.Weequatethevalue \npartoftheresultwiththeinputtothefuntion.Notiethe symmetrybetweenthedefnitionsandthenewtypedelara\u00adtions. \nItturnsoutbothofthesemonadsarereursive.However, theyrequirestrithforsatisfyingequation6andtheydon't satisfyequation7asanequality.Thisishardlysurprising \nsinetheMaybemonadbehaveslikethisaswell.Aswithall otherases,bothmonadssatisfyequation5. 6.6 Other monads \nWetakeabrieflookataoupleofothermonadswithoutgo\u00adingintomuhdetail.TheReader(orenvironmentmonad isaversionoftheStatemonadwhereweonlyreadthestate \nwithouteverhangingit[9].Theobviousembeddinginto theStatemonadsu\u00c6estoprovethattheReadermonadis reursive.Infat,theworkonimpliitparameters[15]pro\u00advidesanimpliitreursiveReadermonadinHaskellwhere \ntheusualletonstrutexpressesreursiveomputations, (impliitparametersprovidethemehanismforaessing valueswithinthemonad \n. Theoutputmonad,asdesribedinSetion2.1,isreursive also.ItalsoembedsintotheStatemonad.Thedefnition ofmfxis: \ninstaneMonadReOutwhere m\u00a3ix\u00a3=\u00a3ix(\u00a3 unOut) whereunOut(Out(a, ))=a TheTreemonad[9]isreursive.Thedefnitionofmfx \nloselymimisthatoftheListmonad.Unlikelists,how\u00adever,thesetreesareneveremptyandhenetheListmonad annotbeembeddedintothem.Itis,however,notlear \nwhatsortofappliationsanbeneftfromreursivebind\u00adingsfortheTreemonad. Twootherreursive\u00admonadsthatareverywellknownin \ntheHaskellommunityaretheinternalinput/output(ID andstate(STmonads.ThelibraryfuntionsfixIDand fixSTorrespondtoourmfxfortheIDandSTmonads, \nrespetively.Thesemonadsare internal\"inthesensethat, unlikeothers,theirimplementationsusedestrutiveupdates \nandheneneedtobedefnedasprimitives.Thisprevents usfromonstrutingexpliitproofs,buttheHaskellfolklore suggeststhattheyindeedsatisfyouraxioms. \nThedetailsonthesemonads(alongwithothertehnial development anbefoundin[5]. Theontinuationmonadontinuestoauseusgrief.We \nhavebeenunabletoprodueaviabledefnitionformfxin thisase.Furthermore,intheShemease-whenstateand ontinuationsoexist-thesemantisimpliedbythedefni\u00adtionofletre(Sheme'sequivalentofmfx \nseemstolak theappropriateuniformitypropertiesimpliedbyaxiom2 andproperty7.  7. AN EXAMPLE: DOUBLY LINKED \nCIR-CULAR LISTS Inthissetion,wegiveahands\u00adonexampleofusingmonadi reursivebindings.Wewillreateadoublylinkedirular \nlistwhihanbetraversedforwardsorbakwards.Ateah node,wewillstoreafagindiatingwhetherthenodehas beenvisitedbefore.Sinethisfagneedstobemutable,we \nwillusetheinternalIDmonadtogetaesstotherequired refereneells.Obviously,thisexampleanbegeneralized toanyproblemwherewehaveinterlinkedstatefulobjets \nwithpossiblyylidependenies. WefrstimporttheMonadReandIDExtslibraries.The frstonedelarestheMonadRelass.TheIDExtslibrary \nprovidesfixID,asdisussedabove,alongwithfuntionsto reateandmanipulatemutablevariables: )importMonadRe \n)importlOExts TheMonadRedelarationforIOistrivial: )instaneMonadRelOwhere ) m\u00a3ix=\u00a3ixlO Bythisdelaration,thepdo\u00adnotationbeomesavailablefor \ntheIDmonad.Eahnodeinourlistwillhaveamutable booleanvalueindiatingwhetherithasbeenvisited,left andrightnodesandasingleintegervalueforthedata: \n)data = (lORe\u00a3ool, ,lnt,) Toreateanewnodewithvalueiinbetweenthenodesb andf,weusethefuntionnewNode: ) \nn e w ode -) l n t -) \u00ad) l O ) n e w odebi\u00a3= d o v <\u00ad newl ORe\u00a3 False ) return ( (v, b, i , \u00a3 ) ) NotiethatthevisitedfagissettoFalse.Wewillusethis \nfuntiontoreatethefollowingstruture: ll Here'stheodeforit: )ll=mdon0<-new oden30n ) n<-new oden0n2 ) \nn2<-new oden2n3 ) n3<-new oden23n0 ) returnn0 Theuseofpdoisessential:theylinatureoftheon\u00adstrutionisnotexpressibleusinganordinarydo\u00adexpression. \nWeantestourimplementationwithatraversalfuntion: )dataDir=F derivingEq ) )traverse Dir-)-)lO[lnt] )traversed((v,b,i,\u00a3))= \n) dovisited<-readlORe\u00a3v ) i\u00a3visited ) thenreturn[] ) elsedowritelORe\u00a3vTrue ) letnext=i\u00a3d==Fthen\u00a3elseb \n) is<-traversednext ) return(iis) Here'sasamplerun: Main)ll))=traverseF))=print [0, ,2,3] Main)ll))=traverse \n))=print [0,3,2, ] Theinversefuntionthattakesanon\u00ademptylistandon\u00adstrutsadoublylinkedirularlistoutofitselementsillus\u00adtratestheuseofpdofurther: \n)l2dll [lnt]-)lO )l2dll(xxs)=mdo <-new odelx\u00a3 ) (\u00a3,l)<-l2dll'xs ) return ) )l2dll' -)[lnt]-)lO(,) )l2dll'p[] \n=return(p,p) )l2dll'p(xxs)=mdo <-new odepx\u00a3 ) (\u00a3,l)<-l2dll'xs ) return(,l) Noteinpartiulartheessentialuseofpdointheonstrution \nofthelinkedlist. 8. RELATED WORK Thereisamajorlineofresearhthatattemptstohara\u00adterizefxedpointsingeneral[ \n,7,19].Thisworkhasonlya passingrelevanetotheworkhere.Haskellalreadyhasone brandofmonadifxedpoints-thoseobtainedwhenwrit\u00adingreursivemonadifuntionsbyusingHaskell'sbuiltin \nreursion-andthesearethefxedpointspikedoutbythis generalwork.AsweindiatedinSetion4.1,thisgeneri fxedpointisnotabletoahievereursivebindingsinthe \nwaywewant.Instead,wehavehadtodesribeavalue\u00adreursionthatdoesnotrepeatthemonadiefet. MuhgreatersimilaritytoourworkisfoundinO'Haskell, \nwhihisisaonurrent,objetorientedextensionofHaskell designedforaddressingissuesinreativefuntionalpro\u00adgramming[18].OneappliationofO'Haskellisinprogram\u00adminglayerednetworkprotools.Eahlayerinteratswith \nitspredeessorandsuessorbyreeivingandpassinginfor\u00admationinbothdiretions.Inordertoonnettwoproto\u00adolsthathavemutualdependenies,oneneedsareursive \nknot\u00adtyingoperation.SineO'Haskellobjetsaremonadi, reursivemonadsareemployedinestablishingonnetions betweenobjets.O'Haskelladdsakeywordfixtothedo\u00adnotationwhosetranslationisasimplifedversionofours. \nTheO'Haskellwork,however,doesnottrytoaxiomatizeor generalizetheideaanyfurther. Althoughwelimitedourattentiontomonadiomputa\u00adtions,reursionmakessenseinthemoregeneralsetting \nofarrosaswell[8].Reently,RossPatersonaxiomatized arrowFix,thearrowversionofmfx,whihturnsoutto bequitesimilartoourformulation.Heehoesaspetsof \nHasegawa'sworkintraedmonoidalategoriesthatprovides ageneralframeworkforreursionandylisharing[7]. Again,beauseadiferentnotionoffxedpointisrequired, \nPatersonrelaxedsomeofHasegawa'saxioms,andreplaed othersompletely.(Unfortunately,Paterson'sworkisnot publishedyet. \nReentworkbyFriedmanandSabrytriestoaddressthe problemfromadiferentangle[6].Ratherthananaxioma\u00adtization,theirworksuggestsombiningmonadswithastate \nmonadandperformingagenerireursionomputationin thisombinedworld.Thesemantisofreursionisthen defnedbythisimplementation.Sinethereursionisper\u00adformedintheombinedmonad,itistheusersresponsibility \ntotranslateoriginalproblemsandvaluestoandfromthis ombinedworld. Proofsofthelaimsmadeinthispaperandothertehni\u00adaldetailsarereportedinatehnialreport[5].Amore \ndetailedtreatmentofthetranslationofpdo\u00adexpressionsap\u00adpearinaompanionimplementationpaper[4].Theweb pagehttp://www.se.ogi.edu/PaSoft/projets/muHugs \nontainsthesoftware,papersandotherresearhmaterial relatedtothiswork. 9. CONCLUSIONS Monadsplayanimportantroleinfuntionalprogramming \nbyprovidingaleanmethodologyforexpressingomputa\u00adtionalefets.Monadiomputationsuseaertainsublan\u00adguageshapedbythefuntionsthatatonmonadiobjets. \nHaskellmakesthisapproahquiteonvenientbyproviding thedo\u00adnotation.Ashortoming,however,isthatreursion overtheresultsofmonadiationsannotbeonveniently \nexpressed.Furthermore,itisnotlearhowtoperformre\u00adursiononvaluesinthepreseneofefets.Inordertoal\u00adleviatethisproblem,wehaveaxiomatizedmonadifxand \nimplementedanextensiontothedo\u00adnotation,whihanbe usedinexpressingsuhreursiveomputationsinanatural way.Weexpetthatmanyappliationsanbeneftfrom \nthiswork,asmonadsbeomemorepervasiveinfuntional programming. Eventhoughwehaveproposedaseparatepdoonstrut, \nwebelievethattheusualdo\u00adexpressionofHaskellshouldbe extendedtoapturethisnewstyleofprogramming.That is,thereshouldnotbeaseparatepdokeyword,butrather \ntheompilershouldanalyzedo\u00adexpressionstoseeifreur\u00adsivebindingsareemployed,performingthetranslationsas \nappropriate.Anambitiousompilermayalsoperformsim\u00adplifationsbasedonthemfxaxioms. 10. ACKNOWLEDGEMENTS WearethankfultoRossPaterson,AmrSabry,andtoJohn \nMatthewsandothermembersoftheOGIPaSoftResearh Groupforvaluabledisussions. TheresearhreportedinthispaperissupportedbyAir \nForeMaterielCommand(F19628\u00ad96\u00adC\u00ad0161 andtheNa\u00adtionalSieneFoundation(CCR\u00ad9970980 . 11. REFERENCES [1]P.Bjesse,.Claessen,M.Sheeran,andS.Singh. \nLava:HardwaredesigninHaskell.InInternational ConfereneonFuntionalPro rammin ,Baltimore, July1998. [2]T.Cormen,C.Leiserson,andR.Rivest.Introdution \ntoAl orithms.TheMITPress,Cambridge,MA,1989. [ ]R.L.CroleandA.M.Pitts.Newfoundationsfor fxpointomputations.InProeedin \nsoftheFifth AnnualIEEESymposiumonLo iinComputer Siene,pages489-497,June1990. [4]L.ErkiokandJ.Launhbury.Areursivedofor \nHaskell:DesignandImplementation.Availableat http://www.se.ogi.edu/PaSoft/projets/muHugs. [5]L.ErkiokandJ.Launhbury.Reursivemonadi \nbindings:Tehnialdevelopmentanddetails. TehnialReportCSE\u00ad00\u00ad011,Departmentof ComputerSieneandEngineering,OregonGraduate \nInstituteofSieneandTehnology,June2000. [6]D.FriedmanandA.Sabry.Reursionisa omputationalefet.Unpublished.Availableat \nhttp://www.s.uoregon.edu/-sabry/papers. [7]M.Hasegawa.Reursionfromylisharing:traed monoidalategoriesandmodelsofylilambda \naluli.LetureNotesinComputerSiene,1210, 1997. [8]J.Hughes.Generalisingmonadstoarrows.Sieneof ComputerPro \nrammin ,7(1\u00ad:67-111,May2000. [9]M.P.JonesandL.Duponheel.Composingmonads. TehnialReportYALEU/DCS/RR\u00ad1004,Department \nofComputerSiene,YaleUniversity,De.199 . [10]J.Launhbury.Lazyimperativeprogramming.In ProeedinsoftheAC \nSIGPLANWorrshopon StateinPro rammin Lan uaes,Copenha en,DK, SIPL'9 ,pages46-56,199 . [11]J.Launhbury,J.Lewis,andB.Cook.Onembedding \namiroarhiteturaldesignlanguagewithinHaskell. InProeedinsoftheAC SIGPLANInternational ConfereneonFuntionalPro \nrammin ICFP'99), pages60-69,1999. [12]J.LaunhburyandR.Paterson.Parametriityand unboxingwithunpointedtypes.InEuropean \nSymposiumofPro rammin ,volume1058ofLeture NotesinComputerSiene,pages204-218.Springer, Apr.1996. [1]J.LaunhburyandS.L.PeytonJones.Lazy \nfuntionalstatethreads.AC SIGPLANNoties, 29(6 :24- 5,June1994. [14]J.LaunhburyandS.L.PeytonJones.Statein \nHaskell.LispandSymboliComputation, 8(4 :29 - 41,De.1995. [15]J.Lewis,M.Shields,E.Meijer,andJ.Launhbury. \nImpliitparameters:Dynamisopingwithstati types.InProeedin softheAC SIGPLAN\u00adSIGACT SymposiumonPriniplesofProramminLan \nuaes POPL'00),2000. [16]J.Matthews,B.Cook,andJ.Launhbury. MiroproessorspeifationinHawk.InProeedin s ofthe \n998InternationalConfereneonComputer Lan uaes,pages90-101.IEEEComputerSoiety Press,1998. [17]E.Moggi.Notionsofomputationandmonads. \nInformationandComputation,9(1 ,1991. [18]J.Nordlander.eativeObjetsandFuntional Pro rammin .PhDthesis,ChalmersUniversityof \nTehnology,Gi1999. oteborg,Sweden, [19]A.SimpsonandG.Plotkin.Completeaxiomsfor ategorialfxed\u00adpointoperators.Proeedingsof \nFifteenthAnnualIEEESymposiumonLogiin ComputerSiene,2000(Toappear . [20]P.Wadler.Theoremsforfree!InFPCA'89,London, \nEn land,pages47- 59.ACMPress,Sept.1989. [21]P.Wadler.ComprehendingMonads.InLISP'90,Nie, Frane,pages61-78.ACMPress,1990. \n[22]G.Winskel.TheFormalSemantisofPro rammin Lan uaes:AnIntrodution.Foundationsof Computingseries.MITPress,Feb.199. \n  \n\t\t\t", "proc_id": "351240", "abstract": "Monads have become a popular tool for dealing with computational effects in Haskell for two significant reasons: equational reasoning is retained even in the presence of effects; and program modularity is enhanced by hiding \"plumbing\" issues inside the monadic infrastructure. Unfortunately, not all the facilities provided by the underlying language are readily available for monadic computations. In particular, while recursive monadic computations can be defined directly using Haskell's built-in recursion capabilities, there is no natural way to express recursion over the <i>values</i> of monadic actions. Using examples, we illustrate why this is a problem, and we propose an extension to Haskell's donotation to remedy the situation. It turns out that the structure of monadic value-recursion depends on the structure of the underlying monad. We propose an axiomatization of the recursion operation and provide a catalogue of definitions that satisfy our criteria.", "authors": [{"name": "Levent Erk&#246;k", "author_profile_id": "81100282430", "affiliation": "Oregon Graduate Institute of Science and Technology", "person_id": "P171202", "email_address": "", "orcid_id": ""}, {"name": "John Launchbury", "author_profile_id": "81100462557", "affiliation": "Oregon Graduate Institute of Science and Technology", "person_id": "PP39043890", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/351240.351257", "year": "2000", "article_id": "351257", "conference": "ICFP", "title": "Recursive monadic bindings", "url": "http://dl.acm.org/citation.cfm?id=351257"}