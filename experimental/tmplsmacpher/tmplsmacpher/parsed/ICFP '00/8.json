{"article_publication_date": "09-01-2000", "fulltext": "\n More Types for Nested Data Parallel Programming Manuel M. T. Chakravarty School of Computer Science \n&#38; Engineering University of New South Wales Sydney, Australia chak@cse.unsw.edu.au ABSTRACT Thispapergeneralisesthefatteningtransformation-ateh\u00adniqueforthee\u00c6ientimplementationofnesteddataparallel\u00adism-andreonilesitwithmainstreamfuntionalprogram\u00adming.Nesteddataparallelismissignifantlymoreexpres\u00adsiveandonvenienttousethanthefatdataparallelism \ntypiallyusedinonventionalparallellanguageslikeHigh PerformaneFortranandC*.Thefatteningtransforma\u00adtionofBlellohandSabotisakeytehniquefortheef\u00adfientimplementationofnestedparallelismviafatparal\u00adlelism,butoriginallyitwasseverelyrestrited,asitdid \nnotpermitgeneralsumtypes,reursivetypes,higher\u00adorder funtions,andseparateompilation.Subsequentwork,in\u00adludingsomeofourown,generalisedthetransformationand \nallowedhigher\u00adorderfuntionsandreursivetypes.Inthis paper,wetakethefnalstepofgeneralisingfatteningto overthefullrangeoftypesavailableinmodernlanguages \nlikeHaskellandML;furthermore,weenabletheuseofsep\u00adarateompilation.Inaddition,wepresentaompletely newformulationofthetransformation,whihisbasedon \nthestandardlambdaalulusnotation,andreplaeapre\u00adviouslyad\u00adhotransformationstepbyasystematigeneri programmingtehnique.Firstexperimentsdemonstratethe \ne\u00c6ienyofourapproah. 1. INTRODUCTION Sisalsuessfullydemonstratedthatathoroughlyopti\u00admisedimplementationofafuntionallanguageanhal\u00adlengeonventionalFortranodeonhigh\u00adperformanearhi\u00adtetures[6].Itdidso,however,byprovidingessentiallythe \nsamesortofparallelprogrammingmodelthatitsimpera\u00adtiverivalpresribed.Itisouraimtotakethenextstep andtorealiseadrastiallymoreonvenientprogramming \nmodelwhosee\u00c6ientimplementationrequirestransforma\u00adtiontehniquesthataredi\u00c6ulttoautomateinthepresene ofside\u00adefetingomputations.Inonreteterms,weare \nonernedwiththee\u00c6ientimplementationofnesteddata parallelism-ageneralisationoffatdataparallelism,whih Permission \nto make digital or hard copies of all or part of this work for personal or classroom use is granted without \nfee provided that copies are not made or distributed for pro.t or commercial advantage and that copies \nbear this notice and the full citation on the .rst page. To copy otherwise, to republish, to post on \nservers or to redistribute to lists, requires prior speci.c permission and/or a fee. ICFP 00, Montreal, \nCanada. Copyright 2000 ACM 1-58113-202-6/00/0009 ..$5.00 Gabriele Keller Faculty of Information Technology \nUniversity of Technology, Sydney Sydney, Australia keller@socs.uts.edu.au inturnisthemodelthatistypiallyusedinlanguageslike \nHighPerformaneFortranandC*[10].Nesteddataparal\u00adlelismallowshighlyirregularparallelontrolanddatastru\u00adtures,suhasnestedparallelloops,wheretherangesofthe \ninstanesoftheinnerloopdependentontheindexvalue oftheouterloop.Nestedparallelismonstitutesanattra\u00adtiveprogrammingmodelandsimplifestheimplementation \nofimportantparallelalgorithms,suhasomputationsover sparsematriesaswellashierarhialn\u00adbodyalgorithms. Nevertheless,forfne\u00adgrainedalgorithms,itisusuallyeas\u00adiertounderstandandimplementthanontrolparallelism; \ninaddition,itomeswithalanguage\u00adbasedparallelost model[4]. Todaysmostportableimplementationtehniquefornested \ndataparallelismisthefatteningtransformation,aprogram transformationthatmapsnestedtofatparallelismandthat \nwasoriginallyintroduedbyBlellohandSabot[5].It leadstoe\u00c6ientimplementationsonarangeofhigh\u00adper\u00adformanearhiteturesinboththepurelyfuntional[7]and \ntheimperativease[9].Nevertheless,imperativelanguages faeaseriousproblemhere:Flatteningishardtoauto\u00admateinthepreseneofpointersandsideefets[9].Even \nspeialpurposeextensionsofimperativelanguagesrequire seriousrestritions[22].Thismayultimatelyonfneim\u00adperativeodetothread\u00adbasedimplementationsofnested \nparallelism[2,20],whihurrentlyseemtorequireshared\u00admemoryarhitetures-andertainlyarenotsuitablefor vetorproessors.Moreover,modernproessorstendto \ninludevetorinstrutions-usuallytospeedupmultime\u00addiaappliations-thatouldbeexploitedbyafattening\u00adbasedompiler.Insummary,fatteningisimportant,be\u00adausenesteddata\u00adparallelismismoreexpressive,whereas \nfatdata\u00adparallelismiseasiertoimplement. Originally,fatteningsuferedfromalakofsupportfor advaneddatatypes,suhasgeneralsumtypes,reursive \ntypes,andhigher\u00adorderfuntions,anditdidnotallowsep\u00adarateompilation.Inotherwords,programswereonfned tooperateoverarraysontainingbasitypeslikeinteger \nnumbersandtuplesthereof;furthermore,thesoureodeof theompleteprogram-inludingalllibrarymodules-had tobeavailableduringompilation[5].Subsequentresearh \nextendedfatteningtooverhigher\u00adorderfuntions[23]and reursivetypes[16].Inthispaper,welosetheremaining gaptomodernfuntionallanguageslikeHaskellandML.We \nrephrasethetransformationinthestandardlambdaalu\u00adlussetting,extendittothefullrangeofalgebraitypes (inpartiular,user\u00addefnedsumtypes),andmodifyitsuh \nthatitallowsforseparateompilationofprogrammodules. Thelatterisaonsequeneofreplaingapreviouslyad\u00adho transformationstepbyasystematigeneriprogramming \ntehnique,whihwasreentlyintroduedbyHinze[12,11]. Firstexperimentswithourimplementationtehniqueson aCrayT3Eledtoabsolutespeedupswhenomparedtoa \nsequentialimplementationofthesamealgorithminC. Insummary,themainontributionsofthispaperarethe following: \n Werephrasethefatteningtransformationinastan\u00addardlambdaalulussettingwithfreeuseofhigher\u00adorderfuntions,urrying,andlazyevaluation. \n Weextendfatteningtooverthefullrangeoftypes supportedinlanguageslikeHaskellandML.  Weenabletheuseofseparateompilationbyvirtueof \nexpressingpartofthetransformationinasystemati generiprogrammingframework.  Fromtheperspetiveofsequentialprogramminganddeno\u00adtationalsemantis,theseextensionsmightnotseemvery \nspetaular.However,undertheonstraintofahievingan e\u00c6ientdataparallelimplementation,theybeomeformi\u00addablehallenges.Inpartiular,thelasttwohavebeenreog\u00ad \nl nisedasbeingopenproblemsforthelastfveyears.Over\u00adall,theresultspresentedinthispaperallowustorealisea \nfattening\u00adbasedimplementationofnesteddataparallelism asaonservativeextensionofastandardisedlanguagelike \nHaskellorSML,insteadofrelyingonspeialpurposelan\u00adguages,asitwasneessaryuntilnow. Thereminderofthepaperisstruturedasfollows:Se\u00adtion2briefydisussesadata\u00adparallelextensionofHaskell \nandoutlinesthetransformationtehniquesdetailedinthe restofthepaper.Setion3introduesalambdaalulus supportingparallelarrays.Setion4disussesafattened \nrepresentationofdatatypes.Setions5and6presentthe oretransformationsofourextendedfatteningapproah. Setion7briefydisussesthehandlingofpolymorphifun\u00adtionsunderaseparateompilationshemeandtheproblems \ninduedbyreferenetypesinparallelfuntions.Finally, Setion8reportssomebenhmarkresults,reviewsrelated work,andonludes. \n 2. NESTED DATA PARALLELISM Thefollowingbriefintrodutiontonesteddataparallelism 2 isbasedonanextensionofHaskellbyparallelarrays.A \nparallelarrayisanorderedsequeneofvaluesthatomes withasetofdataparalleloperations;moreover,anyparallel \narrayisdistributedarosstheavailableproessingnodesin theasewhereweexeutetheprogramonadistributed memorymahine. \n2.1 Haskell with Parallel Arrays Wedenotethetypeofparallelarraysontainingelements oftypeTby[1T1].Weprovidesimilarsyntatisupportfor \nparallelarraysasforlists-inpartiular,[1al, ,an1]on\u00adstrutsaparallelarray.Listfuntions,suhasmapand l TherewasindeedaUsenetpostinginwhihGuyBlelloh \nenouragedtolookintotheseproblems. 2Aorrespondingextensionaswellastheimplementation outlinedintheremainingsetionsappliesalsotoothertyped \nfuntionallanguageslikeStandardMLorClean. repliate,haveparallelounterpartsdistinguishedbythe su\u00c6x\"P\",i.e.,wehave \nmapP::(a-()-[1a1]-[1(1] -mapafuntionoveraparallelarray repliateP::Int-a-[1a1] -reateanarrayontainingnopiesofavalue \nFurthermore,weusetheinfxoperators(!1)and(+++)to 3 denoteindexingandappendingofparallelarrays. Theessentialoperationaldiferenebetweenlistsandpar\u00adallelarraysisthatolletiveoperations,suhasmapP,flterP, \nrepliateP,andsoon,exeuteinparallel.Thisholdseven fornestedusesoftheseoperations-so, mapP(mapP(+1))[1[11,21],[13,4,51],[11],[161]1] \ninrementsallnumbersinthenestedparallelarrayinasin\u00adgleparallelstep.Weanalternativelydenotethisomputa\u00adtionbyusinganarrayomprehension: \n[1x+11x.xs,xs.[1[11,21],[13,4,51],[11],[161]1]1] Theparallelsemantisentailsaoupleofsignifantdif\u00adferenesbetweenlistsandparallelarrays:(1)Parallelarrays \narealwaysfnite;(2)theonstrutionofaparallelarrayis stritinallelements;and(3)therearenoonstrutors(suh as[]andCons)foronstrutionandpatternmathing.The \nthirdpointisnotabsolutelyneessary,butitenourages arraymanipulationbyolletiveoperations,whiharere\u00adquiredforexpressingdataparallelism.Morebakground \nonthisstyleofparallelprogrammingis,forexample,pro\u00advidedbyBlelloh[4],whoalsodisussesthetwoexamples presentednext. \n 2.2 Using Nested Data Parallelism Animportantirregulardatastrutureinhigh\u00adperformane omputingaresparsematries.Ifthereisnoextrainforma\u00adtionregardingthestrutureofasparsematrix,itanbe \nstorede\u00c6ientlyintheso\u00adalledompressedrowformat, whihrepresentsallnon\u00adzeroelementsofamatrixrowina listofolumn\u00adindex/valuepairs-alistofsuhsparserows \nomprisesasparsematrix: typeSparseRow=[1(Int,Float)1]-index,value typeSparseMatrix=[1SparseRow1] Nowonsiderthemultipliationofasparsematrixwitha \ndensevetor,resultinginanotherdensevetor.Itanbe expressedbynestingthreelevelsofparalleloperations: smvm::SparseMatrix-[1Float1]-[1Float1] \nsmvmsmve= [1sumP[1x*(!1ol)1(ol,x).o 1]1row.sm1] f produtsofonerow Theinnerarrayomprehensionomputesallprodutsofa \nsinglerowofthematrix,sumPaddstheprodutsinapar\u00adallelredution,andtheouteromprehensionspeifesthat theprodutsandsumsforallrowsshouldbeomputedin \nparallel.Overall,theompletematrix\u00advetormultipliation hasaparalleldepthomplexityproportionaltotheloga\u00adrithmofthelongestrow(f.,[4]fordetails).Itispossible \ntoahievethesamebehaviourinalanguagesupportingonly 3 Weannotusethesimplersymbols(!)and(++),asthey arealreadyusedinHaskell. \nfatdata\u00adparallelism,buttheodeissignifantlymorein\u00advolved. Asaseondexampleofahighlyirregulardataparallel \nalgorithm,letusonsiderquiksort.Thefollowingdefnition ofqsortholdslittlesurpriseforafuntionalprogrammer: \nqsort::Orda=[1a1]-[1a1] qsortxs=ifnullPxsthen [11] else let m=xs!1(lengthPxs'div'2) ss=[1s1sxs,s<m1] \nms=[1s1sxs,s==m1] gs=[1s1sxs,s>m1] '' sorted=[1qsortxs1xs[1ss,gs1]1] in (sorted!10)+ ms+ +(sorted!11) \nThereis,however,onepeuliarity.Thereursiveallsto qsortareperformedinanarrayomprehensionrangingover anestedarraystruture.Giventheparallelsemantisof \narrayomprehensions,thetworeursiveallsareexeuted inparallel-thiswouldnotbetheaseifweweretowrite qsortss+ \nms+ qsortgs! Theparallelisminqsortisobviouslyhighlyirregularand dependsontheinitialorderingofthearrayelements;never\u00adtheless,thefatteningtransformationanrewritetheabove \ndefnitionofqsortintoafatdataparallelprogram.Thus, inpriniple,itwouldbepossibletoahievethesamepar\u00adallelbehaviourinFortran-itis,however,astonishinglyte\u00addious.Hierarhialn\u00adbodyodes,suhastheBarnes\u00adHut \nalgorithm[1],exhibitasimilarparallelstrutureasqsort andthereisonsiderableinterestintheirhigh\u00adperformane \nimplementation.Weshowedthatrosetreesoftheform dataTree=NodePartile[1Tree1] lendthemselvestoapartiularlyelegantnesteddataparal\u00adlelimplementationoftheBarnes\u00adHutalgorithm,whihour \nprogramtransformationsanompileintoe\u00c6ientode[16]. Inadditiontotheobvioususesofsumtypes,theexten\u00adsionoffatteningtothefullrangeofHaskell'stypes,as \npresentedhere,allowsadelarativetype\u00addiretedontrolof datadistribution.Considertheoperationalimpliationsfor \nanarrayofarrays[1[1Int1]1]versusanarrayof(sequential) lists[1[Int]1].Onadistributedmemorymahine,theinteger \nelementsoftheformerwillbeevenlydistributedoverthe availableproessingelements;inpartiular,ifthesubarrays \nvarysubstantiallyinsize,theymaybesplituparosspro\u00adessorboundaries.Consequently,thepotentialparallelism \noverthenestedarrayismaximised.Inontrast,arraysof listsareoptimisedforsequentialoperationsoverthesublist; \nnevertheless,thesequentialproessingofallthesublistsis expetedtoproeedinparallel.Inotherwords,wehavea \nparalleloperationonsistingofanumberofsequentialsteps inside.Overall,thehoiebetweendiferentmixesofparal\u00adlelandsequentialstruturesallowstheprogrammertoinfu\u00adenethegranularityofparalleloperations,whihisknown \ntohelpimplementinge\u00c6ientparallelprograms. 2.3 Compilation by Transformation Figure1outlinesthestrutureofourompilationsystem. \nThepresentpaperisonernedwiththefrsttwotransfor\u00admationstepsinthegreybox:vetorisationandspeialisa\u00ad Optimisation \nnfoldingPrimitives  CodeGeneration Figure1:Outlineoftheompilationsystem tionofarrayprimitives.Together,thesetwostepsrealisethe \nfatteningtransformation,i.e.,theytransformparallelom\u00adputationsgiveninthenesteddata\u00adparallelstyleintoequiva\u00adlentomputationsexpressedinthelessexpressive,buteasier \ntoimplementfatstyle. Togainanintuitiveunderstandingofthepurposeofthe frsttwotransformationsteps,letusreonsidertheinitial \nexampleofthissetion: mapP(mapP(+1))[1[11,21],[13,4,51],[11],[161]1] Thepurposeofthefrststepoffattening-i.e.,ofvetor\u00adisation-istoprovideanalternative,parallelversionofeah \nsalarfuntionourringintheprogram;forexample,any salarfuntionoverintegersisvetorisedtoafuntionthat exeutesthesameoperationelementwiseoverparallelar\u00adraysofintegers.Inotherwords,afuntionfispointwise \nliftedintovetorspae,whihwedenotebyft.Primitive funtions,like+,arealreadyprovidedbythesystemina vetorisedform.Overall,weanrepresentourexampleby \nlet xss=[1[11,21],[13,4,51],[11],[161]1] in tt xss+subdivideP(repliateP61)[12,3,0,11] TheexpressionrepliateP61givesus[11,1,1,1,1,11].The \narray[12,3,0,11]apturesthenestingstrutureofxss,i.e., itequals[1lengthPxs1xsxss1]-weallitthesegmentde\u00adsriptorofxssasitspeifesthesegmentationofxssinto \nsubarrays.TheauxiliaryfuntionsubdividePimposesthe givensegmentationstrutureonthearraypassedasthefrst \ntt argument.Finally,+addsthetwoarrayselementwisein parallel. Atthispoint,itmightseemasifweouldsimplifythe \nresultingodebyintroduinganauxiliaryfuntionintin\u00adsteadofusingrepliatePinombinationwith+t .However, wethenalsohavetoliftthedefnitionin=(+1),whih \nwillontainrepliatePand+tinexatlythesamewayas weusedthesetwofuntionsabove.So,nothingisgained. Wewilldisussthedetailsofthevetorisationtransforma\u00adtioninSetion5.Wedothisforthefrsttimeinaframe\u00adworkthatusesaonventionallambdaalulusnotationand \nallowsurryingandlazyevaluation. Sofar,itmightappearasifwewouldneedallprimitive anduser\u00addefnedfuntionsliftedtoparallelarraysofarbi\u00adtrarynestingdepth.Aentralinsightof[5]isthatthisis \nnotneessaryandthatindeedelementwiseandonelifted versionsofallfuntionsu\u00c6e.Moreover,itisadvantageous forparallelexeutiontoseparatethestrutureofeahpar\u00adalleldatastruturefromitsontents.Intheaboveexample, \nitisusefultoseparatethesegmentdesriptorofxssfrom theintegervaluesofthenestedarray.Werealisethisbya transformationthatimplementsallparallelarraysofom\u00adplextypesbyparallelarraysofintegersandfoatingpoint \nnumberstogetherwithsequentialstrutures(likeproduts) thatombineasetoftheseprimitivearraysintoaompound \nstruture.Operationsonarraysofomplextypesarespe\u00adialisedorrespondingly.Ourexample,anberepresented as let \nxss=((4,[12,3,0,11]),(6,[11,2,3,4,5,61])) in (fstxss,(snd(fstxss),snd(sndxss)+trepliateP61)) Allstruturemanipulations,suhassubdivideParereplaed \nbysimpleprojetionsand+tisneededonlyinitsonelifted form.Thedetailsoftheonreterepresentationofarraysof \nomplextypesshallbegiveninSetion4andthespeialisa\u00adtionofoperationsonthesearraysinSetion5.Comparedto previouswork,weextendedtheonreterepresentationto \noversumtypes;moreover,wedefnethespeialisationsof arraysandarrayoperationsforthefrsttimeastype\u00adindexed \ndefnitionsinageneriprogrammingframework.Asare\u00adsult,speialisationsisnowalsopossibleinthepreseneof separateompilation. \nWhilstthefullyfattenedprogramexhibitsparallelismin aformsuitableforawiderangeofparallelarhitetures, theodeisusuallyratherfne\u00adgrainedandompletelylaks \nanyonsiderationforexploitingthememoryhierarhiesof modernproessorarhitetures.Weuseaombinationof anintermediatelanguagethatmakesdistributionexpliitin \nthetypesystemandaggressivedeforestationtehniquesto produeodethatperformswellonnetworked,ahe\u00adbased proessors[17,15]-thisishandledbythetransformation \nstepsfollowingthegreyboxinFigure1andnotfurther disussedinthepresentpaper. Currently,theonlyalternativetousingthefatteningtrans\u00adformationfortheimplementationofgeneralnestedparal\u00adlelismarethread\u00adbasedompilationtehniques[2,20].Due \ntotheveryfnegranularityoftheoutlinedstyleofnested parallelprogramming,itishoweverunlearhowathread\u00adbasedapproahanbee\u00c6ientlyimplementedondistributed\u00admemoryarhitetures.Moreover,fattenedodeissuitable \nformultimediavetorarhiteturesandanexploittheve\u00adtorinstrutionsthatareusuallyinludedintomodernhigh\u00adperformaneproessors. \n 2.4 Restrictions Throughoutthispaper,weimposeonerestritiononthe useofparallelarraysbytheuser:Theelementsofaparal\u00adlelarraymaynotontainfuntionals.Wedothisfortwo \nreasons: Funtionsinparallelarraysimplyontrolparallelism. Soforexample,theexpression[1fa1f[1foo,bar1]1] \nwouldobviouslyrequireustoexeutetheevaluation offooaandbarainparallelandbreakstheparadigm ofdataparallelism. \n Ifweexeuteanyseeminglyontrolparallelodese\u00adquentially,theadditionoffuntionalsinparallelar\u00adrayswouldsignifantlyompliatethetehnialpart \nofthispaperwithoutbringinganyobviousgain.  Nevertheless,thepresentedprogramtransformationswillin\u00adtroduearraysoffuntions,buttheywillalwaysontain \nrepetitionsofthesamefuntion,sothatweanguarantee dataparallelexeution. Flatteninginitsurrentformisgearedtowardshandling \nirregularparallelism,attheexpenseofnotoptimisingreg\u00adularparallelism.Itwouldbepreferabletoreogniseregular \nstruturesandtreatthemspeially.Partiularlyinteresting seemshape\u00adbasedapproahes,e.g.,thoseofSAC[25]and \nGoldFISh[14],asfatteningalreadydistinguishesbetween shapeanddata.  3. A LAMBDA CALCULUS WITH PARAL-LEL \nARRAYS Weformaliseourextendedfatteningtransformationbased onasimply\u00adtypedlambdaalulussupportingparallelar\u00adrays;weallthealulusAPA.Weexludeparametrised \ntypesandmutualtypereursionfromthealulustore\u00adduenotationalnoise,butbriefydisussthesefeaturesin Setion7.1.ThealulusAPAhasthesyntatistruture \nformalisedinFigure2(a). Theonstrutionoftypetermsisstandardandinludes booleanvalues(Bool)andintegers(Int)asanexamplefor \n4 primitivetypes;thesymbol()denotestheunittype.Our onlyextensiontothetypestrutureareparallelarrays,de\u00adnoted[1T1],whereTistheelementtype.Wewillseelater \nthat,forthepurposeoftheonreteimplementation,we anregard[1T1]asatyped\u00adindexedtype,i.e.,atypeassum\u00adingdiferentonreterepresentationsindependeneonthe \ntypeparameterT[11].Itwillbenotationallyonvenient todistinguishparallelarraysindexedbyBoolandInt,i.e., \n[1Bool1]and[1Int1]fromtheonreterepresentationofanar\u00adrayonsistingofBoolandIntvalues.Therefore,wedenote \nthelatterbyBoolArrandIntArr,respetively. Expressions(orlambdaterms)aretypedandmakevalue reursionexpliit.Variablesareexpliitlytyped-forexam\u00ad \n1nt ple,theexpressionAdenotesafuntionoverintegers\u00adbutweoftenomittypesupersriptsiftheyarelearfrom theontext.WeassumeasetCofonstantsandprimi\u00adtiveoperations.Thesymbol()isoverloadedtodenotea \nonstantrepresentingthesingleelementontainedinthe unittype();furthermore,Containstheusualarithmeti 4Inthepreseneofsumtypes,defningBoolasabasitype \nmayseemredundant.However,weneedarraysofBoolin thefattenedtargetrepresentationofsumtypesand,thus, requireabasitypeBooltoavoidaylidefnition. \nTypes T -()1Bool1Int (basi) 1 V (variable) 1 TlxT2 (produt) 1 Tl+T2 (sum) 1 Tl-T2 (funtional) 1 /tVT \n(typereursion) 1 [1T1] (parallelarrays) ExpressionsE-C (onstant) 1V (variable) 1AV.E (abstration) 1ElE2 \n(appliation) 1/vV.E (valuereursion) (a) Figure2:Grammar andlogioperationsonbooleanandintegervalues.Someof \ntheprimitiveoperationsaretypeindexed,i.e.,parametrised withatype-wewilllaterseethattheyarenotsimplypoly\u00admorphi.Figure2(b)displaysalistofAPA'sprimitiveopera\u00adtions.NotethatweabbreviaterepliatePtoreandlengthP \ntolen.Moreover,wedistinguishonretefuntions,suhas (++ 1nt)::IntArr-IntArr-IntArr,fromtheirtype\u00adindexed \nounterparts,suhas(++ (1nt))::[1Int1]-[1Int1]-[1Int1].We oftendropthetypeindexwhenitislearfromtheontext \nandweusuallywrite(+++)and(!1)infxanduseHaskell'sse\u00adtioningrules.Wealsouse(letv=eline2)=(Ave2)el. Although,forane\u00c6ientimplementationofawiderangeof \ndataparallelalgorithms,weneedsomemorefuntions(like permutations,redutions,andsans),weomitthemhereas theirinlusionwouldnotleadtoanyadditionaltehnialin\u00adsights.See,forexample,[15]foraomprehensivedisussion \noftherequiredfuntionsandtheirparallelimplementation. Regardingma P,weassumethattherestritionsoutlined \ninSubsetion2.4aremet. Wewillneitherformalisethetypesystemnortheseman\u00adtisofAPAduetothelimitedspaeandasbothfollowthe \nstandarddefnitionsdisussedintextbooks,suhas[19].  4. FLATTENED PARALLEL STRUCTURES Paralleloperationsoverfatarraysofprimitivedatatypes \n(suhasintegerandfoating\u00adpointnumbers)anbeper\u00adformedpartiularlyeasilyande\u00c6iently,suharraysarethe preferreddatastrutureinFortranprogramsforexatlythis \nreason.Hene,parallelproessingenouragesthedeompo\u00adsitionofomplexdatastruturessuhthatthestruture informationisseparatedfromtheprimitivedatavaluesthat \narestoredinthestruture[5,23,14].Weallthisafat\u00adteneddatastruturerepresentation.Inpreviouswork[16], wedemonstratedthattheprogramtransformationthatre\u00adplaesthesoure\u00adlevelrepresentationbythefattenedrepre\u00adsentationisbestunderstoodasaspeialisationproedureof \ntheprimitivefuntionsoperatingonthesedatastrutures. Thisinsightallowedustofndane\u00c6ientfattenedrepre\u00adsentationforreursivedatastrutures,andthus,toapply \nthefatteningtransformationtoimportantalgorithms,suh ashierarhialn\u00adbodyodes. InSetion6,weshallelaborateonthisspeialisationpro\u00adProduts \n(',')(o.()::a-(-ax( st(o.()::ax(-a snd(o.()::ax(-( Sums le t(o.()::a-a+( right(o.()::(-a+( ase(o.(.l)::(a-,)x((-,)x(a+()-, \nParallelArrays re(o)len(o)(++ (o))(!1(o))ma P(o.() :::::::::: axInt-[1a1][1a1]-Int [1a1]x[1a1]-[1a1][1a1]xInt-a(a-()x[1a1] \n-[1(1] -repliation -length -onatenation -indexing -dpappliation (b) andprimitivesofA.. edure.However,frstwewilldisuss,inthepresentse\u00adtion,afattenedrepresentationofparallelarrays;andthen, \ninSetion5thevetorisationtransformation,whihgener\u00adatesforeahfuntionintheprogramavetorisedvariant operatingonawholearrayofoperands. \n 4.1 Separation of Structure and Data Ourfattenedrepresentationofparallelstruturesobeys twopriniples: \n1.Parallelarraysofomplextypesarerepresentedbya omplextypethathasparallelarraysofprimitivetype atitsleafs. \n2.Funtionsourintwovariants:inasequentialandin avetorisedform. ThefrstpriniplewasusedbyBlelloh&#38;Sabot[5]fora \nrestritedsetofdatastrutures:Anarrayofpairsisrepre\u00adsentedbyapairofarraysandanarrayofarraysisrepre\u00adsentedbyasegmentdesriptorandafatarray.Thesegment \ndesriptorenodeshowtheelementsofthefatarrayareto bepartitioned,forexample, [12,3,0,11]segd[1[11,21],[13,4,51],[11],[161]1]==[11,2,3,4,5,61]data \nWepreviouslypointedoutthatweanusethesameidea torepresentreursivestrutures,aslongasweuseasegment desriptorateahlevelofthereursion[16].Thefattened \nrepresentationofarosetree(f.Subsetion2.2),then,be\u00adomesalistwhoselengthequalsthedepthoftherepresented \ntree,whereasegmentdesriptorineahlistnodespeifes thebranhingstrutureofthetree.However,themostdif\u00adfultpointhereisnotsomuhthefattenedrepresentation, \nbutspeialisationoftheprimitiveoperationsoverparallel arraystothefattenedstruture.Wewillreturntothistopi \ninSetion6. Interestingly,weanapplythepriniplealsotosumtypes. Givenanarrayofasum,[1Tl+T21],weanrepresentitby \nonearrayforeahofitsomponentsTlandT2plusanaddi\u00adtionalarray-alledtheseletor-thatdeterminesinwhih ordertheomponentelementsareplaedintheompound \narray.Weenodethelatterbyanarrayofbooleanvalues, wherealseorrespondstoelementsfromtypeTlandtrueto elementsfromtypeT2.Asanexampleonsiderthefollowingtypesandthevetorisationandspeialisationtransforma\u00adparallelarrayofsequentiallists: \ntionspresentedinthenexttwosetionsisasdepitedinthe followingommutingdiagram: [1[],[1,2],[],[],[3]1] ==([1alse,true,alse,alse,true1],([1[],[],[]1],[1[1,2],[3]1])) \nT---f--O nI.] II .[OD II Sequentiallistsareformedfromasumtype,whihdistin\u00ad nI.] guishesthetwoalternativeonstrutors[](nil)andCons \nHene,allemptylistsareolletedintoonearrayandall .[TD-- fst(VIf]l non\u00ademptylistsintheotherarray.Thisproessisreur\u00adsivelyrepeatedforthearrayholdingthenon\u00ademptylists. \nTheproessterminatesafterasmanystepsasthelengthof thelongestlist.Thelastnodeofthefattenedrepresentation \nhastheform([11],(.,.)),where.representsanundefned Wewilldisussthevetorisationtransformation'Dinthe V[ \nfollowingsetion. value(seealsoSetion6.1).Theemptyseletorindiates theterminationofthereursivestruture,whihmeansthat \ntheontentsofthetwosubstruturesisirrelevant-noneof thearrayproessingoperationswilltouhtheseomponents whentheyenounteranemptyseletor.Figure3(a)defnes \ntherepresentationoftype\u00adindexedarraytypesbyprimitive arrays. Finally,reognisingtheseondofthepreviouslystated \ntwopriniples,wereplaeanyfuntionbyapaironsisting oftheoriginalfuntionandavetorisedvariantofthatfun\u00adtion.Roughlyspeaking,wheneverafuntionisapplied,the \noriginalfuntionoritsvetorisedversionisusedindepen\u00addeneonwhethertheappliationiswithinasequentialora dataparallelomputation.Withinthevetorisedversionof \nafuntion,allotherfuntionsarejustrepresentedbytheir vetorisedform-thesequentialformisneverneeded. ThedefnitionsinFigure3ombinealltheserules.Part(a) \nrepresentsarraysofompoundtypesbyompoundtypesof simpleintegerandbooleanarrays.Furthermore,foragiven typeT,.[TDfromPart(b)yieldsarepresentationofthat \ntype,whereallfuntionsarerepresentedbypairsomprised outoftheirnormalandvetorisedvariant.Outsideofparal\u00adlelarrays,wemerelyreplaefuntionsbypairsoffuntions, \nwherethevetorisedvariantformstheseondomponent. Thetypetransformation.['Ddoesnotexpliitlyoverthe aseofparallelarraysasPart(a)eliminatesall[1'1]on\u00adstrutorsandthereannotbeanyenlosedfuntionsdueto \ntherestritiondisussedinSetion2.4. Byvirtueofthemapping.['Ditiseasytoseethatthe type[1/ttreeIntx[1tree1]1]-aparallelforestofrosetreesstor\u00adingintegers-isrepresentedby \n/ttree(Intx[1Int1])x(Intx[1Int1]xtree)  5. VECTORISATION OF FUNCTIONS Wealreadynotedthatourformulationofthefatten\u00adingtransformationonsistsoftwosteps:(1)Vetorisation \noffuntionsand(2)speialisationofprimitiveoperations totheonreterepresentationofparalleldatastrutures. \nThesetwostepsaredisussedintheurrentandthefollow\u00adingsetion,respetively. Vetorisationrequiresustoreplaeeveryfuntionfofthe \noriginalprogrambyapair(f ' ,ft),whereallloalfuntions inf ' didundergothesametransformation.Furthermore, \nftisfliftedpointwiseintovetorspae,i.e.,itisavariant offthatanperformfonallelementsofaparallelarray inasingleparallelstep-seealsoSubsetion2.3.Letus \nonsider,forexample,thesoureexpression[1x+y1xe1] (notethatyisfree),whihinAPAbeomes letf=Ax 1nt x+yinma \nPfe Letusassumethatinthetargetlanguage,theprimitiveop\u00aderation(+)hastype(IntxInt-Int,[1Int1]x[1Int1]-[1Int1]), \ni.e.,itisapairofsalaradditionandelementwisevetorad\u00addition.Then,theliftedvariantftoftheabstrationbound \n[l1ntll tofwouldbeAx(snd(+))(x,re(lenx)y)-i.e.,ve\u00adtorisedaddition(denotedby(snd(+)))isappliedtothear\u00adrayargumentxandasu\u00c6ientnumberofopiesofy(the \nvalueofyisopied,beauseitisfree,i.e.,aonstantsalar inthisexample). Previousformalisationsofthefatteningtransformation \ndidonlyhandlenamedfuntions,andthus,distinguished betweensalarandliftedvariantsoffuntionsusingnames, suhasfandft \n.Inthepresentsettingbasedonthelambda alulus,weannotfollowthisapproah;instead,weliter\u00adallyreplaeeverylambdaabstrationbyapairoffuntions. \nf f (nodes)(segd) where(nodes)representsthenodevaluesofonelevelofthe forestand(segd)thesegmentdesriptorpartitioningthe \nnextleveloftheforestintosubtrees.Thisstrutureis,in efet,wellsuitedfortheparallelimplementationofthespa\u00adtialdeompositiontreesthatare,forexample,frequently \nusedinhierarhialn\u00adbodyalgorithms[16]. InAPA,thepreviouslymentionedtypeofparallelarrays ontainingsequentiallists,[1[a]1],anbeformalisedstraight \nforwardas[1/tlist()+(axlist)1].AordingtoFigure3,it hasthefollowingfattenedrepresentation: /tlist((Intx[1Bool1])x(Intx([1a1]xlist))) \nInourexample,wethusget let f=(Ax 1nt(st(+))(x,y), [l1ntll Ax(snd(+))(x,re(lenx)y)) in (sndf)e Notehowthemappingofthesalarfuntionisreplaedby \nadiretappliationoftheliftedvariant.Unfortunately,we annotsimplyreplaema Pbysndintheaseofnested ourrenesofma \nP-wewillreturntothispointinthe nextsetion,forthemomentletusjustonsiderthelifting offuntions.Inthisexample,thesalarversionoffisnot \n f neededanymore,butingeneral,afuntionmayourboth (seletor) insequentialandparallelontexts. Generally,givenafuntionf::T-O,theorrespondeneThereisonemorepointthatshouldbenotedaboutthe \nbetweenthefattenedrepresentations.[TDand.[ODofthepreviousexample.Thevariablesxandyweretreatedin [1()1]=Int \n[1Bool1]=IntxBoolArr [1Int1]=IntxIntArr [1TlxT21]=[1Tl1]x[1T21] [1Tl+T21]=BoolArrx[1Tl1]x[1T21] [1Tl-T21]=[1Tl1]-[1T21] \n[1[1T1]1]=[1Int1]x[1T1] (a) Figure3: (a)Flattenedrepresentationofparalleltypes diferentwaysinthebodyoftheliftedfuntion.Bylift\u00adingthefuntion,theargumentvariablexbeomesvetor\u00advalued(i.e.,itisraisedfromtypeIntto[1Int1]).Weallsuh \nvariablesparallelvariables.Inontrast,yisasalarvari\u00adables-itisnotliftedintovetorspae.5Moreover,weall thenumberofvaluesoverwhihaparallelvariableranges, \nthesizeoftheparallelontext.Inthepreviousexample,the sizeoftheparallelontextislene,i.e.,thenumberoftimes \nthatthebodyof[1x+y1xe1]isevaluated. Now,wearereadytoformalisevetorisation.Thefun\u00adtionV['Dtakesanexpressionandyieldsitsvetorisedform \n(xmayeitherbeaonstantoravariable): V['D ::(E:O)-(E:.[OD) V[xD =x T nIT] V[AveD=(AvV[eD,-sequential [lTll \nt[vl Ave)-parallel V[ele2D =(stV[elD)(V[e2D) T nIT] V[/vveD=/vvV[eD Notehowtypesaretransformedbythefuntion.['Dfatten\u00adingtypes,abstrationsarerepresentedbypairsoffuntions, \nandappliationsonsistentlyhoosethefrst-i.e.,theorigi\u00adnalvariant-ofeahabstration.Usageoftheliftedvariants \ndependsontheonretedefnitionofma P,whihweshall onsiderinthefollowingsetion.First,weformalisethe tvs liftingproess,whereemeansliftinganexpressionein \naontextofparallelvariablesvs. (')tvs ::(E:O)-(E:[1O1]) tv:vs x 1xE(v:vs)=x 1otherwise=re(lenv)x Te)tvs \n[lTllt(v:vsl (Av=Ave e2)tvs tvsvs (el=(el)(e2t) Te)tvs tvs* [lTll*[vl (/vv =/vve Thefrstequationdistinguishesbetweenparallelandsalar \nvariables.Theformeraretreatedasbeingaparallelarray already,whereasthelatterarerepliatedaordingtothe sizeoftheparallelontext-whih,asweseeinthethird \nequation,istheheadofthelistofparallelvariables.The ruleforreursion/vveputsthenamesofreursivefuntion attheendofvstoavoidinterferingwithdeterminingthe \nsizeoftheparallelontext. 5 Theuseofthewordsalarmightbeabitmisleading.In fat,youldbeanarray\u00advaluedvariableandwewouldstill \nallitsalar.Weareinterestedinwhetherornotavariable hasdiferentvaluesintheparallelomputationspaeofa liftedoperation,notinwhetheritreferstoasalarvalueor \nanarray. .['D ::T-T .[xD 1xECUV=x .[TlxT2D =.[TlDx.[T2D = .[Tl+T2D .[TlD+.[T2D .[Tl-T2D =(.[TlD-.[T2D) \nx([1Tl1]-[1T21]) .[/tvTD =/tv.[TD (b) and(b)pairingofnormalwithvetorisedfuntions Atfrstsight,itmightseemasiftherulesdonotworkfor \ntvs funtionsf,whenwehavefwithfE vs.However,on\u00adsiderthat[1Tl-T21]=[1Tl1]-[1T21],aordingtoFigure3, andthatweyethavetodefnethespeialisationofre \n(o-() AswewillseeinSubsetion6.1,wehave re(n,f)=sndf (o-() DuetothetransformationperformedbyV['D,thevalueof \nfwillbeapairwhoseseondomponentontainsthelifted variantofthefuntion.Inotherwords,weimplementa vetorofopiesofonefuntionbythevetorisedversion \nofthatfuntion-insteadofapplyingafuntionmultiple timesinparalleltothediferentelementsofaparallelarray, \nweapplyitsvetorisedounterpartonetothatarrayasa whole.  6. SPECIALISATION OF PRIMITIVE OP-ERATIONS Asalreadymentioned,oneoftheentralideasofourap\u00adproahtohandlingreursivedatatypesinfatteningisthe \nuseofatype\u00adbasedspeialisationproedurefortheprim\u00aditiveoperationsofAPA[16].Inthefollowing,wewillim\u00adproveourpreviousapproahbyformalisingthedefnition \noftheprimitiveoperationsinthestyleofgeneriprogram\u00adming;onsequently,wean,then,replaeourpreviousad hospeialisationproedurebythesystematispeialisation \nofHinze'sgeneriprogrammingframework[12,11].This notonlyprovidesourapproahwithaformalfoundation, butalsoallowsustofattenthefullrangeofdatatypessup\u00adportedinlanguageslikeHaskellandML.Moreover,thenew \nspeialisationtehniqueisappliableinthepreseneofsepa\u00adratelyompiledmodules.Thiswasneithertheasewithour previousspeialisationroutinenorwithotherformulations \nofthefatteningtransformation,asinbothasesallpara\u00admetripolymorphismhadtoberemovedfromtheprogram bygeneratingappropriateinstanes.Thisisnolongerthe \naseasHinze'stransformationgeneratesgeneridefnitions thatusefuntion\u00advaluedargumentstoenabletheiruseon \nallinstanesofaparametrisedtype. 6.1 Operations on Parallel Structures Themostinterestingoperationsarethoseonparallelarr\u00adays-inourdefnitionofAPA,theseare(re),(+++),(!1),len, \nandma P.Inordertoreahane\u00c6ientparallelimplemen\u00adtationoftheseoperations,weseletthefattenedformout\u00adlinedinSetion4.1astheonreterepresentationforparallel \narrays.Foranparallelarray[1T1],thisonreterepresenta\u00adtiondependsontheonretetypeT;thus,weanregard[1'1] \nasatype\u00adindexedtype[11].Correspondingly,weunderstand aprimitivep(T)operatingonarrays[1T1]asatype\u00adindexed \nfuntion.Inotherwords,independeneonthetypein\u00addex,weanhooseanappropriatefattenedrepresentations foreahparallelarrayandarrayprimitive.Thisfailitates \nhigh\u00adperformaneparallelexeution,asthefattenedrep\u00adresentationonsistsofnothingbutsalars,produts,fun\u00adtions,andarraysofintegersandbooleans.Inpartiular,the \nonlyonreteoperationsneededonparallelarraysarethose operatingoverarraysofintegersandbooleans.Allothers \naregeneratedbyaspeialisationproedurefromthegeneri defnitionsthatwedisussinthissetion.Asmentionedin Setion3,toseparatetheonreteoperationsoverparallel \narraysofintegersandbooleansnotationallyfromthegeneri operations,wewritethemwithouttheanglebrakets-for \nexample,wewritereinsteadofre 1nt(1nt). 6.1.1 Data Parallel Application WesawinSetion5that-aftervetorisation-theprimi\u00adtivema \nPmerelyhastoapplytheseondomponentofthe pairthatrepresentsthemappedfuntion.Thesituationisa littlemoreinvolvedintheasewhereappliationsofma \nP arenested(asintheexamplefromSubsetion2.3).Inthis ase,theinneruseofma Pitselfisliftedandwehavetoen\u00adsurethatwedonotneedanyoftheinnermostfuntionsina \nformthatisliftedmorethanone.Infat,alreadyBlelloh &#38;Sabot[5]pointedoutthatinthenestedase,weanuse oneliftedfuntionsifweignoretheadditionalstruture \ninformation(i.e.,segmentdesriptors)ofthearray\u00advalued argument.Moreover,theresultwillrequirethesamestru\u00adtureinformationastheargument.See[23,18,15]foramore \ndetailedexplanation. Overall,weandefnema Pbythefollowingpairoffun\u00adtions,whihrepresenttheonventionalandliftedvariant, \nrespetively: ma P::.[(a-()x[1a1]-[1(1]D ma P(f,a)=(sndfa, -sequential (sta,f(snda)))-lifted Tounderstandtheliftedvariant,wehavetotaketherepre\u00adsentationofarraysofarraysasapairofsegmentdesriptor \nanddataarrayintoaountandhavetoreognisethatan arrayoffuntionsisrealisedasasimplefuntionoverarrays (notasapairoffuntions).Bothfatsareapparentfrom \nthedefnitionsinFigure3.  6.1.2 Replication Generally,therearethreelassofoperationsoverarrays: (1)thosethatinreasethenestingdepths,(2)thosethat \nmaintainthenestingdepths,and(3)thosethatreduethe nestingdepths.Thegeneridefnitionsofthemembersof eahlassaresimilar,andthus,wehoseamemberofeah \nforinlusionintoAPA. Repliationbelongstothefrstlass-ittakesavalueof typeTto[1T1].Likeintheaseofma P,weneedbothaon\u00adventionalandaliftedvariant.Tokeepthedefnitionsread\u00ad \n(l able,wewilldefnethemindependently,asreandre, (l respetively,andimplyre=(re,re).Furthermore,we willuseanequationalnotation,insteadofexpliitlambda \nabstrationsandreursion(thetranslationtoplainAPAis straightforward). ( re(o) ::.[aDxInt-.[[1a1]D ( re(n,x)=n \n((l) (( re(n,x)=(n,re1nt(n,x)) (1nt) (( re(n,x)=(n,re(n,x)) (Bool)Bool ((( re(n,x)=(re(n,stx),re(n,sndx)) \n(oX()(o)(() ( re(n,x)= (o*() ifn==0then ( (re(0,0),(.,.)) (1nt) else ase ' ('( (Ax(re(n,alse),(re(n,x),re(0,.)))) \nBool(o)(()' (( (Ax(reBool(n,true),(re(o)(0,.),re(()(n,x ' )))) x ( re(n,x)=sndx (o-() ( re(n,x)=ifn==0then \n([loll) ( (re(0,0),.) (1nt) else f( re(o)(n,x) Here,weusethesymbol.todenotesubexpressionswhose valueisirrelevant-inalazylanguage,thismightindeedbe \nadivergingvalue.Inanyase,thedefnitionoftheprimi\u00adtivesensuresthatthesevaluesarenevertouhed.Further\u00admore, \nf re(o)::[1a1]xInt-[1[1a1]1] represents,soalled,hunkwisedistribution.Itreatesa parallelarrayfromrepeatedourrenesofashorterarray. \nAsitsdefnitionistedious,butnotverysurprising,weomit it-see[16,15]fordetailsonhunkwiseoperationsandwhy \nitisworthwhiletotreatthemspeiallyondistributedmem\u00adorymahines. Finally,hereisthedefnitionoftheliftedvariantofdis\u00adtribution: \nre(l o) ::.[[1a1]Dx.[[1Int1]D-.[[1[1a1]1]D re l(ns,xs)=(ns,sumns) ((l) re l(ns,xs)=(ns,(sumns,re l(ns,xs))) \n(1nt)1nt ll re(Bool)(ns,xs)=(ns,(sumns,reBool(ns,xs))) re l(ns,xs)= (oX() ll (ns,(re(ns,stxs),re(ns,sndxs))) \n(o)(() re l(ns,xs)= (o*() let sel=stxs 'l left=re(o)(akP(sel,ns),st(sndxs)) 'l t right=re(()(akP(notsel,ns),snd(sndxs)) \nin l'' (ns,(reBool(ns,seletor),(left,right))) l re(ns,xs)=sndxs (o-() l fl ([loll)(o) re(ns,xs)=re(ns,xs) \nTheonlydifereneinthestrutureoftheresultofthelifted fromtheonventionalvariantisthattheformerhasanad\u00additionalsegmentdesriptor.Intheaseofdistributions, \nthissegmentdesriptoroinideswiththevalueoftheargu\u00admentnsThefuntionsumisanotherprimitiveofthetarget language-itimplementsparallelredutiononarraysofin\u00adtegers.Furthermore,akP::[1Bool1]x[1a1]-[1a1]removes \nallelementsfromtheseondargumentthatorrespondto valuesofalseinthefrstargument-wedonotformalisethe defnitionofakPhere,asitsstrutureisnotunlikethatof \nonatenation(bothoperationspreservethenestingdepth ofthestruturestheyoperateover).  6.1.3 Concatenation \nNextwedefnetheappendfuntions(++ )asanexample ofaprimitivethatmaintainsthenestingofitsarguments. (++ (o))::.[[1a1]Dx.[[1a1]D-.[[1a1]D \nxs+ ((l)ys=xs+ys xs+ (1nt)ys=(stxs+stys,sndxs+ 1ntsndys) xs+ (Bool)ys=(stxs+stys,sndxs+ Boolsndys) xs+ \n(oX()ys=(stxs+ (o)stys,sndxs+ (()sndys) xs+ (o*()ys= (stxs+ (Bool)stys, (st(sndxs)++ (o)st(sndys), snd(sndxs)++ \n(()snd(sndys))) xs+ ([loll)ys=xs+ f ys (o) Notethatthease+ (o-()isnotovered.Itisnotneeded, asthetransformationsdonotgeneratesuhusesof(+++) \ninthepreseneoftherestritionsfromSubsetion2.4.For brevity,weomitboththedefnitionofhunkwiseappend (++ f)andoftheliftedvariant. \n 6.1.4 Indexing and Length Finally,wehavethesimplestase-namelythatofan operationreduingthenestingdepthofitsstruturedargu\u00adment.Theprototypialexampleforthisaseisindexing: \n(!1(o))::.[[1a1]DxInt-.[aD xs!1((l)i=() xs!1i=sndxs!11nti (1nt) xs!1i=sndxs!1Booli (Bool) xs!1i=(stxs!1i,sndxs!1i) \n(oX()(o)(() xs!1i= (o*() if(stxs!1i)then (Bool) snd(sndxs)!1(()i else st(sndxs)!1(o)i xs!1i=x!1f n ([loll)(o) \nLikeinthedefnitionof(+++),wedonotneedaasefor thetypeindexa-(,asitisguaranteednottoour.It isinterestingtonotethatindexingofparallelarrayswhose \nelementsareofomplextype,e.g.,arraysoflists[1[a]1]isnot aonstanttimeoperation.Astheequationsforprodutand \nsumtypesshow,theostisproportionaltothedepthofthe extratedelement.Thismightseempeuliar,butisinfat anaturalonsequeneofafullyvetorised-andthus,per\u00adfetlyloadbalaned-omputation.Theindexedsubterm \nmaybeloatedonasingleproessorandmust,thus,be ommuniateduponextration,whihinturnwillgenerally entailtouhingallitssub\u00adstrutures.Infat,evenifwein\u00addexaparallelarrayofintegervalues,theextratedvalue \ngenerallyhastobebroadasttoallproessingnodes.This propertyoftheexeutionmodellearlyleadstoine\u00c6ien\u00adiesiffollowedstoially.Moregenerally,thisisaninstane \noftheobservationthatoverlyaggressiveloadbalaninga\u00adtuallyanleadtolesse\u00c6ientode.Wehavedisussedso\u00adlutionstothisprobleminpreviouswork[15,17],whihare \nemployedinthestagesfollowingthegreyboxofFigure1. Thelengthofanarrayisexpliitinthefattenedrepresen\u00adtation,sowewillnotgiveaformaldefnitionoftheprimitive \nlenhere.  6.2 Operations on Sequential Structures Inontrasttotheoperationsonparallelarrays,operations \nonsequentialstrutures-suhasprodutsandsumsthatdo notouraselementsofaparallelarray-anberealisedus\u00adingtheirusualparametripolymorphiimplementation.In \nourdefnitionofAPA,thesearetheoperations(','),st(o.(), snd(o.(),le t(o.(),right(o.(),andase(o.(.l).Nevertheless, \nweneedthesefuntionsinbothasalarandaliftedvari\u00adant.Thisistrivialfortheformerthree:Theirliftedvariants \nareidentialtothesalarones,butrequiresomethoughtfor thelatterthreeoperations. le tt ::[1a-a+(1] (o.() \nle tt xs=(re(lenxs,alse),(xs,.)) (o.()(Bool) rightt ::[1(-a+(1] (o.() rightt(o.()xs=(re(Bool)(lenxs,true),(.,xs)) \naset ::[1(a-,)x((-,)x(a+()-,1] (o.(.l) asetfgxs= (o.(.l) let seletor=stxs rlen=len(akP(seletor,seletor)) \nllen=lenseletor-rlen left ' =ifllen=0thenf(st(sndxs))else. right ' =ifrlen=0theng(snd(sndxs))else. in \n(seletor,(left ' ,right ' )) Wedonotdefneonditionalexpressionsformally,butthey behaveentirelyasexpeted. \nTheoperationsle ttandrighttenodeaompletearray ofvaluesasleftorrightomponentsofasum-theydo soinasingleparallelstep.Theliftedvariantofaseis \nmoreinvolved.Itappliesitsargumentsfandgtotheleft andrightomponentsoftheliftedsum,respetively-but itisarefulnottotouhaomponentthatrepresentsan \nemptyarray.Thisisimportantastheseomponentswillnot ontainanymeaningfulvalue-seethedefnitionofre-and theymaybepartofareursivedatastruture. \n 6.3 Specialisation of Generic De.nitions Inthefollowing,webriefysummarisethespeialisation proedureofHinze[12],asitisneededtoinstantiatethe \ngeneridefnitionsoftheprimitivesfromSetion6.1,and thus,toobtainonretedefnitionsfortheprimitivesatthe requiredtypes.Thegeneralformfortype\u00adindexedvaluesin \nAPAis poly(o::*)::Fa poly((l) =poly(l poly(1nt) =poly1nt poly(Bool) =polyBool poly(oX() =polyXpoly(o)poly(() \npoly(o*() =poly*poly(o)poly(() poly([loll) =poly[l.llpoly(o) Here,*denotesthekindofnormaltypes,i.e.,thesetoftypes \nproduedbyT.Typeonstrutorsmaptypestotypes-e.g., thekindof[1'1]is*-*Weanbringthedefnitionofany *\u00adindexedfuntionintotheaboveformbysupplyingsuit\u00adablevaluesforF,poly(l,poly1nt,polyBool,polyX,poly*,and \npoly[l.ll,wherewerequirethatthefollowingtypeonstraints aresatisfed: poly(l::F() poly1nt::FInt polyBool::FBool \npolyX::Va,(Fa-F(-F(ax() poly*::Va,(Fa-F(-F(a+() poly[l.ll::VaFa-F[1a1] ThekeyideabehindHinze'stransformationistopromote \n*\u00adindexedfuntionstotypesofarbitrarykindsasfollows: typeabstrationisinterpretedbyvalueabstration,type \nappliationbyvalueappliation,andtypereursionbyvalue reursion.Thisallowsustodefnethepromotedversionof poly(.),whihisdenotedbypoly((.)),asfollows: \npoly((T::I))::F((t::I)) poly(())p=poly poly((x))p=px poly((T.T2))p=(poly((T.))p)(poly((T.))p) poly((Ao.T))p=Avpoly((T))(pUa \n-v}) poly((l.o.t))p=vpoly((t))(pUa v}) /v\u00ad Thevariablepdenotesanenvironment,x aextendsthe - environment,andappliationofanenvironmenttoatype \nvariablereturnstheassoiatedtypevalue.Moreover,poly(.) andpoly((.))arerelatedby poly(T::*) =poly((T::*))E \nwhereEistheemptyenvironment.Asaresult,wean speialisepoly(t)byspeialisingpoly((t))Finally,F((t::I))is \ngivenby F((u::*)) =Fu F((u::I.-I.)) =VxF((x::I.)) -F((ux::I.)) Asimilarspeialisationproedurefortype\u00adindexedtypes, \nwhihwewillnotdetailhere,isgivenbyHinzein[11].  7. ADDITIONAL FEATURES 7.1 Mutual Type Recursion and \nParametrised Types ThealulusAPAdidnotinludethetreatmentofmutual typereursionandparametrisedtypestoreduenotational \noverhead.Tohandlemutualtypereursion,wehavetouse typeequations,suhas, Lista =()+(axLista) insteadofanexpliitfxed\u00adpointombinator.Thetypesofa \nprogrammoduleare,then,givenasasetofsuhequations, whihmaybemutuallyreursive.Weandefnethefat\u00adtenedrepresentationofparalleltypes,asgiveninFigure3, \ninexatlythesamewayfortypeequations. Theinlusionofpolymorphismislessstraightforward. Theuseofpolymorphifuntionspreventsfullspeialisa\u00adtionofthesefuntions(withoutknowingalltypeinstanesat \nwhihtheyour),whihiswhathashinderedpreviousfor\u00admulationsoffatteningfrominludingsupportforseparate ompilationinthepreseneofpolymorphism.Fortunately, \nournoveluseofHinze'sgeneriprogrammingframework helpsushereagain.Hinzeusesonehigher\u00adorderargument ineahspeialisedfuntionforeahtypevariableourring \ninthetypeindexofagenerivalue.Theseargumentson\u00adtainfuntionsthatimplementthespeialisedroutineforthe abstratedtypes,i.e.,intheaseofapplyingrepliationto \navalueoftype[a],thespeialisedrepliationroutinefor [a]wouldgetarepliationroutineforaasanargument. Type\u00adindexedtypesaretreatedsimilarly.See[12,11]for \ndetails. Theargumentsofaronlyoversthespeialisationofprim\u00aditives,butnotthevetorisationtransformationV['D.In\u00adterestingly,vetorisationisnotafetedbythepreseneof \nreursivetypesatall-aswealreadyarguedin[16].Simi\u00adlarly,polymorphidefnitionsdonotompliateV['D.The essentialreasonforthisisthatvetorisationisnotatype\u00addependenttransformation. \n 7.2 Why Pure Functions Matter Hughes[13]iteshigherorderfuntionsandlazyevalua\u00adtionasthemainadvantagesoffuntionalprogramming.In \ntheontextofnesteddataparallelism,otherfatorsome intoplay.Oneofthemis,ofourse,thelakofsideef\u00adfetswhenexeutingmultiplefuntioninvoationsinparal\u00adlel.Inontrasttolanguageswithsideefets,.....does \nnotrequireartifialrestritionsonthekindofomputa\u00adtionsthatanbeexeutedinparallelwithoutalteringthe semantisoftheprogram.Inombinationwiththehigh \nabstrationleveloffuntionalprograms,theompilerhasa highdegreeoffreedominmappingsoure\u00adleveldatastru\u00adturesandomputationstoonreteimplementations.The \nhighdegreeofexpressiveness,usuallyallowstoworkwith\u00adoutreferenetypes,whiharehighlyproblematiinapar\u00adallelontext:(1)Theyannotbesimplyimplementedby \npointersondistributed\u00admemorymahines;(2)thepresene ofpointersgenerallyexaerbatesthedi\u00c6ultiesofdatade\u00adpendenyanalysis;and(3)sideefetsusuallyreduethe \nsetofadmissibleshedules,whihreduesparallelism. Although,itispossibletointegratethedisussedap\u00adproahtonesteddataparallelismintonon\u00adfuntionallang\u00aduages-aswedidforC[8]-itisrathertedious,asnon\u00adtrivial \nrestritionsontheuseofrefereneshavetobeimposed withinparallelomputations.Moreover,theodegener\u00adatedbythefatteningtransformationistoofnegrainedto \nbediretlyexeutede\u00c6ientlyonmostarhitetures.This requiresaggressiveompileroptimisations,whiharesignif\u00adiantlyeasiertoperforminapurelyfuntionallanguage,as \ntheompileranexploititsdetailedknowledgeaboutdata dependenies. Nepalallowsuser\u00addefneddynamidatatypeswithinpar\u00adallelarrays.Thisispossibleduetothedelarativewayin \nwhihalgebraidatatypesarespeifedinfuntionallan\u00adguages.Theompilerisabletoomputeane\u00c6ientrep\u00adresentationofthosestruturesbymappingthemontoiso\u00admorphistruturesthatontainonlyparallelarraysofbasi \ntype-whih,aswehaveargued-isimportantforparallel performane.Suhatransformationisonlypossiblewhen wehavesu\u00c6ientontroloverhowdatastruturesarea\u00adessedandmanipulated.InV,thenestedparallelCdialet, \nwerestritedtheuseofreferenesinaparallelontextto parameterpassingtogivetheompilermoresopeforop\u00adtimisations.Intheproessofhandlingtheremainingref\u00aderenes,ourprototypeompilerforVtransformedarrays \nofreferenesintoasinglereferenetoonearray.However, as[22]disusses,evenwiththisstrongrestrition,itispos\u00adsibletowriteprogramswherethefattenedprogramdoes \nnotauratelypreservethesemantisofthesoureprogram withoutimposingfurtherrestritions. Insummary,itappearstousthatreferenestypesand \nfne\u00adgrainedparallelism-espeiallywhenfatteningisused\u00ad 2015 10 5 0 absolute(20,000) optimal  [PE] Figure4:AbsoluteandrelativespeedupofBarnes\u00adHut \nareoneptuallyinompatible.Consequently,weregardthe lakofsupportforreferenetypesinfattening\u00adbasedimple\u00admentationsasaseondaryissue. \n 8. CONCLUSION Beforetheonludingremarks,letusbriefydisussour preliminaryexperimentalresultsandrelatedwork. \n8.1 Benchmarks Toensurethepratiabilityofourapproah,weperformed anumberofexperimentsonvariousparallelmahinesin\u00adludingaCrayT3E.Inpartiular,wemeasuredtheper\u00adformaneofaBarnes\u00adHutn\u00adbodyode,whihwemanu\u00adallyderivedusingourtransformationrules(weareurrently \nworkingatafullompiler).Wepreviouslyreportedthese experimentalresultsin[16]foramorerestritedformof thefatteningtransformation.Nevertheless,thenewtrans\u00adformationproduesessentiallythesameodeforthispar\u00adtiularode.Figure4displaystherelativeandabsolute \nspeedup,wherethelatterisinomparisontoasequential implementationofthesamealgorithmonasingleproessor. Inothernesteddataparallelimplementations[3],thespa\u00adtialdeompositionofthepartileswas,duetotherestrited \nsetofavailabledatastrutures,enodedasnestedparallel arrays.Thedisadvantageofsuharepresentationisthat itdoesnotrefetthestrutureoftheparallelalgorithm, \nandthus,ahievespoorloality.Infat,theinadequate representationimpliesuptoabout20%runtimeoverhead alreadyonasingleproessor-thisfatorinreaseswiththe \nnumberofproessors,asthefrequenyofnon\u00adloalmemory aessgoesup.Weareabletoavoidthisoverheadinour implementationbystoringthepartilesinarosetree. \nUsingthetypetransformationtehniquesdesribedinthis paperinombinationwithvariousotheroptimisingprogram \ntransformations,weahievedanabsolutespeedupofabout afator4on20proessors,omparedwithasequentialim\u00adplementationofthesamealgorithminC.Consideringthe \nhighlyirregularstrutureofthealgorithmandtheompar\u00adativelyhighommuniationoverheadwhihitindues,this isapromisingresult.Furthermore,theurveisstillalmost \nlinearfor20proessors(whihwasthemaximalnumberof proessorsavailabletous). Moreover,weahievearelativespeedupof15for20pro\u00adessorsintheaseof20kpartiles,whihdemonstratesthe \ngoodparallelbehaviourofourtransformations.Wehope thatweanfurtherlosethegapbetweenrelativeandab\u00adsolutespeedupbyapplyingmoreaggressiveoptimisations. \n 8.2 Related Work Speialpurposefuntionallanguagessupportingfattening\u00adbasednesteddataparallelisminludeNesl[4]andProteus[23]. \nAlthough,NesltakessomeofitssyntaxfromML,itisfar fromoveringthewholelanguageand,inpartiular,ML's rihdatastrutures.Proteusisahybridhigh\u00adlevellanguage \nmixingfuntionalandimperativelanguagefeatures;fatten\u00adingwasonlyappliedtoasublanguage. Aswehavealreadymentioned,fatteninginitsorigi\u00adnal,restritedformwasintroduedbyBlelloh&#38;Sabot[5]. \nPrins&#38;Palmer[23]aswellasKeller&#38;Simons[18]for\u00admalisedthepreviouslyratherinformaldesriptionofthe \ntransformation.Theformeralsoextendedittooverhigher\u00adorderfuntions.Palmeretal.[21]optimisedthetransfor\u00admationandRielyetal.[24]showedthatitpreservesparallel \nomplexity.Finally,wepreviously[16]extendedittouser\u00addefnedreursivedatastrutures. 8.3 Concluding Remarks \nWepresentedageneralisationoffatteningthatallowsus toapplythisprogramtransformationintheontextofa standardfuntionallanguageslikeHaskellandML.Wefeel \nthatthisisanimportantsteptowardsthepratialusabil\u00adityofnesteddataparallelism.Ourtransformation\u00adbased approahhashadfrstpositivepratialresultsandweare \nurrentlyintheproessofimplementingafullompiler. Inthispaper,wehoseparallelarraysastheonlyparal\u00adleldatastruture.However,aloserlookattheprogram \ntransformationsrevealsthatotherformsofolletionsof valuesarealsosuitableaslongasweanseparatestruture fromdatavalueslevelbylevel-inthesamewayaswedo \nthatwithsegmentdesriptorsforparallelarrays.Inparti\u00adular,weshouldbeabletosupportparalleltreesandparallel \nproduts. Acknowledgements. Weareindebtedtotheothertwour\u00adrentmembersofthe.....projet,RomanLehthinsky andWolfPfannenstiel,whohelpedtoshapeourideasand \nprovidedvaluablefeedbak.Furthermore,wethankKaiEn\u00adgelhardt,SvenPanne,andtheanonymousrefereesfortheir helpfulommentsandsuggestionsonadraftofthispaper. \n 9. REFERENCES [1]J.BarnesandP.Hut.AhierarhialO(nlogn)fore alulationalgorithm.Nature,324,Deember1986. \n [2]G.BlellohandJ.Greiner.Aprovabletimeandspae e\u00c6ientimplementationofNESL.InACMSIGPLAN InternationalConfereneonFuntionalProgramming, \npages213-225,1996. [3]G.BlellohandG.Narlikar.Apratialomparisonof N\u00adbodyalgorithms.InDimasImplementation \nChallengeWorkshop,1994. [4]G.E.Blelloh.Programmingparallelalgorithms. CommuniationsoftheACM,39(3):85-97,1996. \n [5]G.E.BlellohandG.W.Sabot.Compiling olletion\u00adorientedlanguagesontomassivelyparallel omputers.JournalofParallelandDistributed \nComputing,8:119-134,1990. [6]D.Cann.Retirefortran?Adebaterekindled. CommuniationsoftheACM,35(8):81,Aug.1992. \n [7]M.M.T.ChakravartyandG.Keller.Howportableis nesteddataparallelism?InPro.of6thAnnual AustralasianConf.onParallelAndReal\u00adTime \nSystems,pages284-299.Springer\u00adVerlag,1999. [8]M.M.T.Chakravarty,F.\u00adW.Shrooer,andM.Simons. V-nestedparallelisminC.InProeedingsofthe \nWorkingConfereneonMassivelyParallel ProgrammingModels(MPPM\u00ad95).IEEEComputer SoietyPress,1995. [9]S.Chatterjee,J.F.Prins,andM.Simons.Expressing \nirregularomputationsinmodernFortrandialets.In FourthWorkshoponLanguages,Compilers,and Run\u00adTimeSystemsforSalableComputers,Leture \nNotesinComputerSiene.SpringerVerlag,1998. [10]H.P.F.Forum.HighPerformaneFortranlanguage speifation.Tehnialreport,RieUniversity,1993. \nVersion1.0. [11]R.Hinze.Generalizinggeneralizedtries.Journalof FuntionalProgramming,2000.Toappear. [12]R.Hinze.Anewapproahtogenerifuntional \nprogramming.InProeedingsofthe27thAnnualACM SIGPLAN\u00adSIGACTSymposiumonPriniplesof ProgrammingLanguage.ACMPress,2000. \n[13]J.Hughes.WhyFuntionalProgrammingMatters. ComputerJournal,32(2):98-107,1989. [14]C.B.Jay.Costingparallelprogramsasafuntionof \nshapes.SieneofComputerProgramming,2000. Forthoming. [15]G.Keller.Transformation\u00adbasedImplementationof \nNestedDataParallelismforDistributedMemory Mahines.PhDthesis,TehnisheUniversitoatBerlin, FahbereihInformatik,1999. \n[16]G.KellerandM.M.T.Chakravarty.Flatteningtrees. InD.PrithardandJ.Reeve,editors,Euro\u00adPar'98, ParallelProessing,number1470inLetureNotesin \nComputerSiene,pages709-719,Berlin,1998. Springer\u00adVerlag. [17]G.KellerandM.M.T.Chakravarty.Onthe distributedimplementationofaggregatedata \nstruturesbyprogramtransformation.InJ.Rolim etal.,editors,ParallelandDistributedProessing, FourthInternationalWorkshoponHigh\u00adLevelParallel \nProgrammingModelsandSupportiveEnvironments (HIPS'99),number1586inLetureNotesin ComputerSiene,pages108-122,Berlin,Germany, \n1999.Springer\u00adVerlag. [18]G.KellerandM.Simons.Aalulationalapproahto fatteningnesteddataparallelisminfuntional \nlanguages.InJ.Jafar,editor,The1996Asian ComputingSieneConferene,LetureNotesin ComputerSiene.SpringerVerlag,1996. \n[19]J.C.Mithell.FoundationsofProgramming Languages.MITPress,1996. [20]G.NarlikarandG.Blelloh.Spae\u00ade\u00c6ient \nimplementationofnestedparallelism.InProeedings oftheSixthACMSIGPLANSymposiumonPriniples andPratieofParallelProgramming,pages25-36, \n1997. [21]D.Palmer,J.Prins,andS.Westfold.Work\u00ade\u00c6ient nesteddata\u00adparallelism.InProeedingsoftheFifth SymposiumontheFrontiersofMassivelyParallel \nProessing(Frontiers95).IEEE,1995. [22]W.Pfannenstiel,M.Dahm,M.M.T.Chakravarty, S.Joahnihen,G.Keller,F.\u00adW.Shrooer,and \nM.Simons.Aspetsoftheompilationofnested parallelimperativelanguages.InJ.Darlington,editor, ProeedingsoftheThirdInternationalConfereneon \nProgrammingModelsforMassivelyParallel Computers(MPPM'97),pages102-109.IEEE ComputerSoietyPress,1998. \n[23]J.PrinsandD.Palmer.Transforminghigh\u00adlevel data\u00adparallelprogramsintovetoroperations.In ProeedingsoftheFourthACMSIGPLANSymposium \nonPriniplesandPratieofParallelProgramming, pages119-128,SanDiego,CA.,May19\u00ad22,1993. ACM. [24]J.W.Riely,J.Prins,andS.P.Iyer.Vetorizationof \nnested\u00adparallelprograms.InW.K.Giloi, S.Joahnihen,andB.D.Shriver,editors,Programming ModelsforMassivelyParallelComputers.IEEE \nComputerSoiety,1995. [25]S.\u00adB.Sholz.Ondefningappliation\u00adspeif high\u00adlevelarrayoperationsbymeansof shape\u00adinvariantprogrammingfailities.InProeedings \nofAPL'98,pages40-45.ACMPress,1998.  \n\t\t\t", "proc_id": "351240", "abstract": "This paper generalises the flattening transformation---a technique for the efficient implementation of nested data parallelism---and reconciles it with main stream functional programming. Nested data parallelism is significantly more expressive and convenient to use than the flat data parallelism typically used in conventional parallel languages like High Performance Fortran and C*. The flattening transformation of Blelloch and Sabot is a key technique for the efficient implementation of nested parallelism via flat parallelism, but originally it was severely restricted, as it did not permit general sum types, recursive types, higher-order functions, and separate compilation. Subsequent work, including some of our own, generalised the transformation and allowed higher-order functions and recursive types. In this paper, we take the final step of generalising flattening to cover the full range of types available in modern languages like Haskell and ML; furthermore, we enable the use of separate compilation. In addition, we present a completely new formulation of the transformation, which is based on the standard lambda calculus notation, and replace a previously ad-hoc transformation step by a systematic generic programming technique. First experiments demonstrate the efficiency of our approach.", "authors": [{"name": "Manuel M. T. Chakravarty", "author_profile_id": "81408595395", "affiliation": "School of Computer Science & Engineering, University of New South Wales, Sydney, Australia", "person_id": "P187027", "email_address": "", "orcid_id": ""}, {"name": "Gabriele Keller", "author_profile_id": "81100011375", "affiliation": "Faculty of Information Technology, University of Technology, Sydney, Sydney, Australia", "person_id": "PP39023133", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/351240.351249", "year": "2000", "article_id": "351249", "conference": "ICFP", "title": "More types for nested data parallel programming", "url": "http://dl.acm.org/citation.cfm?id=351249"}