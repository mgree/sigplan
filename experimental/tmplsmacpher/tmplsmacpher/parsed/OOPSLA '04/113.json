{"article_publication_date": "10-23-2004", "fulltext": "\n\t\t\t", "proc_id": "1028664", "abstract": "<p>In the present work, we outline a reverse engineering approach for UML specifications in form of class diagrams from Java bytecode. After a brief introduction to the subject we present some analyses which go beyond mere enumeration of methods and fields. A glance onto some related work shows that there seems to be no pat solution for the reverse engineering of the more difficult class diagram elements.</p> <p>We sketch our method of determining association multiplicities, being, in a sense, representative of our approach in general: \"intuitive\" analyses, producing results that can be understood by a programmer when inspecting the source code of a given class.</p> <p>Finally, we introduce a tool that implements this work and we apply it onto a small real life example, discussing the results it gave.</p>", "authors": [{"name": "Martin Keschenau", "author_profile_id": "81100469632", "affiliation": "RWTH Aachen University", "person_id": "P698144", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/1028664.1028786", "year": "2004", "article_id": "1028786", "conference": "OOPSLA", "title": "Reverse engineering of UML specifications from java programs", "url": "http://dl.acm.org/citation.cfm?id=1028786"}