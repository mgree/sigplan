{"article_publication_date": "10-23-2004", "fulltext": "\n\t\t\t", "proc_id": "1028664", "abstract": "<p>We've have been proposing formal mathematical methods of software development for nearly as long as we've been developing software. CASE tools were a bust, and G&#246;del long ago nullified any hope of building a system that is both complete and consistent. Model-driven development gets trotted out in a new outfit once every decade as the next \"silver bullet,\" but we're still far from drawing pictures that generate code.</p> <p>Test-driven development almost produces executable specifications, but there's nothing mathematical or provably correct about them. Quality assurance happens during coding, but there's nothing to ensure that the entire system gets built, or that it's what the customer wants.</p> <p>Agile methods propose \"emergent design,\" where BDUF (big design up front) is old-fashioned and limiting. But agile methods work best with small groups of clever people to implement them; they have a hard time scaling.</p> <p>The open-source movement, in which hobbyist programmers write code simply for the love of programming, has produced some of the best software in the industry. Is it good because people love what they're doing and build it for themselves to use? Or is it good because there are hundreds of eyes on the code?</p> <p>Is software development a science or an art? Does it depend on mathematicians or on craftspeople? Are these viewpoints reconcilable?</p>", "authors": [{"name": "Jim Haungs", "author_profile_id": "81100025343", "affiliation": "IBM", "person_id": "PP39023772", "email_address": "", "orcid_id": ""}, {"name": "Martin Fowler", "author_profile_id": "81100062314", "affiliation": "ThoughtWorks", "person_id": "PP31025357", "email_address": "", "orcid_id": ""}, {"name": "Ralph Johnson", "author_profile_id": "81330492373", "affiliation": "University of Illinois at Urbana-Champaign", "person_id": "PP39043454", "email_address": "", "orcid_id": ""}, {"name": "Steve McConnell", "author_profile_id": "81100627170", "affiliation": "Construx, Inc.", "person_id": "PP14215891", "email_address": "", "orcid_id": ""}, {"name": "Richard Gabriel", "author_profile_id": "81100654724", "affiliation": "Sun Microsystems", "person_id": "PP14224317", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/1028664.1028720", "year": "2004", "article_id": "1028720", "conference": "OOPSLA", "title": "Software development: arts & crafts or math & science?", "url": "http://dl.acm.org/citation.cfm?id=1028720"}