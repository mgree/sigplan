{"article_publication_date": "10-23-2004", "fulltext": "\n\t\t\t", "proc_id": "1028664", "abstract": "<p>Programmers tend to understand programs by thinking of concrete examples. &#60;i>Example Centric Programming&#60;/i> seeks to add IDE support for examples throughout the process of programming. Instead of programmers interpreting examples in their head, the examples are written down and the IDE interprets them automatically. Advanced UI techniques are used to present the results closely integrated with the code. Traditionally distinct programming tools (the editor, Read-Eval-Print-Loop, debugger, and test runner) are unified into a single tool that might be called an &#60;i>example-enlightened&#60;/i> editor. This is expected to benefit a wide spectrum of programming activities, for both novice and experienced programmers. Some novel methods for testing and development are made possible. In the longer term, example centrism has implications for the design of future programming languages. A prototype has been implemented for Java in Eclipse.</p>", "authors": [{"name": "Jonathan Edwards", "author_profile_id": "81100596781", "affiliation": "MIT CSAIL, Cambridge, MA", "person_id": "PP43122513", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/1028664.1028713", "year": "2004", "article_id": "1028713", "conference": "OOPSLA", "title": "Example centric programming", "url": "http://dl.acm.org/citation.cfm?id=1028713"}