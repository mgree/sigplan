{"article_publication_date": "01-25-2012", "fulltext": "\n Meta-Level Features in an Industrial-Strength Theorem Prover J Strother Moore Department of Computer \nSciences University of Texas at Austin moore@cs.utexas.edu Categories and Subject Descriptors F.3.1 \n[Specifying and Verify\u00ading and Reasoning about Programs]: Mechanical veri.cation General Terms Veri.cation \nKeywords ACL2 Abstract The ACL2 theorem prover the current incarnation of the Boyer-Moore theorem prover \nis a theorem prover for an extension of a .rst-order, applicative subset of Common Lisp. ACL2 is in use \nat several major microprocessor manufacturers to verify func\u00adtional correctness of important components \nof commercial designs. Among the applications of ACL2 are the following: All elementary .oating point \noperations on all desktop AMD microprocessors fabricated since 1997 have been veri.ed with ACL2 to satisfy \nthe IEEE 754 .oating point standard.  The Rockwell Collins AAMP7 cryptoprocessor was veri.ed with ACL2 \nas speci.ed by the EAL-7 level of the Common Criteria and was certi.ed capable of simultaneously processing \nunclassi.ed through Top Secret Codeword classi.ed data.  The media unit of the Centaur (VIA) Nano 64-bit \nx86 CPU has been veri.ed to be functionally correct with ACL2. In addition, important properties of the \nclock tree for the entire x86 design have been veri.ed.  These and other industrial applications establish \nthat the ACL2 system provides a useful speci.cation and modeling language as well as a useful mechanical \ntheorem proving environment. Surprising to many in the programming languages community is the fact the \nACL2 language is remarkably primitive: it is un\u00adtyped, all functions are total, there are no quanti.ers, \nand there are no functional objects (it is a .rst-order language). These compro\u00admises can make ACL2 models \nmore verbose and cumbersome than comparable models in other languages would be, but also make it easier \nto build a powerful proof engine for the language. Such a powerful theorem prover can in turn be exploited \nto produce very ef.cient runtime code. The ACL2 theorem prover is a program written in the same language \nsupported by the theorem prover. All of the data structures used in the theorem prover are objects in \nthat language. Users Copyright is held by the author/owner(s). POPL 12, January 25 27, 2012, Philadelphia, \nPA, USA. ACM 978-1-4503-1083-3/12/01. of the proof assistant must understand the language since it is \ntheir speci.cation and modeling language. Furthermore, users are permitted to write programs (i.e., to \nde.ne functions) in the language and to run those programs on the theorem prover s data because those \nprograms are side-effect-free. Thus, the prover can be opened up to much user-specialization. Among other \nthings, the ACL2 user can 1. build and ef.ciently run models of complex computing artifacts like microprocessors \nor .oating point units, while experiment\u00ading with speci.cations, theorems, and proofs; 2. build new \ntheorem prover components, use ACL2 to prove that those components meet the speci.cations required by \nACL2, and then cause the system to use the user-de.ned components in place of the primitives provided \nby the ACL2 implementors; 3. de.ne functions that inspect the goal being proved and the ACL2 data base \nand context and then compute goal-speci.c hints at runtime.  Perhaps surprisingly, such sophisticated \nmeta-level facilities were implemented primarily at the request of the ACL2 user com\u00admunity and .nd routine \nuse in the industrial projects mentioned above. ACL2 is thus exploiting the programming prowess of the \nen\u00adgineers and scientists who use it to produce industrial-scale proofs.  Short Biography J Strother \nMoore holds the Admiral B.R. Inman Centennial Chair in Computing Theory in the Department of Computer \nScience at the University of Texas at Austin. He was chair of the Computer Science Department for 8 years, \n2001-09, and led the $120M drive to build the Bill &#38; Melinda Gates Center for Computer Science and \nthe Michael &#38; Susan Dell Computer Science Hall, upon which ground was broken in October, 2010. He \nis the author of many books and papers on automated theorem proving and mechanical veri.cation of computing \nsystems. Along with Boyer he is a co\u00adauthor of the Boyer-Moorve theorem prover and the Boyer-Moore fast \nstring searching algorithm. With Matt Kaufmann he is the co\u00adauthor of the ACL2 theorem prover. Moore \ngot his S.B. in mathe\u00admatics from MIT in 1970 and his Ph.D. in computational logic from the University \nof Edinburgh in 1973. Moore was a co-founder of Computational Logic, Inc., and served as its Chief Scientist \nfor ten years. He and Bob Boyer were awarded the 1991 Current Prize in Automatic Theorem Proving by the \nAmerican Mathematical Soci\u00adety. In 1999 they were awarded the Herbrand Award for their work in automatic \ntheorem proving. Moore is a Fellow of the American Association for Arti.cial Intelligence, an ACM Fellow, \nand a mem\u00adber of the National Academy of Engineering (NAE). Boyer, Moore, and Kaufmann won the 2005 ACM \nSoftware System Award For pioneering and engineering a most effective theorem prover (named the Boyer-Moore \nTheorem Prover) as a formal methods tool for verifying safety-critical hardware and software.  \n\t\t\t", "proc_id": "2103656", "abstract": "<p>The ACL2 theorem prover---the current incarnation of \"the\" Boyer-Moore theorem prover---is a theorem prover for an extension of a first-order, applicative subset of Common Lisp. The ACL2 system provides a useful specification and modeling language as well as a useful mechanical theorem proving environment. ACL2 is in use at several major microprocessor manufacturers to verify functional correctness of important components of commercial designs. This talk explores the design of ACL2 and the tradeoffs that have turned out to be pivotal to its success.</p>", "authors": [{"name": "J. Strother Moore", "author_profile_id": "81342504985", "affiliation": "University of Texas at Austin, Austin, TX, USA", "person_id": "P2991440", "email_address": "moore@cs.utexas.edu", "orcid_id": ""}], "doi_number": "10.1145/2103656.2103707", "year": "2012", "article_id": "2103707", "conference": "POPL", "title": "Meta-level features in an industrial-strength theorem prover", "url": "http://dl.acm.org/citation.cfm?id=2103707"}