{"article_publication_date": "03-01-1993", "fulltext": "\n\t\t\t", "proc_id": "158511", "abstract": "<p>We study the typing properties of CPS conversion for an extension of F<subscrpt>&#969;</subscrpt> with control operators. Two classes of evaluation strategies are considered, each with call-by-name and call-by-value variants. Under the &#8220;standard&#8221; strategies, constructor abstractions are values, and constructor applications can lead to non-trivial control effects. In contrast, the &#8220;ML-like&#8221; strategies evaluate beneath constructor abstractions, reflecting the usual interpretation of programs in languages based on implicit polymorphism. Three continuation passing style sub-languages are considered, one on which the standard strategies coincide, one on which the ML-like strategies coincide, and one on which all strategies coincide. Compositional, type-preserving CPS  transformation algorithms are given for the standard strategies, resulting in terms on which all evaluation strategies coincide. This has as a corollary the soundness and termination of well-typed programs under the standard evaluation strategies. A similar result is obtained for the ML-like call-by-name strategy. In contrast, such results are obtained for the call-by-name strategy. In contrast, such results are obtained for the call-by value ML-like strategy only for a restricted sub-language in which constructor abstractions are limited to values.</p>", "authors": [{"name": "Robert Harper", "author_profile_id": "81100140064", "affiliation": "", "person_id": "PP39072914", "email_address": "", "orcid_id": ""}, {"name": "Mark Lillibridge", "author_profile_id": "81100001867", "affiliation": "", "person_id": "P190619", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/158511.158630", "year": "1993", "article_id": "158630", "conference": "POPL", "title": "Explicit polymorphism and CPS conversion", "url": "http://dl.acm.org/citation.cfm?id=158630"}