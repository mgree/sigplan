{"article_publication_date": "03-01-1993", "fulltext": "\n\t\t\t", "proc_id": "158511", "abstract": "<p>It is widely agreed that recursive types are inherent in the static typing of the essential mechanisms of object-oriented programming: encapsulation, message passing, subtyping, and inheritance. We demonstrate here that modeling object encapsulation in terms of existential types yields a substantially more straightforward explanation of these features in a simpler calculus without recursive types.</p>", "authors": [{"name": "Benjamin C. Pierce", "author_profile_id": "81100303310", "affiliation": "", "person_id": "PP14111353", "email_address": "", "orcid_id": ""}, {"name": "David N. Turner", "author_profile_id": "81100229526", "affiliation": "", "person_id": "PP31099628", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/158511.158653", "year": "1993", "article_id": "158653", "conference": "POPL", "title": "Object-oriented programming without recursive types", "url": "http://dl.acm.org/citation.cfm?id=158653"}