{"article_publication_date": "03-01-1993", "fulltext": "\n\t\t\t", "proc_id": "158511", "abstract": "<p>We have designed and implemented an interprocedural program analyzer generator, called <italic>system Z</italic>. Our goal is to automate the generation and management of semantics-based interprocedural program analysis for a wide range of target languages.</p><p>System Z is based on the abstract interpretation framework. The input to system Z is a high-level specification of an abstract interpreter. The output is a C code for the specified interprocedural program analyzer. The system provides a high-level command set (called <italic>projection expressions</italic>) in which the user can tune the analysis in accuracy and cost. The user writes projection expressions for selected domains; system Z takes care of the remaining things so that the generated analyzer conducts an   analysis over the projected domains, which will vary in cost and accuracy according to the projections.</p><p>We demonstrate the system's capabilities by experiments with a set of generated analyzers which can analyze C, FORTRAN, and SCHEME programs.</p>", "authors": [{"name": "Kwangkeun Yi", "author_profile_id": "81339538925", "affiliation": "", "person_id": "PP37039776", "email_address": "", "orcid_id": ""}, {"name": "Williams Ludwell Harrison", "author_profile_id": "81406595478", "affiliation": "", "person_id": "P300344", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/158511.158642", "year": "1993", "article_id": "158642", "conference": "POPL", "title": "Automatic generation and management of interprocedural program analyses", "url": "http://dl.acm.org/citation.cfm?id=158642"}