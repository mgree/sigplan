{"article_publication_date": "03-01-1993", "fulltext": "\n , Algebraic Reasoning and Completeness in Typed Languages Jon G. Riecke* ATI?T Bell Laboratories Abstract: \nWe consider the following problem in prov\u00ading observational congruences in functional languages: given \na call-by-name language based on the simply\u00adtyped A-calculus with algebraic operations axiomatized by \nalgebraic equations E, is the set of observational congruences between terms exactly those provable from \n(P), (q), and E? We find conditions for determin\u00ading whether /3qE-equational reasoning is complete for \nproving the observational congruences between such terms. We demormtrate the power and generality of \nthe theorems by presenting a number of easy corollar\u00adies for particular algebras. Introduction The (/3) \nand (q) axioms form the basis for proving equations in call-by-name functional languages. In these languages, \n(~) and (q) yield sound program op\u00adtimization, For example, consider a version of the call-by-name language \nPCF [11, 15] which is described in Appendix A. Our version of PCF includes simply\u00adtyped A-calculus, numerals \nO, 1,2, . . .. successor and predecessor, addition, multiplication, a conditional test for 0, and a fixpoint \noperator for recursion. In any PCF program, the term ((Az. 3) Q) may be replaced by 3 without changing \nthe final answer; the optimization is merely an instance of the (@) axiom. But somewhat surprisingly, \n(~) and (q) are complete for proving the correctness of certain optimizations, viz., the equations (P) \nand (q) prove all sound optimizations between cer\u00adtain classes of terms. For instance, an optimization \nin PCF between pure terms simply-typed terms with\u00adout constants is correct iff it is provable using /3~\u00ad \n*The bulk of this work was done at the University of Penn\u00adsylvania, where the authors were partially \nsupported by NSF grant number CCR 8912778 and CCR-90-57570, NRL grant number NOO014 91 J-2022, NOSC grant \nnumber 19-920123 31, and ONR Grant NOO014 88 K 0634. Permission to copy without fee all or part of this \nmaterial is granted provided that the copies are not made or distributed for direct commercial advantage, \nthe ACM copyright notice and the title of the publication and its date appear, and notice is given that \ncopying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, \nrequires a fee and/or specific permission. ACM-20th PoPL-1 /93-S. C., USA Q 1993 ACM o-89791 -561 -5/93 \n/0001 /0185 . ..$l .50 Ramesh Subrahmanyam* Wesleyan University  equational reasoning [12, 13]. Pure \nterms, however, form only a small subset of the terms of PCF, and the (@ and (q) axioms are too weak \nto prove the correctness of other optimization, Sometimes we need some form of algebraic equational reasoning \nin addition to the axioms for reasoning about functions and application. For example, the term f v~ = \n(Succ (+ z o)) may be replaced by Nz = (+ x(Succo)) in any program without changing the final result, \neven though (Nl = Nz) may not be proven using (/3) and (q) alone, This paper explores the model-theoretic \nconse\u00adquences of adding such equations for algebraic con\u00adstants to (~) and (q). Adding the obvious algebraic \nequations usually results in a sound proof system; our goal is to discover when such equational systems \nare complete for proving the correctness of optimizations. Completeness, while a theoretical property \nof a proof system, is important practically because it states that we have not missed any optimizations. \nWe use the idea of observational congruence to for\u00admalize the notion of a correct optimization. In PCF, \nDefinition 1 Two terms M and N are observation\u00adally congruent when observing numerals, written M S~C~ \nN, if for any context C[.] (a term with a hole) such that both C [M] and C[N] are closed terms of numeral \ntype, C [M] halts at a numeral n iff C [N] halts at n. Thus, replacing a piece of code by a faster but \nobser\u00ad vationally congruent piece of code will not change the final answer of the program. One obvious \napproach to reasoning in a language with algebraic constants is to devise a set of algebraic equations \nand combine them with (~) and (q). Con\u00adsider reasoning about PCF terms. The axioms of (~) and (q), together \nwith the equations (z) Z+o =s (c) Z+y = l/+x (A) ~+(Y+~) = (x+v)+z (s) z+ (Succy) = Succ(x + y)  \n are sound for proving observational congruences. In fact, these equational axioms are complete for proving \nobservational congruences in a fragment of PCF: Theorem 2 Suppose M, N are simply-typed A-terms involving \nonly the constants O, SUCC, and +. Then M Z~C~ N i#M and N are provably equivalent using (8), (~), (Z), \n(c), (A), and ($). Moreover, since this set of equations forms a decidable equationa[ theory, determining \nwhether M =~c~ N is also decidable. This theorem is a bit subtle: even though M and N are restricted \nterms, the contexts in which they are interchangeable are general PCF contexts. Theorem 2 follows as \na corollary of Theorem 17 below, but relies crucially upon the fact that (Z), (C), (A), and (S) are complete \nfor proving equations in the natural numbers with the operations of O, SUCC,and +. Theorem 2 may not \nbe all that surprising given the completeness of the algebraic axioms. Indeed, we might suspect that \nif a set E of algebraic equations are complete for proving algebraic observational congru\u00adences, then \nE combined with (~) and (~) are complete for proving observational congruences between mixed terms. But \nthis conjecture does not hold the result\u00ading equational system may be incomplete. Some rather obvious \ncounterexamples come up when reasoning in a language with possibly divergent computations. For instance, \nin PCF it is not hard to verify that (t ) (*(f (*z o)) z) +gy (* (f o) z) even though (*z o) +ycy o \nsince the left side diverges if x diverges. The most straightforward proof of (t) uses a case analysis \non whether ~ converges or diverges. But (t) is not prov\u00adable from (~), (q), and the algebraic congruences \nof PCF over the constants O and *. Intuitively, the free function variable ~ acts as a barrier, so that \nalgebraic reasoning can only happen under an ~ or by treating an expression (~ M) as a unit. One can \nturn this in\u00adtuition into a proo~ we omit the details here. Divergence is not the only problem: reasoning \nby cases may be essential even when there is no di\u00ad vergence, For instance, let (iszero x) abbreviate \n(lfO z then (SUCCO) else 0). Then in the version of PCF without the recursion operator Y, ($) lfO (~ \nO) then O else (iwero (f (Lwero (f O)))) =YCT-Y o using a case analysis on whether (~ O) +&#38;re_y O \nor (f 0) +&#38;cmeO, even though ($) is not provable from ~_y ~{~ 1$), and the algebraic congruences \nover O, SUCC, These two examples show that reasoning by cases, or some other method of extending equational \nreason\u00ading to terms with free function variables, is essential in arriving at a general completeness \ntheorem. In this paper we consider only the question of when the com\u00adbination of algebraic equations \nE and (/3) and (~) are complete for proving equations between mixed terms. Algebraic reasoning is a well-studied \nfield replete with met a-theoretic results, and hence forms an important subcase to the full problem. \nAlso, proving complete\u00adness for algebraic systems turns out to be a complex problem in and of itself, \nand we currently do not have methods for proving a general completeness theorem. In order to make the \nresults easier to state and as general as possible, we work with models of the simply\u00adtyped A-calculus \ninstead of working directly with obser\u00advational congruence theories. More precisely> the the\u00adorems give \nconditions on when /3rlE-reasoning is com\u00adplete for proving equations in a model of the simply\u00adtyped \n~-calculus with algebraic constants. The reader should keep in mind, however, that the ultimate goal \nlies in proving observational congruences for specific languages. Section 4 shows how to tie the main \nre\u00adsults about models back into the problems of reasoning about observational congruences. Section 2 \nbriefly reviews the syntax and definition of models for the simply-typed Xcalculus and exten\u00adsions of \nthe simply-typed A-calculus to include alge\u00adbraic constants and equations. Section 3 gives a gener\u00adalization \nof the main lemma used in proving Statman s l-Section Theorem [13, 16, 17]. This theorem shows how to \nreduce checking the completeness of (~), (q), and algebraic equations E to checking the complete\u00adness \nof E. The theorem precisely characterizes when ~qE-reasoning is complete, but it is a syntactic theo\u00adrem \nthat can be difficult to apply to specific models. Section 4 gives four general corollaries of Theorem \n4 that are easier to apply. These corollaries are then used to deduce new completeness and decidability \nthe\u00adorems. Section 5 concludes with a discussion of open problems. 2 Review of the simply-typed ~-calculus \nSyntaz: Each term in the simply-typed A-calculus comes with a simple type generated by the grammar Parentheses \nare often dropped with the assumption that ~ associates to the right, e.g., (t ~ L ~ L) denotes (L A \n(~ a ~)). Typically the base type L is chosen to be the natural numbers, as in PCF (cf. Appendix A), \n Table 1: Syntax and equational rules for the simply-typed A-calculus. Variables Xo:u Constants ~o : \nu, C JCZ Syntax Abstraction (AZ . M:v M): (7+ v) !. ppl cat On M:(7+V) (M N):V N:T (F ) ((~~. ~) N) = \nM[x := N] (n) (Az, M z) = M, if z # FV(M) (1-efl) M=M Equations M=N M=N N=P (symm) N=M (trans) M=P (tong) \nM=N (M P) = P=Q (N Q) (0 (k. M=N M)= (Xc. N) Of course, there is nothing in the syntax that forces this \nchoice, and some of the theorems below will be for languages in which the base type is interpreted to \nbe lists or sets of natural numbers. The set of simply-typed terms is given by the forma\u00adt ion rules \nof Table 1. We assume that X, a signature, is a countable set of typed constants. To simplify the not \nation, we often drop types from variables and con\u00adst ants when the context is clear, and drop parenthe\u00adses \nwith the assumption that application associates to the left. The usual definitions of free and bound \nvari\u00adables apply to this set of terms, and terms are identi\u00adfied up to renaming of bound variables [2]. \nThe equa\u00adtional axioms and rules of the simply-typed A-calculus also appear in Table 1; M[x := N] denotes \nsubstitu\u00adtion of N for z in M, where the bound variables of M are renamed to avoid the capture of the \nfree variables of N [2]. We write (M =e~ N) if M and N are prov\u00adably equivalent in this system. Semantics: \nWe use the notion of environment models to give meaning to simply-typed terms [5, 6]. Definition 3 A \nframe is a pair ({M }, {ap }), where each M is a nonempt y set, and ap is an appli\u00adcation ) function \nwith apa~r : &#38;fg+T x&#38;l * JUT. The elements of function type must satisfy the extensional\u00adity \nproperty, i.e., for any f, g c M + , f = g iff for all d c Mu, ap(f, d) = ap(g, d). An environment p \nis a type-respecting map from variables to (Ua MU). A X-model M is a tuple ({M }, {ap T }, Z), where \nthe first two components form a frame and Z is a type\u00adrespecting map from X to (IJfl Mu). Furthermore! \nthere must be a meaning function M [.] defined by M[c ]p = p(x ) M[c ]p = Z(C ) M[M N]p = ap(M[M]p, M[N]p) \n M[kcT. A&#38;I= f, where ap(f, d) = MIMIJp[zT + d] such that the meanings of J-abstractions exist in \nM. For example, the full set-theoretic model $ over a base set X, defined by S =X s - = [s + s ] ap(f, \nd) = f(d) where [A + B] is the set of all total functions from u to ~, is a model for the empty signature: \nthe meanings of every A-abstraction exist because the frame contains all functions. The full set-theoretic \nmodel is in some sense a maximal model in that any model can be embedded in a full set-theoretic model \n[16]. Another example is the full continuous model over a complete partial order (cpo) X, defined by \n(7=x C-T =v +Ca ap(f, d) = f(d) Table 2: Algebraic equational provability from (rejl) S=s S=t (symm) \nt=s Sl=tl ... S* = tn (tong) (Fsl.. .sn)=(Ftl. .,tn) where [A +C B] is the cpo of continuous functions \nfrom cpo A to cpo B ordered pointwise. Full continuous models are important because they can be used \nto ob\u00adtain models of programming languages that are fully abstract, Z.e., models in which equality coincides \nwith observational congruence (cf. [4, 11, 14]). Adding algebraic terms: An algebraic signature is a \nsignature whose constants have first-order type, viz., types of the form (~ ~ . . . * L + L). The function \ncon\u00adst ants have curried types so, for example, if we want to include the addition function + aa an algebraic \ncon\u00adstant, we give it type (L + L + L). If ~ is an algebraic signature, the algebraic terms over X are \nthose in the grammar B ::= z I (F. \\B ;BJl(F@ .;. g[ . . . nO nl where x ranges over all variables and \nFi is a constant in the algebraic signature such that Fi: (<+.;. -+ ,L+ L). n, Algebraic terms over Z \nare clearly terms in the simply\u00adtyped A-calculus over the signature Z. Simply-typed terms involving the \ncurried algebraic constants are called mixed terms. An algebraic equation (s = t) is just an equation \nbetween algebraic terms s and t.Given a set of alge\u00adbraic equations E and algebraic terms s and t, we \nsay that (s =E t)if the equation holds using the rules of Table 2. These equations may be easily added \nto the equational theory of the )-calculus. For mixed terms, (M =p~~ N) if M and N are provably equivalent \nusing the axioms and rules of Tables 1 and 2. Algebras in szmp!y-typed models: An algebra A over an algebraic \nsignature Z = {~o, ~1, . . .} is a tuple (A, go, gl, . . .), where A is the (nonempty) carrier set a \nset of equations E, where F is any constant. (s=t)~E(axiom) S=t S=t t=u (trans) S=u S=t (sub) S[z:= \nu]= t[z := u] of the algebra and gi is the interpretation of the func\u00adt ion symbol over the carrier set. \nNote that the mean\u00adings of function symbols are curried functions instead of the usual uncurried functions; \nusing curried func\u00adtions facilitates the connections with simply-typed X models. For instance, (N, O, \n+) is the algebra with the set of natural numbers as the carrier set, where the number zero serves as \nthe interpretation of the con\u00adst ant O and the curried addition function serves as the interpret ation \nof the constant +. Algebraic terms are interpreted in the usual way: given an assignment p of variables \nto elements of the carrier set, A [s]p denotes the meaning of the algebraic term s where the vari\u00adables \nget their meanings from p. An algebraic equation (s= t)is true in an algebra A if for every assignment \np, A~s]p = A[t]p. Given the similarity between the definitions of alge\u00adbras and models, it is not surprising \nthat algebras ap\u00adpear naturally in models of the A-calculus. Suppose 2 is an algebraic signature, and \nM = ({MU}, {ap }, Z) is a X-model. Then the algebra induced by M is the algebra with carrier set M and \noperations given by Z(c ) for every constant c E 2. Algebraic terms also have an interpretation in X-models, \neither determined from the model itself or from the algebra induced by the model; the definitions are \nthe same,  3 Main completeness theorem With the definitions in place, we can now state our main theorem, \nTheorem 4 Consider any aigebraa c signaiure Z and let ~+ + be a symbo! not in E. Suppose M is a model \nof the simply-typed A-calcuius over 2, and all algebraic equations true in M are provable from a set \nE of algebraic equations, Then (/?), (q), and E prove all true equations of M between mixed terms iff \nE proves a[l true equations in M between algebraic terms over x u {f - -- }. Thus, for example, the \nequations E must be able to prove an equation like (f (Succ 0) 0) = (f (f (Wc 0) o)o) if it holds in \nthe model, Note that the equations E cannot explicitly mention f since f # Z; a proof of such an equation \nmust involve the proof rules of equational logic. The proof of Theorem 4 uses techniques in [3, 16] and \nhas three main lemmas. We give only an overview of the proofs of the lemmas here, which are quite techni\u00adcal. \nThe lemmas use the notion of a @normal form: Definition 5 An algebraic context over Z is a con\u00adtext in \nthe grammar C[] ::= [] I (J o g] .:.C[J) I (F1 :[] .:. C[.)) I . ~~ nO nl where Pi E 22 is such that \n Fi :(<+ .;, +L+, L). n, A nontrivial context is a context that does not have the form [.]. We use the \nconvention that C[., . . . . .] is an algebraic context with each hole corresponding to one position \nin the list of holes. Definition 6 The sets of algebraic O-normal forms and regular @-normal forms together \ncalled the set of @normal forms are defined by si\u00admultaneous induction: (M. y (Ml i?)... (M~ Z)) fork \n~ O is a regular @\u00adnormal form if each Mi is a O-normal form, y is a variable, and g has type (al * . \n. . ~ a~ a ~); and  k?. C[(M1 z), ....(lkf~ Z)] for k 2 0 is an alge\u00adbraic ~-norrnal form if each &#38;li \n~s a regular @\u00adnormal form and C [., . . . . .] is a nontrivial alge\u00adbraic context.  Note that when \nM is a closed O-normal form, each of the constituent @-normal forms of M are also closed O-normal forms, \nThis is the reason we use @-normal forms and not /?q-normal forms in induction proofs; the /?rpnormal \nform of a closed term may not be composed of closed terms. For inst ante, in the closed /?q-normal form \n(XZ. ~ f, f z), the subterm z is not closed. Lemma 7 Any term over the signature E is @rjIE\u00adequivalent \nto a term in Q-normal form. The proof follows using an analysis of/?q-normal forms. The following two \nlemmas are proved by induction on the definition of @normal forms. Lemma 8 Suppose P and Q are ciosed \nterms in @\u00adnormal form of type (UI + ... + Un + t) and P #pqE Q. Then there exist terms V1, ..., V~, \nwhose only free variables are jirst-order variables, such that (Pv, m.. vn) #l%E (Q VI . .. V~). Lemma \n9 Suppose P and Q are closed terms in G-normal form of type (al + . . . + Uh + t) where each Ui is a \nfirst-order type, and P #pvE Q. Then there exist terms U1, ..., Ukl whose only free variables are ~d~+ \nand x , such that (Pu,... uk) #pwE (Q VI . . .Uk). To prove Theorem 4, suppose M, N are two closed mixed \nterms and (M #@@ N). By Lemma 7, we may assume without loss of generality that M and N are @\u00adnormal forms. \nLemmas 8 and 9 may be used to build a context distinguishing M and N. Pick VI, . . . . Vn according to \nLemma 8, and let &#38;f and N be @ normal forms for the closed terms (k?. (M V1 . . . Vn)) and (M. (N \nV1 . . . Vn)) respectively, where F includes all the free (and necessarily first-order) variables of \nVi, ..., Vn. Then choose UI,. ... Uk for M and N ac\u00adcording to Lemma 9. It follows that the context C[.] \n= ((k?. ([.] VI ...Vn)) U1...Uk) is such that C[M] #pqE C[N]. It is not hard to see that applying the \n(@) and (q) axioms to C[M] and C[N] yields an algebraic equation over the signature x u {f + + } which \ncannot be proven using the equa\u00ad tions E. Thus, if the model distinguishes all non\u00ad provable equations \nof this form, @qE-reasoning is com\u00ad plete.  4 Corollaries Theorem 4 can be difficult to apply to specific \nmod\u00adels, since it requires checking whether a certain equa\u00adtional system is complete for a model. Some \nof the proofs, though, may be crystallized into general corol\u00adlaries which are easier to apply, In this \nsection we develop general sufficient conditions that follow from Theorem 4 and prove a few representative \ncomplete\u00adness theorems. The general corollaries are presented in three stages. First, Sections 4.1 and \n4.2 give conditions on the in\u00adduced algebra of a model when the model has enough first-order functions. \nLet (f c e) abbreviate ap( f, e). Definition 10 A model M has enough first-order functions if for any \nfinite partial function G:(A4 --++ PJ14P ),4 ), there is an element g in M + - such that for all elements \ndl, ...~dn with (G dl ... dn) = d, then (g. die.. .cdn)=d. By Theorem 4, for any algebraic equation (s \n= t) over the signature ~U{~+ + } that is not provable from E, we need to show that there is an assignment \np to the variables of type t and to ~ such that M ~s]p # M [t]p; having enough functions gives us enough \nlatitude in choosing a value for ~. Most models without a partial order structure, such as the full set-theoretic \nmodels, satisfy this property, but many models built from partially ordered sets e.g., full continuous \nmodels do not. For inst ante, let N1 be the set of natural numbers with an extra element L, ordered so \nthat each number is incomparable and (1 ~ n) for every n. Then there is no way to extend the partial \nfunction ifd=l G(d) = 1 ifd=O undefined otherwise ( o into an element in the full continuous model over \nthe cpo NL; any extension would not be monotone and hence not continuous. In Section 4.3 we modify the \nhas enough first-order functions condition to handle models with L elements. The ultimate goal is to \nprove completeness theorems for reasoning about observational congruences. Sec\u00adtion 4.4 shows how to \nconstruct models out of obser\u00advational congruence classes using the example of PCF. The elements in the \nmodel are partially ordered, and hence we use the results of Section 4.3 in order to de\u00adduce completeness \ntheorems. 4.1 Unary non-collapsing algebras A unary signature is a signature in which every con\u00adstant \nhas type L or (~ ~ ~). For the case of unary alge\u00adbras, we may find a sufficient condition for complete\u00adness. \nWe say that a unary algebra is non-collapsing if no algebraic constant maps an infinite set of values \nto a single value. For instance, the algebra (N, O,SUCC, pred) is non-collapsing, but the algebra (N, \neven) where O if n is even even (n) = 1 otherwise { is collapsing. Theorem 11 Let 2 be a unary signature. \nLet M be a E-model which has enough jirst-order functions and let A be the induced algebra. Suppose A \nhas an infinite carrier, A is non-collapsing, and al! true equations of A are provable from E. Then every \ntrue equation be\u00adtween mixed terms in M is provabie from (~), (q), and E. Proofi (Sketch): Suppose M \n#~VE N. Using The\u00adorem 4 we can compute a context C[.] of first-order type, whose only free variables \nare XL and f - + , such that C[M] #pnE C [N]. Let P and Q be the /3q\u00adnormal forms of C[M] and C[N]; note \nthat P and Q are algebraic terms over the signature E U {f + + }. We define a Z U {f + + } assignment \nto be a par\u00adtial jinite pairing function (PFPF) if it associates to f a finite, binary partial function \nmapping distinct or\u00addered pairs to distinct elements, We prove that P and Q can be distinguished by a \nPFPF; the proof pro\u00adceeds by simultaneous induction on the structure of P and Q. The reason for needing \nenough first-order functions is that the PFPF assignment a can then be extended to an environment p over \nM in which the symbol f is assigned some total extension of C(f). It follows that M [P]p # M [Q]p, which \nshows that M[M]p # M [N]p, completing the proof. Thus, it follows that the full set-theoretic model over \nthe algebra (N, O, SUCC, pred) k completely axiomatized by (~), (q), and the equations E of the algebra. \nThe set of equations E in this case are generated by the axioms (pred O)= O (pred (SUCC z))= z, Since \nany unary algebra whose operations are one-to\u00adone is also non-collapsing, Theorem 11 is applicable to \nmany other models.  4.2 Disjunctive closure Disjunctive closure is another sufficient condition that \nguarantees the completeness of ~qE-reasoning. Definition 12 Let E be an algebraic signature and A be \na Z-algebra. Then A is disjunctively closed if for every finite set of algebraic equations E, none of \nwhich is true in A, there is a single assignment p such that for every equation (s= t)in E, A[sJjp # \nA[t]p. Stated contrapositively, an algebra is disjunctively closed if for any disjunction ((sl = tl) \nV. . .V (sn = tn)) of equations that is true in A (where the variables are universally quantified over \nthe entire formula), at least one of the (si = ti) is true in A. It is easy to see that if an algebra \nis disjunctively closed, its carrier set must have exactly one element or be infinite: if the carrier \nset has more than one element, then for any n there has to be a single distinguishing assignment for \nthe terms {xl, . . . . xn}, since each equation xi = xj with i # j is not true alone. Another example \nof an algebra that is not disjunctively closed is (N, O,SUCC,ifO): there is no single distinguishing \nassignment for the algebraic terms z, y, (iszero z), and (iszero y), We give some examples of disjunctively-closed \nalgebras below, Intuitively, disjunctive closure is meant to rule out algebras that, when mixed with \nthe A-calculus, require some form of reasoning by cases. Reasoning-by-cases works as follows: to prove \na statement q, first prove that a disjunction (WI V. . . V pn) holds, and then show that p is provable \nunder the assumption pl, then un\u00ad der the assumption p2, and so on. If each of these proofs can be carried \nout, then p is true under no as\u00adsumptions. Reasoning by cases adds power to the proof system when none \nof the disjuncts Y1, . . . . p~ is true individually. In an algebra that is disjunctively closed, if \na disjunction of equations is true, then one of the equations is already true; hence> reasoning by cases \ndoes not add any reasoning power. The condition of disjunctive closure is strong enough to guarantee \ncompleteness, Theorem 13 Let 2 be an algebraic signature. Let M be a Z-model which has enough jirst-order \nfunctions and let A be the induced algebra. Suppose A is dis\u00adjunctively closed and all true equations \nof A are prov\u00ad abie from E. Then every true equation between mixed terms in M is provable from (/3), \n(q), and E. Proof: (Sketch): As in Theorem 11, it suffices to prove that any two algebraic terms over \nthe signature Z U {Y+ + } that are not provable from E are also not equal in M. Using techniques from \n[3] we can extract a set of Zequations {(s1 = tl), . . . . (sn = tn)} none of which is provable from \nE. By the disjunctive closure of A there is a single environment p that invalidates all the equations \n(si = t~), Using the fact that there are enough first-order functions, we then construct a meaning for \nf + + using the environment p. This new environment distinguishes the two E U {fi+ + }-terms and completes \nthe proof. Disjunctive closure is, however, slightly too strong. For instance, the algebra (N, O,SUCC,pred) \nis not dis\u00adjunctively closed the terms z, y, (SUCC (pred z)), and (succ (pred y)) are pairwise distinguishable \nin the algebra but not simultaneously distinguishable even though the full set-theoretic model over the \nalgebra is completely axiomatized by (~), (q), and the equational axioms of the algebra as shown above. \nThere are many disjunctively-closed algebras, and the proof of disjunctive closure is usually straightfor\u00adward. \nFor example, Theorem 14 The following algebras are disjunctively closed. 1. (N, Oil,+,*). 2. (Z, 0, SUCC,pred). \n 3. (NList, nil, append, (0), (l),.. .), where NList is the set of lists over the natura!s, nil is the \nempty list, append is the append function, and (n) is the singieton list containing n. 4. (Set, 0, U, \n(T), where Set consists of the finite sets over some fi xed set.  Proof: We prove the disjunctive closure \nof the first algebra to illustrate some general techniques. Every equation (s = t) over the signature \n22 = {O, 1, +, *} can be written as a multinominal with integer coefficients that equals O. For instance, \nthe equation (Z+ Z)* Z* U=(l+l)*Z can be written as (z*z*y)+(z *z*y)+(-2*z?)=o. It is a subtle point \nhere that the multinominal equa\u00adtions are not algebraic equations over the signature Z; the equations \ncontain coefficients that are outside the signature. We are, however, trying to check that dis\u00adjunctive \nclosure holds, which is a semantic condition. To show disjunctive closure, it suffices to prove that \nfor any such set of multinomials, there is an assignment of natural numbers for the variables that disequates \nevery equation. We prove this by induction on the number of variables n. For n=l, we have a finite set \nof polynomial equations (i. e., equations in only one variable). Each of them has a finite set of solutions \nover the natural numbers. Thus, any number that lies outside the union of these solutions will disequate \nall the equations. For inst ante, the polynomial equations (5*z)-20=0 (-2* Z* Z)+2=0 have natural number \nsolutions only in the set {1, 4}; picking x to be, say, 19 disequates both equations. For the induction \ncase, suppose E is a set of multi\u00adnominal equations over (n + 1) variables. Choose some variable, say \nxl, and let E be the set of equations with an occurrence of xl, and let Et! be the rest of the equations. \nBy induction, we can obtain values V2,. . . ,Vn which disequat es ever y equation in E l. Set X2,. . \n.,xfi to values vz,. . . ,vn in E . (If E is empty, choose V2, . . . , Vn randomly. ) This yields a set \nof poly\u00adnomial equations in xl. As in the base case, we can then obtain a value VI which disequates all \nof them. Clearly, w,. . .,% disequates all equations in E{ and E and hence all equations in E. This completes \nthe ind~ction case and hence the proof. Thus, it follows immediately from Theorem 14 that Corollary \n15 Any true equation between mixed A\u00adterms in the fu!l set-theoretic models over any of the algebras \n(N, 0,1, +,*) (Z, 0, SUCC,pred) (NList, nil, append, (0), (l),...) (Set, O,u, n)  ts provabie from (~), \n(q), and the equations of the a!\u00adgebra. 4.3 Reasoning in the presence of 1 As we saw earlier, the presence \nof a 1. element and a partial order structure in a model generally causes the has enough first-order \nfunctions condition to fail. Here we amend Theorems 11 and 13 to account for 1. In most models over algebraic \nsignatures, 1 is treated uniformly: algebraic functional constants are strict, i. e., return 1 when any \nargument is 1. For inst ante, in the full continuous model for PCF (cf. [11,15]), the operations SUCC,pred, \n+, and * are strict in all of their arguments. Let Al, the strict algebra, denote the result of enhancing \nthe carrier set of A with 1 and extending all the operations of A to their strict versions. We say that \na model has enough strict first-order functions if for any strict, finite partial function G:(M +P... \n-+P M ), there is an element g in M + + such that for all elements dl, ....dn with (G dl ... d~) = d, \nthen (god~o... odn)=d. One can now prove the following versions of Theo\u00adrems 11 and 13 for models with \nl-. Theorem 16 Let X be a unary signature. Let M be a E-model which has enough strict first-order functions \nand let Al be the induced algebra. Suppose A has an mjinite carrier, A is non-collapsing, and all true \nequa\u00adtions of A are provable from E. Then every irue equa\u00adtion between mixed terms in M is provable from \n(~), (q), and E. Theorem 17 Let 2 be an algebraac signature. Let M be a E-model which has enough strict \nfirst-order func\u00adtzons and let Al be the reduced algebra. Suppose AL ts disjunctively closed and al! \ntrue equations of A are provable from E. Then every true equation between mixed terms in M is provable \nfrom (/?), (q), and E. The proofs are simple modifications of the proofs of Theorems 11 and 13. Checking \na strict algebra for disjunctive closure is easy. Following Nipkow and Qian [9], we say Definition 18 \nAn algebra A is regular if for every equation (s = t) that is true in A, FV(S) = FV(t), where FV(U) denotes \nthe set of free variables in u. Then one can easily prove that Lemma 19 Al is disjunctively closed i&#38;A \nis regular. It follows that the strict algebras   (N,0,1, +)L (Z, O,SUCC,pred)l (NList, nil, append, \n(0), (l),.. .)L (Set, O, U,n)l are disjunctively closed, and hence any equation in the full continuous \nmodels over these strict algebras can be proven from (,8), (q), and the axioms of the underlying algebras. \nOn the other hand, the alge\u00adbra (N, O, 1, +, *)L is not disjunctively closed, since the terms (* x O), \nz, and O are pairwise distinguishable but not simultaneously distinguishable. Indeed, the under\u00adlying \nalgebra (N, O, 1,+,*) fails the regularity condition because of the equation (* z O) = O. 4.4 Observational \ncongruence In order to apply the corollaries to PCF, we need to build a model of PCF. The full continuous \nmodel over IXl is a good candidate, but the model is not fully abstract [11, 14] that is, there are congruences \nthat hold in PCF that are not equivalences in the model. To get around this problem, we need to define \na model that precisely captures PCF observational congruences. The P CF term model is a model constructed \nout of observa tional congruence classes of closed PCF terms. Let [M] = {IV: J/ is closed and M E~C~ \nN}. Then define T = {[M] : M is closed of type u} ap([.it!f], [N]) = [M N]. Each set 7 is ordered by \nthe relation ~o, where [M] G. [AT] if for all contexts C[] in which C[M] halts at a numeral n, then C[iV] \nhalts at n. It is not hard to check that this is a well-defined partial order. The fact that 7 is a frame \nfollows from the context lemma for PCF: Lemma 20 (Milner [7]) For any closed PCF terms M, N of type (u \n---+ r), M =~C~ N ifl for all closed terms P of type m, (M P) E~C~ (N P). In other words, two functional \nterms are observation\u00adally congruent iff they are congruent when applied. Thus, the To see that be defined \nframe T is by satisfies a model, the let extensionality the meaning property. function 7(M)p = p(lf), \n where p is a type-preserving function from variables to elements of T and p(lf) substitutes, for each \nfree vari\u00adable z in Al, a member of the equivalence class of p(z). One can check that this coincides \nwith the definition of the meaning function given in Definition 3, and hence a meaning exists for all \nJ-abstractions. Thus, T is indeed a model over the signature {SUCC,pred, +, *, O, 1,2, . . .}. Theorems \n16 and 17 are the most useful theorems for deriving completeness results for practical languages. For \ninstance, Theorem 2 from the Introduction can be proven directly from Theorem 17. We just need to ver\u00adify \nthat the model T for PCF has enough strict first\u00adorder functions; the presence of the ifO operation yields \nenough strict first-order functions. For instance, sup\u00adpose f : T -+P 7 is the strict, finite partial \nfunction mapping [0] to [2] and [1] to [4]. Then the element [~z. ifO z then 2 else (ifO (pred z) then \n4 else Q)], where ~ is a divergent term oft ype L, is an element of the model that extends f, From Theorem \n16 it also follows that Theorem 21 Suppose M, N are simply-typed J-terms involving only the constants \nO, SUCC, and pred, Then M Z~C~ N i@iW and N are provabty equivalent using (~), (v), and the equations \n(pred O) = (1 (pred (SUCCz))= z Similar results can be proven for other versions of PCF that have lists \nor finite sets of naturals as the base type. These theorems also yield decidability results, due to the \nfollowing theorem: Theorem 22 (Breazu-Tannen [3]) 1$ an aigebraic theory E is decidable, then so is the \nequational theory of (/3), (~), and E. Since each of the algebras in this section has a decid\u00adable equational \ntheory, the completeness theorems im\u00adply that the equations that hold in the models between mixed terms \nare decidable. Decidability is important, particularly if we use the theories to derive a partial evaluator. \n 5 Conclusion This paper gives sufficient conditions for reducing the problem of reasoning about equations \nin Z-models of the A-calculus to reasoning about equality in the E\u00adalgebra induced in the model. As a \ntestament to the power of our methods, we have given a number of previ\u00adously unknown completeness theorems \nfor proving ob\u00adservational congruences in call-by-name languages. We believe it is useful to pursue theorems \nanalogous to Theorem 4 in other settings. For example, combin\u00ading algebraic types with call-by-value \nA-calculus and lazy A-calculus are interesting topics for further re\u00adsearch (cf. [1, 10~ 12]). Another \nset of open problems involves incorporating a constant 1-in the language for reasoning about all values \nin a strict algebra. Adding sum types (or coproducts) also is an important open problem. Yet another \narea for future research involves devel\u00adoping more corollaries of Theorem 4 along the lines of Theorems \n11 and 13. A general corollary should impose conditions that are easier to check than the condition in \nTheorem 4. Of course, there may well be another formulation of Theorem 4 that is itself eas\u00adily checkable, \nalthough we have spent a considerable amount of effort searching for such a theorem. Acknowledgments: \nWe thank Matthiaa Felleisen, Carl Gunter, Eugenio Moggi, Richard Statman, and espe\u00adcially Val Tannen \nfor helpful comments and encourage\u00adment on this work. References [1] Samson Abramsky. The lazy lambda \ncalculus. In David A. Turner, editor, .Research Topics in Functional Programming, pages 65 117. Addison-Wesley, \n1990. [2] Henk P, Barendregt. The Lambda Calculus: Its Syntax and Semantics, volume 103 of Studies in \nLogic. North-Holland, 1981, Revised Edition, 1984. [3] Val Breazu-Tannen. Combining algebra and higher-order \ntypes. In Proceedings, Third Annual Symposium on Logic in Computer Science, pages 82-90. IEEE, 1988. \n[4] Stavros S. Cosmadakis. Computing with recursive types. In Proceedings, Fourth Annuai Symposium on \nLogic in Computer Science, pages 24 38. IEEE, 1989. [5] Harvey Friedman. Equality between functional. \n[17] Richard Statman. Equality between function- In Rohit Parikh, editor, Logic Colloquium 73, vol\u00ad \nal revisited. In L .A. Barrington, et al., editor, ume 453 of Lect. Notes in Math., pages 22 37. Harvey \nFriedman s Research on the Foundations Springer-Verlag, 1975. of llathematics, volume 117 of Studies \nin Logic, pages 331-338. North-Holland, 1985. [6] Albert R. Meyer. What is a model of the lambda calculus? \nInformation and Control, 52:87-122, 1982. A Call-by-name PCF [7] Robin Milner. Fully abstract models \nof the typed Our version of PCF informally described in the in\u00adlambda calculus. Theoretical Computer \nSci., 4: l troduction is a version of call-by-name PCF without 22, 1977. booleans but with + and * (cf. \n[11, 15]). Table 3 gives its syntax and natural-style operational rules (cf. [8]). [8] Hanne Riis Nielson \nand Flemming Nielson. Se-In the rules, we use s(n) to denote the natural number mantics with Applications: \nA Formal Introduc-that is one greater than n. tion. John Wiley &#38; Sons, 1992. [9] Tobias Nipkow and \nZhenyu Qian. Modular higher\u00adorder E-unification. In Ronald V. Book, editor, Rewriting Techniques and \nApplications, volume 488 of Lect. Notes in Computer Sci., pages 200\u00ad 214. Springer-Verlag, 1991. [10] \nChih-Hao Luke Ong. The Lazy Lambda Caiculus: An Investigation into the Foundations of Func\u00adtional Programming. \nPhD thesis, Imperial Col\u00adlege, University of London, 1988. [11] Gordon D. Plotkin. LCF considered as \na program\u00adming language, Theoretical Computer Sci., 5:223 257, 1977. [12] Jon G. Riecke. The Logic and \nExpressibility of Simp!y-Typed Call-by-Value and Lazy Lan\u00adguages. PhD thesis, Massachusetts Institute \nof Technology, 1991. Available as technical report MIT/LCS/TR-523 (MIT Laboratory for Com\u00adputer Science), \n[13] Jon G. Riecke. Statman s l-section theorem. Technical Report MS-CIS-92-03, University of Pennsylvania, \nDepartment of Computer and In\u00adformation Science, January 1992. Submitted for publication to Information \nand Computation. [14] V.YU. Sazonov. Expressibility of functions in D. Scott s LCF language. Algebra \ni Logika, 15:308\u00ad330, 1976. Russian. [15] Dana Scott. A type theoretical alternative to CUCH, ISWIM, \nOWHY, Unpublished manuscript, Oxford University, 1969. [16] Richard Statman. Completeness, invariance \nand lambda-definability. J. Symbolic Logic, 47:17-26, 1982. Table 3: Syntactic formation rules and a \nnatural semantics for PCF. Variables x :U Numerals 0,1,2,...:L Successor succ:b+L Predecessor pred:L*L \nAddition +:( L+t+L) Multiplication *:( L+ L+L) M:h N:u P:~ Fixpoint Y :(a+a)+fJ Conditional (ifO M then \nN else P) : m Abstraction (~~ . fi ~[a ~ ~, Application kf:(a~r) (M N):r N:a n.lJ. n YIJ. Y Succ J Succ \npred JJ pred +0+ *J. * M.l,lsucc Nun (MN) J. s(n) M.lJ. pred N.IJO M $ pred N $ s(n) (M N)JO (M N)ljn \nM$+ N.ljn (MN) U k. (SUCCn Z) Ml). O NJIV M J s(n) PJV (ifO M then N else P) JJV (ifO M then N else \nP) J. V M u kc. M M [z := N] J. V MUY (N(YN))UV (M N).lJV (M N)UV \n\t\t\t", "proc_id": "158511", "abstract": "<p>We consider the following problem in proving observational congruences in functional languages: given a call-by-name language based on the simply-typed &#955;-calculus with algebraic operations axiomatized by algebraic equations E, is the set of observational congruences between terms exactly those provable from (&#946;), (&eegr;), and E?  We find conditions for determining whether &#946;&eegr;E-equational reasoning is complete for proving the observational congruences between such terms. We demonstrate the power and generality of the theorems by presenting a number of easy corollaries for particular algebras.</p>", "authors": [{"name": "Jon G. Riecke", "author_profile_id": "81339524439", "affiliation": "", "person_id": "PP39077868", "email_address": "", "orcid_id": ""}, {"name": "Ramesh Subrahmanyam", "author_profile_id": "81100178702", "affiliation": "", "person_id": "P238818", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/158511.158627", "year": "1993", "article_id": "158627", "conference": "POPL", "title": "Algebraic reasoning and completeness in typed languages", "url": "http://dl.acm.org/citation.cfm?id=158627"}