{"article_publication_date": "09-01-1999", "fulltext": "\n\t\t\t", "proc_id": "317636", "abstract": "A trampolined program is organized as a single loop in which computations are scheduled and their execution allowed to proceed in discrete steps. Writing programs in trampolined style supports primitives for multithreading without language support for continuations. Various forms of trampolining allow for different degrees of interaction between threads. We present two architectures based on an only mildly intrusive trampolined style. Concurrency can be supported at multiple levels of granularity by performing the trampolining transformation multiple times.", "authors": [{"name": "Steven E. Ganz", "author_profile_id": "81100106414", "affiliation": "Department of Computer Science, Indiana University, Bloomington, Indiana, Indiana University", "person_id": "P269862", "email_address": "", "orcid_id": ""}, {"name": "Daniel P. Friedman", "author_profile_id": "81100636522", "affiliation": "Department of Computer Science, Indiana University, Bloomington, Indiana", "person_id": "PP39051860", "email_address": "", "orcid_id": ""}, {"name": "Mitchell Wand", "author_profile_id": "81100072594", "affiliation": "College of Computer Science, Northeastern University, Boston, Massachusetts", "person_id": "PP39025873", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/317636.317779", "year": "1999", "article_id": "317779", "conference": "ICFP", "title": "Trampolined style", "url": "http://dl.acm.org/citation.cfm?id=317779"}