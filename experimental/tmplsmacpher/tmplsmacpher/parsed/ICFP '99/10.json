{"article_publication_date": "09-01-1999", "fulltext": "\n\t\t\t", "proc_id": "317636", "abstract": "We present a functional language with a type system such that well typed programs run within stated space-bounds. The language is a strict, first-order variant of ML with constructs for explicit storage management. The type system is a variant of Tofte and Talpin's region inference system to which the notion of sized types, of Hughes, Pareto and Sabry, has been added.", "authors": [{"name": "John Hughes", "author_profile_id": "81100166325", "affiliation": "Department of Computing Science, Chalmers University; S 412 96 G&#246;teborg", "person_id": "PP40024464", "email_address": "", "orcid_id": ""}, {"name": "Lars Pareto", "author_profile_id": "81321488341", "affiliation": "Department of Computing Science, Chalmers University; S 412 96 G&#246;teborg", "person_id": "P168886", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/317636.317785", "year": "1999", "article_id": "317785", "conference": "ICFP", "title": "Recursion and dynamic data-structures in bounded space: towards embedded ML programming", "url": "http://dl.acm.org/citation.cfm?id=317785"}