{"article_publication_date": "09-01-1999", "fulltext": "\n\t\t\t", "proc_id": "317636", "abstract": "We propose a conservative extension of the polymorphic lambda calculus (<i>F</i><sup>&amp;omega;</sup>) as an intermediate language for compiling languages with name-based class and interface hierarchies. Our extension enriches standard <i>F</i><sup>&amp;omega;</sup> with recursive types, existential types, and row polymorphism, but only ordered records with no subtyping. Basing our language on <i>F</i><sup>&amp;omega;</sup> makes it also a suitable target for translation from other higher-order languages; this enables the safe interoperation between class-based and higher-order languages and the reuse of common type-directed optimization techniques, compiler back ends, and runtime support.We present the formal semantics of our intermediate language and illustrate its features by providing a formal translation from a subset of Java, including classes, interfaces, and private instance variables. The translation preserves the name-based hierarchical relation between Java classes and interfaces, and allows access to private instance variables of parameters of the same class as the one defining the method. It also exposes the details of method invocation and instance variable access and allows many standard optimizations to be performed on the object-oriented code.", "authors": [{"name": "Christopher League", "author_profile_id": "81332511122", "affiliation": "Dept. of Computer Science, Yale University, New Haven, CT", "person_id": "PP39074878", "email_address": "", "orcid_id": ""}, {"name": "Zhong Shao", "author_profile_id": "81351597965", "affiliation": "Dept. of Computer Science, Yale University, New Haven, CT", "person_id": "PP14127817", "email_address": "", "orcid_id": ""}, {"name": "Valery Trifonov", "author_profile_id": "81100016457", "affiliation": "Dept. of Computer Science, Yale University, New Haven, CT", "person_id": "P290011", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/317636.317798", "year": "1999", "article_id": "317798", "conference": "ICFP", "title": "Representing Java classes in a typed intermediate language", "url": "http://dl.acm.org/citation.cfm?id=317798"}