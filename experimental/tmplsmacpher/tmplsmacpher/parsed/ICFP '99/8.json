{"article_publication_date": "09-01-1999", "fulltext": "\n\t\t\t", "proc_id": "317636", "abstract": "Languages such as Java, ML, Scheme, and Haskell provide automatic storage management, that is, garbage collection. The two fundamental operations performed on a garbage-collected heap are \"allocate\" and \"collect.\" Because the heap is in an inconsistent state during these operations, they must be performed atomically. Otherwise, a heap client might access the heap during a time when its fundamental invariants do not hold, corrupting the heap.Standard techniques for providing this atomicity guarantee have large latencies and other performance problems that impede their application in high-performance, interruptladen, thread-based systems applications. In particular, the standard techniques prevent thread schedulers from switching threads on VM page faults.We cast the space of possible implementations into a general taxonomy, and describe a new technique that provides a simple, low-overhead, low-latency interlock. We have implemented this technique in a version of SML/NJ, and, because of its applicability to thread-based systems, are currently implementing it in the scheduler of our raw-hardware SML-based kernel, ML/OS. Our technique can be extended to provide other atomic sequences besides storage allocation.", "authors": [{"name": "Olin Shivers", "author_profile_id": "81100129912", "affiliation": "MIT Artificial Intelligence Laboratory", "person_id": "PP39078983", "email_address": "", "orcid_id": ""}, {"name": "James W. Clark", "author_profile_id": "81332493715", "affiliation": "MIT Artificial Intelligence Laboratory", "person_id": "P131912", "email_address": "", "orcid_id": ""}, {"name": "Roland McGrath", "author_profile_id": "81322501274", "affiliation": "MIT Artificial Intelligence Laboratory", "person_id": "PP31033966", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/317636.317783", "year": "1999", "article_id": "317783", "conference": "ICFP", "title": "Atomic heap transactions and fine-grain interrupts", "url": "http://dl.acm.org/citation.cfm?id=317783"}