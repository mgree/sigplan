{"article_publication_date": "06-01-1990", "fulltext": "\n\t\t\t", "proc_id": "93542", "abstract": "<p>Consider the problem of converting decimal scientific notation for a number into the best binary floating point approximation to that number, for some fixed precision. This problem cannot be solved using arithmetic of any fixed precision. Hence the <italic>IEEE Standard for Binary Floating-Point Arithmetic</italic> does not require the result of such a conversion to be the best approximation.</p><p>This paper presents an efficient algorithm that always finds the best approximation. The algorithm uses a few extra bits of precision to compute an IEEE-conforming approximation while testing an intermediate result to determine whether the approximation could be other than the best. If the approximation might not be the best, then the best approximation is determined by a few simple operations on multiple-precision integers, where the precision is determined by the input. When using 64 bits of precision to compute IEEE double precision results, the algorithm avoids higher-precision arithmetic over 99% of the time.</p><p>The input problem considered by this paper is the inverse of an output problem considered by Steele and White: Given a binary floating point number, print a correctly rounded decimal representation of it using the smallest number of digits that will allow the number to be read without loss of accuracy. The Steele and White algorithm assumes that the input problem is solved; an imperfect solution to the input problem, as allowed by the IEEE standard and ubiquitous in current practice, defeats the purpose of their algorithm.</p>", "authors": [{"name": "William D. Clinger", "author_profile_id": "81100543143", "affiliation": "University of Oregon", "person_id": "P298778", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/93542.93557", "year": "1990", "article_id": "93557", "conference": "PLDI", "title": "How to read floating point numbers accurately", "url": "http://dl.acm.org/citation.cfm?id=93557"}