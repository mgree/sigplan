{"article_publication_date": "06-01-1990", "fulltext": "\n\t\t\t", "proc_id": "93542", "abstract": "<p>While logic programming languages offer a great deal of scope for parallelism, there is usually some overhead associated with the execution of goals in parallel because of the work involved in task creation and scheduling. In practice, therefore, the &#8220;granularity&#8221; of a goal, i.e. an estimate of the work available under it, should be taken into account when deciding whether or not to execute a goal concurrently as a separate task. This paper describes a method for estimating the granularity of a goal at compile time. The runtime overhead associated with our approach is usually quite small, and the performance improvements resulting from the incorporation of grainsize control can be quite good. This is shown by means of experimental results.</p>", "authors": [{"name": "Saumya K. Debray", "author_profile_id": "81100148240", "affiliation": "Department of Computer Science, The University of Arizona, Tucson, AZ", "person_id": "P260625", "email_address": "", "orcid_id": ""}, {"name": "Nai-Wei Lin", "author_profile_id": "81100220135", "affiliation": "Department of Computer Science, The University of Arizona, Tucson, AZ", "person_id": "P206650", "email_address": "", "orcid_id": ""}, {"name": "Manuel Hermnegildo", "author_profile_id": "81100324241", "affiliation": "MCC, 3500 West Balcones Center Drive, Austin, TX", "person_id": "P187054", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/93542.93564", "year": "1990", "article_id": "93564", "conference": "PLDI", "title": "Task granularity analysis in logic programs", "url": "http://dl.acm.org/citation.cfm?id=93564"}