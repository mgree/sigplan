{"article_publication_date": "06-21-1989", "fulltext": "\n\t\t\t", "proc_id": "73141", "abstract": "<p>A number of recent programming language designs incorporate a type checking system based on the Girard-Reynolds polymorphic &#955;-calculus. This allows the construction of general purpose, reusable software without sacrificing compile-time type checking. A major factor constraining the implementation of these languages is the difficulty of automatically inferring the lengthy type information that is otherwise required if full use is made of these languages. There is no known algorithm to solve any natural and fully general formulation of this &#8220;type inference&#8221; problem. One very reasonable formulation of the problem is known to be undecidable.</p><p>Here we define a restricted version of the type inference problem and present an efficient algorithm for its solution. We argue that the restriction is sufficiently weak to be unobtrusive in practice.</p>", "authors": [{"name": "H.-J. Boehm", "author_profile_id": "81423595101", "affiliation": "Rice University", "person_id": "P105869", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/73141.74835", "year": "1989", "article_id": "74835", "conference": "PLDI", "title": "Type inference in the presence of type abstraction", "url": "http://dl.acm.org/citation.cfm?id=74835"}