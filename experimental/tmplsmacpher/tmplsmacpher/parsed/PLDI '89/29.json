{"article_publication_date": "06-21-1989", "fulltext": "\n\t\t\t", "proc_id": "73141", "abstract": "<p>Demonic memory is a form of reconstructive memory for process histories. As a process executes, its states are regularly checkpointed, generating a history of the process at low time resolution. Following the initial generation, any prior state of the process can be reconstructed by starting from a checkpointed state and re-executing the process up through the desired state, thereby exploiting the redundancy between the states of a process and the description of that process (i.e., a computer program).</p><p>The reconstruction of states is automatic and transparent. The history of a process may be examined as though it were a large two-dimensional array, or <italic>address space-time</italic>, with a normal address space as one axis and steps of process time as the other. An attempt to examine a state that is not physically stored triggers a &#8220;demon&#8221; which reconstructs that memory state before access is allowed.</p><p>Regeneration requires an exact description of the original execution of the process. If the original process execution depends on non-deterministic events (e.g., user input), these events are recorded in an <italic>exception list</italic>, and are replayed at the proper points during re-execution.</p><p>While more efficient than explicitly storing all state changes, such a checkpointing system is still prohibitively expensive for many applications; each copy (or <italic>snapshot</italic>) of the system's state may be very large, and many snapshots may be required. Demonic memory saves both space and time by using a <italic>virtual copy</italic> mechanism. (Virtual copies share unchanging data with the objects that they are copies of, only storing differences from a prototype or original [MiBK86].) In demonic memory, the snapshot at each checkpoint is a virtual copy of the preceding checkpoint's snapshot. Hence it is called a <italic>virtual snapshot</italic>. In order to make the virtual snapshot mechanism efficient, state information is initially saved in relatively large units of space and time, on the order of pages and seconds, with single-word/single-step regeneration undertaken only as needed. This permits the costs of indexing and lookup operations to be amortized over many locations.</p>", "authors": [{"name": "P. R. Wilson", "author_profile_id": "81392595152", "affiliation": "Human-Computer Interaction Laboratory, Dept. of Electrical Engineering and Computer Science, University of Illinois at Chicago, Box 4348 (M/C 154), Chicago, IL", "person_id": "PP39085401", "email_address": "", "orcid_id": ""}, {"name": "T. G. Moher", "author_profile_id": "81100538646", "affiliation": "Human-Computer Interaction Laboratory, Dept. of Electrical Engineering and Computer Science, University of Illinois at Chicago, Box 4348 (M/C 154), Chicago, IL", "person_id": "PP39076091", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/73141.74848", "year": "1989", "article_id": "74848", "conference": "PLDI", "title": "Demonic memory for process histories", "url": "http://dl.acm.org/citation.cfm?id=74848"}