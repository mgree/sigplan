{"article_publication_date": "06-21-1989", "fulltext": "\n\t\t\t", "proc_id": "73141", "abstract": "<p>This paper describes generational reference counting, a new distributed storage reclamation scheme for loosely-coupled multiprocessors. It has a significantly lower communication overhead than distributed versions of conventional reference counting. Although generational reference counting has greater computational and space requirements than ordinary reference counting, it may provide a significant saving in overall execution time on machines in which message passing is expensive.</p><p>The communication overhead for generational reference counting is one message for each copy of an interprocessor reference (pointer). Unlike conventional reference counting, when a reference to an object is copied no message is sent to the processor on which the object lies. A message is sent only when a reference is discarded. Unfortunately, generational reference counting shares conventional reference counting's inability to reclaim cyclical structures.</p><p>In this paper, we present the generational reference counting algorithm, prove it correct, and discuss some refinements that make it more efficient. We also compare it with weighted reference counting, another distributed reference counting scheme described in the literature.</p>", "authors": [{"name": "B. Goldberg", "author_profile_id": "81100491830", "affiliation": "Department of Computer Science, New York University, 251 Mercer Street, New York, NY", "person_id": "PP39072307", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/73141.74846", "year": "1989", "article_id": "74846", "conference": "PLDI", "title": "Generational reference counting: a reduced-communication distributed storage reclamation scheme", "url": "http://dl.acm.org/citation.cfm?id=74846"}