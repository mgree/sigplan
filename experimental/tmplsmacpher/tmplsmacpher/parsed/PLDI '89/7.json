{"article_publication_date": "06-21-1989", "fulltext": "\n\t\t\t", "proc_id": "73141", "abstract": "<p>An application for a parallel computer with multiple, independent processors often includes different programs (functions) for the individual processors; compilation of such functions can proceed independently. We implemented a compiler that exploits this parallelism by partitioning the input program for parallel translation. The host system for the parallel compiler is an Ethernet-based network of workstations, and different functions of the application program are compiled in parallel on different workstations. For typical programs in our environment, we observe a speedup ranging from 3 to 6 using not more than 9 processors. The paper includes detailed measurements for this parallel compiler; we report the system overhead, implementation overhead, as well as the speedup obtained when compared with sequential compilation.</p>", "authors": [{"name": "T. Gross", "author_profile_id": "81332502168", "affiliation": "School of Computer Science, Carnegie Mellon University, Pittsburgh, PA", "person_id": "PP39072611", "email_address": "", "orcid_id": ""}, {"name": "A. Sobel", "author_profile_id": "81100299916", "affiliation": "School of Computer Science, Carnegie Mellon University, Pittsburgh, PA", "person_id": "PP14110533", "email_address": "", "orcid_id": ""}, {"name": "M. Zolg", "author_profile_id": "81100067837", "affiliation": "School of Computer Science, Carnegie Mellon University, Pittsburgh, PA", "person_id": "P185426", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/73141.74826", "year": "1989", "article_id": "74826", "conference": "PLDI", "title": "Parallel compilation for a parallel machine", "url": "http://dl.acm.org/citation.cfm?id=74826"}