{"article_publication_date": "06-21-1989", "fulltext": "\n\t\t\t", "proc_id": "73141", "abstract": "<p>In the context of sequential computers, it is common practice to exploit temporal locality of reference through devices such as caches and virtual memory. In the context of multiprocessors, we believe that it is equally important to exploit spatial locality of reference. We are developing a system which, given a sequential program and its domain decomposition, performs process decomposition so as to enhance spatial locality of reference. We describe an application of this method - generating code from shared-memory programs for the (distributed memory) Intel iPSC/2.</p>", "authors": [{"name": "A. Rogers", "author_profile_id": "81406593174", "affiliation": "Department of Computer Science, Cornell University, Ithaca, NY", "person_id": "PP39078023", "email_address": "", "orcid_id": ""}, {"name": "K. Pingali", "author_profile_id": "81100554731", "affiliation": "Department of Computer Science, Cornell University, Ithaca, NY", "person_id": "PP39062455", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/73141.74824", "year": "1989", "article_id": "74824", "conference": "PLDI", "title": "Process decomposition through locality of reference", "url": "http://dl.acm.org/citation.cfm?id=74824"}