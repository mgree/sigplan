{"article_publication_date": "06-21-1989", "fulltext": "\n\t\t\t", "proc_id": "73141", "abstract": "<p>Optimizing and parallelizing compilers for procedural languages rely on various forms of program dependence graphs (<italic>pdgs</italic>) to express the essential control and data dependencies among atomic program operations. In this paper, we provide a semantic justification for this practice by deriving two different forms of program dependence graph &#8212; the <italic>output pdg</italic> and the <italic>def-order pdg</italic>&#8212;and their semantic definitions from <italic>non-strict</italic> generalizations of the denotational semantics of the programming language. In the process, we demonstrate that both the <italic>output pdg</italic> and the <italic>def-order pdg</italic> (with minor technical modifications) are conventional data-flow programs. In addition, we show that the semantics of the <italic>def-order pdg</italic> dominates the semantics of the <italic>output pdg</italic> and that both of these semantics dominate&#8212;rather than preserve&#8212;the semantics of sequential execution.</p>", "authors": [{"name": "Robert Cartwright", "author_profile_id": "81406592800", "affiliation": "Department of Computer Science, Rice University, Houston, TX", "person_id": "P71474", "email_address": "", "orcid_id": ""}, {"name": "Mattias Felleisen", "author_profile_id": "81100323458", "affiliation": "Department of Computer Science, Rice University, Houston, TX", "person_id": "PP39087768", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/73141.74820", "year": "1989", "article_id": "74820", "conference": "PLDI", "title": "The semantics of program dependence", "url": "http://dl.acm.org/citation.cfm?id=74820"}