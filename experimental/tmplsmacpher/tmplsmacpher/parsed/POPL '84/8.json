{"article_publication_date": "01-15-1984", "fulltext": "\n COMPLETION OF E SET OF RULES M(1)ULO ~ SET OF EQUATIONS Jean-Pierre Jouannaud, Helene Klrchner * CRIN \nBP 239 54506 Vandoeuvre les Nancy CEDEX (FRENCE) cations as in OBJ [GMP,82]. The Knuth and Bendix's \n I. INTROOI~TION completion procedure is based on using equations Temn Rewriting Systems (TRS in short) \nare known as rewrite rules and computing \"critical pairs\" to be a major tool for expressing non deterministic \nwhen left members of rules overlap. If a critical computations, because they are based on directed pair \nhas distinct Irreducible forms, a new rule equalltles, with no explicit control. In addition, must be \nadded and the procedure recurslvely they have a very simple semantics, whenever the applies until it \neventually stops. This procedure result of a computation does not depend on the requires the termination \nproperty of the set of choice of the rules to be applled (the so-called rules, which can be proved by \nvarious tools. called Confluence property). When a TRS is not full implementation of these techniques \nis descri- confluent, it can be transformed into an \"equiva- bed in [LES,83]. lent\" confluent one, using \nthe Knuth and Bendlx's The method was extended to handle the case of completion procedure [K&#38;B,70]. \nThis procedure can Equational Term Rewriting Systems (ETRS in short) be seen as a way to compile equational \nspecifica- i.e. sets ~ of axioms split into a set R of rules tions into confluent sets of rules, providing \n and a set E of equations, in order to allow axioms PROL0~. llke programs called \"Rewrite progrmns\" in \n such as commutatlvlty, which cannot be directed [DER, 82]. without losing the term~natlon property. \n~ first During the ten past years, the Knuth and approach by Lankford and Ballantyne [L&#38;B,77] Be,ld[x's \ncompletion procedure was shown to be a handles the case of permutatlve axioms that major tool for a \nwide class of problems, mainly generate finite E-congruence classes. The case of the word problem in \nuniversal algebra [K&#38;B,70], infinite E-congruence classes was studied by equivalence proofs of sets \nof axioms in algebra Peterson and Stickel [P&#38;S,81] and Huet [HUE,77&#38;80]. [LES, 83], unlflcation \nin equational theories Huet's approach is restricted to sets R of left [JKK,83], inductive proofs in \ndata types [H&#38;H,80], linear rules while Peterson and Stlckel's one is theorem proving in various \nlogics [H&#38;D,83], restricted to linear theories E for which a finite program synthesis from specification \n[DER,82], and complete unification algorithm is known. This computing with rewrite programs [DER,82], \ndescri- algorithm is required to compute complete sets of bing PROLOG's semantics [DER,83], constructing \n E-overlappings, providing complete sets of E- initial algebras and executing equational speclfi- critical \npairs. These results are unified in Permission to copy without fee all or part of this material is granted \nprovided that the copies are not made or distributed for direct Research supported by %DI under contract \ncommercial advantage, the ACM copyright notice and the title of the no 82/767 and G RECO de Programmation. \npublication and its date appear, and notice is given that copying is by Part of this research was done \nwhile permission of the Association for Computing Machinery. To copy the first author was visiting SRI. \notherwise, or to republish, requires a fee and/or specific permission. &#38;#169; 1983 ACM 0-89791-125-3/84/001/0083 \n$00.75 83 [JO1!,83] by describing at a more abstract level the underlying model of co,nputation used \nin both approaches: it makes appear that two properties, na,~ely Confluence and Coherence, are necessary \nand sufficient conditions for Church-Rosser properties of this model. In addLt[on to Confluence, Coheren- \nce is required to enable computations in E-congru- ence classes. ~pplying the,1 this abstract model to \nETRS, Huet's results are easily obtained as well as a more general version of Peterson and Stickel's \nones : non linear equational theories can be handled, which was known as a hard problem of the theory \n[P&#38;S,81]. In this paper, we refine our abstract approach  in order to clear up our definitions and \nmerge the two previous techniques in a same one, avoiding useless computations of complete sets of E-crltical \npairs when left linear rules are involved. In addition, we solve an open problem of [P&#38;S,81] and \n[J~T,83] : given a theory E that contains no equation g=x where x is a variable of g, let us assume that \nthe theory E has a complete unification algorithm and that the reduction relation induced in the E-congruence \nclasses is terminating. Then the Church-Rosser property is shown equivalent to the E-equality of nomnal \nfo~is of critical pairs and is thus decidahle when these pairs are finitely many. A new completion alzorithm \nfor ETRS is derived, that improves and generalizes Peterson and Stlckel's one [or associative commutative \ntheories. The proof of the algorithm is obtained via a new very powerfull proof technique using mu) tlsets \nof tenns. The case where the algorithm stops without adding any rule provides in addition a proof of \nthe Church-Rosser results of section 4. 2. PRELIMINARIES Definitions I: Given a set X of variables and \na graded set F of function symbols, T(F,E) denotes the free algebra over X. Elements of T(F,X), called \nte~ns, are viewed as labelled trees in the usual way: a term t is a partial application of N* into FUX \nsuch that its domain D(t) satisfies: the empty word e is in D(t) and u is in D(tl) implies iu is in D(f(...ti...)) \nfor all i in [l,arlty(f)]. D(t) is the set of occurrences of t, G(t) the subset of non variable occurrences \nof D(t), V(t) the set of varlables of t, #(x,t) the number of occurrences of x in t. ~ term t is linear \nIff #(x,t)=l for any x in V(t). t/u denotes the sohterm of t at occurrence u, t[u<- t'] the term obtained \nby replaclng t/u by t\" in t.t\" is a strict suhterm of t is denoted t->strlct-suhterm t'. [l Definitions \n2: We call axiom or equation any pair (t,t*) of terms and write it t=t*. The equallty -E or t-*\u00b0UE is \nthe smallest congruence closed under Instanclatlon which is generated by a set E of axioms. [-iE denotes \none step equality. ~n axiom g-d Is sometimes denoted g->d (resp. d->g) when used from left to right (resp. \nfrom right to left). ~n equation t=t\" is said to be linear if both t and t\" are lldear. [] Definitions \n3: St, hstitutions s are defined to be endomorphlsms of T(F,X) with a finite domain D(s) \" {x[ s(x) = \nx}. s.s\" denotes the composition of s and s'. We define t ~E t\" iff t\" -E s(t) for some substitution \ns called a E-match from t to t'. s is a match if E is empty. Given a subset V of X, we define s ~E s\" \nIV] iff s(x) ~E s'(x) for all x in V, equivalent to s\" =E s~ s iV] for some s\". [] Definitions 4: Given \nan equational theory -E, two terms t and t\" are E-unlflable Iff there exists a substitution s s.t. s(t) \n=E s(t'). S is a complete set of E-unifiers of t and t\" iff substitutions in S are E\u00b0unlflers and for \nany Eounifler s', there exists a s in S s.t. s <E s\" iV(t) U V(t')]. The E-uniflcatlon algorithm is comp!ete \nif it generates a complete set of E\u00b0unlflers. E is omitted if empty. In that case, the most general unifier \n(mgu in short) of two terms is itself a complete set of unifiers. [] Many theorlcal problems arise in \nequational theories (word problem,...) that can be approached by the use of rewrite rules i.e. directed \nequations or more generally by the use of mixed sets of rules R and equations E. Definition 5 [P&#38;S,81]: \nA term t R,E-reduces at occurrence u with the rule lo>r of R to a term t\" and we write t ->R,E[u,l\u00b0>r] \nt \u00b0 iff there exists an E-match s from I to tlu s.t. t\" -t[u<-s(r)]. E is omitted if empty. []  Left \nmembers of rules can overlap yielding \"critical pairs\": Definition 6: ~ term t\" E-overlaps a term t \nat occurrence u in G(t) with a complete set S of E- overlapplngs iff S is a complete set of E-unlflers \nof t\" and t/u. Given two rules l->r and g->d s.t. V(g)~V(1) - ~ and i E-overlaps g at occurrence u wlth \na complete set S of E-overlapplngs, then the set { (p,q) I p \" s(d) and q - s(g[u<-r]), s in S } is called \na complete set of E-crltlcal pairs of the rule l->r on the rule g->d at occurrence u and is denoted CSECP(I->r, \ng->d, u). Let CSECP(R,R) and CSECP(R,E) be the complete sets of non trivial E-crltlcal pairs for respectively \n: all l->r and g->d belonging both to R, all !->r in R together with all g->d and d->g for g=d in E. \nE is omitted if empty. In that case, a complete set of E-crltlcal pairs of l->r on g->d at occurrence \nu becomes a critical pair and SCP(R,R), SCP(R,E) and $CP(E,R) are the corresponding sets of critical \npairs as in [HUE,77&#38;80]. [] The critical pair lemma [HUE,77&#38;80] is generali-zed for E-crltlcal \npairs: E-Crltlcal palr lemma [JOU,83]: If t ->R tl . [e,g->d] (or t ]-]E t'l) and t ->R,E t2 with [e,g->d \n] [v,l->r] v In Gig), then there exist a E-crltlcal palr (p,q) In a complete set of R-crltlcal pairs \nof l->r on g->d at occurrence v and a substitution s s.t. tl =E sip) (or t'l -E sip)) and t2 -E s(q). \n[] 3. ~BSTR~CT E-CHURCH-ROSSER PROPERTIES Let I-IE be a symmetrical relation and I-*-IE or -E its reflexive \ntransitive closure. Let ->R (R for short) be any relation and ->R/E (or R/R) the relation -E ->R IE (it \nsimulates the induced relation in E-equlvalence classes). Let -~ be the reflexive, symmetrical, transitive \nclosure of the relation ->R U -E. The ->R/E reduclblllty may be undeeldable if E- equivalence classes \nare infinite and at least very inefficient if the classes must be traversed for a reducible term. The \nkey idea is to make computa- tions using another relation R'. Definitions 7: Let ->R\" (or R') be any \nrelation such that ->RC->R'C-bR/E. ThP relattnn P In sa~,4 to be E-terminatlng Iff ->R/E is noetherian \ni.e. there ex|sts no sequence of th~ fnrm tO =E tO\" ->R tl...tn =E tn'->R tn+l... In the follow~ng, t!R\" \nor t! denotes a R'-normal form of the term t. Oar main definitions are pictured below. Full arrows denote \nuniversal hypotheses wh~le dashed arrows denote exlstencia] conclusions: tl i I 1-*-[\u00a2 t2 ,, ', ~ t XR\" \n% t * R\" R\" * tl t2 tl t2 ' i I ' i ' i ~ .i 4 + , R\" R'*, ~ i R\" R'*, tl\" I-*-[E t2\" ~ !~, i 4, tl'l-*-lE \nt2\" TI'I'*-IE t2\" R\"-Church- Rosse r confluence local confluence modulo E modulo E modulo E of R\" of \nR\" with R I-*-I~ t2 t l-I =. t2 R\" + : R'I ' , \u00a2 i tl 1, tl ~\" R\"  i +,R-I ; ~r R\" t * R\" I v ',4\" \n'~/ tl.\" I-*-I~: t2\" t]\" I-*-IF. t2\" cohoreflce l,~ca 1, ~oheronce modulo E of R\" modulo E of R\" [] Before \ndevelopp{ng our results, let us e,apha~Izp four points: -As R R'~R/E, =E ->R\" =E and R/E are th~ sam~ \nrelation. -Confluence nnd Coherence are two instances of a same concept that ~\u00d7prosses that two (maybe \ndifferent) relations }lave a diamond property. - Our Confluence and Coherence def[nltlons dlffer from \n[,IOlI,~3], because only R'-reductions are used. llandllng these simpler ones (yet equivalent ones if \nR is E-terminating) wlll require a powerfull induction technique. -Different R'-normal forms of a term \nare E-equal, by E-confluence property. Confluence and Coherence modulo E are both needed to compute \nwlth R', that is to decide the word problem using R'-normal forms and can be together restricted to their \nlocal properties, as stated now :  85 Theorem I : If R is E-terminating, the following properties \nare equivalent : (I) R is R'-Church-Rosser modulo E.  (2) R\" is confluent modulo E and coherent modulo \nE.  (3) R\" is locally confluent modulo E with R and locally coherent modulo E.  (4) (tl =,RUE t2 Iff \ntl! -E t2!)  Proof: (2:) => (3) and (4) => (I) are straightfor-ward. (I) => (2) requires the use of \nE-termlnatlon to prove coherence of R\" modulo E. (3) -> (4) is. done by noetherlan induction on multisets \nof terms: let S={tO, tl, ... , tn} be a multiset of terms s.t. t-tO I-[% tl ... l-ltn \"t', with % - \nRUE. The proof works by noetherian induction on the multiset extension of the relation ->R/E which is \nclearly noetherian, since ->R/E is noetherian. The induc-tion hypothesis i's first applied to the multiset \nS \\ {in} and three cases are tO be distinguished according to the last equality step tn-I [-1% tn. -tn-1 \nR<- tn: This case is straightforward. -tn-I I-[E tn : The result is obvious if tn-I is irreducible. \nElse it comes from local coherence of R\" and from induction hypothesis as shown on the diagram where \nencircled numbers stand for successive steps in the proof: tO I-[RUE ... tn-I l-[Z tn I * c oh. ~R\" \nInd. [ R\" \"~ tn\" R', ~ I R\" ~ R ~ tO! =E tn-I I -E tnl -tn-I ->R tn : Then tn-I is reducible by R therefore \nby R\" and the result follows from local confluence modulo E of R\" with R and from induction hypothesis \nas shown on the following diagram: tO I-[RUE ... tn-I ->R tn I   e \u00ae J loc. * I ~* couf ~R\" Ind. \n~ -E\" tn\" . R-@ I \"~ * Ind. * tO! =E tn-1 ! -E : Notice that the induction -hypothesis is always applied \nto proper sons of S: it is obvious for step 1 and true too for step 3 as the terms along the path from \ntn-l! to tn\" are all proper sons of tn\u00b0l for the relation ->R/E. Notice also that in step 3, tn-l! is \nstill in R'-normal form, thus cannot be reduced any more. 4. s, PPLIC~TIOR TO EQUaTIONaL TERM REWRITING \nSYSTEMS From now on, R is a set of rules and E a set of equations. Our goal is to restrict local confluence \nmodulo E of R\u00b0 with R and local coherence modulo E of R\" to a convergence check on a finite number of \ncritical pairs or E-crltical pairs for a suitable relation R'. The two cases where R'-R or R\u00b0-R,E are \nstill studied in [JOU,83]. The first one requires R to be left linear and yields Huet's classical results \non \"confluence modulo\", while the second one requires the computation of E-crltlcal pairs using a complete \nE~unificatlon algorithm and yields a generalized version of Peterson and Stlckel's results. Our first \ngoal now is to merge these two cases by splitting the set R of rules into disjoint sets R1 and R2 with \nleft linear rules only in R1 and use the relation (R1U R2,E) for R'. This case is also studied in [JOU,83] \nwith a less powerfull proof technique. Our second goal is to prove the decidability of the (R1 U R2,E)-Church-Rosser \npro-perry modulo E, provided R is E-terminating. This can be done by proving that the R'-ChurchoRosser \nmodulo E property is equivalent to check that R'-normal forms of finitely many critical pairs are E-equal. \nSuch a result was already known for the case where R2 is empty and rules in R1 are left linear. We prove \nit for R', provided the theory E has a complete unification algorithm and no equation g-x with x in V(g). \nThe basic tool of the proof is noetherian induction on the multiset extension of the relation (->R/E \nU ->strict-subterm/E), denoted -> in the following. The termination of -> is simply based first on the \nfact that o>R/E and ->strict-subterm are both noetherian and second on the following commut~ation lemma \n: Lemma I : If t -n->strlct-subterm/E tl -m->PJE t2 ]t'l s.t. t -m->R/E t'l \u00b0n->strlct-subterm t2. Proof \n: Notice that, if t ->strict\u00b0subterm t'-E t\", there exists tl s.t. t =E tl ->strict-subterm t\". Let t\"l \ns.t. t =E t\"l \u00b0n->strlct-subterm tl. t\"l is thus obtained by using first the E-equallty steps on t, then \nthe strlct-subterm steps on the result. Then if t ->strict-subterm t* ->R/E t '\u00b0 , there exists tl s.t.t \n->R/E tl ->strlct-subterm t\". t'l is thus obtained by using first the R/E steps on t\"l and then the strlct-subterm \nsteps. [] Let us first make some comments about the termination of R/E : - ~ssume that an equation gfd \nis erasing i.e. a variable x of V(g) is not in V(d). Let l->r be a rule, s and s\" substitutions s.t. \ns(x)=l and s'(x)-r. Then d =E s(g) -+->s*(g) =E d and the E-termlnatlon property is not satisfied. Therefore \nwe assume in the following that equations in E are non erasing i.e. V(g) -V(d) for any equation g-d in \nE. - %ssume now that E contains an equation of the form g-x where x has at least two occurrences in t. \nLet l->r be any rule. Then I is E-equal to a term with several occurrences of I. One can rewrite one \nof them and start the process again on another occurrence of I. For instance in the case of the Idampotency \nequation x = x+x, for any rule 1->r, 1 -E 1+1 -> r+l =E r+l+l -> r+r+l .... The same problem actually \narises with any instance of such an axiom where x is replaced by any term with variables. More generally, \nit arises whenever a left hand side of an equation overlaps different unifiable subterms of the right \nhand side. In the following, we explicitely assume that E contains no axiom of the form g-x, because \nthey have the additional drawback of genera-ting infinitely many critical pairs. Therefore axioms such \nas x~e-x do not fall in the scope of our method (they must be used as rules). Let us now state the main \ntheorem of this section: Theorem 2: Let R = R1 U R2 an E-termlnatlng set of rules such that R1 is left \nlinear and a complete and finite unification algorithm exists for the theory -E. Then R is (R1 U R2,E)-Church-R=sser \nmodulo E Iff : - all critical pairs (p,q) in SCP(R1,RI) U SCP(RIsE) U SCP(E, R1) U SCP(RI,R2) verify: \np! -E q!. - all E-crltlcal pairs (p,q) in CSECP(R2,R2) U CSECP(R2,RI) U CSECP(R2,E) verify: p! -E q! \n.  The proof of theorem 2 Is given In ~ppendtx. If E contains axioms g=x, with x in V(g), we are only \nable to give a sufficient condition for the R'-Church-Rosser modulo E property of R : -all E-crltlcal \npairs (p,q) in CSECP(R2,g=x) verify : p ->P~2,E p~ and p'! -E q!. [e, ] - all the others (E)-crttical \npairs (p,q) verify as above : p! -E q!. Notice that critical pairs in CSECP(E, R2) do not matter: they \nare confluent. In practice, we choose for R2 the set of non linear rules because E-unlflcatlon is required \neach time a rule of R2 overlaps a rule or an equation. This result is very important in practice because \nleft linear rules are usually many. 5. THE COMPLETION PROCEDURE Given a set of axioms, the E-COMPLETION \nprocedu- re attempts to obtain a confluent and coherent set of rules that are as far as possible tnterreduced. \n~s a main feature of our algorithm, coherence is dynamically ensured, on contrary to Peterson and Stlckel~s \ncompletion algorithm. , The E-COMPLETION procedure works on a set % of pairs, a set R of rewrite rules, \na constant set E of equations and an E-reductlon ordering, i.e. a quasi ordering compatible with the \noperations of the term algebra and such that its associated equivalence : contains =E and its associated \n strict ordering > is well founded. The set ~ of pairs is Initialized with the set of axioms. ~fterwards \nit is built either from rules, whose left-hand sides are reducible by another one, or from the computation \nof crltlcal pairs. Pairs in ~ are compared using the E-reduc- tion ordering >. The rewriting system \nR Is divided into a set R1 of left-llnear rules and a set R2 of non-left- linear ones. Each rule g~>d \nis : - labelled by an integer n and denoted n:l->r, In->m, or simply n. The label tells us when the \nrule was created. - marked as soon as all its critical pairs with the equations of E and with the previously \ncreated rules have been computed. In a,hl{tIon two particular features have been added In order to deal \nwith the problem of coheren- ce : protected rules and extensions. Let S be the ~et o~ (E-)erltical pairs \n(p,q) between a rule k:l->r an,] an equation g->d of E, at an occurrence u. Notice that S [~ reduced \nto one element If k is left 1 [near.  - If the left me,nher p of a (E-)crltlcal pair in S is R'-reduc[ble, \nbut only on top by a non-left- linear rule n, n i~ protected for coherence of k. ~s long as a rule is \nprotected, Its left hand site iq not allowe| to be rednced and the rule canqot be re,~oved ~rom the current \nrewriting system. Notice that rule n can be protected for coherence of several rules. -When the rule \nk [s not left linear, if there exists in S an E-crit[cal palr (p,q) whose left member is R'-irreduc[ble, \na so called \"extension rul_~'' for k is added ; It is obtained ~rom the \"extension palr\" (g[u<-l], g[u<-r]!R') \nwhich is auto~at[cally directed fro,~ left to right using the E-reduction ordering >. This e~tenslon \nrule reduces on top all the left ~e~hers of E\u00b0crltieal pairs in S because any p in S is an instance of \ng[u<-l] modulo =E. Let Ext(k) be the set of rules added by the procedure for coherence of k or of a rule \nin E~t(k). When the left hand side of rule k I.s reducible, rule k and all the non protected rules in \nExt(k) are removed from the current rewr[ting syste,~. Extens{nn rules genera- lize Peterson and StIckel's \nassociative commuta- tlve ones.  ~he:~ew~.r a no~ rule l->r is i~troduced by the process, the other \nrules are checked for si,npl(\u00b0 ficatInn. ~ rule of R is said simpllflable by l->r if and only if: --its \nleft ~and able [s reducible by the rule l->r --it is protected only for coherence of rules slmpllf[ahle \nby l->r --it can he an extenslon hut only of rules simpllfiahle by l->r. The procedure CRITICkL-PklRS \ncompute critical pairs, sets protections or computes extension pairs if necessary, nornalize terms and \nreturns a set ~\" of pa~.rs of terms,. E'COMPLETION (~, R, E, <, n)  IF ~ is not empty TIIEN choose \na pair (p,q) in ~ ; IF p =E q THEN E-COMPLETION (~\\{(p,q)},R,E,<,n) ELSE C~SE p >q THEN l-p ; r=q q \n>p THEN l=q ; r-p ELSE STOP with F~ILURE END C~SE; K-{k in R [ k is slmpliflable by l->r} ; K'={k\" in \nK I k\" is not an extension}  ~'=~\\{ (p,q)}+{ ilk* ,rk)IkCK\" ,Ik\u00b0> [ l.>r]rk\" } ; R'={Ik~>rk\" [ Ik->rk \nIs In R, k Is not in K, rk is reducible in rk\" using R\" U {l~>r} or {l->r},E } U {n.l->r}. Rules in R\" \nare marked as in R. n:l->r is unmarked and is an extension of rule k if (p,q) was an extension pair for \nk ; E-COMPLETION (~', R', E, <, n+l) END IF  ELSE IF all the rules Ln Ri are marked THEN STOP with \nSUCCESS ELSE Choose an unmarked rule m'l->r w.r.t. fairness selection hypothesls; ~'=CRI~IC~L-P~IRS(m:I->r, \nR, E); R*=R where the rule m'.l->r is now marked; E-COMPLETION (~*, R *, E, <, n) E~D IF END IF END \nOF E-COMPLETION CRrrlC%L-P%IRS(m:I->r, Rt E) IF I is llnear THEN CP = SCP(1->r,E) U SCP(E~I->r) FOR \nany (p,q) in CP DO IF p is only R2,E-reduclble on top with a rule J THEN protect J for coherence of m \nEND IF ~\" = ~\" U {(p!R', q!R')} END FOR E,.sE CP-CSECP I->r, FOR any CSECP(l\u00b0>r,g->d,u) DO IF ~(p,q) \nin CSECP(I->r,g\u00b0>d,u) s.t. p=pIR\" THEN ~\" = ~\" U {(g[u<\u00b0l], g[u<-r]IR')} ELSE FOR any (p,q) in CSECP(l->r,g->d,u) \nDO  IF p is only R2,E-reducible on top by a rule J THEN protect J for coherence of m END IF ~\" -~\" U \n{(pIR', qlR\u00b0)} END FOR END IF END F OR END IF CP -(IF I is linear THEN { U SCP(l\u00b0>r,k)} ~m, kE R ELSE \n.{. U CSECP(I->r,k)} END IF) z~m, kC R U { U SCP(k,I->r)} U { U CSECP(k,I->r)}  kKm, kE RI k~m, kE \nR2 FOR any (p,q) In CP DO ~'-~'U {(pIR',qIR')} END FOR RETURN ~\" END OF CRITIC~L'P~IRS The E-C~MPLETION \nprocedure can stop with failure, stop with success or loop forever. In the first case, all that may be \nsaid is that every pair or rewrite rule generated so far is an equational consequence of the axioms. \nIt [s possible that trying again with another ordering would carry on a success. We are interested In \nthe two rema[niag cases, when all pairs considered [n ~ at every recurs[re call, can be compared by < \n, no matter the algorithm stops or loops forever yielding then a seml-declsion procedure for RUE-equallty. \n Let us introduce the following notations : \u00b0 ~i and R[ denote the values of arguments and R in the [th \nrecursive call. - R+ = U Ri Is the set of all rules generated during the process ; R+ is split into \nleft linear rules R+I and non left linear ones R+2. - W/ = {g->d in R+[]I s.t. VJ>~, g->d is [n RJ}. \n In other words, R# Is the set of the rules which are never reduced, neither on their left hand side \nnor on their right hand side by other rules. R~ is also split into a set Wtl of left linear rules and \na set R#2 of non left linear ones.  ~ccording to these different sets, we cnnslder two reduction relations: \n->R+\" is -~R+I U ->R+2,E and ->R#\" is ->~IU\u00b0>R#2,E. Notice that -~R# ~->R+, ->R#/E ~'>R+/E and \">R#\" \n~ ->R+'; R+ is Eoterminat[ng thus also ~#. We first prove that R+ and E generate the starting equational \ntheory : Lemma 2 : For any I},O, every pair In ~I will be selected at some Iteratlon J~i. Lemma 3 : \nFor any I)O, and for any pair (p,q) in %1, there exists p\" and q\" such that p -*->R'+ p\" =E q\" R'+<-*-q. \n Corollary: =RUE is equal to =R+UE Theorem \"~: R]~ tq R'#-Church-Rosser modulo E. Proof: sketched in \n~ppendlx. [] Theorem 4: W# is R'#-Ch.reh-Ros~er modulo E, R+ [ ,~ R\"F-Church \u00b0 Ronq:~r 'ROd,tie V,, antl \nthe con-,rnenees =R#I/E, =RHIE an,| =R;IF, lr,z equal. In a.l.lttton to provide a dec[qton pr,>cednre \nfor =RUE equality whenever it stops, the completion procedure proviles a semi-declslon proced,tre for \n,=RUE equality when it loops for ever, as stated by our last result: Proposi tlon: t =RUE t\" Iff there \nexlsts an iteration [ such that ti =E t'i. Proof: easy conse quenc e of theorem ~ and previous corollary. \n[ ] Z :. B--m- L-Lm-' -R-~-PW [DER, 83] rlER~N.q~RT P.: private communication [DER,R2] DE R.~lOa TTZ \nN. : \"Computing wlth term rewriting systems\" to he puhlished [GMP,R2] C~,UEN J.~., ME qEC.UER J., PL~TgTED \nD.: \"Programming with parametertzed abstract objects in OBJ\" In \"Theory and Practice of Software Technology\", \nFerrar{ D., Bolognani M. and C, oguen J.~. Eds., North Holland (1982). [,q&#38;D,83] HSI~NC In DERSHOgFrZ \nN.: \"Rewrite methods for clausal and non clausal theorem proving\" Prec. lOth IC~[,P ([q83). [;l&#38;ll,80] \nIIUET G. HIILI,OT .I.M.: \"Proofs by induction in nquattonal theories with constructors\" Prec. 21th FOCS \n(lqgO). [}lUE,77&#38;RO] IIIIET G.: \"Confluent reductions: abstract properties and applications to term \nrewriting ~'ist ems\" Prec. Igth. FOCS (1977) and .I~CM 27-4 pp 797-821 (IgSO). [HIJE,81] HUET g.: \"~ \ncomplete proof of correctness of the Knuth and Bendix completion algorith,1\" TCSS 23, ~p 11-21 (19,91). \n[JOll,B3] JOU~NN~UD J.P.: \"Confluent and Coherent Equational Term Rewriting Systems\" Prec. 5th. Ca.a.P \n(1983) to appear in I,NCS. [.]KK,83] JOII~NN~IID J.P. '(I~CliNER C. KIRCIINER H.: \"Incremental construction \nof unification algorithms [n nquat ionnnl theories\" Prec. lOth. ICM,P (1983) [J&#38;l,,82] .IOII~N'NMID \nJ.P. I,E~C~NNE P. : \"On nultiset ordering\" TPL 10\u00b02, np~7-63. [K&#38;B,70] KNUrl ~. BE,~DTY P.: \"~Imple \nword problems in unlversal algebras\" in \"Computational problems in abstract algebra\" Leech J. ed. Pergamon \nPress, pp 263-207 (1970) Proving now the Church-Rosser property of R+ requires a \"fairness selection \nhypothesis\" about the choice of an unmarked rule in ~i: For any rule with label k, there exlsts a recurslve \ncall i such that -either rule k is reduced by the introduced rule. -or rule k is selected and C RITIC~L-P~IRS(k,R,E) \nis computed. [L&#38;B,77] L~NKFORD D.S., BM,L~NTYNE ~.M.: \"Declqlon procedures for simple equat fennel \ntheories with permutat ire axioms: complete sets of permutattve reductions.\" Rep. ~TP-37, Dpt. of Comp. \nSt., Univ. of Texas at ~usttn. [LES,82] LERC~NNE P. : \"Computer experiments with the REVE term rewriting \nsystem generator\" Prec. lOth POPL conference (1983) [P&#38;S,Sl] PETERSON G.E. and STICKEI, M.E.: \"Complete \nsets of reductions for equational theories with complete unification algorithms\" J.~CM 2R, no.2, nP 233-264 \n(1981).  89 8. ~PPEND IX  P.;ooLoLth~o~ 2.: The only if part is straightforward. The if part follows \nthe proof of theorem 1 (part (3) lmplles (4)) and we assume it done (Notice that it implies the use of \ntheorem I because we prove (4) instead of (I)). The differen- ce is that we have to prove the two properties \nof local coherence and local confluence using the sets of critical pairs. In addition, instead of using \nnoetherian induction on the multiset exten- sion of the relation ->R/E, we use noetherian induction on \nthe relation ,,>. R\" denotes as usual the rewrite relation (RI U R2,E). -Let us prove local coherence, \nmore precisely: for any t, t\" and t\" such that tn-I -E t, with t ]-~E[u,g.>d] t\" and t ->R'[v,l_>r] \nt\", there exist terms tl',t2\",t2\" s.t. t\" ->R'tI'-*->R\" t2\" t\" -*->R\" t2\" and t2\"=E t2\". Notice that \nwe prove a slightly more general local coherence property than needed on the proof diagram of theorem \nI, because such one will be needed for local confluence. %s left members of rules and equations can always \nbe supposed to have disjoint sets of variables, there exists a substitution s such that t/u = s(g) and \nt/v ~ s(1). Let us now discuss seven different cases according to the respective positions of u and v: \n case I: u and v are disjoint occurrences. Then the R\" and [-~E steps commute. For the remaining cases, \none occurrence is prefix of the other. The result is now straig1~t- forward if this occurrence (assume \nit is u) is not the empty occurrence e, since we can apply our multlset induction to the multiset it'/u, \nt/u, t\"/u} and then add the missing contexts. Therefore we assume in the following that this occurrence \nis e. case 2: u-e and v iS not in G(E). Because no overlapping occurs in this case, there exists an \noccurrence w which is a prefix of v and such that g(w) is a variable x. Let us now define a substitution \ns\" s.t. s'(y) = s(y) for any y distinct of x and s'(x)=s(x)[v< -s(r)]. %s equations are non erasing, \nx occurs at least once in d ; it is then easy to check that t'-+->R\" s'(d) [-[E s'(g) R'<-*- t\". Notice \nthat our definition for Coherence allows rewriting from t\", which was not allowed by Peterson and Stickel's, \nrequiring therefore the llnearlty of g. case 3: v-e and R\" is R2,E. It follows that t\" \"E s(1) and thus, \nt\" ->R2,E[e,l.>r] t\". This is the reason why critical pairs of equa-tions into rules are not to be considered. \ncase 4: v=e and u is not in G(1) with l->r in HI. Then the result follows In the same way as in ease \n2. case 5: v=e and u ~s in G(1) with l->r in HI. Then the result follows elasslcaly from the critical \npairs lemma. case 6: u=e and v is in G(g) with l->r in RI. Then the result follows classicaly from the \ncritical pairs lemma. case 7: u=e and v is in G(E) with l->r in R2. This is the difficult case that requires \nthe full power of the induction relation ->. By the E-crltlcal palrs lemma, there exist a pair (p,q) \nin CSECP(R2,E) and substitutions s\" and s\" s.t. p-s'(d), q=s'(g)[v<-s'(r)] and s =E S\"S\" iV(g)]. Hence, \nt \u00b0 =E s\"(p) and t\" =E s\"(q), with E-equallty steps taking place out of G(d) for t\" and out of G(g[v<-r]) \nfor t\". By E- termination property of R, we know that p is not in R'-normal form, hence p ->R\" p'. [w, \n] Therefore s\"(p) ->R\" s\"(p'). Let us now [w, ] prove the R'-reduclbillty of t\" by introspecting three \ncases. In each ease, the proof is depicted on a diagram where encircled numbers denote successive steps \nof reasoning. case 7.a : p ->R\" p\" -*->R\" p! and  -[w, ] w is not e. We can write w=lw\" where t [s \na natural number and w\" an occurrence. Let Z he the set of occurrences in D(s\"(p)) where the steps of \nE-equallty take place and Z\" the subset of Z composed of all occurrences disjoint from w. For any z \nin Z\\Z', z=Iz \", because the E = equality steps do not take place at occurrence e, if left and right \nmember of equations in E are not variable terms. If Z\\Z\" is not ~, t'/i =E s\"(p)/i ->R's\"(p')/i. %S \nt'/i is a strict subterm of t', it is a proper son of tn-I for => and so are the terms between t'/i and \ns\"(p')/i in the previous proof that t'/i =RUE s\"(p')/i. The multiset of these terms is therefore smaller \nthan S. By induction hypothesis : t'/i -+->R\" =E R'<-*-s\"(p')/i. Notice that t'/i is at least once R'-reducihle, \nelse R is not E-termlnatlng. There exist t'l s.t. s\"(p)[i<-t'/i] ->R* t'l -*->R \u00b0 =E R'<-*- s\"(p'). This \nis step I on the diagram. We have now to take into account the other E- equality steps of Z'. ~s they \ndo not take place inside t\u00b0/i, they commute with the R'-rewrltlng. Thus there exists t'2 s.t. t'->R\" \nt'2 =E t'l. This is step 2 on the diagram. The conclusion follows from applying the i~d,mtion hypothesis \non the mnltlset {t\"...t'2} o~ terms that arise in the proof that t\" =RUE t'2 depicted on the diagram \nbelow (step ~). tn-I =E t I'l~[e,~',l t\" R2,E/[v,l->rl \u00ae t\" =E ~\"(q) s\"(p) =E commu t. R ~ s\"(p') \nt'l =E t'2 A / R\" * * R\" # (D induction on mult[set * R\" R\" -case 7.b : p ->R2,E[e ' ] p\" -*'>R\" p!. \n In that case t\" ->R2,E[e ' ] s\"(p') -*->R\" s\"(p!). The result follows frofa I nd,mt ion hypothesis \napplied to the multiset {t\"...s\"(p!)) of terms that arise in the proof that t\" =RUE s\"(p!) depicted on \nthe diagram helow. tn-I =E t I- I F,[e,g=,l] t\" q2, E/[ v, l->r] s\"(p) t~/ t\" =~ s\"(q) ~,e4, / \n~,E I s\"(p') (! R\" ,It s\" I) =g s\"(p!) \u00ae I ind. on ,a, ltiset * R\" R\" * case 7.c : p ->RI p\" -*->R\" \np!. Let [e, ]  t'l,..., t'n s.t. s\"(p) l-I~ t'l...l-lE t'n = t'. In a f[est qtep, we apply local coherence, \nalready proved in th[q case, since s\"(p) =E tn-I and s\"(p) ->RI s\"(p'). Now t'l ->R\" t\"l with maybe a \nrule of RI applied at occurrence e. If it is the case, we go on applying local coherence as in step I. \n~ssume this process goes on until t'i ->R\" t\"i for some [. This is called step 2 in the diagram. Now \ntwo cases can occur : either t'i is t\" itself and we can apply the induction hypothesis to get t\" -*->R\" \n=E R'<-+-t', or t'i rewrites to t\"i using either R\" at an occurrence different from e or R2,E at occurrence \ne. We can deduce, in the first case as in 7.a and in the second ease as in 7.b, that t\"i -*=>R'=E R'<-+-t'. \n This is step 3 on the diagram. The conclusion then follows from applying the induction hypothe- sis \n(step 4). in-1 =E t [- [E[e,gfd] t\" fiE l  R2,E [v,l->r] s\"(p) I-IE t'l I-i-I t'i G I / I~\" loc.o \n\u00a2R'\u00ae R'4pre~ious$~\" S\"(p') coh.A ~ cases / ~I R\" ~ * R\" .* * R\" .* * R\" * O induction on multlset * \nR\" R\" * Let us prove local confluence, more precisely : for any t\" and t\" such that tn-I ->R\" t\" [u,g->d] \nand tn-I ->R t\", there exist t'l and t\"l [v,l->r]  s.t. t\" -*->R\" t'l =E t\"l <-*- t\". ~s usually, we \ndiscuss hy cases according to the respective positions of u and Vo - case I: u and v are disjoint. Then \nthe diagram commutes and we are done.  For the remaining cases, one occurrence is prefix of the other. \nThe result is now straight-forward if this occurrence (assume it is u) is not the empty occurrence e, \nsince we can apply our multiset induction to the multlset {t'/u, to-I/u, t\"/u} and then add the missing \ncontexts. Therefore we assume in the following that this occurrence is e. - case 2: v = e. The subcase \nwhere there is no overlapping works as usually. The other subcase is achieved with the critical pairs \nlemma if R\" is RI and with the E-critlcal pairs lemma if R\" is R2,E. - case 3: u = e . The subcase without \noverlap- ping works as usually. The other subcase is achieved with the critical pair lemma if R\" is RI. \nIf R\" is R2,E, we need the use of the already proved local coherence property for terms E-equal to tn-l. \n~s tn-I ->R\" t', there  91 exists t s.t. tn-I I-n-lE t ->R[e,g.>d] t'. On the other hand, tn-I ->R \nt\". We therefore [v,l->r] can apply n times local coherence starting from tn-I until we reach t with \nthe following situa- tion: t\" =RUE t\"l R'<-t ->R t'. ~s [e,g->dl the R step applies now at the top of \nt, we can npply the already case 2 to close the diagram that is t\"l -*-> =E <-*- t'. Now t\" =RUE t\" and \nthe proof is achieved by using the Church-Rosser ~roperty applied to the multlset {t\"...t'}. []  ;'roof \nof theorem 3 (sketch): ~s R# is included into R+, we act.ally prove that t =(R+ U E) t\" implies t -*->R#\" \n=E R#'<-*-t'. The proof is by noetherlan induction using => on the multlset S = {tO,tl,...,tn} such that \n: t=tO I-[EUR+ tl ... I-IEUR+ tn = t'. The induction hypothesis is first applied to the multiset S-{tn} \nand three cases are then to be distinguished: -tn\u00b0l R+<-tn : the result follows by reducibi- lity of \nR+ by ~I : for any t\" =E in, if t\" ->R+ t'l then there exists t'2 such that t\" ->R# t'2 and t'l ~*->R#\" \n=E R~'<-*- t'2. If tn-I is P~'-irreducible, then the result is obvious. Else it follows from induction \nhypothesis as depicted on the diagram : tO I-IR+UE ... tn-I R+<-tn Ind. R#\" reduc. R# \\\u00ae 1\u00ae l /Nor \n/ =E~ Ind.~ =E I * *  -tn-I I-IE tn : the result is obvious if tn\u00b0l is irreducible. Else it comes from \nlocal coherence and induction hypothesis as shown on the diagram: t0 I-I~+u~... tn-I I-IE tn Ind. loe. \n \\ Q ..1 \u00ae .4 oo. ! Ind. \"~ =E ~, I / -tn-I ->R+ tn : the result follows from reduci- bility of R+ \nby ~/, from local confluence modulo E of RI\" with R# and from induction hypothesis: tO I-IR+UE ... tn-I \n->R+ tn \u00ae @ @ \\ Ac\u00b0nf. A / * RII\" * * ~==\" * ~ P~* * We are left to prove the three properties of \nreducibility, local coherence and local confluence, assuming the Church-Rosser induction hypothesis on \nm,ltisets which are strictly smaller than S. Reducibility of R+ by ~/ : in addition to multlset induction, \nthe proof uses an induction on the noetherlan subsumptlon preordrlng in a similar way as in [HUE,81}. \nIndeed the two inductions can be mixed in one. ~#-reduclbillty of a term t is true as soon as t is R+-reduclble, \nbut becomes false if t is only R+,E-reducible. This Justifies the fact that non left linear rules ensuring \nthe coherence property are protected. Local Coherence i.e. for any t, t', t\" \"such that tn-I =E t, t \nlolE[u,g=d ] t\" and t ->P~'[v,l.>r]t\" then t\" -*->I~\" =E P~'<-+- t'. The proof works by case on the \nrelative positions of u and v. When no overlapping occurs, the proof works as proof of theorem 2. When \nan overlapping occurs, the fairness selection hypothesis ensures that there exists a reeurslve call where \nthe critical pairs between I-> and g->d are computed. Discus- sing by case on the left-llnearlty of the \nrule l->r, we first apply the appropriate critical pairs lemma as in proof of theorem 2. We then test \nR+'-reduelbillty of the left member p of the critical pair (p,q) and check that an extension rule has \nbeen added, if necessary. We then prove the R#'-reduclbillty of t\", either by applying reducibility of \nR+ by R#, or by checking that the rule which reduces p is protected, or by applying induction hypothesis \nusing (\u00b0>strict- suhterm/E). We finally apply the noetherlan induction hypothesis on multlsets smaller \nthan S. Local Confluence of PA\" with R# in tn-I is proved in a similar way as local Coherence. In addition, \nthe already proved local Coherence property is used in a similar way as in proof of theorem 2, when a \nR#'-reductlon applies inside an R#-reduction. This is the reason why local Coherence was proved for such \nterms as above. []   \n\t\t\t", "proc_id": "800017", "abstract": "", "authors": [{"name": "Jean-Pierre Jouannaud", "author_profile_id": "81100232291", "affiliation": "CRIN, BP 239, 54506 Vandoeuvre les Nancy, CEDEX (FRENCE)", "person_id": "P136932", "email_address": "", "orcid_id": ""}, {"name": "Helene Kirchner", "author_profile_id": "81100351228", "affiliation": "CRIN, BP 239, 54506 Vandoeuvre les Nancy, CEDEX (FRENCE)", "person_id": "PP39074459", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/800017.800519", "year": "1984", "article_id": "800519", "conference": "POPL", "title": "Completion of a set of rules modulo a set of equations", "url": "http://dl.acm.org/citation.cfm?id=800519"}