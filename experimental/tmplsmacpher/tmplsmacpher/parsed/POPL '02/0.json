{"article_publication_date": "01-01-2002", "fulltext": "\n\t\t\t", "proc_id": "503272", "abstract": "The goal of the S<sc>LAM</sc> project is to check whether or not a program obeys \"API usage rules\" that specify what it means to be a good client of an API. The S<sc>LAM</sc> toolkit statically analyzes a C program to determine whether or not it violates given usage rules. The toolkit has two unique aspects: it does not require the programmer to annotate the source program (invariants are inferred); it minimizes noise (false error messages) through a process known as \"counterexample-driven refinement\". S<sc>LAM</sc> exploits and extends results from program analysis, model checking and automated deduction. We have successfully applied the S<sc>LAM</sc> toolkit to Windows XP device drivers, to both validate behavior and find defects in their usage of kernel APIs.", "authors": [{"name": "Thomas Ball", "author_profile_id": "81100472343", "affiliation": "Microsoft Research", "person_id": "PP39044398", "email_address": "", "orcid_id": ""}, {"name": "Sriram K. Rajamani", "author_profile_id": "81100468626", "affiliation": "Microsoft Research", "person_id": "P266638", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/503272.503274", "year": "2002", "article_id": "503274", "conference": "POPL", "title": "The S<scp>LAM</scp> project: debugging system software via static analysis", "url": "http://dl.acm.org/citation.cfm?id=503274"}