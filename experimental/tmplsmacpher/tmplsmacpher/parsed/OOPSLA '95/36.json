{"article_publication_date": "10-01-1995", "fulltext": "\n Workshop 22: 00 Technology in Large Financial Institutions Monday, October 16, 1995, Austin, Texas, \nUSA. Report by Chris Laffra, Morgan Stanley, Email: laffra@ms.com. This workshop brought together people \nthat have experience with applying 00 techniques for developing application in (large) financial institutions. \nWe highlighted specific problems, solutions, and lessons learned, together with their individual applicability, \nstrengths, and limitations. Goals and Focus Financial institutions are believed to have special requirements: \no Rapid changes. The business changes very fast. Application development is a matter of months, weeks, \nsometimes even days. The average life span of a typical developer is measured in less than a couple years. \n o Difficult technical problems to be solved (such as analysis of a given market.) Challenge is to encapsulate \n(black-box) legacy systems into the new 00 environment. These legacy systems often have been developed \nby programmers that have long since disappeared without makiig any documentation. o Reuse. Most firms \nhave settled the object reuse matter by reusing many different GUI development toolkits and foundation \nclasses. However, a more important sort of reuse is in developing an enterprise wide reuse strategy, \nbased on distributed 00 systems, where end user applications issue request with object servers running \non LANs and WANs. Different standards for distribution need to be considered, in addition to performance, \nrobustness, and security. o Build versus Buy . We want to have robust software with a large user base, \nexactly matching our requirements, yet being flexible to the volatile business. Often, time is more important \nthan investing some money in an external tool. However, requirements or bugs will not be taken care of \nuntil the next release . Build versus buy is a difficult tradeoff, and each specific situation will warrant \na different decision. o Choice of language. C++ vs. SmallTalk vs. Objective C vs. APL. Often, languages \nare chosen with religious arguments. Sometimes for efficiency reasons, ease of development, or other \nmore realistic arguments. Although it always leads to interesting discussions, we want to avoid this \nmatter at this workshop and spend more time on special architectural, environmental, and infrastructural \nissues.  Organizers Chris Laffra, Morgan Stanley Mamdouh Ibrahim, EDS/Object-Oriented and AI Services \nPeter Lowes, EDS/Securities Industry Group  Report We took some risk by not organizing anything prior \nto the workshop. Our plan was to come up with interesting items during the workshop, discuss them and \ndetermine issues, positions, and conclusions during the day. Attendence ranged from institutions like \nMorgan Stanley, CAL FP bank, Greenwich Captial Markets, American Management systems, Knight Ridder, Ernst \n&#38; Young, EDS, Front Capital, First Union, to Goldman Sachs. The common background of the attendents \nwas a primarily technical function in a financial institution. Addendum to the Proceedings OOPSLA 95 \n213 Here follows a summary of the workshop result. Most are rather fragmentary, and need further explanation. \nI hope that you can get a feeling for the kinds of issues that came up at the workshop, though. The first \nhour of the workshop was spent on introductions and determining interesting topics, anywhere in the range \nof: o 00 business modeling, o Distribution, o How to apply 00 firm-wide, 0 Integration of legacy systems, \n o Flexibility and adaptihility o Class libraries/frameworks for financial domain o Database integration \n o Top-down versus bottom-up use of OOT o Reuse of objects and process; a myth? ? o 00 analysis and \ndesign methodologies o Real-time issues o Rapid changes  After an uncomfortable silence we decided \nto concentrate on the following three topics: o modeling, o distribution, 0 reuse  The 24 attendents \nwere split up in three groups, and each one was told to come back right before lunch with a sensible \nset of issues and positions. We were lucky the thing workded out so well, as we had a lot of very interesting \ndiscussions. As I did not attend all three subsection, most of this summary reflect reports from other \nattendees, and sometimes I don t even know what they mean with certain bullets. Anyway, it should give \nyou an impression of the kind of issues that were raised at the workshop. A rudimentary summary of the \nconclusions from the three groups is given here: o distribution. We came up with many general isssues \n(not limited to the financial domain), and few specific solution for our application area, Anyway, The \nissues directly influencing distribution of object in a financial domain that came up comprised: . a \nquickly changing market situation . attrition . 7x24 support Each of those three aspects directly leads \nto the need for distribution, or in some way influences distribution. A more general list of issues is \nformed by: . how about load balancing, maintenance, and monitoring. We need tools! . real-time. No delays, \nplease. . from two-tier towards three-tier architectures. . major goal: platform transparancy. . componentry; \nreuse at a higher level. . performance. Implementation specific aspects that came up were: . the web; \nJava. . CORBA vs IP (socket based) 211 Austin, TX October S-19,1995 . (distributed) Smalltalk versus \nC++ . OLE . Again, support tools????  o modeling challenges in large financial institutions. . enterprise \nwide business modeling . Top-down inititiatives. Not succesful! . Bottom-up inititiatives. Result in \nfragmentation. . Approach suggestions: . Education of executives ( buy in ). . Focused Business Objectives \nin context of enterprise framework. . Must have results to spread to other areas. . Patterns to seed \nnew projects . enterprise wide risk management. Drives cross-functional modeling initiatives: . Educate \nbusiness analysts in OOA&#38;D. . Force common methodology?? . Why has so much successful 00 development \nin large financial institutions been restricted to the OTC Derivatives business, especially interest \nrate instruments? . How to fit the detailed model s scope to the business cycle time. Reality constraints \n. 0 reuse. The reuse group came up with a nice table to offset the different aspects influencing and \ndefining reuse aspects: I what? I HOW'? I Examples? ------------+------------------+---------------+------------------ \n1 - common I enterprise intentionally Analysis I business 1 model I left empty representation 1 I - common \nI I abstractions 1 -__---___---+------------------+---------------+------------------ I - patterns I \ncatalogues of I - prob1em -' Design solution I - technology 1 design in notes I 1 focused model I I \n- Ideas i -toc1s ???? 1 ------------+------------------*---------------+---------------1 - Class I - \ncommon env. I -UI class lib. Code I - Part I - standards 1 -DB libraries I - Application i -class libs. \nI ------------+------------------+---------------+------------------ Issues: . must plan for reuse . \ncommon industry models (-> OMG special interest groups.) . organizational and cultural impacts. . sponsorships \nand vision . cost benefits and infrastructure projects . methodology and repository . people . heterogeneous \nenvironments . common toolset Addendum to the Procwdings OOPSLA 95 215  The afternoon After lunch \ntime, we went through the list of different issues and tried to put them all into one picture: analysis \ndesign ---------REUSE------------U1 classes code / I \\ DB classes -1 / I \\ common \\ abstractrions I \\ \nbottom-up? :/ Enterprise I I Modeling design I \\ top-down? I patterns I \\ \\ +------MODELING -+---OTC \nderivatives \\ I +---risk management \\ /I platform Education of executives independence /I \\ CORBA,IDL \n\\ / DISTRIBUTION ---quickly changing market I \\ /I \\ Tools for load balancing, monitoring... the web \n(Java) I 17x24 support From this picture we distilled three main questions, to be answered during the \nafternoon session: o What is a workable definition for reuse of financial objects? . real reuse in large \nfinancial institutions sadly only happens on an individual, personal basis. How can we extend reuse to \nreach a larger audience? . The P word . Is a design pattern catalogue the answer? Once determined, should \nit be mandated, should it be encouraged and suggested? . Most important aspect of reuse is organizational. \nInvolves identification and communication of reusable code. . Limiting scope of domain increases changes \nfor valuable reuse. Most people in the workshop seem to take a pragmatical approach towards reuse. Which \nis not surprising, considering our background. We want to concentrate on concrete objects, distinguishing \nit from the reuse hype. Simply abstracting an object does not work. Its relationships with other objects \nneeds to be considered (i.e., patterns). Business object are abstract. We don t like/understand them... \n o The Enterprise Model --or, how do we make a valid business case for 00 investments in financial institutions? \nObjectives of an enterprise model:  . Identify core objects and define distinct firm-wide objects, and \ndevelop a common understanding of these objects. Then, develop recurring design patterns. . Presentation \nof the model. . Allows us to manipulate the business, because we now understand it a lot better. We could \nidentify certain abstract objects, like position , however these yet undefined object should be representated \nas blank spots in our enterprise model, allowing us to proceed with the process. Individual application \nareas of the enterprise model would fill in the empty blanks, and instantiate the model for the particular \nbusiness. A top down approach does not work [remember, this is the opinion of technical people]. We should \nleave freedom in the design and do interpretation based on different applications. Agreed, this is a \npragmatic HACK, and not a generic solution to the problem. 216 Austin, TX October 1519,199s Certain characteristica \nand observation were that an enterprise model represents a high level. broadly scoped view of the enterprise. \nIts goal is stability over time. It is not meant to he a mold for implementing concrete code. No fundamental \nchanges in the way we do business are anticipated, right? o How to enforce common 00 standards and integrate \nlegacy systems in heterogeneous environments? First of all. let s consider different aspects of distribution \nmodels: . Assume: light-weight clients . Assume: heavy-weight server . We will continue to suffer from \nstandard wars. . How to solve expected network latency? . How to integrate TP monitoring like DCE? . \nHow to abstract interfaces, to make us independent of existing standards ? . Impementation independent \nanalysis models (templates) Windows NT is a target standard for desktops. How to integrate with existing/planned \n00 distribution standards? We should keep an eye on trends, watching the future... [seems a very empty \nremark, now that I type it in. It made sense during the workshop, though :-) 1. Question: How to use \nobject distribution in heterogeneous environments ! Answer: Simple, use abstraction of interfaces. A \ncommon problem that was identified was how to map business processes into objects??? This workshop lacked \na set of concrete results. That was anticipated, as it was the first one of its kind at a conference \nlike OOPSLA. Perhaps the workshop raised more questions than answers, and it certainly addressed the \nfact that the use of 00 technology in large financial institutions is not something one can cover in \nsimply one day at a workshop. It also shows that the use of 00 technology, especially when 00 modelin,,0 \nreuse, and distribution is concerned still needs a lot of time to mature. On-line version Submitted position \npapers can be found at: httn://home.navisoft.corn/neterl/oopsla~~.htm Atttendees Mamdouh Ibrahim EDS/OOAIS \nmhi@gmr.com Peter Lowes EDS Global Set, Ind. fignetO3.peterlQeds.com Martin Fowler independent consult.. \n100031.3311@compuserve.com Patrick Fitzaeralnd Morgan Stanley pfitz@ms.com - Paul Kritz - Export Developm. \nCorp. kriztoaQedc3.edc.ca Xavier Alvarez LifiaiUNLP -Argentina xavibinfo.unlp.edu.ar Richie Bielak CAL \nFP richieb@calfp.com Chris Brown First Union Nat. Bank ckb@vnet.net Sharon Lubert First Union Nat. Bank \nott@vnet.net Gabe Beged-Dov Rogue Wave Software gabe@roguewave.com Martin Buis Ernst &#38; Young Fin.Syst \n102114.1011@compuserve.com Cyrus Deyhimi BSG Alliance/IT Inc. Cyrus-deyhimi@nbtes.bsginc.com David Dixon \nErnst &#38; Young Fln.Syst dixond@ey.geis.com Micheal Kishinevsky Knight-Ridder Finance 73621.703@compuserve.com \nDavid Dnytryk Export Developm. Corp. 70612.1546@compuserve.com Chris Laffra Morgan Stanley laffra@ms.com \nGuy Rackham Goldman Sachs Doris Tyghe USAA doristighe@aol.com Steven Feldman Jump Start Systems sfeldman@intac.com \nJerry Tylman American Mamt. Svtems gerald~tylman@mail.asinc.com Gordon Sheppard American Mgmt. Sytems \ngordon-sheppard@mail.amsinc.com Kuan-Tsae Huang IBM huangkt@vnet.ibm.com Mikael Hammarlund Front Capital \nSystems mikaelh@front.se Tomas Stenlund Rebecca Burkey Front Capital.Systems. -.-.tireenwicn capital \nsyst. burkeyr@gcm.com tomass@front.se Addendum to the Procrrdings OOPSLA 95 217 \n\t\t\t", "proc_id": "260094", "abstract": "", "authors": [{"name": "Chris Laffra", "author_profile_id": "81100050141", "affiliation": "Morgan Stanley", "person_id": "PP31085837", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/260094.260284", "year": "1995", "article_id": "260284", "conference": "OOPSLA", "title": "Workshop 22: OO technology in large financial institutions", "url": "http://dl.acm.org/citation.cfm?id=260284"}