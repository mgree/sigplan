{"article_publication_date": "10-01-1995", "fulltext": "\n 00 Process and Metrics for Effort Estimation Organized By: Dennis de Champeaux, Onto 00 Simon Horner, \nOrigin UK Granville Miller, Northern Telecom Inc. Introduction Software development remains difficult \nto plan. Object-orientation has thus far not changed the picture. However due to the greater continuity \nin 00 across the life-cycle (objects everywhere), there is hope that 00 technology may improve the predictability \nof 00 projects. Last year s Prag- matic and Theoretical Directions in Object-Ori- ented Software Metrics \nworkshop found a division between the two camps: theoretic and pragmatic. Out of the pragmatic camp came \nan interesting revelation: software development remains difficult to plan. At least two ingredients are \nrequired to better plan SW projects. First, we need more detailed pro-cesses than what are currently \navailable (waterfall, spiral, fountain, clean-room, etc.). Intermediate milestones need to be an integral \npart of these new processes. Second, we need effort tracking and estimation metrics to measure progress \nand to rec- ognize earlier when unexpected roadblocks will be encountered. This workshop focused on these \nareas in a series of presentations and discussions of pragmatic solutions. The workshop was divided into \nthree sessions: effort estimation, lifecycle development, and met- rics selection and use. Summaries \nof the eight pre-sentations covering these three areas are given in this report. These presentations \nwere followed by a project estimation exercise in which the partici- pants were divided into teams. Each \nteam was given a set of requirements for the purpose of cre- ating an estimate of resources for the project. \n Effort Estimation Jeff Burgett and Brent Ohman (Evolving Systems, Inc.) Experiences with Object Based \nSoftware Development Effort Estimates and Associated Metrics The paper presented by Jeff Burgett and \nBrent Ohman provided a brief description of an object based, software development effort estimating technique, \nthe project tracking approach used to determine the quality of this technique, and the metrics used as \na basis for improving the esti- mates. This technique was based on two years of refinement of an estimating \nmodel based on the Object-Oriented Software Engineering system development approach. The effort estimating \ntechnique was based on the number of public behaviors in the domain object model, the complexity of each \nobject, and a weight assigned to each phase of the software develop-ment life cycle. The project estimate \nmodel allowed for an analytical and repeatable approach to estimating the effort required to develop \nsoft-ware for a given application. The technical and management staff worked together to establish the \nappropriate granularity of data for tracking and estimating projects within each phase of the devel- \nopment process. This data was applied to metrics used for process improvement. The following observations \nwere made after using this estimating technique. The effort estimating approach was repeatable and accurate \n(within 10%) since there was a good understanding of the application domain. Project tracking by development \nphase was effective, however tracking by individual object required too much project management and reporting \noverhead. The development and quality assurance teams should share ownership of the effort estimates. \nThe estimated versus actual number of Use Cases per system was not a valuable metric since the granularity \nof Use Cases vary widely. As a result the estimating technique was not effective for estimating requirements \nmodeling. The (1) ratio of the number of public behaviors in the domain object model used for the esti- \nmate versus the number of public behaviors in the final analysis model; and (2) ratio of the number of \npublic behaviors in the domain object model used for the estimate versus the number of public behaviors \nthat were imple-mented in the code were useful metrics for pro- cess improvement of this estimating technique. \n Future work in this area of effort estimation will include identifying patterns that occur in the appli- \ncation domain and broader use of reusable assets in order to assist in creating more accurate domain \nobject models and as a consequence reduce the risk associated with the staff hour estimate pro-cess. \nPhilip Haynes (Object Oriented Pty Ltd), Timm Menzies (Monash University), and Geoffrey  Phipps (Object \nOriented Pty Ltd) Using the Size of Classes and Methods as the Basis for Early Effort Prediction; empirical \nobservations, ini- tial application - a practitioners experience report The paper presented estimation \ntechniques which provided strong empirical evidence that it is possi- ble to estimate the total cost \nof a project within lo%, having only invested 10% of the total project budget. Additionally, estimation \ntechniques were provided which allow high levels of control over class / component level estimates. Both \ntechniques were derived by empirical observation of real object oriented systems. I believe the experience \nreport provides sufficient evidence to strongly sug-gest that the practice of empirical, scientific obser-vation \nas the basis of understanding object oriented software systems should be more widely practiced. To quote \nBrooks, We need to develop and publicize productivity figures, bug-incidence figures, estimating rules, \nand so on. The whole profession can only profit from sharing such data. [Brooks 951.  Fernando Brito \ne Abreu (INESC) MOORED: Model for Object Oriented Resource Estimates Determination Fernando could not \nattend the Oopsla conference so Dennis DeChampeau presented his material. The paper presented introduces \nsome advances towards the quantitative evaluation of design attributes of object-oriented software systems. \nHe believes that these attributes can express the qual- ity of internal structure, thus being strongly \ncorre- lated with quality characteristics like analyzability, changeability, stability and testability, \nwhich are important to software developers and maintainers. The MOOD (Metrics for Object Oriented Design) \nset includes the following metrics: Method Hiding Factor (MHF) Addendum to the Proceedings OOPSLA 95 \nAttribute Hiding Factor (AHF) Method Inheritance Factor (MIF) Attribute Inheritance Factor (AIF) Polymorphism \nFactor (PF) Coupling Factor (CF) Each of those metrics refers to a basic structural mechanism of the \nobject-oriented paradigm as encapsulation (MHF and AHF), inheritance (MIF and AIF), polymorphism (PF) \nand message-pass- ing (CF) and are expressed as quotients. The numerator represents the actual use of \none of those mechanisms for a given design. The denominator, acting as a normalizer, represents the hypothetical \nmaximum achievable use for the same mechanism on the same design (i.e. considering the same number of \nclasses and inheritance relations). As a consequence, these metrics: 1. are expressed as percentages, \nranging from 0% (no use) to 100% (maximum use); 2. are dimensionless, which avoids the often mis-leading, \nsubjective or artificial units that per- vaded the metrics literature with its often esoteric flavor. \n Being formally defined, the MOOD metrics avoid subjectivity of measurement and thus allow repeatability. \nIn other words, different people at different times or places can yield the same values when measuring \nthe same systems. These metrics are also expected to be system size independent. A partial demonstration \nof this assertion is included below. Size independence allows inter-project comparison, thus fostering \ncumulative knowl-edge. The MOOD metrics definitions make no reference to specific language constructs. \nHowever, since each language has its own constructs that allow for implementation of 00 mechanisms in \nmore or less detail, a binding for relevant languages is needed. Bindings and validation experiments \nwith C++ and Eiffel are currently under way. This expected, but yet to be proved, language independence \nwill broaden the applicability of this metric set by allowing comparison of heterogeneous system implementations. \nThe adoption of the Object-Oriented paradigm is expected to help produce better and cheaper soft-ware. \nThe main structural mechanisms of this par- adigm, namely, inheritance, encapsulation, information hiding \nor polymorphism, are the keys to foster reuse and achieve easier maintainability. However, the use of \nlanguage constructs that sup- port those mechanisms can be more or less inten- sive, depending mostly \non the designer ability. We can then expect rather different quality products to emerge, as well as different \nproductivity gains. Advances in quality and productivity need to be correlated with the use of those \nconstructs. We then need to evaluate this use quantitatively to guide 00 design. This set allows comparison \nof different systems or different implementations of the same system. Some design heuristics based on \na filter metaphor can be derived. It is hoped that those heuristics will be of some help to novice designers. \nObject-orientation is not the silver bullet, but it seems to be the best bullet available today to face \nthe pervasive software crisis. Keep-ing on the evolution track means we must be able to quantify our \nimprovements. Metrics will help us to achieve this goal. Lifecycle Estimation  Brian Foote (University \nof Illinois) A Fractal Model of the Lifecycle of Reusable Objects Brian felt that we should leave the \npredicting to Jean Dixon . Frameworks created from a broad range of domain requirements, evolved over \ntime, are the key to trimming development cycle time. His justification for this is that one program \nis eas- ier to maintain than five. He felt that there were many factors contributing to the difficulty \nof pro- grammer estimates including Parkinson s Law (people will fill the extra time that you give them) \nand the Montgomery Scott Gambit ( Captain, the warp drive repair will take two months, I can t possibly \ndo it any faster ). Satyaprasad Srinivas and John Mcgregor (Clem-son University) Test Process Metrics \nSatyaprasad looked at the use of metrics in a criti- cal area of the software development lifecycle, \ntesting. He linked some of Dave Abbott s work (BNR) in the area of psychological complexity [Abbott 941 \nwith the information loss metric [Voas 911 to predict the white box testing effort. Bjorn Freeman-Benson \n(Object Technology Inter-national) Thoughts on Helping Engineers Be Better Estimators Engineers can learn \nto estimate more accurately, but only if their errors are continuously observable and correctable, preferably \nself-correctable. Bjorn suggested using automated tools to collect data and query the engineers for self-analysis \nof why their estimates were incorrect. Metrics Selection and Use Rajendra Bandi, Dan Turk, and Vijay \nVaishnavi (Georgia State University) Object-Oriented Met-rics Selection and Use: Georgia StatelCOM- SOFT \nApproach COMSOFT has been continuously compiling an 00 Metrics Resourcebook with references to available \nmetrics. This set has been divided into two volumes: Managers Handbook and Devel- oper Handbook . The \nvolumes contain metric frameworks, metrics definitions, experience with metrics, tools, and an annotated \nbibliography. He also presented a new GQM framework and dis- cussed desirable and undesirable trends \nand pat- terns in the graphs of metric information. Addendum to the Proceedings OOPSLA Russel Winder \n(University College) The Up and the Down Sides To Project Management? Russel presented a new view of \nsystem develop-ment, that of a knowledge based approach. This is in contrast to the Tayloristic approach \n(the down side of project management), an approach that views people as flexible robots requiring control. \nThe Tayloristic approach is, in Dr. Winder s opin-ion, enforced by quality initiatives such as IS0 9000x \nand BS5750, where quality processes imply quality product. Project management creates an adversarial \nrelationship between managers, cus-tomers, and developers. Russel understands the need to metricate, \nbudget, manage, and support worker tasks (the up side of project management). However, he feels that \nan open environment where knowledge is a shared commodity (with both cli- ents and developers) is a better \nproject manage-ment process and ensures quality development. Team Project Management Exercise The group \nwas broken into teams of four to pro- vide a resource estimate for the development of an inventory system \nfor a chain of shopping centers. A loose set of requirements in the form of a pro- cess and analysis \nobject model were given to each group. A presentation of the resources necessary to complete the project \nwas the expected result. Each group presented its results and all felt that due to the shear size of \nthe project, further study was warranted. However, each group ventured an estimate using their favorite \nsoftware application estimating technique. The estimates were surpris-ing close even though it was generally \nagreed that this field is still relatively immature. Conclusions The workshop provided two schools of \nthought on the management of software projects. The first school is characterized by the presentations \nof Brian Foote and Russel Winder who believe that a change in paradigm is required to allow a software \napplication to mature. External forces such as cus- tomers, management, funding, etc., should become \npart of the software development process in an environment that is conducive to communi- cation and change. \nThis view is in line with the management philosophy of learning organiza-tions [Garvin 931. The second \ncamp, characterized by the presenta- tions of Philip Haynes and Dennis dechampeaux, believed that effort \nestimation is a predictable pro-cess that can be accurately measured. Philip felt that many of the elements \nof modern process the-ory might be better applied to software engineer-ing. However, both Dennis and \nPhilip realized that more work is required to improve existing meth-ods of software estimation. Participants \nRajendra Bandi rbandi@gsu.edu Sharmila Bristol bristol@bnr.ca Fernando Brito e Abreu fba@scallabis.inesc.pt \nJeff Burgett JeBu@aol.com Gary L. Craig craig@cat.syr.edu Dennis de Champeaux ddc@netcom.com Brian Foote \nfoote@p300.cpl.uiuc.edu Bjorn Freeman-Benson BNFB@otivic.pinc.com Jerry Hamilton jerryh@netcom.com-Philip \nHaynes p.haynes@oose.com.au Simon Horner Simon.Homer@ dial.pipex.com Melissa Major major@cs.clemson.edu \nGranville (Randy) Miller gmiller@ bnr.ca Maurizio Morisio morisio@polito.it Amit Nandi anand@ bnr.ca \nBrent Ohman beo@evolving.com Roderick Olafson rolafson@ conandum.com Satyaprasad Srinivas satya@cs.clemson.edu \nStephen Schach srs@vuse.vanderbilt.edu Dan Turk dan.turk@gsu.edu Martin West a~martin~west@ uk.ibm.com \nRussel Winder R.Winder@cs.ucl.ac.uk Bibliography [Abbott 951 David Abbott, A Proposed Design Complexity \nMetric For Object-Oriented Develop-ment , TR 178, Department of Computer Science, Clemson University, \n1994. [Brooks 951 Fred Brooks, The Mythical Man- Month, Addison-Wesley, Reading, Mass., 1995. [Garvin \n931 David Garvin, Building a Learning Organization , Harvard Business Review, July-August, 1993, p.78-9 \n1. [Voas 911 J. Voas, L. Morell, and K. Miller, Pre-dicting Where Faults Can Hide From Testing , IEEE \nSofbvare, 8 (2), p. 41-48, March, 1991. \n\t\t\t", "proc_id": "260094", "abstract": "", "authors": [{"name": "Dennis de Champeaux", "author_profile_id": "81100265123", "affiliation": "Onto OO", "person_id": "PP31034638", "email_address": "", "orcid_id": ""}, {"name": "Simon Horner", "author_profile_id": "81332504905", "affiliation": "Origin UK", "person_id": "P265446", "email_address": "", "orcid_id": ""}, {"name": "Granville Miller", "author_profile_id": "81332515816", "affiliation": "Northen Telecom Inc", "person_id": "PP31086791", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/260094.260268", "year": "1995", "article_id": "260268", "conference": "OOPSLA", "title": "OO process and metrics for effort estimation", "url": "http://dl.acm.org/citation.cfm?id=260268"}