{"article_publication_date": "10-01-1995", "fulltext": "\n Object Oriented Project Management Moderator: Laura Hill, JP Morgan, hill-laura@jpmorgan.com Panelists: \nDoug Johnson, Rothwell International, doug@rwi.com Kenny Rubin, IBM Charles Berman, Fidelity Investments \nJim Coplien, AT&#38;T John Daniels, Object Designers  1. Introduction The purpose of this panel was \nissues of project management obiect-oriented projects. Topics included: - . How is object-oriented Management \ndifferent? Is a to address specific to considered Project paradigm shift required for project management? \nWhat aspects of object-oriented project management should be stressed? What are some tips, tricks or \ngotchas experienced by the panel members? . Does a project manager need to be more technical to lead \nan object-oriented project? Should s/he have had previous experience with object-oriented development? \nWhat are some alternate organizational structures which would better support object-oriented projects? \n 2. Presentations Doug Johnson Doug Johnson talked about variations of 00 project management techniques \ndue to project size. He found that they varied Ltd, jdaniels@cix.compulink.co.uk radically -big projects \nin requiring process. was the management He said different projects process, object particular more paper, \nformality and The major mistake he reported application of small project techniques to large projects. \nthat 00 projects were essentially no than any other kind of project. All need written requirements, design, \nwritten schedule, standards, a good model, and reviews of all the deliverables. For small projects (less \nthan 5 developers), Doug reported that iterative development works very well. Each iteration has to have \nwritten requirements, written goals and a written schedule. Code management can be done without tools. \nFor medium sized projects (5-20 developers), Doug suggested starting with a small (1 -5 developers) team \nto stabilize requirements and develop the core object model. This core team can then go on to become \nthe system architect and team leaders for the expanded team. This allows the project to get running early \nand then grow the function base system. Code management tools are definitely required with this size \nteam. For large (greater than 20 developers) projects, Doug felt that a modified waterfall was required. \nAgain, he suggested starting with a small team to get a very solid design before full staffing. Changing \nthe design causes problems when communications and deep understanding of the change need to go out to \na large number of people. The problems of large projects focus on communication. The system and staff \nmust be organized into meta objects -subsystems of class groups with well defined interfaces. Each subsystem \nis owned by a team of 2-5, with individuals owning classes. A lead architect is required to maintain \nsystem integrity. In a large project, the lead architect might have a team of two to three people. The \nlead architect role is as important as the project manager role, and should, in fact, report to the same \nperson. The key to organizing system and staff is to think about them at the same time -Doug reported \nthat he often found he had to compromise technical issues to meet people issues, which are more expensive. \n-  Kenny Rubin Kenny concentrated his presentation on discussing the many kinds of project that need \nto be addressed by an organization in order successfully to transition to object technology. He introduced \nthe idea of a decision framework -much as a software framework is a collection of abstractions that form \nthe basic concepts of a particular domain, a decision framework is a collection of the core ideas necessary \nto address a particular topic area, such as training, reuse or a development process model. Kenny defined \na project as a set of activities that move you from one place to another on the way to achieving a desirable \nstate. Any given organization will have a number of such projects. Here are some of the projects you \nll want to consider: Selecting the product process mode . Selecting a reuse process model Identifying \nhow you will plan and control a project Defining the team structure Selecting the software development \nenvironment Transferring skills to staff members . Establishing a formal process of software measurement \n More details on these decision frameworks may be obtained from the book Kenny co-authoured with Adele \nGoldberg, Succeeding With Objects: Decision Frameworks for Project Management Charles Berman Charles \ndiscussed the technology choices made at Fidelity in light of the business constraints and technology \nvision they had. He focussed on the components, frameworks and patterns they instantiated and the factors \nthat allowed them to achieve reuse. Lastly, he discussed lessons learned. The main business driver for \nFidelity is the constantly changing nature of the business. This implies that applications, which directly \nrelate to business entities and processes, also change rapidly. To handle this, they center their software \ndevelopment around small teams (3 -6 developers) and short, 3 month, delivery cycles. Technology-wise \nFidelity uses a three tier architecture with a componentized object model in the middle tier and a CORBA \ncompliant backbone as the distributed environment. The front end (OLE on the desktop and the world wide \nweb) is an external requirement. The desire for reuse and a requirement for small teams that can act \nquickly suggested a strategy of binary executables as the unit of reuse. This strategy contained very \nlittle coupling between components -decoupling being the number one productivity indicator. Rather than \nstruggle with a large, centralized object model group, Fidelity has focussed on design reuse across the \nfirm with a conceptual business object model and the use of design patterns. The use of patterns have \nproven to be a great way of explaining how behavior can be added to the conceptual model. Within the \nteam, reuse may be obtained via old fashioned inheritance and software frameworks. Charles identified \nfour major factors for achieving reuse: . Buy rather than build Reuse the legacy Make the code easy \nto acquire Trivialize the cost of component integration  Jim Coplien Jim s premise was that there is \nno significant difference between 00 projects and standard software development projects. The trappings \nof 00 projects, such as iterative development, really have nothing to do with objects. He has found that \nall successful development projects adhere to the same organizational patterns. His own analysis orientation \nis to look at the organizational architecture -the things in systems and the relationship between the \nthings. Iterative development is special -but not specific to 00. It s something that is often hidden, \nbut is actually how developers work. Jim pointed out that our old models for software development and \npractices come from the industrial revolution or from the military and that it is time to get new models, \nwhich more accurately reflect software development practices. Realistically, most projects require multiple \nparadigms and it is the grouping that needs to be managed. The bulk of project management is risk management, \nand the biggest current risk in the 00 world is tools. However, Jim feels that as 00 technology matures, \nthe need for explicit 00 project risk management) will;yygent (ie  John Daniels John spoke of his experience \nbeing called in to help projects in trouble , commenting that the trouble was nearly always to do with \nthe way the project was organized, managed and run, rather than to do with any particular technology. \nAll issues are about managing risk -identifying risk and then controlling it. The following four quotations \nare some of the warning signals you might look for, and John s answer to them: I always use incremental \ndelivery. We re going to design the object model this cycle, and then we ll implement the business object \nclasses in the next Evolutionary delivery is the best way of managing, controlling and reducing risk, \nbut the above isn t evolutionary delivery. Each cycle must actually deliver something -some executable \ncode that you can test and that works. The above is just a waterfall. I don t know much about objects, \nso I ve told them to use OMT -after all, it is the leading method, isn t it? Every project manager must \nunderstand the technology being used on their project. Although a knowledge of design techniques is very \nhelpful, blindly following a particular method can become a crutch and will be of no help. Risk management \nmeans identifying the risks and addressing them, not putting them off and avoiding. * Now we re happy \nwith the business model, we ll start thinking about the software architecture (or We don t need to try \nout the database until later ) It s never too soon to start work on the technical/software architecture, \nfor it is in those details that the project will succeed or fail. It s imperative that you try out all \nyour technology pieces as soon as possible. My chief architect wants to know how you indicate pure virtual \nprotected function on an OMT diagram The point of modeling is to produce abstract models. It s no use \nwriting the code in pictures . All too often people are producing models at way too low a level. The \nresult is that all too frequently the high level design isn t written down at all meaning that there \nis no easy route for newcomers to understand how it works. 3. Questions and Answers Question: What has \nbeen your experience with decentralized development? Doug: Decentralized development requires lots of \ncommunication. My rule of thumb is to establish as high a communication bandwidth as possible and use \nas little of it as necessary. Need a lot of personal commuting. Jim: It s important to look beyond surface \nreasons to underlying causes. For example, look at conference calls across the Atlantic --the energy \nlevel and motivation differ between the early morning of one group and the almost time to go home of \nthe other. We must go beyond the cultural things which are often used as an excuse for failure. Question: \nHow do you manage a project which is really enhancing the total resources of the firm, but which may \nbe seen by management as a new application? Charles: Structure a set of discreet user-visible deliverables \nsather than an infrastructure project. Component based delivery offers a good paradigm for structuring \nthese kinds of deliverables. Components offer new functionality iteratively without building new applications. \nNew applications are heavyweight things and can be big risk producers -involving retraining users and \nsupport and being cognitively disruptive for users. Components add the functionality the users want without \nforcing them to learn a new desktop. Kenny: There isn t one kind of application development project. \nEven within one customer we ve identified many different kinds of projects. You can t draw one grand \nunified strategy for managing these projects, you need strategies for defining how you would handle each \nindividually. Question: There was a comment this morning that software engineering has failed -which \nreceived resounding applause from the audience. The panel has largely described standard software engineering \npractices applied to 00 and yet computer science departments don t teach software engineering. What s \ngoing on? Jim: I cannot reconcile the good practices that I see with anything that comes out of software \nengineering. I don t see it practiced the way it says in books. If you look at how productive teams work \nit s as applicable to 00 today as to other paradigms in the past and it may not have much to do with \nwhat we re calling software engineering. Doug: It s not software engineering that has failed but application \nof it that has failed. There are a number of books on 00 or traditional project management -you can take \nany one, follow it, and do better than most project managers do today. The problem is that project management \ntechniques are not taught. Question: In practical experience, how do you find the mechanism of synchronizing \ndesign models? What do you do in reality? Charles: We are pursuing a business model that serves as a \ncatalog for everyoneis understanding, but supports many implementations. We pulled back from close coupling \nbetween the analysis model and all its representations. The organization has many moving parts, including \nnew development and legacy attempting to put everyone in ilock stepi simply locks everyone. Decoupling \nis the way for everyone to go about their business. Kenny: Most people are looking for the grand unified \ntool solution but I haven t seen any. Some people try to avoid the problem by turning an inter-project \nreuse problem into an intra-project reuse problem by expanding the project boundaries to avoid the need \nfor later synchronization. This quickly turns into enterprise modeling. Question: How do we get our clients \nto focus on a value-produced model, rather than a cost-based model? John: It s next to impossible to \ndetermine the cost of things. People are always willing to invest if they can see a return. We need to \nconcentrate on giving them the return and letting them measure it for themselves. Evolutionary systems \nhelp because they get stuff earlier. It s difficult to determine the order of things to construct -we \nare often thinking in terms of the best political order, rather than the best technical order. The trust \nand confidence of project sponsors must be uppermost in the mind of project managers. Question: How do \nwe analyze our enterprise such that we can use the analysis models as a high level description without \ngetting stuck in analysis-paralysis? Charles: Enterprise analysis L fundamentally a different level d \nf abstraction than working on a single project model. The goals of an enterprise analysis should be: \nto gather use cases, identify classes and patterns, standardize nomenclature, and identify relationships. \nStep away from large inheritance based reuse since classes appear differently for different applications. \nStep away from an attributed analysis model -it s too low level. A common understanding at a high level \nof abstraction is a good anchor point for a catalog for understanding why so many different versions \nexist. Kenny: You have to be willing to take the risk of being wrong and rely on the technology available \nto be pliable enough so that you can recover. You can t live in fear that you re not building the most \nreusable component. You have to go on and then revisit if you need to. Doug: Reusable objects are discovered, \nnot invented. Organizations that have tried enterprise modelling have either dropped into analysis-paralysis \nor built something so complex that no one can use it. Question: Doug said that large projects have to \nhave a modified waterfall process. Do the other panel members agree? John: I don t agree. Obviously size \nhas an effect -size makes planning an evolutionary process much harder. I just don t get involved in \nprojects that are too big. At some point, the large size increases risk to the point of being unacceptable. \nAn organization should have less ambition and less risk. Jim: There are other factors besides size, such \nas rigid or demanding markets. The market may often demand well-timed benchmarks. Needing to plan to \nslot projects into multi million dollar infrastructures doesn t lend itself well to iterative or incremental \ndevelopment. However, you can often keep the customer happy with a waterfall on top and another process \nunderneath with some kind of mapping. Question: The new books on 00 project management suffer from a \nlot of the problems of early object texts -at the platitude level, all is obvious -but trying to implement \nthese things and getting to the proper level of detail is very hard. Especially getting a lot of centralized \nchokepoints -you either go for a centralized model -or a decentralized model that needs lots of reconciliation. \nJim: Organizational patterns try to attack that -they tell you very specifically what to do. What s missing \nis the big picture -but it will say if you have this problem, try this. Kenny: You ve pointed out two \nextremes - the entire process is either centralized or de-centralized. In practice, we see something \nin between. When you start off a project -if its large, you ll want to partition it. How could you be \nsmart enough at the beginning of a project to do a good partition? You must start some analysis to get \na big enough picture to allow you to partition it up to begin with -with the understanding that couplings \nwill be limited to interfaces. You can combine the best of both. Doug: You don t learn much of anything \nfrom books -you must go in and try. Charles: Software architecture does have a strong impact on the effectiveness \nof an organization, so divide organizational strategies according to architecture scaleability. Code \nreuse is much easier in small groups, so organize people into small groups with related class deliverables. \nComponents, patterns and design reuse scale up well, so have a component based delivery architecture \nfor the organization with a pattern-based analysis model for centralized understanding of the business. \n \n\t\t\t", "proc_id": "260094", "abstract": "", "authors": [{"name": "Laura Hill", "author_profile_id": "81100454337", "affiliation": "JP Morgan", "person_id": "PP31081490", "email_address": "", "orcid_id": ""}, {"name": "Doug Johnson", "author_profile_id": "81332507109", "affiliation": "Rothwell International", "person_id": "PP31083350", "email_address": "", "orcid_id": ""}, {"name": "Kenny Rubin", "author_profile_id": "81100267648", "affiliation": "IBM", "person_id": "PP31094945", "email_address": "", "orcid_id": ""}, {"name": "Charles Berman", "author_profile_id": "81332489979", "affiliation": "Fidelity Investment", "person_id": "PP31072418", "email_address": "", "orcid_id": ""}, {"name": "Jim Coplien", "author_profile_id": "81100241805", "affiliation": "AT&T", "person_id": "PP14093302", "email_address": "", "orcid_id": ""}, {"name": "John Daniels", "author_profile_id": "81100401897", "affiliation": "Object Designers Ltd.", "person_id": "PP31075825", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/260094.260251", "year": "1995", "article_id": "260251", "conference": "OOPSLA", "title": "Object-oriented project management (panel)", "url": "http://dl.acm.org/citation.cfm?id=260251"}