{"article_publication_date": "10-01-1994", "fulltext": "\n Report on Panel: Methodology standards: help or hindrance? held at OOPSLA 94, October 1994, Portland, \nOregon Prepared by David E. Monarchi and Brian Henderson-Sellers with panelists Grady Booth, Brian Henderson- \nSellers, Ivar Jacobson, Steve Mellor, Jim Rumbaugh, and Rebecca Wirfs-Brock Abstract: The proliferation \nof methodologies has prompted some to call for standards in this area. The members of this panel, all \nprominent methodologists, stated their positions on this topic and then answe red questions from the \nfloor. Following brief introductions by the chairman (Monarchi), each panelist made a brief position \nstatement. Grady Booth started by looking backwards at structured analysis and design in order to learn \nfrom the past. He noted that even in this older approach to software development, there were identified \ngaps and incomplete convergence. However, he was more optimistic for object-oriented analysis and design \nbecause, he argued, we know at least some of the things that work and some that don t. Booth noted a \nsubtle shift in the last 12 months in which engineering issues were being addressed to yield a simple \nsolution. This implies a growing maturity in 00 methodologies. He stated emphatically that there should \nnot be a methodology convergence in terms of standards. Forcing a standard would be contradictory to \nour aims. We can standardize notation, but process is a little way off. -----------------se -_--_-------------- \nThe second speaker, Brian Henderson-Sellers, started with a brief overview of what a methodology should \nbe: it should cover the whole lifecycle; provide process support; embody a general underlying philosophy \nregarding the degree of iteration necessary when using OT (as well as guidelines to management); provide \nspecific and detailed management and technical techniques including discussion of roles played within \nthe project team; delineate deliverables (type and timing); support a hierarchy of abstraction levels \n(e.g. class, subsystem, pattern); embody the notions of contracting; and offer an overlay of complexity \nmanagement techniques (e.g. layering, sheets, subsystems, selective visibility). A methodology should \nnot be seen as a cookbook but as a guide or roadmap which provides the ground rules rather than the implementation \ndetails with all their potential variability. So rather than setting standards, a better approach would \nbe to seek interoperability and to identify a meth(ldologica1 core . This core would not necessarily \nbe a common denominator of today s approaches, but instead would identify for industry and CASE vendors \na minimal functionality desirable for all 00 methodologies. This will assist everyone in developing the \ntools to help OT grow from the current < 5% to > 50% of software development. As an added benefit, such \na core would encourage the creation of new ideas in this still rapidly maturing field, rather than stifling \nnew research. An analogy to illustrate this notion of a core involves passenger cars. Rolls-Royce and \nVolkswagen produce markedly different vehicles serving different markets. Yet if you know how to drive \none, you know how to drive the other. There is a shared functionality, a core, yet there is also a great \ndeal of flexibility in the implementation and extension of that core. In a similar manner, different \nmethodologies can be the same yet have dramatically different realizations. The core we seek is my proposal \nhere today: COMMA: the Common Object Methodology Metamodel Architecture ; which could eventually lead \nto COMMA-compliant methodologies. COMMA will provide a framework in which borrowing and convergence can \noccur in a rational and structured way. ____------__-_----- _____-----__-_----- Steve Mellor next took \nthe podium. He suggested that convergence or conflict? was a moot question: there is going to be convergence. \nIt is already happening; the market wants it. So the question is really how and what is good and bad? \nThere are four fundamental dimensions to a methodology: notation, semantics, techniques, and process. \nAgreement can be achieved relatively quickly in notation. (The trend is already in that direction.) Techniques \ncan and are being borrowed (e.g., use cases), so convergence there will continue. The principal areas \nfor concern now are the semantics of the terminology and process. The system lifecycle is a fundamental \nissue. Convergence may be expected on two poles: elaboration and translation. An elaborative lifecycle \nis iterative and incremental, but proceeds sequentially through analysis, design, and implementation. \nA translative lifecycle involves concurrent analyses of the application and software and then construction \nof a translation engine to bring them together. _---------__------- Jim Rumbaugh noted that since he \nhad the luxury of being between jobs (his move to Rational had been announced only a couple of weeks \nprior to this panel), he had no slides and would not make a major presentation, but instead would leave \ntime for the audience. He suggested that anyone coming to a panel to see a fight between panelists would \nbe disappointed. Rather he wished to acknowledge that he had taken ideas from everyone on the panel and \nvice versa, and that consequently things were coming together. He considered it better for the authors \nof the methodologies to direct this methodology evolution rather than to allow some outside standards \ngroup not intimately involved in developing methodologies to do so. This latter route had been tried \nand had failed. Rumbaugh closed with his bottom line : convergence is going to occur. It will probably \ndo so along a number of lines and, overall, that is probably for the best. ____------_-_------ Rebecca \nWirfs-Brock noted that she agreed with Steve Mellor more than she had suspected in that she also regarded \nprocess as fundamental and the area of the most differences among the current methodologies. Within iterative \nmethodologies, there are different slants, The ordering and activities may be different even if the end \nresult is the same. In Responsibility Driven Design (RDD), there is not only a set of processes but also \nguidelines for design. What is really important is mo ieling behavior in collaboration with other objects, \nidentifying what role(s) any object/class plays, and specifying how it cooperates as a fundamental activity. \nThis changes the focus from data and structural relationships to the more important one of roles and \nresponsibilities --a different process focus. A methodology which is a union of all good ideas may be \nunwieldy and impossible to achieve. Rather we need alternative road maps. Currently, two important groups \nof issues have been identified: patterns, architectural and control strategies; and techniques to interface \n00 to non-00 systems. All of these must be considered in any standardization on core concepts. Rebecca \nfinished with a challenge to CASE tool vendors to provide different perspectives as people examine the \nsystem model from different viewpoints. -_-------------~~~~ Ivar Jacobson drew the audience s attention \nto his last year s editorial in the Journal of Object-Oriented Programming in which he urged a cease \nfire in the methods war. He received much support for these ideas and several meetings have been held \nover the past 12 months. So why has there been no cease fire? He argued that each method has a guru behind \nit -a leader who tries to enlarge the group adopting that technique and notation. He observed that each \nmethodology is described in a book which has less than 50 pages of substance (plus an introduction and \nexamples), and which typically takes a greenfield approach. The books are rich in notation but poor in \nsemantics: paper products only. Methodologists put their ideas in books and get those books into print \nas fast as possible. Indeed, some ideas are not extensively field tested, and may even have surfaced \nwhile the book was being written. But apparently this hasn t been a problem for the public; the methodologist \njust change the book to reflect new information or ideas, and, if the change is big enough, the book \nwill continue to sell. This has led to two types of people on the methodology scene today: methodologists \nand people who compare methods. The latter have a difficult task, and Jacobson has a high respect for \nthem. They simplify and classify methodologies by using check boxes . This leads to methodologies which \nare check box driven e.g. aggregates, inheritance, delegation, and so on. A couple of years ago, there \nwas no check box for use case, so Jacobson noted that he had nothing at all to enter there. Now there \nis a new trend of adopting one another s ideas. To converge is very important. We have worked together \nand danced together . Methodologists extend their own approaches with material learned from one another: \nmetrics, project management, process, layered architectures, patterns and frameworks, business modelling, \nand so on. However, there is always the risk of creating method elephantiasis . Not a good idea. There \nare two messages here. Jacobson noted that he strongly believes in standards and strongly believes we \ncan and should create an 00 methodology standard. A great deal of experience has accumulated, and since \nmethodologies are used by thousands of people, there is a global responsibility to provide a good, standardized \nand readily usable product. However, much of this acceptance testing should be done by members of the \naudience, the practitioners, and not the methodologists. Jacobson noted that his approach of the potential \nvalue of metamodelling was close to the COMMA ideas proposed earlier on the panel by Henderson-Sellers. \nThe creation of this metamodel core would relieve the methodologists from the obligation to create standards \nand permit them to continue to advance the technology. Standard creation and testing can be done by others. \nThe final message was that Jacobson hoped that in OOPSLA 1995 there would be another panel with this \ntopic, but that panel should be composed of practitioners. This concluded the initial presentations by \nthe panelists, and the discussion was opened to questions from the floor. ***** Question from the floor \nPractitioner: This is a CASE tool not a methodology issue. Comments please on the need for strong guidance \nfor CASE tool vendors. Wirfs-Brock answered that she was keen to give advice and does so - not only on \nnotation but also on patterns. Rumbaugh noted that the methodologists job was to come up with core ideas. \nHowever, there is a need to use tools and that may bring up issues in itself. Tailoring core, public \ndomain methodologies to specific organizations to create their handbooks is not the job of a methodologist. \nJacobson urged taking greater responsibility than is current done by incorporating process and not just \ntools, which simply portray many notations. Henderson-Sellers noted that there may well occur two way \ninteractions between CASE tools and methodologies. That is, ideas need to be tested in CASE Portland, \nOR October 23-27,1994 tools, and the availability of new tools often suggests directly to provide a cklnbination \nof code generation new ideas. and high level view representation. Mellor suggested it is possible to \nhave a standard for each methodology by providing an OOA of the method s OOA for the CASE vendors. He \nnoted also that this is possible only if the method is formally defined, as is the Shlaer-Mellor approach. \n***** Question from the floor Derek Coleman (Hewlett Packard). I have done some work on convergence. \nI have heard today that convergence is a good thing, but it is not happening. I suggest we need to prioritize \nuser needs, set technology objectives, lay out a technology roadmap for the next 5-10 years, and then \nset out to create a methodology to meet those standards. Monarchi: What was the question? ***** Question \nfrom the floor Don Martin (practitioner): What is the panel s opinion on code generation and reverse \nengineering from CASE tools? Wirfs-Brock started the panel response by noting that this was a very good \nquestion. Some CASE tools do generate code, but they need to supply a lifecycle which is iterative and \nnot simply one-off code-generation. Booth noted that in the past we have had islands for code generation. \nAny 00 methodology should be bolted firmly to an underlying implementation language. We do that today \nwith the notion of round- trip engineering. Booth agreed with Wirfs-Brock on the importance of patterns \nand libraries. Rumbaugh agreed that it was a great thing to generate code. He was warmly received by \nthe audience when he stated that he didn t want to have to write C++ code any more than necessary. He \nagreed that tools can remove many of the problems of a language like C++, and he accepted the need for \nreverse engineering now. But in the long run, he said, we should not try to return to assembly coding \nbut to use CASE tools Booth agreed that this was true for the long term. But in the short term, reverse \nengineering must be performed. He would like to see visual programming in which Smalltalk and C++ are \nits assembly languages. Jacobson observed that code generation is not trivial. It is very difficult to \nintegrate frameworks into a design tool. So we need more CASE tools from implementation to design. But \nthis is a difficult and an area in which many of companies are currently working. ***** Question from \nthe floor Carl Frank (consultant and practitioner): Booth said that scenarios are good. Mellor said use \ncase are worth adopting. I am reminded of a BO session last night in which we discussed the differences \nbetween the two. The practitioners present at that meeting agreed that a scenario is a single thread \nand a use case is generic and identifies all pertinent alternatives. This suggests that scenarios and \nuse cases are not the same thing. Jacobson stated that a scenario is a use case instance. Booth agreed, \nas did all the other panelists implicitly. ***** Question from the floor Don Firesmith. It is also time \nfor methodologists to move on. To consider, for example, reuse. 00 methodologies don t address reusing \nreusable things. Booth noted that frameworks/patterns add tremendous value. Jacobson said he was really \ndisappointed about the lack of reuse. 00 enables reusability. However, reusable code is not the issue. \nThere is a noticeable lack of support for higher level artifacts. We need to focus on business objects \nand other non-basic things. Henderson-Sellers said that he and Julian Edwards have been focusing on \nincorporating reuse into their methodology, MOSES. Part of that requires the consideration of project \nmanagement as well as organizational structure and culture issues. Technically we know how to do reuse. \nHowever different corporate cultures can demand different strategies to be effective. Mellor cited the \nneed to be able to identify clusters, patterns, and so on. We need to reuse analysis, but what does this \nmean? We need to reuse analyses, but how can we operationalize this, how can we sell analyses? One appealing \npossibility is to capture the analysis in a CASE tool. Then it can be reused in other applications, and \neven sold. Wirfs-Brock commented that there are many different levels of reuse. Infrastructure and domain \narchitecture are already being reused. Our goal is higher level business reuse. So we need to be clear \nwhat level we are addressing with the term reuse . ***** Question from the floor Practitioner: Wirfs-Brock \nsaid that the methodologies of the future reside here in these methodologists and it s just a matter \nof finding the core. At the same time, the methodologies are apparently still rapidly evolving (e.g., \npatterns, prototype based languages, constraint programming, multi-paradigm programming, etc.). Does \nthis plethora of evolution put a brake on convergence, and isn t it likely that future methodologies \nmay be radically different from today s? Rumbaugh. There can be no single standard since that would be \nobsolete once it was out. We don t need to put a brake on our activities; rather we need to move fast \nand then move on. No one on the panel claims to have all the answers. ***** Question from the floor Practitioner: \nWhat have you found out that you did wrong since your book was published. Booth stated that he had focused \ntoo much on notation and not enough on process. Henderson-Sellers observed that his and Edward s book \nhad not been out very long. Many of the wrongs were identified before publication, but there are still \nholes in it, e.g., client-server and OODB/RDB. These are now plugged. Mellor felt that the biggest mistake \nwas to write books that were complete descriptions of a small number of steps in the overall process, \nsuch as an object information modeling book, then a dynamic modeling book, and then a design book. Instead, \nit would have been better to follow other authors and write one book covering the whole lifecycle, and \nthen rewrite it again and again. He also said that the entire translation process should have been explained \nbetter and sooner (in the text) instead of assuming it was understood. Rumbaugh felt that there was not \nenough design for the design phase, that he made the functional model too much like structured analysis, \nand that he didn t explain the connections between the three models well enough. Jacobson wryly commented \nthat he hadn t published soon enough. Portland, OR October 23-27, 1994 \n\t\t\t", "proc_id": "260028", "abstract": "", "authors": [{"name": "David E. Monarchi", "author_profile_id": "81100003441", "affiliation": "", "person_id": "P62989", "email_address": "", "orcid_id": ""}, {"name": "Brian Henderson-Sellers", "author_profile_id": "81100023488", "affiliation": "", "person_id": "PP14021169", "email_address": "", "orcid_id": ""}, {"name": "Grady Booch", "author_profile_id": "81100557878", "affiliation": "", "person_id": "PP31072894", "email_address": "", "orcid_id": ""}, {"name": "Ivar Jacobson", "author_profile_id": "81100030692", "affiliation": "", "person_id": "P117558", "email_address": "", "orcid_id": ""}, {"name": "Steve Mellor", "author_profile_id": "81100022477", "affiliation": "", "person_id": "PP14020874", "email_address": "", "orcid_id": ""}, {"name": "Jim Rumbaugh", "author_profile_id": "81100637433", "affiliation": "", "person_id": "P140567", "email_address": "", "orcid_id": ""}, {"name": "Rebecca Wirfs-Brock", "author_profile_id": "81100400353", "affiliation": "", "person_id": "PP17001255", "email_address": "", "orcid_id": ""}], "doi_number": "10.1145/260028.260114", "year": "1994", "article_id": "260114", "conference": "OOPSLA", "title": "&#8220;methodology standards: help or hindrance?&#8221; held at OOPSlA 94 October 1994, Portland, Oregon: Report on panel", "url": "http://dl.acm.org/citation.cfm?id=260114"}