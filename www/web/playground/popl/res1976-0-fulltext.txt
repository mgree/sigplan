the influence of productions on derivations and parsing extended abstract benton l and computer science department the pennsylvania state university university park pa abstract the concept of grammar forms provides evidence t h a t there seems to be no way to base the d e f i n i t i o n s of many grammar types used i n parsing and compiling s o l e l y on the concept of productions s t r i c t i n t e r p r e t a t i o n s as introduced in of unambiguous or lrk grammar forms generate unambiguous or lrk languages r e s p e c t i v e l y this is not true in the case it is decidable whether a strict i o n of an unambiguous grammar form is unambiguous for any two compatible s t r i c t i n t e r p r e t a t i o n s g and g of an unambiguous grammar form i t is decidable whether lg finite or infinite for every grammar form f there e x i s t s a grammar form f such that the f a m i l y of f under u n r e s t r i c t e d i n t e r p r e t a t i o n s is equal to the f a m i l y of f under strict interpretations i introduction the d e f i n i t i o n s of most grammar types t h a t are used f o r parsing and compiling depend on the concept of a derivation for example the definition of an lrk grammar depends on rightmost i o n s w h i l e the d e f i n i t i o n of an grammar depends on l e f t m o s t d e r i v a t i o n s on the other hand the d e f i n i t i o n of a l i n e a r c o n t e x t f r e e grammar f o r instance depends s o l e l y on the concept of a product i o n we w i l l show in section i i t h a t the concept of grammar forms provides evidence t h a t there seems to be no way to base the d e f i n i t i o n s of many grammar types used in parsing and compiling s o l e l y on the concept of productions instead of derivations has shown in that socalled s t r i c t i n t e r p r e t a t i o n s of unambiguous grammar forms require e s s e n t i a l l y the same parsing time up to a m u l t i p l i c a t i v e constant c as the underlying unambiguous grammar form one of the c o n d i t i o n s which is q u i t e r e s t r i c t i v e and essential f o r the proof is missing in the definition of a strict i o n in so the question a r i s e s how r e s t r i c are s t r i c t i n t e r p r e t a t i o n s we w i l l prove in section i i i that s t r i c t interpretations of unambiguous or lrk grammar forms generate unambiguous or lrk languages r e s p e c t i v e l y this is not so in the ll case i t is decidable whether a s t r i c t i n t e r p r e t a t i o n of an unambiguous grammar form is unambiguous for any two compatible s t r i c t interpret a t i o n s g and g of an unambiguous grammar form i t is decidable whether l g and whether n lg is empty f i n i t e or i n f i n i t e in section iv we w i l l compare grammar forms with s t r i c t and u n r e s t r i c t e d i n t e r p r e t a t i o n s s p e c i f i c a l l y we w i l l show t h a t f o r every grammar form f there e x i s t s a grammar form f such t h a t the f a m i l y of f under u n r e s t r i c t e d i n t e r p r e t a t i o n s is equal to the f a m i l y of f under s t r i c t interpretations there are cases where f has to be ambiguous although f is unambiguous a few open problems w i l l be l i s t e d i n section v i i the influence of productions on d e r i for many years a considerable amount of time and e f f o r t has been spent d e f i n i n g and i n v e s t i g a t i n g grammars which are useful as models f o r programming languages among these grammars are to name only a few lrk grammars grammars grammars mn precedence grammars simple precedence grammars cf m i as a survey reference although a l l these models d i f f e r q u i t e s i g n i f i c a n t l y from each other in t h e i r d e f i n i t i o n s as well as in t h e i r parsing techniques almost a l l of them have one t h i n g in common t h e i r d e f i n i t i o n s r e l y h e a v i l y on the concept o f a d e r i v a t i o n we omit the definitions of lrk simple precedence grammars etc but c l e a r l y part of the d e f i n i t i o n o f an lrk grammar is the underlying rightmost derivation similarly the definition of an grammar depends on the underlying l e f t most d e r i v a t i o n as a consequence t e s t i n g a grammar f o r f o r a given k involves more at least in the general case than a checking of whether each production in the given production table is of a certain form in many instances t e s t i n g a grammar f o r or f o r a given k requires q u i t e an i n computation there are of course other ways to define grammars in general and s p e c i f i c types of contextfree grammars in p a r t i c u l a r for example i t is extremely easy to define and understand the notion of a l i n e a r c o n t e x t f r e e grammar likewise i t is a t r i v i a l task to test whether a given grammar is a l i n e a r c o n t e x t f r e e grammar a r e g u l a r grammar a c o n t e x t f r e e grammar etc the immediate question comes up whether i t is r e a l l y necessary to define lrk grammars grammars etc in terms of d e r i v a t i o n s r a t h e r than j u s t productions in other words do there or do there not e x i s t methods to define lrk simple precedence grammars etc by merely placing c e r t a i n r e s t r i c t i o n s on the production type allowed this question is extremely important since restrict i o n s on productions are g e n e r a l l y easier to understand than r e s t r i c t i o n s on d e r i v a t i o n s many proofs e g the equivalence o f d e t e r m i n i s t i c pushdown automata and lr grammars would h o p e f u l l y become simpler i f the grammar d e f i n i t i o n s were based on production types r a t h e r than on d e r i v a t i o n types i t was often assumed t h a t such a p r o d u c t i o n c h a r is probably not possible because of the following reason i t is undecidable for example whether a given contextfree grammar is an grammar or lrk grammar f o r any k l it is therefore impossible to find a characterization in terms of of lrk grammars etc otherwise one could decide whether or not a given grammar is or lrk f o r any k by simply checking each production f o r characteristic properties assuming of course that testing for these characteristic properties is a decidable task however i t is decidable whether a grammar is lrk f o r any f i x e d k and i t is also decidable whether a grammar is a simple precedence grammar i so i t is not at a l l c l e a r whether or not there exist of lrk grammars f o r f i x e d k or simple precedence grammars in terms of productions before one can s t a r t i n v e s t i g a t i o n s of t h i s kind one has to have a w e l l defined concept of what a characterization in terms of productions should be such a concept t h a t of a grammar form has been established by and d e f i n i t i o n i i i a contextfree grammar form is a tuple f where i v is an i n f i n i t e set of abstract symbols s is an i n f i n i t e subset of v such t h a t vs is i n f i n i t e and gf c a l l e d the form grammar o f f is a contextfree grammar with vv zs and vs vs we assume throughout t h i s paper t h a t v and s are f i x e d i n f i n i t e sets s a t i s f y i n g i and above we w i l l only consider grammar forms which have a c o n t e x t f r e e form grammar and w i l l therefore omit the a t t r i b u t e c o n t e x t f r e e in many instances d e f i n i t i o n an i n t e r p r e t a t i o n of a grammar form f is a tuple i v i z i p i s i where i v i s a s u b s t i t u t i o n on v such t h a t i ua is a finite subset of s for each element a in z i i a is a f i n i t e subset of fs for each a in ve and i i i ua f o r each a and b in vz i f a b pi is a subset of p u where p si is in us and contains a l l symbols in which occur in pi together with sl gi v i z i p i s i is called the grammar of i a grammar form gives r i s e to a f a m i l y of grammars which are s t r u c t u r a l l y related to the form grammar by means of i n t e r p r e t a t i o n s of the form grammars for b r e v i t y an i n t e r p r e t a t i o n i is y w r i t t e n as u g i since the productions in gi are s t r u c t u r a l l y r e l a t e d to the form grammar gf we sometimes w i l l c a l l gf a grammar since v and s are f i x e d we w i l l use the phrase an interpretation of g where g rather than an interpretation of f where f d e f i n i t i o n for each grammar g gg g i l l an i n t e r p r e t a t i o n o f g is called the f a m i l y of grammars o f g and lg i is in gg the family of g a collection l of languages is a family if f o r some grammar g i t was shown in t h a t the l i n e a r contextfree languages the regular languages and the contextfree languages all constitute i e s for the sake of e x p o s i t i o n we b r i e f l y l i s t grammar forms f o r the above mentioned classes of languages i let g be a grammar with p then c l e a r l y lg is the f a m i l y of regular languages let g be a grammar with p s a s a s e then lg is the f a m i l y of a l l l i n e a r c o n t e x t free languages let g be a grammar w i t h p s s s s ÷ a then lg is the family of all contextfree languages the above examples demonstrate t h a t grammar forms are a reasonable model for production types using this model of grammar forms i t is very easy to show that many classes of grammars that i n t e r e s t i n g parsing properties do not form f a m i l i e s of grammars and t h a t i t is therefore h i g h l y u n l i k e l y t h a t t h e i r r e l e v a n t features can be expressed in terms of productions but f i r s t we the following theorem from theorem for each grammar g lg is closed under union homomorphism and i n t e r s e c t i o n with regular sets we can now s t a t e theorem each of the f o l l o w i n g classes of grammars does not form a f a m i l y of grammars i grammars for arbitrary k lrk grammars f o r a r b i t r a r y k grammars for a r b i t r a r y but fixed k lrk grammars for arbitrary but fixed k strong grammars f o r any given k simple lrk grammars for any given k s t r i c t d e t e r m i n i s t i c grammars simple precedence grammars uniquely i n v e r t i b l e extended precedence grammars uniquely i n v e r t i b l e weak precedence gram simple mixed strategy precedence grammars mixed strategy precedence grammars i i bounded r i g h t context grammars bounded r i g h t context grammars proof consider the f o l l o w i n g two grammars g v i z i p i s i and g where v v a b c s el z a b c p s c and p s c c l e a r l y l lg i and l lg let gi denote the class of a l l grammars of type i i l as l i s t e d in the theorem thus g is the class o f a l l grammars f o r a r b i t r a r y k etc i t is well known t h a t f o r i l the languages which can be generated by grammars in gi are d e t e r m i n i s t i c c o n t e x t f r e e i moreover grammars g and g belong to gi f o r every i l so l e t us assume t h a t f o r some i where i gi is a f a m i l y of grammars i e there e x i s t s a grammar g such t h a t gg g i hence g and g belong to gg and and lg belong to the family lg since lg is closed under union it follows that l ul is also in lg and hence there e x i s t s a grammar gi which is an i n t e r p r e t a t i o n grammar of the grammar g such t h a t l ul l g i hence gi belongs to gg and thus to gi since l ul is not a d e t e r m i n i s t i c c o n t e x t f r e e language we obtain a contradiction d i t is therefore reasonable to assume that for a l l the above mentioned grammar types there does not e x i s t any natural way to define them in terms of productions we would be the reader i f we did not i n v e s t i g a t e the p r e v i o u s l y question from a s l i g h t l y d i f f e r e n t point of view there are cont e x t f r e e grammars which generate languages but which themselves are not grammars thus the family of grammars is a proper subset of the family of a l l grammars that generate exactly the languages similar situations occur for the other types of grammars l i s t e d above thus our claim that r e s t r i c t i o n s on productions and r e s t r i c tions on derivations have very l i t t l e connection would be only p a r t i a l l y true i f one could characterize for example all grammars that generate languages for a given k in terms of a production type however a t r i v i a l change of the proof of theorem shows t h a t even from t h i s modified point of view there is only l i t t l e connection between productions and d e r i v a t i o n s we therefore l i s t as a c o r o l l a r y corollary each of the following classes of languages does not constitute a f a m i l y i e there is no grammar form f such that a l l i n t e r p r e t a t i o n grammars of f generate e x a c t l y any one of the following classes of languages i languages for arbitrary k lrk languages for a r b i t r a r y k languages f o r any given k lrk languages f o r any given k strong languages for any given simple lrk languages f o r any given s t r i c t d e t e r m i n i s t i c languages simple precedence languages uniquely i n v e r t i b l e extended precedence languages lo uniquely i n v e r t i b l e weak precedence lan guages ll simple mixed strategy precedence languages mixed strategy precedence languages i i bounded r i g h t context languages bounded r i g h t context languages other classes of grammars and languages that have i n t e r e s t i n g parsing properties are the unambiguous grammars and languages of ambiguity degree k the d e f i n i t i o n of and ambiguity of degree k is based on the concept of derivations here too we can e a s i l y show that there seems to be no way to the concept of s o l e l y in terms of productions theorem each of the following classes of grammars does not c o n s t i t u t e a f a m i l y of grammars i unambiguous contextfree grammars ambiguous contextfree grammars contextfree grammars with ambiguity de k for any given k contextfree grammars with ambiguity de k for any given k proof to i assume that there is a grammar g such gg equals the class of a l l unambiguous con t e x t f r e e grammars then the grammar g has to be unambiguous since g is c l e a r l y an i n t e r grammar of i t s e l f furthermore lg has to be an i n f i n i t e language since otherwise a l l grammars in gg and thus a l l unambiguous context free grammars could generate only f i n i t e languages which c l e a r l y is a contradiction hence there e x i s t s a symbol ae vz such that s u a z u v a y z for some u v x y z we define an i n t e r p r e t a t i o n of g as follows for every va a aa where a v then gi vu is an i n t e r p r e t a t i o n of g hence gi should be an unambiguous grammar however gi is a grammar with an i n f i n i t e degree of ambiguity the s t r i n g has leftmost derivations for every kl to assume t h a t there is a grammar g such that gg equals the class of a l l ambiguous grammars then g has to be ambiguous i t fs t r i v i a l to f i n d an unambiguous i n t e r p r e t a t i o n of g and thus a r r i v e at a c o n t r a d i c t i o n to and s i m i l a r to cases i and d the class of grammars t h a t generate unambiguous contextfree languages is strictly larger than the class of unambiguous grammars so again we have to address the question whether a l l grammars generating unambiguous c o n t e x t f r e e languages can be characterized in terms of productions the answer is again no theorem i i the following families of languages does not constitute a family l languages and inherently ambiguous contextfree proof to l i t is well known that there are inherently ambiguous contextfree languages i l l so i f there exists a grammar g such that lg equals the set of all unambiguous contextfree languages then lg contains a l l contextfree languages since lg is closed under homomorphism and since every contextfree language ll can be expressed as hl with h a homomorphism and l an unambiguous contextfree language thus we obtain a contradiction to similar to proof of part two of theorem i i i i i the influence of productions on ing in has shown t h a t socalled s t r i c t i n t e r p r e t a t i o n s of unambiguous grammar forms can be parsed i n e s s e n t i a l l y the same time up to a m u l t i p l i c a t i v e constant c as the underlying unambiguous form grammar one of the c o n d i t i o n s which i s q u i t e r e s t r i c t i v e and essential f o r a proof in c f theorem l l l i s missing in the d e f i n i t i o n of a s t r i c t i n t e r p r e t a t i o n in so the f o l l o w i n g question arises how restrictive are strict interp r e t a t i o n s we w i l l show t h a t grammars given by s t r i c t i n t e r p r e t a t i o n s of an unambiguous form grammar generate only unambiguous languages s i m i l a r l y s t r i c t i n t e r p r e t a t i o n s of an lrk grammar generate only lrk languages this is not so in the ll case f i n a l l y we w i l l prove that i t is decidable f o r a given unambiguous grammar form whether a s t r i c t i n t e r p r e t a t i o n is unambiguous or not i t is also decidable for two compatible s t r i c t i n t e r p r e t a t i o n s g and g of an unambiguous form grammar whether lg lg and whether is empty f i n i t e or i n f i n i t e the formal framework used in is t h a t of and x f u n c t o r s the reader is r e f e r red to and f o r f u r t h e r d e t a i l s on these concepts the d e f i n i t i o n of a s t r i c t i n t e r p r e t a t i o n given in is as follows an i n t e r p r e t a t i o n i v i z i p i s i of a grammar form f is a strict interpretation if a is a finite subset of s where az we quote the f o l l o w i n g theorem from theorem i i i i let gf be the form grammar of a c o n t e x t f r e e grammar form f then gi is the grammar of a s t r i c t i n t e r p r e t a t i o n of f i f and only if there exists a o r gi gf one can immediately show t h a t i f ua n b p f o r two symbols a and b z a case t h a t i s a l under the d e f i n i t i o n of a s t r i c t interpretation in then one cannot construct the f the additional condition needed is one that requires a nb for a l l a thus we need to add this condition to the definition of a s t r i c t interpretation definition i i i was also used in definition i l l an interpretation i i of a grammar form f is a strict interpretation if l a is a f i n i t e subset of s property and a n b va b property with this d e f i n i t i o n of a s t r i c t interpretation theorem i i i i holds we would l i k e to quote the following theorem from theorem i l l let gl ÷ g be a functor where gl and g are contextfree grammars and g is unambiguous suppose there is an algorithm which w i l l construct a parse for and reject in less than f l w l steps then there is a constant c and an algorithm which w i l l accept and reject in less than c f l w l steps an obvious consequence as stated in is corollary let gf be an unambiguous form grammar of a grammar form f then strings in for a s t r i c t interpretation gi of gf can be parsed in essentially the same time up to a m u l t i p l i c a t i v e constant c as strings in one of the reasons for the above facts is that s t r i c t interpretations are more restricted than one might and as we w i l l now show i t is the d i s j o i n t property and not so much the property that l i m i t s the a p p l i c a b i l i t y of theorem i l l and i t s corollary most of the proofs in the remainder are only sketched and the interested reader is referred to theorem i l l for every form grammar gf of a grammar form f there exists a grammar form f such that is equal to the class of a l l languages that can be generated by grammars given by interpretations of f i f gf is unambiguous then g can be made unambiguous in order to show that the contextfree languages can be generated by grammars given by interpretations of an unambiguous grammar form we state the following theorem theorem i l l there is an unambiguous form grammar gf of a grammar form f such that is equal to the class of contextfree languages the proof of theorem i l l uses the following facts l there is an unambiguous grammar g which the over two letters lg is i n f i n i t e lg is closed under homomorphism inverse homomorphism and intersection with regular sets every contextfree language l can be expressed as n r with hi and h being homomorphisms r a regular set and d lg combining theorems i l l and i l l we obtain the following corollary corollary there is an unambiguous form grammar gf such that the grammars given by interpretations of gf generate exactly the cont e x t f r e e languages hence the property is not very and i t does not l i m i t the a p p l i c a b i l i t y of theorem however the case is quite different with respect to the property which l i m i t s the a p p l i c a b i l i t y of theorem but this also has an advantage in that s t r i c t i n t e r p r e t a t i o n s are more structure preserving than unrestricted interpretations notation we w i l l use the following notation is a s t r i c t i n t e r p r e t a t i o n of gf and g lg theorem i f gf is an unambiguous form grammar with i n f i n i t e then there are s t r i c t i n t e r p r e t a t i o n s of gf that are ambiguous however the existence of a functor ¢ gi ÷ g f for a s t r i c t i n t e r p r e t a t i o n gi of an unambiguous grammar gf t e l l s us that a l though there might be many d i s t i n c t leftmost d e r i for a string that the corresponding derivation trees look the same they might differ only in their labels for the nonterminal nodes thus one that s t r i c t int e r p r e t a t i o n s of unambiguous form grammars generate only unambiguous languages this is proven by the following theorem theorem let gf be an unambiguous form grammar and l e t g be an a r b i t r a r y s t r i c t i n t e r of gf then there exists e f f e c t i v e l y an unambiguous grammar g such that lg lg the proof of theorem which is based on d e f i n i t i o n s and i i i i lemma and algorithm d follows from lemma i i i i i and lemma d e f i n i t i o n let g be a context free grammar let gi v i z i p i s i be a s t r i c t interpretation grammar of g given by a merge set for gi is such that and such that vb b m and bm i f f v i b ÷ a p i and b ÷ e p i lemma let g be a contextfree grammar let gi v i i p i s i be a s t r i c t i n t e r given by i f g is unambiguous but gi is ambiguous then there exists a merge set for gi · d e f i n i t i o n i i i i let under then is a merge set for g under algorithm d let gf be an unambiguous contextfree grammar let g via the mapping output a cfg g such that lg lg and g is unambiguous procedure i construct the merge sets i f g is ambiguous then by lemma i thus i f i l e t g g and h a l t let and be a set of new symbols mutually d i s j o i n t from v let and let if sm if sm let let p bx i m and ai vm and bi x i and xo bo let p such that xm and x b o i b b o ÷ a e p let p vm v i l i m b i e and bi ex i and ab let p e p i mi e vm v i l i m b i mi and bi x i let p p i i f se let g in the algorithm above nonterminal symbols of g that may be a source of ambiguity i e symbols in m are eliminated they are replaced by new nonterminal symbols based on subsets of the merge sets bx generates in p exactly that which the nonterminal symbols in x generate in common in p this leads to the following lemma lemma i i i i i the grammar produced as output by algorithm d is unambiguous lemma let g be the input to algorithm d and g be the output of the algorithm then lg lg corollary to theorem i f gf is an unambiguous form grammar then contains only unambiguous languages there are contextfree languages that are i n ambiguous hence we obtain theorem there is no unambiguous form grammar gf such that the grammars given by s t r i c t i n t e r p r e t a t i o n s of gf generate exactly the contextfree languages the technique used in the proof of theorem can also be used to prove the following theorem theorem i f gf is an lrk form grammar then contains only lrk languages however a s i m i l a r statement f o r the case is not true not only are there unambiguous grammars whose s t r i c t i n t e r p r e t a t i o n grammars can be unambiguous and there are unambiguous grammars whose s t r i c t i n t e r p r e t a t i o n s can y i e l d grammars which generate languages the f i r s t part of t h i s section we can state that s t r i c t i n t e r p r e t a t i o n s s u b s t a n t i a l l y l i m i t the a p p l i c a b i l i t y of theorem however s t r i c t i n t e r p r e t a t i o n s have an advantage over unrestricted interpretations since they are more structure preserving we w i l l conclude t h i s section with a few decidability results theorem i t is decidable whether a s t r i c t i n t e r p r e t a t i o n of an unambiguous grammar form is unambiguous the proof of t h i s l a s t theorem is based on the observation that for a strict interpretation g in reduced form one can establish a number k such that g is ambiguous i f and only i f there e x i s t forms and with k such that a and a are members of the same merge set theorem can be used to prove the following decidability results for compatible strict i n t e r p r e t a t i o n s of an unambiguous grammar form d e f i n i t i o n two s t r i c t i n t e r p r e t a t i o n s i u i v i i p i s i and of a given grammar form are compatible i f n pb ub for any two elements a b in e theorem i t is decidable for any two compatible s t r i c t i n t e r p r e t a t i o n s g and g of an unambiguous form grammar whether i lg lg is empty finite or infinite iv strict interpretations in section i l l we have seen that there exists an unambiguous form grammar gf such that is equal to the family of contextfree languages i l l but that there is no unambiguous form grammar gf such that equals the class of contextfree languages theorem i l l so we want to investigate the question of whether grammar forms with s t r i c t interpretation are as powerful as grammar forms with unrestricted interpretations i f we do not consider the ambiguity or of the form grammar first we obtain theorem there are grammar forms f with form grammar gf such that there does not exist any grammar form f w i t h form grammar gf such that so with respect to the interpretation grammars s t r i c t interpretations are not as powerful as unrestricted interpretations the situation is different though i f one looks at the classes of languages which can be generated by the interpretation grammars theorem iv for every form grammar gf there exists a form grammar g such that v conclusion we have seen that grammar forms with interpretations do not provide a characterization of many grammar types that are used in parsing strict interpretations of unambiguous grammar forms are structure preserving they preserve and of the generated languages they also provide us with some interesting b i l i t y results there is a relation between the parsing time for the interpretation grammars and the parsing time for the underlying unambiguous form grammar several questions arise naturally from these observations l is there a universal parser for all languages is there a universal parser for a l l lrk languages i f the answer to questions l and is no are there universal parsers for reasonably large subclasses of the lrk languages languages and other classes of languages is there a we know to be amenable to a fast parse technique but which generates a much larger class of grammars which have not been before of having a fast parse technique the results given in this paper constitute an i n i t i a l step in this direction and we further research along these lines the authors are to s for their interest in grammar forms references l aho v and jeffrey d ullman the theory of parsing translation and compiling vol i and i i prentice hall c l i f f s lo new an observation on relative parsing time jacm no pp e mappings between contextfree derivation systems notes in comp sci vol pp a b and s contextfree grammar forms vol i i pp a b s and e h the structure of contextfree families submitted for publication s the mathematical theory of contextfree languages new york s and s a s t i c context free languages and control vol no pp s and m contextfree languages vol i pp s the contextfree language siam j vol pp i m a and i m s t r i c t deterministic grammars vol i i hopcroft john e and jeffrey d ullman formal languages and their relation to automata addisonwesley reading mass g g vol verlag b l and d productions derivations and parsing tech rep in preparation knuth d a characterization of grammars and control vol i i pp r grammars jacm vol pp mitchell b theory of categories academic press new york m and m structural equivalence of contextfree grammars vol pp a formal languages academic press new york and london c p classes of grammars and control vol pp ii 