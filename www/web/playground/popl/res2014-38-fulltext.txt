proof search for propositional abstract separation logics via labelled sequents research school of computer science the national university research school of computer science the national university school of computer engineering university abstract abstract separation logics are a family of extensions of hoare logic for reasoning about programs that memory these logics are abstract because they are independent of any particular concrete memory model their assertion languages called propositional abstract separation logics extend the logic of boolean implications bbi in various ways we develop a modular proof theory for various propositional abstract separation logics using labelled sequent calculi we first extend the labelled sequent calculus for bbi of et al to handle calcagno et als original logic of separation algebras by adding sound rules for and while preserving we prove the completeness of our calculus via a sound intermediate calculus that enables us to construct from the failure to find a proof we then capture other propositional abstract separation logics by adding sound rules for unit and disjointness while maintaining completeness and we present a theorem prover based on our labelled calculus for these logics categories and subject descriptors f specifying and verifying and reasoning about programs logics of programs general terms languages theory verification keywords abstract separation logics automated reasoning labelled sequents construction implications introduction separation logic sl is an extension of hoare logic for reasoning about programs that explicitly memory this is achieved via an assertion language that along with the usual additive connectives and predicates for firstorder logic with arithmetic has the multiplicative connectives separating conjunction its unit and separating implication or magic wand from the logic of implications bi as well as the pointsto predicate the additive connectives may be either intuitionistic permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page for components of this work owned by others than acm must be abstracting with credit is permitted to copy otherwise or republish to post on servers or to redistribute to lists requires prior specific permission andor a fee request permissions from popl january ­ san diego ca usa copyright c acm as for bi or classical as for the logic of boolean implications bbi classical are more expressive as they support reasoning about commands such as memory deallocation and assertions such as the heap is empty in this paper we consider classical only the assertion language of sl must provide a notion of inference to support precondition strengthening and postcondition weakening yet little such proof theory exists despite its link with the motivated bi instead inference must proceed via reasoning directly about the concrete semantics of heaps or finite partial functions from addresses to values a heap satisfies p q iff it can be partitioned into heaps satisfying p and q respectively it satisfies iff it is empty it satisfies p q iff any extension with a heap that satisfies p must then satisfy q and it satisfies e e iff it is a singleton map sending the address specified by the expression e to the value specified by the expression e such concrete semantics are appropriate for proving the correctness of a specific program in a specific environment but mean that if a different notion of memory or more generally resource is required then a new logic is also required calcagno et als abstract separation logic asl introduced the abstract semantics of partial monoids or separation algebras to unify notions of resources for heaps heaps with permissions petri nets and other examples these semantics allow interpretation of and although the latter is not considered by calcagno et al however has no meaning in separation algebras in general and is therefore not a first class of asl it may be introduced as a predicate only if an appropriate concrete separation algebra is fixed calcagno et al do not consider proof theory for their assertion language whose propositional fragment we call propositional abstract separation logic but separation algebras are a restriction of nondeterministic monoids which are known to give sound and complete semantics for bbi in this sense is a refinement of bbi only by the addition of the semantic properties of and this link between bbi and semantics raises the question of whether existing proof theory for bbi can be extended to give a sound and complete proof system for we answer this question in the by extending the labelled sequent calculus of et al by adding explicit rules for and the completeness of was demonstrated via the of bbi but this is not open to us as and are not in bbi instead completeness follows via a construction procedure a of our construction is that it can be extended to handle extensions and of we have also implemented proof search using our calculus although no decision procedure for is possible to our knowledge this is the first proof to be presented of the completeness of a calculus for and our implementation is the first automated theorem prover for just as we have a family of separation logics ranging across different concrete semantics we now also have a family of abstract separation logics for different abstract semantics these abstract semantics are often expressed as extensions of the usual notion of separation algebra most notably et al suggested the additional properties of here called unit disjointness and conversely the abstract semantics for separation logic separation algebras by hence there is demand for a modular approach to proof theory and proof search for propositional abstract separation logics labelled sequent calculi with their explicitly rules provide good support for this modularity as rules for the various properties can be added and removed as required we investigate which properties can be combined without our completeness result while we work with abstract models of separation logics the reasoning principles behind our methods should be applicable to concrete models also so we investigate as further work how concrete predicates such as might be integrated into our approach proof search strategies that come out of our analysis could also potentially be applied to guide proof search in various encodings of separation logics in proof eg they can guide the constructions of proof tactics needed to the reasoning tasks in those this work is supported by the research discovery grant dp the labelled sequent calculus for in this section we define the separation algebra semantics of calcagno et al for propositional abstract separation logic and present the labelled sequent calculus asl for this logic the calculus for bbi of et al soundness and are then demonstrated for asl propositional abstract separation logic the formulae of are defined inductively as follows where p ranges over some set v ar of propositional variables a p ¬a a a a a a a a a a a are interpreted according to the semantics below definition a separation algebra or partial commutative monoid is a triple h where h is a nonempty set is a partial binary function h × h h written infix and h satisfying the following conditions where is interpreted as both sides undefined or both sides defined and equal identity h h h h commutativity h h h h h h h associativity h h h h h h h h h h claims that the for bbi with in can be extended to cover but the rather involved proof has not appeared yet et al also suggest separation algebras to have a set of units it is an easy corollary of lem that and separation algebras satisfy the same set of formulae h h h h h if hh h and hh h then h h the example of a separation algebra is the set of heaps here is the combination of two heaps with disjoint domain and is the empty heap in the paper we prefer to express semantics in the style of relations to maintain consistency with the earlier work of et al on bbi it is easy to see that the definition below is a trivial notational variant of def definition a kripke relational frame is a triple h r where h is a nonempty set of worlds r h × h × h and h satisfying the following conditions for all h h h h h in h identity rh h iff h h commutativity rh h h iff rh h h associativity if rh h h and rh h h then there exists h such that rh h h and rh h h if rh h h and rh h h then h h if rh h h and rh h h then h h a kripke relational model is a tuple h r of a kripke relational frame h r and a valuation function v ar ph where ph is the power set of h the forcing relation between a model m h r and a formula is defined in table where we write m h a for the negation of m h a given a model m h r a formula is true at world h iff m h a the formula a is valid iff it is true at all worlds of all models the labelled sequent calculus asl let lv ar be an infinite set of label variables and let the set l of labels be lv ar where is a label constant not in lv ar here we the notation for the identity world in the semantics labels will be denoted by letters such as a b x y z a labelled formula is a pair a a of a label a and formula a as usual in a labelled sequent calculus one needs to incorporate kripke relations explicitly into the sequents this is achieved via the syntactic notion of relational atoms which have the form a b c where a b c are labels a sequent takes the form g where g is a set of relational atoms and and are multisets of labelled formulae then a is the multiset union of and a as the interpretation of the logical connectives of are the same as those for bbi we may obtain a labelled sequent calculus for called asl by adding the rules p and c to the rules for asl are presented in fig where p is a propositional variable a b are formulae and w x y z l note that some rules use label substitutions we write yx resp for the set of labelled formulae resp relational atoms for which the label variable x has been uniformly replaced by the label y in each rule the formula resp relational atom shown explicitly in the conclusion is called the principal formula resp relational atom a rule with no premise is called a rule note that the l rule is the classical implication left rule a function l h from labels to worlds is a label mapping iff it satisfies mapping the label constant to the identity world of h thus we define an extended kripke relational model h r as a model equipped with a label mapping definition sequent a sequent g is in an extended model m h r if for every m h m h m h m h m h m h p iff p v ar and h vp m h iff always iff never m h ¬a iff m h a a b iff m h a and m h b a b iff m h a or m h b m h a b iff m h a or m h m h iff h a b iff h h h and m h a and m h b a b iff h h h and m h a implies m h b b table semantics of where m h r identity and cut g w p logical rules l g w id w p w g g w l g w a w b l g w a b g w a g w b g w a b l g x a g x a cut g g r g w g r g w a g w b g w a b r g w a w b r g w a b x y z g x a y b g z a b l x z y g x a y b g z a b r x y z g x a z a b x y z g y b z a b x y z g z a b r x y z g y a b x a x y z g y a b z b structural rules x y z g y a b l y x z x y z g x y z g e u w z y v w x y z u v x g x y z u v x g a x x g g u x w x y y w x y x g x y x g ac w w gw w w w w w w w g eq w w gw w w w w w w w g eq x y z p x y z x y w g x y z c x y z x w z g side conditions only label variables not may be substituted for in the rule a ac the label w does not occur in the conclusion in l and r the labels x and y do not occur in the conclusion figure the labelled sequent calculus asl for propositional abstract separation logic x a a b c g and for every y b we have m x a ra b c and m y b it is if it is in some extended model theorem soundness for any formula a and for an arbitrary label w if the labelled sequent w a is derivable in asl then a is valid proof we prove that the rules of asl preserve the proof is straightforward so we omit the details but refer the interested reader to a similar proof for the only differences between asl and are the additions of the structural rules p and c so we may prove by the same which in turn follows from the usual procedure for labelled sequent calculi for modal logics we therefore omit full proof details and simply list the necessary lemmas we use ht to denote the height of the derivation lemma substitution if is an asl derivation for the sequent g then there is an asl derivation of the sequent yx yx such that ht ht lemma of weakening if g is derivable in asl then for all structures g and the sequent g g is derivable with the same height in asl lemma if is a asl derivation of the conclusion of a rule then there is a asl derivation for each premise with height at most ht lemma of contraction if g g is derivable in asl then g is derivable with the same height in asl theorem if g is derivable in asl then it is derivable without using the cut rule proof the proof follows the same structure as that for the lemmas above the additional cases we need to consider are those involving the rules p and c their treatment is similar to that for eq in the proof for completeness of asl we prove the completeness of asl with respect to the kripke relational semantics by a construction a standard way to construct a for an sequent is to show that it can be saturated by repeatedly applying all applicable inference rules to reach a limit sequent where a can be constructed in such a construction strategy to asl we difficulty in the saturation conditions for rules involving label substitutions we therefore adopt the approach of et al using an intermediate system without explicit use of label substitutions but where equivalences between labels are captured via an entailment e let r be an instance of a structural rule in which the substitution used is this is the identity substitution except when r is eq eq p or c we can view r as a function that takes a set of relational atoms in the conclusion of the rule and outputs another set in the premise we write rg for the output relational atoms of an instance of r with substitution and with conclusion containing g let be a sequence of instances of structural rules rg · · · n given a set of relational atoms g the result of the backward application of to g denoted by sg is defined as below where is used for sequence concatenation g sg sg rg undefined if if g g and rg otherwise given rg · · · n let subst be the composite substitution · · · n where t means t we write s t to mean that s and t are syntactically equal definition equivalence entailment let g be a set of relational atoms the entailment relation g e a b holds iff there exists a sequence of eq eq p c applications such that sg is defined and a b where subst since substitution is no longer in the calculus some inference rules that involve matching two equal labels need to be changed we define the intermediate system asl as asl eq eq p c with certain rules changed following fig note that the equivalence entailment e is not a premise but rather a condition of the rules given a set of relational atoms g we define the relation g as follows a g b iff g e a b we show next that g is in fact an equivalence relation this equivalence relation will be useful in our construction later lemma let g be a set of relational atoms if g e a b by applying and g e c d by applying then such that sg e c d by where subst proof note that sg g so essentially we need to show that if g e c d then g e c d this is a consequence of the substitution lemma lemma given a set of relational atoms g the relation g is an equivalence relation on the set of labels proof we show that e satisfies the following conditions for any label a that occurs in g we have g e a a by applying an empty sequence of eq eq p c rules symmetry if g e x y via a sequence of eq eq p c applications let subst then by definition x y in g thus y x and we obtain that g e y x transitivity if g e x y and g e y z then by lemma we obtain a sequence of eq eq p c applications and let subst then x y z thus g e x z the intermediate system asl is equivalent to asl ie every sequent provable in asl is also provable in asl and vice versa this connection is easy to make as is shown by et al properties such as contraction closure under substitution etc also hold for asl lemma the intermediate labelled calculus asl is equivalent to asl we now give a construction procedure for asl which by lemma applies to asl as well in the construction we assume that labelled sequents such as g are built from sets g rather than multisets this is since contraction is admissible in our calculus as the construction involves infinite sets and sequents we extend the definition of e appropriately as below definition a possibly infinite set g of relational atoms satisfies g e x y iff gf e x y for some finite gf g given a set of relational atoms g the equivalence relation g partitions l into equivalence classes ag for each label a l ag a l a g a the procedure is essentially a procedure to a sequent by applying all applicable rules repeatedly the aim is to obtain an infinite saturated sequent from which a can be extracted we first define a list of desired properties of such an infinite sequent which would allow the construction this is given in the following definition definition sequent a labelled sequent g is a sequent if it satisfies the following conditions for any formulae a b and any labels a a b c d e z it is not the case that a a b a and a g b if a a b then a a and a b if a a b then a a or a b if a a b then a a or a b if a a b then a a and a b if a then a g if a then a g if z a b then x y z such that x y z g z g z x a and y b if z a b then x y z if x y z g and z g z then x a or y b g e w w g e w g w p id w p g w r x w x y y w x y x g x y x g e x x x y x g ac u w z y v w x y z u v x g x y z u v x g e x x a x y z u v x g x y w g x a w a b x y w g y b w a b x y w g w a b x y w g e w w r x w z g w a b x a x w z g w a b z b x w z g w a b x w side condition the label w in a ac does not occur in the conclusion figure changed rules in the intermediate system asl z g e w w l if z a b then x y z if x z y g and z g z then x a or y b if z a b then x y z such that x z y g z g z x a and y b for any label m l m m g if a b c g then b a c g if a b c g and d e a g and a g a then f f such that d f c g b e f g and f g f a and a lemma every sequent is proof let g be a sequent we construct an extended model m h g g as follows · h ag a l · bg cg iff a b c a b c g a g a b g b c g c · g g · p ag a p for every p v ar · a ag for every a l to reduce we shall drop the subscript g in ag and write a b g c instead of ga b c we first show that f h g g is a kripke relational frame the identity commutativity and associativity properties of f follow immediately from definition clause and respectively we next show and if a b g c and a b g d hold then there exists some a b c g and a b d g such that a a a b b b c c d d then by lemma g e c d by using rule p to unify c and d thus we obtain that c c d d if a b g c and a d g c hold then we can find some a b c g and a d c g such that a a a c c c b b d d then by lemma g e b c by using c to unify b and c thus we obtain that b b c c so m is indeed a model based on a kripke relational frame we show next that g is in m we need to show the following where m m if a b c g then a b g c if m a then m m a if m a then m m a item follows from the definition of g we prove and simultaneously by induction on the size of a in the following to simplify presentation we omit the m from the forcing relation base cases when a is an atomic proposition p · if m p then m p by definition of so m p · suppose m p but m p then m p for some m such that m g m this violates condition in def thus m p inductive cases when a is a compound formula we show here the interesting cases involving multiplicative connectives · if m then m by condition in def since we obtain m · if m by condition in def m and then m · if m a b by condition in def a b m such that a b m g and m m and a a and b b by the induction hypothesis a a and b b thus a b g m holds and m a b · if m a b by condition in def a b m if a b m g and m m then a a or b b by the induction hypothesis if such a b exist then a a or b b for any a b g m there must be some a b m g such that a a b b m m then a a a or b b b therefore m a b · if m a b by condition in def a b m if a m b g and m m then a a or b b by the induction hypothesis if such a b exists then a a or b b consider any a m g b there must be some a m b g so a a a or b b b thus m a b · if m a b by condition in def a b m such that a m b g and m m and a a and b b by the induction hypothesis a a and b b and a m g b holds thus m a b to prove the completeness of asl we have to show that any given sequent can be extended to a sequent to do so we need a way to enumerate all possible applicable rules in a fair way so that every rule will be chosen infinitely often traditionally this is achieved via a fair enumeration strategy of every principal formula of every rule since our calculus contains structural rules with no principal formulas we need to include them in the enumeration strategy as well for this purpose we define a notion of extended formulae given by the grammar f u e a ac where f is a formula and u e a ac are constants the intention is that u e a ac will be as used as dummy principal formulae for the structural rules u e a and ac respectively a scheduler then determines the sequence of rule applications to apply definition a schedule is a tuple o m r where o is either left or right m is a label is an extended formula and r is a set of relational atoms such that r let s denote the set of all schedules a scheduler is a function from the set of natural numbers n to s a scheduler is fair if for every schedule s the set i i s is infinite lemma there exists a fair scheduler proof our proof follows a similar proof in to adapt their proof we need to show that the set s is countable which follows from the fact that s is a finite product of countable sets from now on we shall fix a fair scheduler which we call we assume that the set of labels l is totally ordered and its elements can be as a a a where a this indexing is used to select fresh labels in our construction of sequents we say the formula f is not provable in asl if the sequent w f is not derivable in asl for any label w since we shall be concerned only with in the following when we mention derivation we mean derivation definition let f be a formula which is not provable in asl we construct a series of finite sequents gi i from f where g and a f assuming that gi i i has been defined we define gi i i as follows suppose we have the schedule i oi mi ri · if oi is a formula ci and mi ci i if ci f f then gi gi i i mi f mi f i i if ci f f if there is no derivation for gi i mi f i then i i i i mi f otherwise i i mi f i i in both cases gi gi if ci then gi gi mi i i i i if ci f f then gi gi ai ai mi i i ai f ai f i i if ci f f and ri x m y gi and gi e m mi if gi i x f i has no derivation then i i i i x f otherwise i i y f i i in both cases gi gi · if oi is a formula ci and mi ci if ci f f if there is no derivation for gi i mi f i then i i mi f otherwise i i mi f in both cases gi gi and i i if ci f f then i mi f i i mi f and gi gi ci f f and ri x y m gi and gi e mi m if gi i x f i has no derivation then i i x f otherwise i i y f in both cases gi gi and i i if ci f f then gi gi ai mi ai i i ai f and i i ai f · if u e a ac we proceed as follows if u ri an an where n i then gi gi an an i i i i if e ri x y z gi then gi gi y x z i i i i if a ri x y z u v x gi and gi e x x then gi gi u ai z y v ai i i i i if ac ri x y x gi and gi e x x then gi gi x ai x y y ai i i i i · in all other cases gi gi i i and i i intuitively each tuple oi mi ri corresponds to a potential rule application if the components of the rule application are in the current sequent we apply the corresponding rule to these components the indexing of labels guarantees that the choice of ai and ai are always fresh for the sequent gi i i the construction in def extends a similar construction of due to in addition to which we have to consider the cases for structural rules we say g g iff g g and a labelled sequent g is finite if g are finite sets define g f g iff g g and g is finite if g is a finite sequent it is consistent iff it does not have a derivation in asl a possibly infinite sequent g is iff every g f g is consistent we write li for the set of labels occurring in the sequent gi i i thus l a the following lemma states some obvious properties of the construction of the sequents gi i i this can be proved by a simple induction on i lemma for any i n the following properties hold gi i i has no derivation li a a · · · ai gi i i f gi i i given the construction of the series of sequents we have just seen above we define a notion of a limit sequent as the union of every sequent in the series definition limit sequent let f be a formula in asl the limit sequent for f is the sequent g where g in gi and in i and in i and where gi i i is as defined in definition lemma if f is a formula in asl then the limit labelled sequent for f is a sequent proof let g be the limit sequent first we show that g is consider any g f g we show that g has no derivation since g are finite sets there exists i n st g gi i and i moreover gi i i is not provable in asl since weakening is admissible in asl g f gi i i cannot be provable either so condition and in definition hold for the limit sequent for otherwise we would be able to construct a provable finite labelled sequent from the limit sequent we show the proofs that the other conditions in definition involving multiplicative connectives and structural rules are also satisfied by the limit sequent the cases and for the are straightforward and are therefore omitted here if m then m i for some i n since each labelled formula from must appear in the sequence then there exists j i such that j m r where this formula becomes principal by construction m gj g then g e m because gj e m so m g if m f f then it is in some i where i n then there exists j i such that j m f f r by construction gj gj aj aj m g and j j aj f aj f if m f f then it is in some i where i n for any x y m g such that g e m m there exists j i such that x y m gj and gj e m m also there exists k j such that k m f f x y m where the labelled formula becomes principal since x y m gk and gk m m we have either x f k or y f k if m f f similar to case if m f f similar to case for each an l there is a j n such that j o m u an an where u is applied to an then gj gj an an g because n j if x y z g then it is in some gi where i n then there is a j i such that j o m e x y z where e is applied then gj gj y x z g if x y z g u v x g and x g x then there is some gi i n such that x y z u v x gi and gi e x x there are two cases to consider depending on whether x y z and u v x are the same relational atoms suppose they are distinct then there must be some j i such that j o m a x y z u v x then x y z u v x gj and gj e x x by construction we obtain that gj gj u aj z y v aj g if x y z and u v x are the same relational atom then a similar argument can be applied but in this case the schedule to choose is one which selects ac rather than a theorem completeness every formula f in asl is not valid in relational kripke models proof we construct a limit sequent g for f following definition by the construction of the limit sequent we have a f by lemma this limit sequent is a sequent and therefore by lemma g is this means there exists a model f that satisfies g and and every element of including a f which means that f is false at world a thus f is not valid extensions of we now consider some extensions of obtained by additional properties on the semantics as suggested by et al we show that sound rules for unit and the stronger property of disjointness can be added to our labelled sequent calculus without our completeness proof but that the more properties of and are not fully compatible with our current framework unit the unit in a commutative monoid h is iff the following holds for any h h h h h h if h h then h this corresponds to the firstorder condition h h h if rh h then h note that this also means that h whenever h h most memory models in the literature have unit so this property seems appropriate for reasoning about concrete applications of separation logic unit can be by the following formula a b a we use the following sound rule to capture this property y g x x x x y g iu note that we can then instantiate the label y to by applying eq recall that the sequent calculus is just the sequent calculus asl the rules c and p proposition the formula a b a is provable in iu the proof is as shown in figure a theorem asl iu is sound and complete with respect to the class of kripke relational frames and separation algebras with unit proof soundness is straightforward as the rule iu essentially just encodes the firstorder formula into the labelled sequent calculus completeness can be proved via the same construction for asl theorem that is we first define an intermediate calculus asl iu that is equivalent to asl iu and do construction in asl iu since the iu rule contains substitution the rule will be into the entailment relation e so the definition of e in definition is modified to allowed iu in addition to eq eq p and c thus the rules of asl iu are exactly the same as asl and the only change is in the definition of e the equivalence between asl iu and asl iu can be proved as in lemma we then show that a sequent yields a kripke relational frame that corresponds to a separation algebra with unit no additional clauses are needed in the definition of sequent since it is parametric on the entailment relation e for a sequent g suppose h g is the kripke relational frame generated by g given any a b g we can find a a b c g such that a a b b c also we can use the rule iu to derive g e a thus by lemma we obtain a a so the structure h g generated by g is indeed a kripke relational frame that unit the saturation with logical and structural rules e u a ac is then the same as in sec disjointness the separating conjunction in separation logic requires that the two combined heaps have disjoint domains in a separation algebra h disjointness is defined by the following additional requirement h h h if h h h then h this corresponds to the firstorder condition h h h if rh h h then h the disjointness condition is captured in labelled sequent calculus by the following rule where x y are labels y g x x x x x y g d in fact disjointness implies unit but not vice versa as shown by et al thus we can prove the axiom for unit by using d proposition the formula a b a is provable in d figure b shows the derivation of the formula we the principal relational atoms where they are not obvious theorem asl d is sound and complete with respect to the class of kripke relational frames and separation algebras with disjointness proof similar to theorem a a a a a b a a a b id a iu a a a a a a a a b a a a a a b a a a a b l a a a a b a r l l a · · · a b · · · a a b id a eq a e a w w w a · · · a a b a d a w w a a w a a · · · a a a b a a a w a w a a · · · a a a b a a a a a a b a u a a a a a b a a a a a a a a b a a l a a a b a a l a a b l a a a a b a r a a b figure derivations of the axiom of unit in a iu and b d and the property of infinite is sometimes useful when reasoning about the kinds of resource sharing that occur in style computations a monoid h has if for every h h there are h h h such that h h h this corresponds to if h then there exist h h such that rh h h this property can be as the bbi formula ¬ ¬ ¬ we give the following rule for where x y are fresh x y z g x y z g z s proposition the rule s for is sound proof assume the conclusion of s is in an extended relational model h r v we show that the premise is also so suppose that everything in g is true and everything in z is false in the model specifically z is false meaning z thus z by there exist some h h h such that rh h z holds let x h y h then x y z is true under also since x and y the labelled formulae x and y are false under thus the model with frame h r valuation v and label mapping the premise proposition the axiom ¬ ¬ ¬ for is provable in s proof we start from ¬ ¬ ¬ and obtain the following derivation backward a a a a a a a ¬ ¬ a a ¬ a ¬ a ¬ a ¬ ¬ ¬ ¬ ¬ r s then we can apply r backwards on the top sequent using the relational atom a a a to obtain the premises sl and sr the left premise sl can be proved as follows a a · · · r a a a a a · · · a a a a ¬ a · · · l the right premise sr can be proved similarly note that the rule s creates new labels in the premise as the rule a does however it also has a principal formula so it is not a structural rule unlike the rules iu and d the rule s cannot simply be into the entailment relation e so we have to extend the notion of a sequent to add a condition corresponding to the construction then has to ensure that this condition is satisfied by the limit sequent by ensuring that the rule s is applied in a fair way we therefore leave the details of this completeness proof for asl s to future work is a rather complicated property it specifies that if a heap can be split in two different ways then there should be intersections of these formally in a monoid h if h h h and h h h then there should be four elements h h h h informally representing the intersections h h h h h h and h h respectively such that h h h h h h h h h and h h h the corresponding condition on kripke relational frames is obvious the following sound rule naturally captures where p q s t u v x y z are labels r x y z u v z g cs x y z u v z g where r p q x p s u s t y q t v and p q s t do not occur in the conclusion we conjecture that this rule can be handled in the construction by treating it similarly to the rule a we then need to change the indexing of labels when constructing the limit sequent let the rule a choose ai the rules l and r choose ai ai and the rule cs choose ai ai ai ai as new labels further let the rule u create the identity relational atom an an only when n i then each li is a subset of a · · · ai and are not as frequently used in separation logic as the other conditions and they require nontrivial modifications in our current proofs we note that reynolds heap model as heaps are finite objects that only split finitely often on the other hand is true in the heap model however we are not aware of any formulae whose proof requires this property for these reasons we omit these from our modular framework of proof systems for the labelled calculus we now consider various labelled calculi obtained by extending with one or more structural rules that correspond to p c unit iu and disjointness d most of the results in this section either directly follow from the proofs in previous sections or are easy as those conditions for monoids are often given in a modular way eg in it is not surprising that our structural rules can also be added to since they just simulate those conditions directly and in the labelled sequent calculus calculi without some notions of separation logic omit so the rule c in asl gives an interesting system the proofs in sec still work if we just on a partial commutative monoid and drop c in e theorem the labelled sequent calculus p is sound and complete with respect to the partial commutative monoidal semantics for bbi as a result it is easy to obtain the following sound and complete labelled calculi for the corresponding semantics p iu and p d the proofs are similar to that for theorem calculi without similar to above gives another sound and complete labelled calculus c although we are not aware of any concrete models in separation logic that employ this framework theorem the labelled sequent calculus c is sound and complete with respect to the commutative monoidal semantics for bbi again using a similar argument as in theorem we can obtain sound and complete labelled calculi c iu and c d calculi without and the labelled calculus iu is sound and complete by prop and holds theorem the labelled sequent calculus iu is sound and complete with respect to the commutative monoidal semantics for bbi with unit to prove the completeness of the calculus d we need to go through the construction proof since disjointness is not it is easy to check that the proofs in section do not break when we define e by using eq eq d only and the sequent then gives the bbi kripke relational frame that disjointness the other proofs remain the same theorem the labelled sequent calculus d is sound and complete with respect to the commutative monoidal semantics for bbi with disjointness to our approach offers a sound and calculus for the extension of bbi with every combination of the properties p c iu d the case where none of the properties hold ie regular bbi have already been solved the cases covered by the implication of iu by d this provides us with the following labelled calculi iu p p iu p d c d asl p c c iu asl iu c d asl d implementation and experiment we discuss here an implementation of the proof system asl d it turns out that the ac rule is admissible in this system in fact it is admissible in the subsystem c as shown next so we do not implement the ac rule proposition the ac rule is admissible in c proof we show that every derivation in c can be transformed into one with no applications of ac it is sufficient to show that we can eliminate a single application of ac then we can eliminate all ac in a derivation starting from the applications in that derivation so suppose we have a derivation in c of the form x w x y y x y w x y x g x g ac where w is a new label not in the root sequent this is transformed into the following derivation x x g y y y x x g y y y u c x x x y x g x y x g u where is obtained by applying the substitutions x and w to lemma note that since w does not occur in the root sequent g x w g x x w x and x w x these substitutions do not introduce new instances of ac our implementation uses the following strategy when applying rules on a sequent try to close the branch by rules id l r r if not applicable apply all possible eq eq p c iu d rules to unify labels if not applicable apply invertible rules l r l r l r l in all possible ways if not applicable try rules r or l by choosing existing relational atoms if none of the existing relational atoms are applicable or all combinations of r l formulae and relational atoms are already applied in apply structural rules on the set g of relational atoms in the sequent as follows a use e to generate all commutative variants of existing relational atoms in g giving a set g b apply a for each applicable pair in g generating a set g c use u to generate all identity relational atoms for each label in g giving the set g if none of above is applicable fail step is terminating because each substitution eliminates a label and we only have finitely many labels step is not applicable when g g it is also clear that step is terminating we applications of the rule a to the pair x y z u v x when u w z y v w for some label w or any commutative variants of this pair eg w u z v y w is already in the sequent this is because the created relational atoms in such an a application can be unified to existing ones by using rules p c we view in a sequent g as lists and each time a logical rule is applied we place the in the front of the list thus our proof search has a focusing that although iu is admissible we keep it because it simplifies proof search formula f v opt heuristic a b a b a ¬a ¬a b ¬a ¬b b a b c a b c a b c a b c a b e c a b e c ¬a ¬a c b a c d a b d e b where b a e c a b a d a b e where c a e b a a c a b c d d c b a a b c d d b c a a b c d e e d a b c a b c d e e b a c d a b e c d a d c b e ¬ a b a d e d e b d e d a a b where d a and e a a a a a b ¬b a a a b ¬b fail a a a b ¬b a a a b ¬b f f f where f ¬ ¬ invalid invalid a b a invalid invalid table experimental results from the prover always tries to decompose the of a principal formula if possible to guarantee completeness each time we apply a r or l rule the principal formula is moved to the end of the list so that each principal formula for nondeterminism rules r l is considered fairly ie applied in turn we incorporate a number of optimisations in the proof search is used to collect the unsatisfiable core along each branch when one premise of a binary rule has a derivation we try to derive the other premise only when the unsatisfiable core is not included in that premise a search strategy discussed by park et al is also adopted for r and l applications we the search to consider applying the rule twice with the same pair of principal formula and principal relational atom since the effect is the same as contraction which is admissible previous work on theorem proving for bbi has shown that associativity of is a source of in proof search we the idea of the heuristic method presented in to quickly solve certain associativity instances when we detect z a b on the right hand side of a sequent we try to search for possible worlds labels for the of a b in the sequent and construct a binary tree using these labels for example if we can find x a and y b in the sequent we will take x y as the children of z when we can build such a binary tree of labels the corresponding relational atoms given by the binary tree will be used if they are in the sequent as the ones when z a b and its of course without a system our handling of this heuristic method is just a special case of the original one but this approach can speed up the search in certain cases the experiments in this paper are on a with intel core i cpu and gb memory running the theorem provers are written in ocaml we test our prover for asl d on the formulae listed in table the times displayed are in seconds we compare the results with provers for bbi and the incomplete f v when the formula is valid in bbi we run in an iterative way and the time counted for is the total time it formulae are used by park et al to test their prover for bbi we can see that for formulae the performance of is comparable with the heuristic based prover for f v both provers are generally faster than formula is one that had with but handles it trivially however there are cases where is faster than we found the example formula from a set of on randomly generated bbi theorems formula is a converse example where a randomly generated bbi theorem causes to time out and f v with heuristics to terminate within the timeout but without finding a proof due to its incompleteness formula is valid only when the monoid is partial and formula is the axiom of unit some interesting cases for disjointness will be shown later we do not investigate the details in the between these provers because they are for different logics we leave further optimisations for as future work future work in this paper we have focused on propositional inference but the assertion language of separation logic is generally taken to include firstorder logic usually extended with arithmetic or at least equality more importantly this language is interpreted only with respect to some concrete semantics the most wellknown of which is the original heap model of reynolds we refer readers to that paper for a more careful description of this model for the purposes of this section we will remark that values range across the integers and addresses across some specified subset of the integers that heaps are finite partial functions from addresses to values and that expressions are built up from variables evaluated with respect to some store values and the usual arithmetic operations the advantage of this model is that it supports the interpretation of the pointsto predicate which allows direct reference to the contents of the heap e e is satisfied by a heap iff it is a singleton map sending the address specified by the expression e to the value specified by the expression e the question for future research is whether our labelled sequent calculus and implementation could be extended to reason about such concrete predicates this section presents preliminary work in this direction while the full power of pointer arithmetic is an important subject for future work for the purpose of this work we set arithmetic aside and let expressions range across store variables e e e only as is done for example by berdine et al the rules for quantifiers are straightforward eg g h f ex l g h xf g h f ex r g h xf where e does not appear free in the conclusion of l equality between variables simply requires that they are as signed by the store to the same value giving rise to the rules g ee ee l g h e e r g h e e pointsto a more complex problem as it involves direct interaction with the contents of heaps fig presents labelled sequent rules for this predicate the semantics of e e first require that the heap be a singleton which is a spatial property that can be captured by abstract semantics a singleton world is not equal to the identity world and cannot be split into two this rules l and l the rules l and l address the content of heaps l says that two heaps with the same address value of e must be the same heap and l says that a singleton heap makes a unique assignment our implementation of the calculus defined by adding these rules to asl d is not complete wrt reynolds semantics for example it is unable to prove the formula below which is based on a property for due to vafeiadis and parkinson and is valid in the heap model e e this formula essentially asserts that a heap satisfying e e is possible to construct but our prover does not support explicit heap construction nevertheless this incomplete calculus does support elegant proofs of nontrivial separation logic such as the disjoint axiom of parkinson l a e e a d a a a a e e a a a a a e e a e e a a e e e e a r a e e e e l l our experimental prover extending asl d with the rules of this section has proved a number of tested sl formulae very see table for some examples formulae are taken from and in particular the first is the disjoint axiom proved above formulae are taken from vafeiadis and study of magic de morgan dual ¬a ¬b these results present evidence that the work of this paper may form the basis of practical theorem proving for the assertion language of separation logic dealing with and in our labelled calculi is one of our next goals we are also interested in extending the techniques of this paper to concrete semantics other than reynolds heap models such as those by calcagno et al and and birkedal related work there are many more automated tools and logical for separation logic than can reasonably be within the scope of this conference paper almost all are not directly comparable to this paper because they deal with separation logic for some concrete semantics one exception to this concrete approach is a hol with support for automated reasoning about the shape of sl specifications ­ exactly those aspects captured by abstract separation logic however unlike does not support magic wand this is a common restriction when any notion of sl because is a source of undecidability conversely the and that do incorporate magic wand tend to give little thought to decision procedures an important exception to this is the of and which are designed for the decidable fragment of the assertion language of concrete separation logic with identified by calcagno et al but may also be to the full assertion language these methods have not been implemented and given the difficulty of the development we expect that practical implementation would be nontrivial another partial exception to the to omit is which supports automation yet includes the de morgan dual of however does not support additive negation nor implication and so cannot be indeed in this setting is syntactic sugar that can be eliminated the of magic wand is not without cost as the connective while less useful than has found application a list follows generating weakest preconditions via backwards reasoning specifying iterators reasoning about parallelism and various applications of such as the specification of iterators and buffers for a particularly developed example see the correctness proof for the graph marking algorithm of yang which involves nontrivial involving and these examples provide motivation to build proof calculi and tool support that include magic wand undecidability which in any case is in program proof should not us from practically useful automation our work builds upon the labelled sequent calculi for bbi of et al their prover f v implements a calculus for bbi but is incomplete our extensions to et al involves two main advances first a construction necessary to prove completeness second our prover deals with labelled sequents directly and given certain fairness assumptions is a complete procedure for and its variants the link between bbi and sl is also as motivation by park et al whose bbi prover was used for comparisons in sec this work was recently refined by lee and park in work independent to our own to a labelled sequent calculus for reynolds heap model their calculus like ours cannot prove the formula and so is not complete for these semantics also related but so far not implemented are the for bbi of and which as mentioned in the introduction to this paper are to be with to via a rather involved proof in contrast the relative ease with which certain properties can be added or removed from labelled sequent calculi is an important benefit of our approach this advantage comes from structural rules which directly capture the conditions on kripke relational frames and handle the equality of worlds by explicit global substitutions finally we note that the construction of this paper was necessary to prove completeness because many of the properties we are interested in are not as proved by and that paper goes on to give a sound and complete of these properties by extending bbi with techniques from hybrid logic sequent calculus and proof search in this setting is another promising future direction by private communications with authors g e e l h h h g h e e h g h e e h h h g h e e l hh h e e h e e hh l g h e e h e e g h e e g h e e h e e l figure some rules for the predicate in separation logic formula e e e e e e e e e e e e e e x x e x x x x e e e e e e e p e q r p q r p q p q e p table experimental results from the prover references a w appel tactics for separation logic unpublished f the description logic theory implementation and applications cambridge university press j berdine c calcagno and p w ohearn symbolic execution with separation logic in volume of lncs pages ­ r s and e on the wand and comput ­ j and m undecidability of propositional separation logic and its in lics pages ­ ieee j and j parametric completeness for separation theories technical report rn c calcagno h yang and p w ohearn and complexity results for a spatial assertion language for data structures in volume of lncs pages ­ c calcagno p w ohearn and h yang local action and abstract separation logic in lics pages ­ ieee c calcagno m parkinson and v vafeiadis modular safety checking for finegrained concurrency in sas volume of lncs r and j o local reasoning for abstraction and sharing in pages ­ acm r a and a w appel a fresh look at separation algebras and share in volume of lncs pages ­ m s and m j parkinson modular reasoning for deterministic parallelism in popl pages ­ acm d and d expressivity properties of boolean bi through relational models in volume of lncs pages ­ d and d and resource graphs for separation logic j logic comput ­ c and c resource usage protocols for iterators j object tech ­ z a and r a labelled sequent calculus for bbi proof theory and proof search in lncs page extended version at s and p w ohearn bi as an assertion language for mutable data structures in popl pages ­ acm j b and l birkedal separation logic in esop volume of lncs pages ­ n r reasoning about iterators with separation logic in pages ­ acm d the formal strong completeness of partial monoidal boolean bi to appear in j logic comput d and d exploring the relation between intuitionistic bi and boolean bi an embedding math structures comput sci ­ d and d the undecidability of boolean bi through phase semantics in lics pages ­ ieee w lee and s park a proof system for separation logic with magic wand technical report cse a practical tactics for separation logic in volume of lecture notes in computer science pages ­ springer s and j von structural proof theory cambridge university press p w ohearn and d j the logic of implications symbolic logic ­ j park j and s park a theorem prover for boolean bi in popl pages ­ acm m parkinson local reasoning for java phd thesis cambridge j c reynolds separation logic a logic for shared mutable data structures in lics pages ­ ieee h g and m types bytes and separation logic in popl pages ­ acm t a of in hol in volume of lncs v vafeiadis and m parkinson a of relyguarantee and separation logic in concur volume of lncs pages ­ h yang local reasoning for stateful programs phd thesis illinois at 