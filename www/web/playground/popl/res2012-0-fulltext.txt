presentation of the sigplan distinguished to richard hoare and andrew p black portland state university peter w ohearn university of london categories and subject descriptors d software engineering verification d formal definitions and theory f logics and meanings of programs specifying and verifying and reasoning about programs f logics and meanings of programs semantics of programming languages general terms verification reliability languages theory security citation long in computing is with engineering and scientific contributions to programming languages his views on programming language design have been recognized as even by those who to follow his advice two contributions stand out as fundamental the development of what is now known as hoare logic and communicating sequential processes hoare logic is a system for reasoning about imperative programs it was introduced in the article an axiomatic basic for computer programming which is perhaps the most page paper ever published in cacm on earlier work of robert an entire of computer science has developed from initial ideas many modern verification systems build on hoare logic only years later cacm published paper on communicating sequential processes csp with milners ccs but complementary goals csp has been it provided the basis for the programming language and its realization in the it has been used for modeling and verifying the concurrency properties of critical software systems and it inspired a of subsequent concurrency research although either of these contributions would alone justify the hoare is doing more with his unifying theories research which aims to unify theories of programming across paradigm abstraction level and semantic style beyond all of this is for his his and his to his chosen calling he is the of a and a a note from peter ohearn as the popl program was being following a from gordon the popl pc and up with the novel idea of the presentation of the sigplan with an of when the popl john field and michael me with this idea and if i would consider the i was filled with obviously ideas have me at the beginning of my i read essentially all of his papers covering a wide range of topics including language design programming methodology and theory the and depth of his contributions is plain to see but in reading his papers something else of me time and again their simplicity many of contributions ­ including his work on hoare logic data types data abstraction structured programming refinement monitors csp and unifying theories ­ seem so natural as to be almost obvious in how did he do it how did he produce so many simple ideas even though in recent years i have to know as a and and a amount from i that i still dont know during the we will go into towards simplicity his and his and perhaps a few questions that i dont want or you to know about just yet copyright is held by the popl january ­ pa usa acm 