propositional logics of programs systems models and parikh mathematics dept boston univ and laboratory for computer science mit abstract we indicate below the sections where is the various results in this paper and these results are fully described the partial correctness assertion is in pdl in the form a we shall consider the question of when a given finite set of implies another and give optimal complexity bounds we also give other results of an algebraic nature is less well understood than pdl since the technique of fl that applies to the latter fails for the former we point out a translation from pdl to which leads to a lower bound for the latter what do models of pdl look like we show the existence of canonical and universal models and show how an infinite model can be related to its fl factors background pm or the propositional logic of programs goes to fischer and fl from now on see who considered the propositional version of dynamic logic and proved it the former including to be decidable since then several parikh pratt and references have been interested in this area for some of the published work see this research was supported in part by nsf grant permission to copy without fee all or part of tor or tor ut are copies to to prior a machinery to copy requires a fee and or specific permission apart from as a base for a logic of programs pdl is very natural and algebraic its connections with the theory of regular sets and with modal logic have already been pointed out by pratt and fl in our the results in the present paper constitute a substantial extension of our knowledge of pdl and related systems throughout with deterministic this summary will mean pdl atoms but no other restrictions notation letters a fl will range over programs propositional program schemes really a b will be formulae pi qi will be atomic propositions and ai b are atomic programs which are a propositional substitute for instructions andor subroutines if m is a model for pdl then w will be its set of states and s t p q will be elements of w ms fa will mean that the formula a holds in m at the state s we shall use as a formal symbol whereas will stand for the informal implies we give precise definitions of the basic notions of pdl a reader familiar with pdl may skip or over these but we some attention to the note following definition b and the comments at the end of definition d a the symbols of pdl also include atomic symbols alan atomic a v c z alan definition b define am expressions a and formulae a by simultaneous recursion program expressions will be called just programs i each ai is a program each pj formula ii if a formulae a iii p are programs so are iv if a is a formula is a program then aa and aa are formulae v if a is a formula then a is a ii acm in below the condition v above is restricted to formulae a moreover the formulae that occur in the statements of theorems are themselves also program free ie they are formulae of the propositional calculus pc from now on stands for consequence in the pc definition c a model m for pdl consists of a nonempty universe w for each atomic propositional symbol pj a subset of w and for each ai in a subset ri of ww definition d given a model a state s a formula and a program a we define and ms a simultaneous recursion as follows a by i ms k pj iff s pj ii ms iff ms a or ms b similarly and i iii ms iff for some t e and mt iv if u ai then r ri p u x reflexive v if a a transitive closure then of ia ba finally we let iff for all s t w ms ea g stands for global if r is a set of formulae similarly then ms ir if for all a in i ms a now we get notions of consequence iff for all m s m s implies ms a iff for all implies local consequence and global consequence coincide if r is empty otherwise local consequence is eg we have p ap but we do not have p a p since running the program a may the fact that p holds this does not apply to global consequence since there assuming p amounts to assuming that p holds throughout the model and then of course p does imply ap in we are with global consequence which is the natural one for partial correctness however theorem of applies to both kinds of consequence part of the work on this paper was done while the author was a at the we are to meyer for several discussion sessions we had calling this paper at popl but the idea with some result on the expressed in pdl as means if the precondition a holds when a begins then the postcondition b holds if and when u terminates in other words m iff m clearly questions about propositional are questions in pdl but since they are questions of a special type one may hope for extra information or ease of decision procedures we shall be interested in the questions when do a finite number of imply another and what is the computational complexity of deciding such an implication we give information about such questions for the case of i a single program ii several programs and iii arbitrary regular programs with tests note that the notion of consequence used below is the global one recall also the note after definition b above moreover formulae ai etc in this section are program free and so are all tests in programs pc stands for ordinary consequence or validity as the case may be in the propositional calculus definition iff for all models m if then for vi sk the set of expressions al al such that is a context sensitive language csl proof the proof closely the proof of proposition due to meyer in pp however for our purposes we the of a regular expression to that of a which is a regular expression with propositional tests thus for example p b is and represents our familiar if p do a else do b in the following we assume with cm pp and indicate only the necessary modifications so suppose al al r from now on fails then there is a which satisfies the hypotheses but not the conclusion by routine arguments there is a tree ml in which each ra is a function from w to w and if a and b are distinct atomic programs then the ranges of ra and rb are disjoint such a tree is obtained by making extra copies of states so that no state is the of two distinct program arrows in this model there is a computation of the program represented by the program expression a which the precondition a and fails the postcondition b the hypotheses hold throughout our let the path taken by the above mentioned computation be where p is p where the si are the states along the path and bi is an element of al an each then let m be m to the set then m is a for this happens because all our tests were program free so that the computation proceeds the same way even if all states except the si are removed the partial correctness assertions which held in ml also hold in the linear and the latter is completely described by the string x where ti is the truth assignment at the state sf ie if pi holds at si then the truth value of pi in ti is t otherwise f the string x completely describes the computation p as far as we are concerned and hence r lf holds iff there is a string x as above the rest of the argument consists of showing that we can construct an a such that given the input r the automaton nondeterministically looks for a string x as above and accepts input if f it finds such an x now we modify the argument of pp for r s k let er be a expression which describes the set of those strings x which contain substring y u such that ar is true under tbr and y represents a possible computation of the program r with start state si and last state s let el be let e be the expression which accepts those x which represent a possible computation of d from to sm and such that ta in fact e is just the expression a a b if tests were absent we could just use the machine in however tests are the point and so a slight modification is needed let be the following program for our a for every marked bracket which immediately precedes a test a ie which brackets the test if the current truth assignment t to be described later makes a true then replace the mark on the preceding a by one on the just after if t makes a false then just eliminate the mark let be the procedure do n test do n where n is the length of the input and as in now the procedure for a is as follows is write brackets contextfree el and e on a mark leftmost check that the ei are in the appropriate language note that tests are a cf set generate nondeterministically is current a truth assignment do if the rightmost of e is marked and that of el is not then accept s nondeterministically alan call update guess an element bi of u call n times l nondeterministically ti ti is current guess a new truth assignment go to three input then the a can accept the iff r v it can be shown by slightly generalizing the argument of theorem above that if is any truth functional combination of the the question is is still in csl moreover if a is then the number of possible cycles through the loop is bounded by n since marks can only move in the same left to right since each step takes only a polynomial amount of time then the problem is in space in theorem if a is free then the problem is npcomplete it is known p remark of regular expressions complete in csl let a mean that that the is a and are regular expressions ie the languages la and l are equal then a d iff pq and f hence the problem is also complete in csl thus the bound of theorem is best possible we now consider the case where the all equal a this simple case has some nice if are formulae of pc we write al ab for v we state the following lemmas without proof one of the lemmas is well known the other also probably occurs in the literature e let t f respectively stand for the truth values we propositional and variables if is any formula then with is equivalent to definition the propositional function s iff j can never go to f when some pi goes from f to t the other pj being fixed f is monotone iff is t or f or can be expressed using a and v only definition the program are rules for a single where is v or a are and let be constructed from etc are obtained from ai etc when each pi is replaced everywhere by a new qi a the rules above are complete for proving assertions of the form al k aj b i al a ii there is a monotone such that a and b iff iii ab ab c the set of all true assertions of the form a b lf ab is npcomplete a and b amount to the claim that i ii iii iv where iv is ab can be proved from the hypotheses using the rules given so suppose iv call the rules the rules the rule the rule given a deduction of from r al al the deduction written in tree form so that the weakening rule is eliminated this process is unambiguous since the structural rules can always be and the weakening rule is unary now we get a deduction of some a a b which has only structural rules in it but it is immediate that since only weakening rules were eliminated that a b b thus a single application of rule will yield ie a b now think of this process as having been applied to a set pi a qi where pi and qi are propositional atoms then since a and v are both monotonic connective what we would have would be a proof of some of the form thus a is and b is since aa b is from a a b by a weakening rule ii follows the fact that ii implies iv can also be easily seen if we use lemma f for if is monotonic then there is a formula which the and is either t or f or is made up using a and v only the case where c is t or f is trivial otherwise a deduction of bk can be obtained from r using the structural rules from that can be obtained by the weakening rule to continue the proof we point out that iv i trivially since the axioms above are valid and the rules are sound to prove the converse we need to the notion of consistency we say that a set of closed under the rules above and containing the axioms is if it does not contain the t a f clearly by the weakening rule an inconsistent set contains all if l is consistent and r ie cannot be proved from r with the rules and axioms then it can be shown that r together with and is still consistent extend this to a maximal consistent set t then t cannot contain moreover there are unique truth assignments tl t such that does not belong to t iff c is true under tl and belongs to t iff d is true under t take the model m of pdl given by w all truth and ra e then holds in m and fails now consider i iii suppose r then there is a model m in which r holds and in which fails ie there is a pair of states in such that a holds at s and b holds at t let tl be the truth assignment at s and t that at t then the m in which w all truth assignments and i tl t will also satisfy r and fail however iii is precisely the condition that a model like m cannot exist since tl and t are not necessarily related we can achieve the effect of their independence in a single truth assignment by using pi for the values under tl and qi for the values under t to see that c holds clearly that the problem is np on the other complete for a formula b is a valid where p is a propositional occurring in b this the proof iii shows hand it is np iff is a variable not to provide specific background we point out that for the whole of pdl have proved a nondeterministic exponential upper time bound and a deterministic exponential lower time bound pratt has a deterministic exponential upper time bound for pdl and pdl has the language and semantics of pdl but the class of models will be restricted by the requirement that all atomic programs are deterministic ie each ra is a partial function the technique used in fl for pdl fails for which is therefore less well understood the reason is that even if one starts with a model for and out a congruence relation of a suitable kind as in one ends up identifying distinct states in w and the result is that a deterministic atomic program may become nondeterministic however it can be shown this is a joint result with richard that any complete for pdl becomes a complete for if the axiom scheme is added also meyer has shown that has the finite model property in this section we point out a connection between pdl and which yields a lower bound for the complexity of the latter notation for this section only if a is a formula of pdl then a is obtained when every program atom ai replaced by ai b where b is new is note that the map a a is computable linear time and leads to a linear growth in length in theorem rk a in pdl iff rb a in proof suppose rk a in pdl then by substituting the programs ai b for the atomic programs ai we have in pdl however every model of is a model of pdl and hence whatever happens in all pdl models of l must also happen in all models of r ie in conversely suppose that in pdl then there is a countable model m of pdl in which r holds and a does not say at some state s now for each state t of w and each atomic program a we make an extra copy ta of t which satisfies exactly those pj that t does let w be w plus all these ta now we define to be the set t w and we define in such a way that t at tt is the nth element of ra in thus the program b takes us to precisely the places where ra b does but is made up of deterministic atoms this defines a new model m such that is a model of and such that if the state t satisfies satisfies a in m thus does not satisfy a in m a formula s satisfies hence l a in m then r in m and f a in t we could also define a strict version of where not only the atomic programs but also other programs are deterministic ie where and u are eliminated in of if then else and while do we do not have any information about strict theorem above is not dependent on the class of programs being regular it applies equally well to context free recursive or even larger classes of programs cf course this is not much help with context free pdl or since they are easily seen to be undecidable however some special classes of formulae may be decidable since theorem reduces pdl to the fl lower bound for pdl theorem s automatically becomes a lower bound for there is a constant c such that the satisfiability validity problem for is not a member of where n is the length of the formula proof this is an immediate corollary of theorem above and theorem s which is exactly like theorem s except that it is about pdl or model for pdl pdl lacks the property it is possible for an infinite set i to semantically subset of r r u imply a formula a even though no does an example is a then rp ap finite but no finite subset of r implies ap a slightly more complicated argument shows that is also fischer and have used a technique in their decision procedure which gives us some information about finite models but none about infinite ones and makes the latter harder the reason is that as is shown in every consistent formula and hence every consistent finite set of formulae has a finite model a consistent infinite set of formulae ie one from which a contradiction cannot be proved have the property that every finite subset has a model however the set itself may not have a model a second is as follows suppose ml m are two models with the same set w of states and such that for all s t w for all formulae a of pdl a iff ms a are ml m isomorphic the answer turns out to be no eg let w q let iff mi iff j i pj and mq pj for all j now let ra in ml be the set and in m the set then ml m are not isomorphic but have the same formulae holding at the same states of w in definition below we define two notions of equivalence between models in addition to isomorphism and provide canonical elements in the equivalence classes for each kind of equivalence roughly in a canonical model there is no duplication of states and each ra is as large as possible without the semantics a canonical closed model is a canonical model with the additional property that it has all the states that it might have le if a possible state is arbitrarily closely approximated by states already in the model then that possible state is also there thus a canonical closed model corresponds to a closed set of real numbers which contains all its limit points kozen has also pointed out that such notions are essentially topological in nature if we consider the topology see also c on family of all sets va s w i ms ia then if m is canonical then this topology is and if it is canonical closed then m is a closed of mu below however mu is not compact since as we noted before the logic is not compact given models ml m of pdl i ml s m iff vp c wi vb iq g w fb iff mq b ii ml m iff ml s m and m s ml iii ml s ml iff vp c wl q t w vb mp kb iff mq tb s stands for strong the difference between i iii is that in iii the state q depends only on p and iv ml s m iff ml s m and m ss ml theorem ml m ml is isomorphic ml s m m m proof trivial to m none of the reverse implications hold thus the equivalence classes for s are not upto isomorphism however we can find canonical elements of them ie in each equivalence class under or there is a element m is canonical iff la vp q e w p q b mq b lb vp q e w pq e ra iff vb mp b u mq i b m is closed iff a it is canonical and b given an m q if for all b p such that mq b mp ib then p such that vb mq pb note that half of condition lb above holds in all models of pdl simply because of the semantics of a however in canonical models the are full so that the other direction holds as well the process of out the out the ra will be sufficient will always produce a filled out model without changing the semantics now if the states that satisfy the same formulae are identified then we get a canonical model in which each state still satisfies the same formulae this proves part of theorem next theorem vm m m m m is canonical and vm i m m is canonical closed and m z m universal mu canonical closed such that for all m w wu st vb mp ib iff mu op b b here means there is a unique we already have shown l to see take all semantically consistent complete sets of formulae ie for any s in any model m let x be the set of formulae that hold in m at s let wu be the set of all these x coming from these of models and now define the relation ra in mu to be the set i e x a c xt it is quite straightforward to show that ia iff a xu thus mu is the required universal model for any m the map s xs is the required map finally to see the m there is just the of wu consisting of those xs such that every element of x is true at some state of m in the theorem below s ranges over finite sets of formulas of pdl ms is the factor model theorem i mi m iff ii vs iff iii vs iff iv vs ms s ms ms proof this is clear enough for the cases iv iii and iii ii also i ii for if ml m then all factor models their semantics from ml and m will ah be thus i ii also if ml mz then there is an s in wi say and a formula b such that b and in w will b hold then let s be some fl set containing b b will hold at the equivalence s in ms but in ms hence s ms to finish the proof we only have to check class of ii iv suppose construction if s ti in wi then there ii now in is a which the holds fl in ml at s and not at ti since ws is finite the conjunction bs of the for s ti will s ie s will be the unique state satisfying bs let s be in w such that ib it is not hard to see that must be an isomorphism into and by ml and m we can see that it must be onto d kozen on the duality between dynamic algebras and kripke models ibm report no rc october r parikh a completeness notes in no pp result for pdl springer r parikh a decidability result for a second order process logic proc th ieee on ann pp r program parikh some applications of topology to semantics to appear in math systems theory v pratt considerations in logic proc th ieee symp on pp v pratt a practical decision method for pdl proc th acm symp on san diego k a completeness logic of programs abstract notices of the math vol oct theorem in the modal no c l the complexity of decision procedures in automata theory and logic phd thesis mit project mac tr t references cl f a completeness technique for semantics proc acm symp on the theory of computing pp cm fischer and r propositional modal logic of programs proc th acm symp on the theory of pp d first order dynamic logic lecture notes in computer science no springer c d kozen a representation f pdl ibm research report theorem for models of no rc september 