a dynamic logic of with incomplete information aiken john computation cambridge h reif lab university computer l science department university new york of summary a crucial property of distributed systems is the k of complete information by any given process about the states of other processes the contribution of this paper is a fundamental modal logic for with incomplete information section gives an informal introduction to the formal tions are in section by way of this and theoretical complete information logic we correspondence and a between games of in fischer and have shown a log space reduction from the outcome problem for two person games of perfect information to of formulas in their propositional dynamic logic pdl we provide in section a reduction from the outcome problem for games of incomplete information to satisfiability of formulas in our logic although in general satisfiability satisfiability in out logic is undecidable the problem of formulae with visibility structure is shown decidable using the methods for solving hierarchical games developed in reif and and reif and also the model theoretic techniques of fischer and and pratt b at a more practical level we argue that the semantics of our logic provides a robust paradigm in which to view distributed problems we apply our logic to describe total correctness properties of programs with shared variables as well as processes with message passing permission to make digital or hard copies of part or all of this work or e are or e on to to prior a its date appear and no is by permission of the association for computing machinery to copy otherwise or to republish requires a fee and or specific permission acm introduction motivation systems incomplete information in computing incomplete information variety of computing system example arises naturally in a applications for a security database systems frequently information classified to be or only by a restricted class of users other users to gain direct access to this classified information may nevertheless infer come or all of its content from various incomplete information that these users are to ob also see jones and for other database security issues similarly operating systems must be designed to be secure against and users which may to the system using some incomplete information on the system specifications available to them b reliability frequently systems contain un reliable but must be guaranteed to satisfy certain minimal operating specifications of situations in which to a series of or modify their performance in reliability problems ae these the system generally have only incomplete information as to which sub components have or just how those still operating have modified their the bell electronic switching systems and network are examples of computing systems which are designed to take into account such reliability issues c distributed with incomplete information systems are designed with processes from each other typically no single process a has complete information about the current state of the entire system direct queries by a to other in the system might either be impossible due to system configuration useless because of changes in state or f or cost considerations generally a can only infer the states of other by actions the above applications distributed can express system correctness complete information our logic which in situations of in the next subsection defines games a robust model for computing information arises game definitions a game g consists of which which seem players joint k partitioned into dis a set of positions a next move relation pi for each player pi i j i specifying possible next moves for each player i a position is for a given player if he has no next move a play is a sequence of moves ii k games are assumed to be reasonable tions encoded as strings in a fixed alphabet do not grow in size during plays and the next move relation is in polynomial time to introduce incomplete information to games each position is partitioned into a fixed number of elements called resources each player i e k is allowed to view and modify only a restricted set of these resources a strategy t of a player i is a mapping from plays of g ending in a position in pi to a next move for i we require that strategies of player i be independent of these resources in positions not in the outcome problem for game g given initial position ii is defined is strategy for each player of t such that in all resulting plays from ii result in a position for a player of t of the moves by players of t a strategy t is markov if t depends only on the last position of any play to derive the next move note that markov suffice in games of perfect information where as in games of incomplete information strategies are required for players to infer por tions of positions and visible to them this will be an important consideration in our design of a logic with incomplete information it is interesting to note that the outcome of g is not able if we consider team t to be an to view all portions qf positions single player since the strategy of t must suc against all counter of perfect information moves of t t can similarly in the case be con a single player thus all games of perfect information are essentially how ever in the team a single of players the general case of incomplete information t can not always be to a player the lack of complete information of t about each others is essential to the game players can only be con to one if they view the same resources are on the same team and in general the outcome of games of incomplete information with or more players is undecidable and reif but the outcome of two player games is decidable reif shows this problem complete in in the case of hierarchical exponential games time also visible o the outcome is decidable k n visible for any number k of players games that processors play it is our thesis that formation are good models processing this this paper games of incomplete for distributed the logic proposed games of perfect information have been pre used as models for computations note that nondeterminism is essentially a game of perfect information the notion of alter kozen intro to model parallel systems corresponds to games of perfect information recently alternation has been proposed by and reif and essentially to games of in complete information a restriction called private alternation corresponds to multiple per son hierarchical games have observed of games for example and more recently that total correctness proper systems can be formulated as can be stated from some initial state of the system can processes k so that process o cannot reach a given state and only considered these total correctness properties in situations of perfect information and from our previous discussion of games of perfect information we can always reduce such games to processor problems when about in this paper we consider the more general each process has only incomplete information the state and of other processors case to model correctness properties of a system of distributed processes by a game of incomplete information we of course processes players of the games a key point is that we make no lower bound assumptions about the computing power of processors the positions of an induced game of only certain fixed portions of the and memory of the processors other portions of the memory of processors most likely the of their memory if the processes are nontrivial may not be contained in positions as usual in games of incomplete information each position is into portions visible to various processes and legal next moves for processes are determined only from visible portions of positions however strategies of processes may be arbitrarily complex since we have assumed no lower bound on the size of the portion of processes memory not represented by positions similarly the relatively simple rules of a game of are dependent only on the fixed sets of and in the of the players or on the table however the complexity of strategies are bounded only by the intelligence or of the players a related issue occurs for the security applications in data base and systems discussed in section here the process must determine a winning guaranteed security of the com power of the processors another possible but somewhat too restrictive we believe model for distributed is markov games here we require that the positions of the induced game include all the state and memory of the processors consequently process strategies are markov dependent only in the current position see section the outcome of games restricted to markov strategies is decidable and reif within section we provide an alternate markov semantics for our proposed process logic previous logics and their power of encode games we have seen that correctness properties of distributed systems can be as the outcome of games it is natural therefore to consider the ability of previous process logics to encode games more formally for the logic l and a class of w games we wish to determine if there is a reduction from each game g e and initial position ii to a formula pg to iff the of l outcome such that pg of g from o ii is is a for simplicity we consider only logics whose are propositional a quantified boolean formulas have only the power to encode the outcome of time bounded games of perfect information and meyer recently and reif have proposed a class of quantified boolean formulas with dependencies which can encode games of incomplete information with polynomial time bounds b model logics various model logics contain ing a single model operator were shown by to have precisely the power to encode games of perfect information with polynomial time bounds variants of these logics have appeared in i containing extended a temporal process logic pnueli a model operator eventually with an logic containing also a model operator manna and pnueli ii a logic for data bases with information incomplete iii et al a logic for knowledge inference although these last two logics involve incomplete or hidden information they seem much to weak for process logics since they can not encode even games of incomplete information model operator eventually seems essential to any process logic and a similar model operator in our logic and pnueli has observed that his temporal logic is inherently a single program must be provided to the logic via some fixed semantics where as the follow ing dynamic logics and ours are various programs are provided within the formulas of the logic rather than by a fixed semantics c dynamic logics dynamic logic pratt features model operators which contain pro grams a in investigation of this the propositional logic logic pdl was shown by fischer and to encode games of perfect information thus pdl can in theory express correctness proper of systems with perfect mation as well as correctness properties of the nondeterministic single process systems for which pdl was intended to express the process logic recently proposed by pratt a is a propositional dynamic logic with model operators j preserves which we generalized in our proposed logic throughout may be defined in terms of parikh has also proposed a powerful l which allows quantification over sequences logic in summary we note that no previous process logic can directly express incomplete information which we find is a key element of distributed processing furthermore the previous model logics incomplete information only a very restricted class of model operators and can not encode even decidable classes of games of incomplete information features of our logic although the syntax of our logic is that of the process logic of pratt a the semantics of our logic is unique in the sion of incomplete information we present only the features of our logic here a formal definition of our process logic is given in section the programs found logic are called actors consists of an within modalities in our w actor a is basic if it program fragment to include incomplete information each basic actor a is allowed to view and modify the values of only a restricted set of visible propositional variables furthermore we each state into state elements and restrict each basic actor to view and modify only certain of these state elements thus in general each state contains elements public to all basic actors certain state elements visible only to restricted sets of basic actors and also state elements private to basic actors the semantics basic actor a are to extend a t a sequence of previous states to a new t ts consisting of t fol by a new state s a pair tt is an we require that actions of basic actors of those portions of the old not visible to basic actor a furthermore the new state s may differ from the previous state only on those portions of s visible to a as a consequence of these semantic tions relative to each basic actor a there is an equivalence relation over which a not distinguish the induced computation tree con nodes by various basic actors as a consequence this semantics of information is not directly in previous process logics even in l of parikh actors the programs of our logic are con from basic actors by sequencing nondeterministic choice al nondeterministic looping a and parallel execution al are constructed from propositional variables logical connective and model expressions ing operators g y contain given an actor a actors of a the oa players in a game with by a considered let be the basic are considered to be the legal re actions of the oa and plays corresponding z of the game to are considered a of given a formula p a p denotes team have a strategy yielding only holds ie state of all actions of team where p p must hold on the last of the a al p denotes team al have a strategy yielding p holds of all ie p holds during which on some state a z p denotes team al have a strategy ie yielding once p p holds which preserve p holds on a given state of a on all later states also that the semantics of a basic program of process logic which corresponds to a basic actor of our logic is a mapping from the cur state rather than from the entire as in our logic to a new old is possible to similarly restrict the semantics of our logic in markov semantics we require the actions of basic actors to be dependent only on the final state of the the resulting logic is able only to describe markov games where players can only remember the current position and cannot infer about the private positions of their from previous plays see section as we have noted this markov semantics is applicable to with incomplete information only if we assume the propositional variables of the logic encode all the memory of the processes this tion seems reasonable only in the case of very simple processes in the case of perfect our model operators t model operators respectively of and al q are identical to the process logic j l applications of here we sketch tions for some general domains of a various synchronization i boolean primitives can be viewed as a natural logic for with shared variables as syn primitives these shared variables are the propositional variables of formulas viewed commonly by various basic actors ii synchronization by communication can properties with communication such as described also easily describe total cor of a language primitives in send and receiver we assume a set c of communication channels each channel allows tion between two fixed processes k the state of each channel c c is either empty or full and a full channel c contains value vc over a fixed finite domain program statement is executed by process only if c is initially empty and c is full with value v program statement is executed by process only if c is initially full x is set to the current value vc and immediately c is empty note that between of messages these semantics and is allowed require receiver a no programs including these communication primitives programs send and receive can be translated to with only shared variables as primitives thus their total correctness properties can be described in by introducing for each c e c a set of propositional variables encoding the value of c these variables are viewed only by the and receiver of c the program statements and can then be substituted by equivalent program segments containing the introduced variables b local vs distributed control an actor a containing no instance the operator ii corresponds case of a set of local processes sequentially to ing a single program of the the to pdl by operator i i introduced also and fischer allows we view our use of the operator essentially only a syntactic device any formula of m can be substituted by an equivalent formula p of mf with no instance of i i by addition boolean variables as described in of and fischer as p for distributed i e o k actor then control for example in system where each process executes a distinct program a an denotes their parallel execution c games we noted earlier that correct ness properties could be formulated as games of incomplete information formulas have the power to directly and express such games this is proved in section we give some examples below consider a distributed system with processor k and corresponding programs actors ak as above we assume for each i e e all the basic actors of ai view the same set of propositional variables thus by the discussion in section the basic actors of o can be to a player i in game we consider process o to be distinguished say a controller or scheduler our games will have t k and t be the basic actors of al and be the basic actors of ao also let po be a formula at the initial state of the let q be a formula which holds precisely system and a total correctness the formula expresses correctness that process o can guarantee that property q holds on termination the b the formula express that q example that k can is accessible eventually if q holds unless process state the above formula of process o from to guarantee holds for o is in a dis expresses this state c the formula i i ak v q expresses q never express that holds process o can for example by guarantee that formula the above formula can process o formal definition of the informally here for distinguishing presented a rigorous features of our in the introduction definition logic were we the syntax we recursively define a set actors grams these actors of previous process and a set are similar to the logics of pratt of and and fischer although as noted in section our have a somewhat more powerful semantics for our basis we assume a set formulas which are simply pq also we assume a set of do d which are symbols ab distinguished o of basic variables basic there is a let be let pq let al be a set of basic actors we may be and of a and i apply negation to construct formulas tp and ii apply i nondeterministic sequencing looping ii parallel execution test to construct the actors a p p must be propositional a iii apply modal operators after ring preserves the l informally connective a lp ail we augment our syntax with vr defined as usual from and we associate with each basic actor ao a et formulas for each such that whose value a may view basic we assume that c o there is an of a a consists of semantics a model d for i a set s of states ii a basic facts variable holds ld c s x o in state providing iii for each basic actor ao providing basic denotes that basic into state s actor a may take a relation s ms state s we will m drop the for a fixed model let visible be those basic facts such that p intuitively visible are those basic fact visible to basic actor state s likewise let be basic facts sp such that a sp a in those we require for if any model is a basic al that action then actions of visible to a only a modify those thus basic portions of states let a c be a finite sequence of states in s in section we extend our semantics to allow for infinite let s be the set of all such give a let visible be the sequence derived from t by a substituting each s in t visible in place of b substituting a single maximal of identical element elements x for xx x intuitively by a visible is that portion of the basic facts associated with which basic vector a may view and by b we re that a be to modifications to basic facts not visible to a let a of basic partial mapping rs actor ao such that be a a for each t in the domain such that t ends in some state of b if r is also in the domain of o and visible visible then we consider a set of basic actors a a a of is a consisting of a union of strategies for each ac l a team strategy a available to the members of all the base actions as follows for each basic actor let se iff s s and af or and thus the actions not restricted of basic actors not in l are given this the actions of relation fixed actors rs team ae strategy are o for al defined by the t t j s i iff fst if u is a basic t ends in state actor a then s t ts and ii with if al then com iii if a then tb up iv if a b then transition closure of is the re v if a p then is a basic action t iff the semantics of a can be defined the above by adding boolean variables to the sions see and fischer that if t t then t is a prefix of from t we wish now to extend to a relation c rs x giving acts about all formulas for each propositional variable let tp iff t p t p iff iff sp where s is the t not t fp t p and t q last state finally we define the semantics of the modal team strategy for al with for all t such that t p tt r team strategy o for with t denotes tr we have the nonstrict l such that t p for some tt prefix relation let f team strategy o of l such that rs with t t t if t p then t p for tt t let a formula exists a model l s lp pe be if there with state s e s such that games of incomplete formulae information into the complexity of satisfiability of classes of formulas is related here to the complexity of the outcome of various classes of games of information considered in reif and and reif the visibility structure formulas of of games and let g be a game see the game definitions of section with players rk and each player i k allowed to view just the resources of the set we assume each re source takes a value from a finite domain of constant size let the visibility directed graph of i minimal sets visible resources structure with vertices of players with g be the consisting the same ii minimal sets of resources viewed by the same players of g which are for each vertex x of type i let the edges x enter precisely the resources viewed by players of x and let there be no other edges let p be a formula of the visibility structure of p is defined as in a game with the basic actors of p corresponding to players and the propositional variables of p game we also introduce player which can view the an additional all resources resources of a in section we noted various restrictions on the visibility structure which results in games with decidable outcomes it is interesting to re late the outcome of games to the satisfiability of of with similar visibility structures theorem for each game of g of incomplete mation and initial position ho we can construct in a formula of f with a visibility structure isomorphic to that of g and such that g has positive outcome iff pg no is to prove this theorem we need only consider computation games in which the positions are con of the alternation turing machines of and reif we extend to incomplete information a proof technique of fischer and which provided a log space reduction from the acceptance problem of li bounded alternating turing machines or equivalently games of perfect information to the satisfiability of pdl formulas computation games a and reif machine consisting alternating machine is essentially of see also a turing i a state and state set q with qa e q initial state ql ii tape named to with type alphabet o and work iii x usual for next move x q defined turing machines x q as fix on input string space bounded u g an we assume m is linear furthermore m is considered a game gm with iv q partitioned to players into sets k qk v the are t l rk and vi the positions are configurations of m with initial position the configuration with the containing heads on the leftmost is for t if u all work empty and all cell of each tape a position it contains the accepting state q vii the legal next moves of players are defined by state sequence of final negative integers of state plus position the types q q is considered a boo length d and resources are dd indicating position integers indicating m accepts iff the outcome for g is a for m a game is universal if i g c and ii for a class of there is a reduction each g initial position ii of g to initial position ii of and such that the outcome of g from ii is identical to the out come of from f class if vis a visibility structure and of games with visibility structure is the v w then we can show using the results of and reif there is a computation game universal to thus we need only consider computation games in the proof of theorem encoding computation games as formulas of wl given a computation we now provide a formula p of with to t k at of gm and iff m accepts u game as in section m construction of visibility structure such that p is satisfiable m a we require propositional variables pu u d informally pu is the boolean variable giving portion of a state the c o aa informally t is scanning has contents the head the a of the tape cell which we shall require basic actors and we let visible variables pu with to be those fi u e c such that t e visible propositional plus those it is also useful to define s q state in q ap u current xu where qx state is q informally of the tape u is scanning cell u is a the head v s q i s turn to move informally it is player we let pm z po b s o a i i we can define formulae po where which informally p m i in its initial configuration pi is exactly symbol per cell one state one p the cells not type head are of any player currently scanned by a not modified by a move p move correct the formulae we given here formula popl and p are easy p which is the to construct only nontrivial sel id t a q a t lr id e where a r q dt a right lit a t testing satisfiability for formulas with a hierarchical visibility structure with then and let g be a game of incomplete information players k if g has a hierarchical visibility structure the outcome is decidable we can show theorem satisfiability class of formulae structure is decidable for the po with a hierarchical visible visible o for basic actors a a r of p this to the case where a single process ao a linear chain of processes al ak and ai knows everything about a j for ij for simplicity we assume a p contains no instance of the and no model operator but operator and b the basic actors into disjoint sets in p are partitioned gl where i do is a set of basic view all resources actors which can ii the elements visible resources of l have the same note that this visibility structure is hierarchical and corresponds to a two person game these tions a and b are in our full algorithm but in the above simple situation our algorithm is considerably easier to understand we provide a brief sketch of our algorithm we shall require the closure p see fischer and minimal set of formulas such that which of formula is the i ii iii p e all formula subexpressions cl p are in of elements of for aq e cpo al if a then qb if then and c po j if a then s cz the qp are new propositional viewed by just those basic propositional variables in variables actors that p which can be can view all it can be easily verified that pm is satisfiable iff m accepts u thus we have theorem d let x ex or qx p and p ex we define an initial model a states ix s x ie of x sequences of length ix with containing elements b let s s be a basic action a p e si for some al implies p c s i not containing a c let s p be a basic fact iff for all intuitively each si e x which could in general the basic which p e si s e s contains elements be formulas that hold at s actors of d can not holds o s unless p c sj we can show that if po is satisfiable then there is a of that satisfies po we now proceed as in a algorithm for testing satisfiability of pdl formulas repeatedly deleting inconsistent states of s until this phase of the algorithm is also similar to the game tree labeling algorithms of kozen reif for a winning strategy of a game in the resulting model a there is some such that po e si for is iff p is satisfiable in the a hierarchical states case po is a general visibility structure formula of with we take the s kt times when k is of and the rest generalized basic actors a with of the construction distinct may be conclusion summary we have a introduced a logic for processing that games encoded with incomplete of incomplete into formulas information information of with b shown may be the same testing satisfiability c developed an algorithm for of formulas with a cal visibility structure extensions to we have to define ml with as few as possible program constructs logical operations and model operators without the and power of the logic various extensions may be made for example a modifications we could introduce the and ifthenelse program constructs as basic as has been done previously in pdl another possible extension is to introduce message cation as the fundamental process synchronization primitive this is again actually only a syntactic modification as noted in section b infinite we can easily allow for which are initial sequences of states here we could as in pratt a introduce a special abort state from which no action may be taken failing are those which contain q we require that a can only contain q as the last state this restriction requires some tedious of the program constructs such as c a first order logic may be extended to allow quantification fo variables we are the dependency quantification of variables defined in and reif since these restricted allow expression of which are independent of given private variables open problems a j a are independent tor independent lj has shown that the model of process logic and there is a further model opera of these are the model operators similarly independent b are there natural restrictions structures besides hierarchical for and formulas of are decidable to visibility which games c complete formulas most importantly for provide a consistent and a decidable class of acknowledgments we wish to for their careful on a preliminary thank meyer and reading and draft of this paper david comments k and mj fischer applications boolean variables to automata theory and logic computer science department of may of uni ak alternation dc kozen and lj ibm research report rc heights ny january r game interpretation of the deadlock problem communications of the acm pp d ak and rj secure databases protection against user ence acm trans on database systems pp fischer mj and re propositional logic of regular programs journal computer and system sciences pp d firstorder notes in computer new york dynamic logic lecture science springerverlag d two results in tion processing letters process logic d and vr pratt nondeterminism of proceedings of the on principles of programming january in logics th acm languages hoare car communicating communications of the sequential acm pp re the computational in systems of modal siam journal of computing complexity propositional of pp re the of acm symposium complexity of problems sequential processes on theory of computing in systems april wr jr incomplete on database on semantic issues connected with information data bases acm trans systems september manna z and a pnueli the model of pro grams technical computer science dept stanford university on j m t the model theory computer science april and s of knowledge ai memo dept stanford r a decidability result for a second order process logic proceedings of the th ieee symposium on foundations of computer science ann october gl and reif alternation th symposium on foundations computer science of pnueli a the temporal logic of programs th ieee symposium on foundations of computer sci ence october pratt pratt vr considerations on hoare logic proceedings th ieee on foundations of computer science vr process logic proceedings symposium on principles of guages san texas january th acm lan g pratt vr models of program logics san th reif universal games of incomplete ti on acm on theory ing comput lj and ar meyer word problems requiring exponential time proceedings th acm symposium on theory of computing pp lj and ak provably combinatorial games siam journal pp com 