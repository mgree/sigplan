tasks for the gulwani microsoft research abstract the programming languages pl research community has traditionally to the needs of programmers in the technical however there is a new that our the recent it has in the having access to personal computing devices more than of these computer users are and are limited to being passive of the software that is made available to them can we these users to more effectively computers for their tasks the techniques and tools developed in the pl and the formal methods research can play a role categories and subject descriptors d software programming programming k computing computers and uses in keywords programming programming by examples programming by natural language program synthesis domainspecific languages search algorithms what do with there are several domains of tasks that large of people with access to computational devices with in their these can be identified via study of help analyzing search engine query user studies or with domain following are two broad areas with great need to tasks programming it end users of computational devices most of are often need to create small and perhaps scripts to tasks these users can easily specify their using examples andor natural language the here is to develop program synthesis techniques that can translate the users specification in the form of examples or natural language which is often or ambiguous into intended scripts while program synthesis has been an old area of study its application to programming is very now given the increased of this application and the recent advances permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page for components of this work must be for all other uses the popl january ­ copyright is held by the acm in computational power and algorithms to address the associated technical challenges programming by examples several data manipulation tasks including extraction transformation and are amenable to programming by examples the it has in of amounts of data data is available in documents of various types eg files xml pdf and these documents offer great flexibility in storing and hierarchical data by combining with the underlying data model however this makes it hard to manipulate and reason about the underlying data has the potential to convert data into a experience thereby enabling users to discover new insights about their data programming by natural language natural language is a good fit for describing actions with sideeffects as is the case in automation scripts some data manipulation tasks such as and summarization are also best using natural language has been one of the least technically with recent in the form of online platforms and programs technology stands to play a role for instance technology can with tasks in like problem generation and feedback generation for a variety of including programming algorithms logic mathematics and language learning this can facilitate interactive and adaptive in both standard and online problem generation generating fresh problems that have specific solution characteristics eg difficulty level use of a certain set of concepts is a tedious task for the it can enable for and also help prevent each can be provided with a different problem with the same characteristics feedback generation this involves identifying whether the solution is incorrect and if so the nature of the error and potential fix it can save time and enable consistency in it can also be used to provide immediate feedback to thereby improving learning what role can pl play domainspecific languages the classic problem in the pl community of designing an appropriate domainspecific language is relevant to both programming and domains several and systems involve an underlying that describes the space of programs to which the users specification is mapped such a is based on abstractions that can be used to describe the various tasks that the users hope to on one hand the should be expressive enough to describe realworld tasks in the domain while on the other hand it should be restricted enough to enable efficient synthesis in case of problem generation declarative allow for describing various kinds of syntactic or features associated with the problems that the aims to generate symbolic reasoning and search techniques various symbolic reasoning and search techniques have been developed in the pl community as part of research on invariant generation and constraint solving such techniques can be to bear to deal with the challenging problem of searching for programs in a that match the users specification in case of both and such techniques can also be useful for generating models to queries expressed in declarative languages in case of both programming and domains test input generation techniques automated test input generation is a topic in the pl community with great practical utility interestingly these techniques can be useful in both programming and domains in programming they can an active learning user interface that the user about behavior on distinguishing inputs that the multiple programs learned from the users specification in they can be used to generate counterexample based feedback for solutions to conceptual problems including constructions of automata grammars programs and proofs in algebra geometry these techniques can also be used to generate practice problems for procedural content such as mathematical procedures in school eg addition long division gaussian elimination and algorithmic procedures in computer science where are expected to demonstrate their understanding of certain classic algorithms on specific inputs eg search insertion sort or regular expression to automaton conversion for instance the various concepts in the addition procedure such as adding single adding numbers without carry with a single carry or with a double carry correspond to specific sets of paths inside the procedure for adding two numbers represented as arrays of test input generation techniques can be used to generate inputs that traverse such a given set of paths what are some future directions developing a robust experience for a given domain often requires critical domain knowledge and nontrivial implementation effort a key future direction is to develop general frameworks that can enable easy implementation of domainspecific for related domains in problem generation or feedback generation say from a declarative specification of the domain knowledge for instance can we develop frameworks that allow construction of efficient from a description of the underlying similar to how declarative parsing frameworks allow compiler writers to construct a parser from a description of the syntax of the underlying language the and frameworks are great initial efforts in this direction research field data to improve the of systems is another key aspect for instance in case of domains the data can be to obtain different correct solutions to a problem which in turn can be used to generate feedback or to discover effective learning to guide problem selection in case of programming domains the knowledge of common computations obtained from a large collection of programs constructed by end users can be used to guide ranking of programs learned from users or ambiguous specification and another useful direction is to develop systems that take as input various forms of specifications such as examples logical specifications natural language and an orthogonal challenge is to develop interactive systems that support debugging and allow the user to split the task into multiple steps in case of failure to completely the task there is good to be drawn from work on interactive theorem proving and work that combines different modes of analysis such as and acknowledgments i thank and for feedback on this article i thank all my on projects in programming and for in and the shared mentioned in this article references r r g m m k martin m s a r a e and a synthesis in e fast c lee a aiken m s d and e smith interactive formal reasoning and in s gulwani dimensions in program synthesis in s gulwani learning in cacm s gulwani and m interactive programming by natural language for data analysis and manipulation in s gulwani w and r data manipulation using examples cacm v le and s gulwani a framework for data extraction by examples in pldi v le s gulwani and z su synthesizing automation scripts from natural language in o and s gulwani search strategies over web data in m s gulwani and n programming by example using least general in e and r a lightweight symbolic virtual machine for host languages in pldi gulwani is a principal at microsoft research he has in formal methods and automated program analysis and synthesis techniques his recent research lie in the areas of programming for systems like and and building systems for various subject domains including computer science mathematics and language learning his work led to the fill feature in microsoft that is used by of of people he was the acm sigplan robin milner in he obtained his phd in computer science from in and was the acm sigplan dissertation he obtained his in computer science and engineering from in and was the 