specifying programming language semantics a and of a paper by hoare and by and a meyer massachusetts institute of technology cambridge massachusetts introduction hoare and have a variety of of programming language to fit the variety of users from to program they consider the question of whether different definitions and specifications determine the same language by showing that the definitions are what they call consistent their treatment the of whether their can each be taken to specify the language although as we show any one of the kinds of semantics they discuss operational relational deductive can be used to specify meaning uniquely hoare and do not make the case in their paper in fact both their relational and deductive definitions are by several different semantics only one of which n desired thus the main point of this paper is to the characteristics of a proper specification of language semantics and to formulate alternative specifications each of which is equally good as the language we basically agree with hoare and that several can and should be given but are by about such some of which are illustrated in their paper in particular we refer to between the mathematical object which is designated to be the meaning of a program and methods for specifying that object the similar confusion between predicate and expression between consistency and equivalence of two between completeness of a theory and its having a unique model while these issues are in mathematical logic we take this to survey them m the context of language semantics this paper can be read prior with hoare and paper the authors plan another paper extending this work which will include a more the programming language following hoare and we will examine alternative types of of a trivial language with primitive statements statements and statement lists the syntax details of the form of predicate expressions is as follows program statement i while statement program program i nop i while statement while predicate program expression do as m usual with abstract syntax we will not concern ourselves with ambiguity in parsing or detailed syntax of expressions and statements we assume that programs run on machines with states we treat the states as abstract elements in some fixed set s ignoring their structure in many familiar examples statements define total functions from states to states but we need not make this assumption primitive statements may be partial ie for some state j there may be no related state and ie for some states s there may be more than one related state a statement a thus has an effect on states which can be defined by giving a ra c such that j j e ra iff a executed in s can j for example if states values with variables and statements are assignments u e where u is a variable and e is an expression which can be evaluated n any state then an assignment statement relates certain states which differ only at the value of the variable u a predicate p is a mapping from states to truth values predicate expressions p q appear in programs we use p respectively to denote the predicates corresponding to these expressions for we assume that expressions always yield values so that the predicate p with an expression p is true or false at each state and is never undefined hoare and give two definitions of this simple the m an abstract which can execute program steps the second is a function which maps programs into their computations where a computation is a sequence of states namely the successive states which are reached during execution of the program these two are said to be consistent in that for any program a both define the same ra of initial to final states this relation ra c that j j g ra if and only if when started in state program a halts it has a and the final state of that computation m s follows we use the notation throughout what a b c a j t p q f q l m r programs primitive statements states elements of the set s of all states predicate expressions predicates on states binary relations on states subsets of successive states is related by ra in the final state p must be t ue if ps is true for some state s then while p do u acts like a that is s s e p a this relational semantics obviously gives exactly the same to programs as do the and computational semantics of hoare and we shall refer to this as the standard relational semantics r each of these letters may appear with subscripts eg s wc or multiply relational semantics a semantics assigns to each program a an we can express the proper relational semantics for our language directly by defining the relations induced by programs as in a pratt de and hoare and give an axiom system for triples sa such that s j is in the relation induced by a we present both a complete axiom system and a deductive system for these triples the standard relational semantics a of the ra to be associated with any program rr can be given by induction programs using only familiar in order to do this it m convenient on the syntax of operations on to define r p for any predicate expression p to be s j i pj for ri r c let ri be the transitive closure of r and rr the of ri and r we assume that relations ra for each ve statement a are given that is we assume that we know what the statements mean let be the relation j j i j e s then the relations associated with programs are defined as follows r r r while p do a q these relations describe the standard semantics for our language to see this note that nop does not change the state and that the program ab started in state j end in state s iff there is a state f such that a started in s ends in state t and started in t ends n for loops there must be a sequence of between initial state and final state j such that m each state but the last p is true and each pair of some axioms for the standard relational semantics hoare and choose to specify the standard relational semantics by a system of axioms for statements of the form started in s program a terminates in state j we shall refer to such assertions as transition assertion s and follow hoare and in using the notation sas to denote such a statement thus m true for m iff s s g ma where m is an arbitrary relational semantics which assigns to each program a some relation xs their axioms are as follows j j c ra hl a hl p do as ps hl a psl a c qq a p do as hl j s they go on to prove that the standard relational semantics r n a model of hl that is every instance of is true for r so that any conclusion logically follows from these axioms will be true of the standard semantics of course this meets only half the requirements for specifying the semantics since one must also show that any transition assertion which is true of the standard follows from the unfortunately do not imply all the true assertions contrary to the intuitive in the completeness of the theory expressed by hoare and cf hoare and p as we now illustrate we can understand the of hl as follows if is a model of hl we can conclude that ma ra for each atomic statement a from hl we conclude that i and from hl that it follows that ma ra for every program a whenever m is a model of now consider the particular divergent semantics l defined as follows loop relational la ra if a is la then l m a model of but p do aj is false for l so hl are true for l hence l is also a model of the divergent loop semantics corresponds implementation in which the interpreter simply to an whenever it starts to execute a statement since l is a model statements which follow from must always be true of this implementation in particular no transition assertion a program containing a follows from hl and so it seems hard to imagine in which would serve as an adequate characterization of the standard however in section we shall indicate a natural sense in which do in fact specify r a complete set of axioms for the standard relational semantics there n no inherent to presenting axioms in the of which correctly and completely specify the intended semantics indeed adding two more axioms will suffice hl p do as hl ps a sas a s p do at p do at it is easy to that the standard model of in the appendix we prove semantics is a theorem the standard relational semantics is the only model of hl we remark that hl can be shown to be independent ie theorem m not true when any one of is omitted a deductive system for the standard semantics another perhaps more straightforward way to specify the standard relational semantics is to give a system of axioms and inference rules for statements one such system is axioms tl sas for all s j g s such that g ra t t p do as for all e s such that inference rules t sat while p do as i p do as for all s e s such that pj let be the set of transition statements provable from ti using t a routine proof the details of which we omit that as g tf and only if j e ra that is theorem the set of transition assertions system ti is equal to the set of transition the standard relational semantics derivable assertions in the true for thus the deductive system t the same semantics as ri and either can serve as the we the reader not to this deductive specification of a relational semantics with the deductive of hoare and in section of this paper semantics assertions of the form if p holds before executing a then if and when a halts q hold occur frequently when the of programs is being described such assertions are called correctness assertions and are abbreviated we define a partial correctness semantics for our programming language to be an arbitrary set of any relational semantics m naturally determines a corresponding partial correctness semantics cons of those which are true when the of a is that given by m the that a programming language semantics could be specified by all the assertions true of programs has been by an effort by hoare and to specify the semantics of a fragment of pascal using supports the practical y of this thesis our to investigate this general our definition and analysis of partial semantics in this section we show how a relational semantics can determine a partial correctness semantic and vice versa we give a complete deductive system for and an axiom system for the sign of which have many relational models is considered and we analyze several such the standard partial correctness semantics definition let r be a binary on states for the relation r iff ps a s s e r is true for c relational semantics m it is true for ma is true the partial correctness semantics the which are true for r is referred partial correctness semantics il containing to as the exactly standard an arbitrary set of correctness for a program a also determines a the is the maximum relation m such that all the in the set are true for m that there always is such a maximum relation is shown in the appendix lemma cl the for taking this relation to be the one determined by a partial correctness semantics is expressed by a partial correctness statement is essentially that certain environments are not the results of executing some command starting in certain environments this is a negative it does not force any environment to be the result of any execution since this is the inherent nature of the formalism it indicates that the proper of definition of the semantics determined by a system should have the form largest possible semantics let be an arbitrary set of and for any program a let ma be the set of all in of the form then is the maximum relation m such that all in ma are true for m we prove m the appendix that taking the maximum relations determined by any partial correctness provides a way to recover an underlying relational semantics if there is one formally we have let be the set of true for a relational semantics m then ma in particular ra the of and lemma is that r and r exactly the same information either one uniquely the other this implies that if we prefer we can choose a partial correctness semantics to specify meaning such a partial correctness semantics nothing provided by a relational semantics since any desired relational semantics m can always be from an appropriate partial correctness semantics namely the one which of the partial correctness assertions true for m partial correctness predicate on states which is true of a state s providing that and when a program with relation halts after being started in s the predicate q will hold if r definition let r be a binary relation on states for any predicate q on states the weakest antecedent of q under r is a predicate states defined by iff vs s r it follows immediately from and that true for any relational semantics m we abbreviate c by tp q and note that is true for r ff ip rj which is why mq is called weakest cf pratt meyer pratt the system is usually referred system for partial correctness to as the axioms p fh rules fh p pa b fh p a i p do aq a y p fh p a p aq v we prove in the appendix theorem the set of derivable from fh is equal to the standard correctness semantics we have formulated theorem to emphasize our view of the system fh as a specification of a mathematical object namely the set of derivable the more viewpoint m the literature would be to that truth of was always to be relative to the standard relational semantics theorem could then be formulated as that m only true can be derived and complete all the true can be derived the standard partial correctness semantics can the standard relational semantics be by a simple system of and inference rules the notion of the antecedent of a q under a relation r m used in the axioms for instructions rq is the the system fh corresponds to the deductive theory d of hoare and p the system fh is not complete but we will see m section that there is a sense in which the incomplete system specifies the standard semantics axioms for partial correctness semantics relational models for partial correctness specifications although a deductive system fh is the more usual specification of the standard partial correctness semantics we can also write an system to specify it the axioms are suggested straightforwardly by the deductive p ip c pc ip pc p a p pc p do q p a a iq q to say how these axioms specify the partial correctness semantics we must give a technical meaning to the term model and several special kinds of models a mathematical object m said to be a model for a set of assertions all the assertions are true for the object we have already used this notion in section where the objects were relational semantics and the assertions were assertions we will be using different kinds of objects for example both and sets of as models of sets of assertions the assertions themselves may simply be or they may be more complicated kinds of mathematical assertions such as pc we will not need and therefore a more precise explanation of what assertions are than s provided by the example of the following definition establishes how a partial correctness can serve as a model a partial correctness semantics satisfies a mathematical assertion in may appear as the assertions value can be calculated to be true when precisely the in are assigned the value true a partial correctness semantics m a model for a set of assertions if it satisfies every assertion m the set a partial correctness semantics is a correctness model for an axiom system such as if it is a model for the set of all instances of those axioms theorem h m the only partial correctness model of the proof m m the appendix again we have formulated this theorem to emphasize our view of as uniquely specifying a particular partial correctness semantics we consider next the more usual view of as specifying a relational semantics we have just considered fh and pc as direct specifications of partial correctness semantics however since relational semantics truth values for by we can regard a relational semantics as a possible model of a set of or similar mathematical assertions therefore we can also consider and pc as of semantics according to their relational models thus we can theorems and in part by saying that r m a of ti fh and pc notice that despite theorems and we cannot say that r is the only model of t or fh for example the empty semantics which assigns the empty relation to every program n a model of fh and the semantics which assigns the total relation to every program m a model of ti a set of generally fail to have a unique relational model because are in the sense if m and n are relational semantics then we shall say that n is larger than iff na o ma for all programs a then by we see that if is true for n and n is larger than then also true for m thus since r is a model of so s any relational semantics than r on the hand theorem and lemma together that r is larger than any model of so we can conclude theorem the standard relational model of semantics is the largest similarly transition assertions are monotone m the sense that if sa is true for m and n is than m then l sa is true for n we conclude from theorem that the standard relational model of ti semantics s the smallest finally we deduce theorem that the standard semantics is the only model of pc thus theorems and precisely the ways in which r is uniquely by the specifications fh t pg we should point out that theorem is technically a slightly weaker than theorem theorem in effect asserts that among the partial correctness semantics which are by relational semantics only the partial correctness semantics determined by r is a model of pc on the other hand theorem asserts that among all partial correctness semantics not just those determined by r is the unique model implications between incomplete specifications the need to deal with specifications having several models of a given kind was allowed for by hoare and in their formulation of what they call consistency between they say that one specification is consistent with another iff every model of the latter m a model of the former notice that this definition is and so con with usage of the word consistency for this reason we shall to implication between that is s t iff every model of s is a model of t with more than one model can be useful we have just seen that while and ti technically speaking have many models nevertheless they uniquely specify r in a natural way as the largest relational model and relational model respectively more generally there may be situations in which any of several models would suffice for some and we wish only to specify this set of appropriate models not necessarily a canonical model in the set by some criterion such as or for example in the specification of practical programming languages it is typical to leave undefined the meaning of certain syntactically wellformed programs in such cases there will be many acceptable semantics only on the meanings eg error messages they assign to programs in to the axioms considered above hoare and offer the first four rules fh of the hoare system cf as a with relational models and they seem to suggest that these models represent possible acceptable semantics however when we look more closely at the and hoare axioms we shall see that an example of a which could be met by many acceptable semantics does not arise here there is only one intended model of these particular specifications although it takes some effort to discover the sense in which these determine that model in particular hoare and observe hoare and theorem that the first four hoare rules for some reason they do not consider the converse question of whether hl in fact it does not not even the full system fh hl this is because any m smaller than r is a relational model of so that for example the empty semantics is a model of fh but not of however hoare and proof that hl actually a stronger result which we can use to reveal the connections between hl fh and an inference rule such as any of fh t be called sound for a relational semantics m if whenever the conditions such as those for t for applicability of the rule are and the of the rule is true for so is the iii other words an inference rule is if of it preserves truth lemma if m is a model of and the inference fh are sound for m then m is a model of fh rules proof it is easy to see that fh is sound for all m i theorem r is the largest model of fh for which rules fh are sound the proof we let the reader that fh are sound for the standard relational semantics e cf hoare and theorem thus r is a model that it is the largest model is immediate from theorem and lemma i lemma hoare and let m be a model of hl then m is a model of fh and the inference rules fh are sound for m we shall not repeat the proof cf hoare and page theorem r is the largest model of proof from theorem and lemma the preceding theorems thus reveal the sense in which and the first four rules fh serve as specifications to the others we have considered a rather sense which was implicit in hoare and our point here is that while we agree with hoare and that between specifications with multiple models are important ideas it is even more to have a clear understanding of the family of models which are to be regarded as the specifications this is illustrated by the fact that the semantics l of section is a relational model both of and fh yet we certainly do not mean to accept an implementation of our language in which all diverge we have at two kinds of semantics relational and partial correctness and several means of specifying a semantics inductive axiom systems deduction systems each semantics can be specified in several ways there was no particular technical problem in how specifications determined semantics the set of all partial correctness assertions true for our trivial programming language gives exactly the same as the relational semantics a which determines the also determines the relational semantics this is true despite the fact that in a certain narrow technical sense i correctness assertions cannot be used to express termination of programs either kind of semantics can be specified using an axiom or a deductive system either semantics determines the other independent of means of specification the results of this paper can be extended to other semantics and other means of specification for example predicate transformer semantics for programs the results are to those for the situation is more complicated for nondeterministic programs cf and pratt syntax a role in this paper only programs were syntactic objects predicates were treated as mathematical settheoretic objects the next refinement of the study here involves restricting predicates to those which are definable in some formal notation eg first or second order of appropriate structures when we restrict predicates in this way the situation becomes more complicated and more interesting and the conclusions we reached above about the equivalence of various kinds of semantics must be refined thus there are cases where the set of all true definable may not determine the proper relational semantics in other cases a restricted deductive theory may contain only a subset of all true definable and yet determine the right semantics we to a later paper further discussion of predicate transformer semantics and the restriction to predicates in sum we have illustrated that to specify the meaning of a language in several ways can be made to work at least for very simple programming languages place no restrictions on the language for predicates when we however care had to be taken to how each was to be understood before it could be by any of the variety of possible users references d a r meyer and v pratt and completeness in log of programs proc oj th annual symposium on theory of computing pp d and v pratt ln logics of programs conference record of the fifth annual on principles of programming languages pp hoare car some properties transformers jacm pp of predicate hoare ca r an basis for computer programming cacm pi hoare c ar and p consistent and complementary formal theories of the semantics of programming languages acts pp hoare c ar and n an of the programming language pascal pp manna z mathematical theory of computation new york pp pratt v considerations on th annual compute science ieee computer ca pp on society long p nf js semantics of partial phd thesis ny pp correctness university the reference section of this paper does not constitute complete on the subject a flow of control n the proof theory of structured programming th annual symposium on oj computer science ieee computer society long ca pp de recursive programs transformers proc ifip conf specifications of programming constructs pp as predicate on st de and l on the completeness of the inductive assertion method journal of computer and systems science pp e guarded and formal of programs cacm pp a of programming nj pp prentice d of programs axiomatic and power laboratory for computer science technical report m i mass pp appendix proof of theorem the standard relational semantics is the only model of let t be the set of transitive assertions as true for a relational model t of we prove by induction on a that s s e ra iff as e t thus t r no by hl similarly if a s a sas gt ra et e es s e statement a then by if a is bc then by hl and r e t a d te rb a s the of statements follows from the lemmas al and az lemma al s e p do b p do bs e t proof al for states s s program b and predicate p let j be the least nonnegative integer k if any such that there is a sequence so sk of states with the property so i jk s and psl a sl s e rb for ail nonnegative integers if no such k exists the distance s is said to be we take the two facts as obvious from definition al first if s nl then ps and there is an s such that s rb and n second p do b iff is finite and lemma al follows by induction on s if the s zero then s s and from the second fact above we conclude that ps then by hl p do bs by the first fact above if s n we have ps and s c rb for some that j n from s e rb by induction we have c t by induction on n we have p do bs c t therefore by h l p do bs e lemma a j do b e t s s e p do b let oj be the predicate s t e a pl a j proof of set sl s e rb by main induction hence the claim follows on a we have by and p do bs c t by by hl we can conclude and by and p do bs c t we have pj now a j s e p do b by while p do b of proof of lemma let ma be a set of of the form cl p ot for all let r be a binary on states definition c ar is true for r the lemma formally definition and cl are equivalent establishes that lemma cl rc iff ma proof suppose r c and that e ma then for any s s ps a s s g r ps a s s g by definition of and the fact that e ma we can then conclude p s thus g by the definition of ar now assume that ma c and j s e r for any e ma such that qs we have by the definition of ar that s thus s s e i c r proof r c by lemma cl to show suppose s r let e be the predicate true only of state j then ye c ar by of rr so s by definition of note that if m is a relational semantics set of true for m then ma follows immediately from lemma c and is the so lemma i proof of theorem the set of derivable from fh is equal to r the standard partial correctness semantics the proof that true for r derivable is by induction on the structure of programs if is true then by i and r we conclude that p implies q hence p is derivable by fh to tile fh axiom if is true for r then by implies r a so is by fh axiom and p fh to the if is true for r then must be true for r as the reader can verify from definitions and r also is true for r by and by we may conclude that and are derivable and therefore is derivable by applying fh suppose p do ap is true for r let q p do ap then again that ip q it follows directly from the q a p implies p and q a true for r then by reduction we conclude from that q a is fh we can therefore derive p do p but we can apply fh to the latter assertion to derive pl a p do ap v q a vp which by and is the same as p do ap we omit the proof that if is derivable true for r i then proof of theorem theorem is the only partial correctness model of lemma summarizes some facts about weakest antecedent which are used m the proof lemma bl let r r and r be on states suppose a bc then e by pc e and p cq c iff a p by lemma bi a ow by lemma bl b ow e we need the a p do b two lemmas for the case of lemma b p do bo c ko a a p a p iff b c proof of b p io b e implies p do which by r by lemma b b this r d proof of bl a the if s and the only if direction equivalent to soundness of fh is b and c follow from definition we omit the details d we use the facts which again follow directly from i ru where ri ur m the union of ri and r ri u rq by i equals u r r s thus rs implies by ii i or by definition which r r qs or qi thus let be any partial correctness model of we show that a ra by induction on structure of program a p e by ip oj iff by p a pq e iff by pc p iff by and then by let then by of tq by lemma ox this fact and imply that thus we need only show that o by lemma b c and d q which by and definition i implies v s qj a jj p do b since ss p do b and while p b p there is a sequence of states such that ko js and pj or the conditions hold ko pl for lk s rb for tk now assume q exists and c q ii ap technically speaking are axiom schemes in which u b may be any programs q an y predicate etc a similar observation is made by pratt iii ap if ko then i and ill imply qs qs contradicts v is which if ko then by i is true by induction we that true for lk then iii that qj is true again suppose u p do b then e iff by pc bo e and and iff by e r and and ff qp a by lemmas bl and b e r notes in a later paper f hoare the aspects of p rules rather than their use as an alternative of the semantics nevertheless others cf have used proof rules as a means of it m this issue which we address we avoid the use of the word here because is a property of how final states states rather than merely being a property of which states map to which final states relations can only arise from programs but functional do not necessarily arise only from programs they omit fh a minor their d is but it is clear from their lemma that they intended to state fh theorem in particular the characterization of statements by pc m in lemma of technically speaking we should say that r is a model of and where th refers to the set of theorems m deductive system this seems to be the technical content of the frequently that cannot be used to demonstrate termination cf eg hoare manna the remark is correct but must not be taken to the reader into that are an inherently semantics as we have seen in theorem the complete set of true determines about r despite the of hoare and refer to theorems proved in the relational theory rather than models explicitly but since the relational theory hl consists solely of axioms without inference rules we must assume they refer to the usual model theoretic notion of theorem namely an is a theorem when it is true of all models of the axioms with this interpretation formulation of consistency is equivalent to ours to emphasize the of theorem we note that although specify r according to theorem it is not true that or even that r is the largest model of we regard the characterization of r m theorem as subtle because there n no particular reason to look at largest models in the context of an hl indeed we saw that by adding hl only one mode is possible so there is no reason to expect or rely on a condition like to force uniqueness 